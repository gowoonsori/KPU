   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"lcd.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.lcd_data_port_input,"ax",%progbits
  16              		.align	1
  17              		.global	lcd_data_port_input
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	lcd_data_port_input:
  25              	.LFB32:
  26              		.file 1 "lcd.c"
   1:lcd.c         **** /********************************************************************************/
   2:lcd.c         **** /* lcd.c                                                                        */
   3:lcd.c         **** /* STM32F103VET6                                                                */
   4:lcd.c         **** /* (Lee ChangWoo HL2IRW  hl2irw@kpu.ac.kr 011-726-6860)                 	*/
   5:lcd.c         **** /* stm32f103ve_mp3								*/
   6:lcd.c         **** /********************************************************************************/
   7:lcd.c         **** #include <stdint.h>
   8:lcd.c         **** #include <stdio.h>
   9:lcd.c         **** #include <stdarg.h>
  10:lcd.c         **** #include <stdlib.h>
  11:lcd.c         **** #include <string.h>
  12:lcd.c         **** #include "hwdefs.h"
  13:lcd.c         **** #include "color.h"
  14:lcd.c         **** #include "font.h"
  15:lcd.c         **** 
  16:lcd.c         **** 
  17:lcd.c         **** //#define  ILI9320    0  /* 0x9320 */
  18:lcd.c         **** //#define  ILI9325    1  /* 0x9325 */
  19:lcd.c         **** //#define  ILI9328    2  /* 0x9328 */
  20:lcd.c         **** //#define  ILI9331    3  /* 0x9331 */
  21:lcd.c         **** //#define  SSD1298    4  /* 0x8999 */
  22:lcd.c         **** //#define  SSD1289    5  /* 0x8989 */
  23:lcd.c         **** //#define  ST7781     6  /* 0x7783 */
  24:lcd.c         **** //#define  LGDP4531   7  /* 0x4531 */
  25:lcd.c         **** //#define  SPFD5408B  8  /* 0x5408 */
  26:lcd.c         **** //#define  R61505U    9  /* 0x1505 0x0505 */
  27:lcd.c         **** //#define  HX8347D    10 /* 0x0047 */
  28:lcd.c         **** //#define  HX8347A    11 /* 0x0047 */
  29:lcd.c         **** //#define  LGDP4535   12 /* 0x4535 */
  30:lcd.c         **** //#define  SSD2119    13 /* 3.5 LCD 0x9919 */
  31:lcd.c         **** 
  32:lcd.c         **** 
  33:lcd.c         **** #define LCD_DATA_PORT		GPIOE
  34:lcd.c         **** #define LCD_CTL_PORT		GPIOD
  35:lcd.c         **** 
  36:lcd.c         **** #define LCD_DATA0		GPIO_Pin_0
  37:lcd.c         **** #define LCD_DATA1		GPIO_Pin_1
  38:lcd.c         **** #define LCD_DATA2		GPIO_Pin_2
  39:lcd.c         **** #define LCD_DATA3		GPIO_Pin_3
  40:lcd.c         **** #define LCD_DATA4		GPIO_Pin_4
  41:lcd.c         **** #define LCD_DATA5		GPIO_Pin_5
  42:lcd.c         **** #define LCD_DATA6		GPIO_Pin_6
  43:lcd.c         **** #define LCD_DATA7		GPIO_Pin_7
  44:lcd.c         **** #define LCD_DATA8		GPIO_Pin_8
  45:lcd.c         **** #define LCD_DATA9		GPIO_Pin_9
  46:lcd.c         **** #define LCD_DATA10		GPIO_Pin_10
  47:lcd.c         **** #define LCD_DATA11		GPIO_Pin_11
  48:lcd.c         **** #define LCD_DATA12		GPIO_Pin_12
  49:lcd.c         **** #define LCD_DATA13		GPIO_Pin_13
  50:lcd.c         **** #define LCD_DATA14		GPIO_Pin_14
  51:lcd.c         **** #define LCD_DATA15		GPIO_Pin_15
  52:lcd.c         **** 
  53:lcd.c         **** #define LCD_CS			GPIO_Pin_12
  54:lcd.c         **** #define LCD_RS			GPIO_Pin_13
  55:lcd.c         **** #define LCD_WR			GPIO_Pin_14
  56:lcd.c         **** #define LCD_RD			GPIO_Pin_15
  57:lcd.c         **** 
  58:lcd.c         **** #define R0			0x00
  59:lcd.c         **** #define R1			0x01
  60:lcd.c         **** #define R2			0x02
  61:lcd.c         **** #define R3			0x03
  62:lcd.c         **** #define R4			0x04
  63:lcd.c         **** #define R5			0x05
  64:lcd.c         **** #define R6			0x06
  65:lcd.c         **** #define R7			0x07
  66:lcd.c         **** #define R8			0x08
  67:lcd.c         **** #define R9			0x09
  68:lcd.c         **** #define R10			0x0A
  69:lcd.c         **** #define R12			0x0C
  70:lcd.c         **** #define R13			0x0D
  71:lcd.c         **** #define R14			0x0E
  72:lcd.c         **** #define R15			0x0F
  73:lcd.c         **** #define R16			0x10
  74:lcd.c         **** #define R17			0x11
  75:lcd.c         **** #define R18			0x12
  76:lcd.c         **** #define R19			0x13
  77:lcd.c         **** #define R20			0x14
  78:lcd.c         **** #define R21			0x15
  79:lcd.c         **** #define R22			0x16
  80:lcd.c         **** #define R23			0x17
  81:lcd.c         **** #define R24			0x18
  82:lcd.c         **** #define R25			0x19
  83:lcd.c         **** #define R26			0x1A
  84:lcd.c         **** #define R27			0x1B
  85:lcd.c         **** #define R28			0x1C
  86:lcd.c         **** #define R29			0x1D
  87:lcd.c         **** #define R30			0x1E
  88:lcd.c         **** #define R31			0x1F
  89:lcd.c         **** #define R32			0x20
  90:lcd.c         **** #define R33			0x21
  91:lcd.c         **** #define R34			0x22
  92:lcd.c         **** #define R36			0x24
  93:lcd.c         **** #define R37			0x25
  94:lcd.c         **** #define R40			0x28
  95:lcd.c         **** #define R41			0x29
  96:lcd.c         **** #define R43			0x2B
  97:lcd.c         **** #define R45			0x2D
  98:lcd.c         **** #define R48			0x30
  99:lcd.c         **** #define R49			0x31
 100:lcd.c         **** #define R50			0x32
 101:lcd.c         **** #define R51			0x33
 102:lcd.c         **** #define R52			0x34
 103:lcd.c         **** #define R53			0x35
 104:lcd.c         **** #define R54			0x36
 105:lcd.c         **** #define R55			0x37
 106:lcd.c         **** #define R56			0x38
 107:lcd.c         **** #define R57			0x39
 108:lcd.c         **** #define R59			0x3B
 109:lcd.c         **** #define R60			0x3C
 110:lcd.c         **** #define R61			0x3D
 111:lcd.c         **** #define R62			0x3E
 112:lcd.c         **** #define R63			0x3F
 113:lcd.c         **** #define R64			0x40
 114:lcd.c         **** #define R65			0x41
 115:lcd.c         **** #define R66			0x42
 116:lcd.c         **** #define R67			0x43
 117:lcd.c         **** #define R68			0x44
 118:lcd.c         **** #define R69			0x45
 119:lcd.c         **** #define R70			0x46
 120:lcd.c         **** #define R71			0x47
 121:lcd.c         **** #define R72			0x48
 122:lcd.c         **** #define R73			0x49
 123:lcd.c         **** #define R74			0x4A
 124:lcd.c         **** #define R75			0x4B
 125:lcd.c         **** #define R76			0x4C
 126:lcd.c         **** #define R77			0x4D
 127:lcd.c         **** #define R78			0x4E
 128:lcd.c         **** #define R79			0x4F
 129:lcd.c         **** #define R80			0x50
 130:lcd.c         **** #define R81			0x51
 131:lcd.c         **** #define R82			0x52
 132:lcd.c         **** #define R83			0x53
 133:lcd.c         **** #define R96			0x60
 134:lcd.c         **** #define R97			0x61
 135:lcd.c         **** #define R106			0x6A
 136:lcd.c         **** #define R118			0x76
 137:lcd.c         **** #define R128			0x80
 138:lcd.c         **** #define R129			0x81
 139:lcd.c         **** #define R130			0x82
 140:lcd.c         **** #define R131			0x83
 141:lcd.c         **** #define R132			0x84
 142:lcd.c         **** #define R133			0x85
 143:lcd.c         **** #define R134			0x86
 144:lcd.c         **** #define R135			0x87
 145:lcd.c         **** #define R136			0x88
 146:lcd.c         **** #define R137			0x89
 147:lcd.c         **** #define R139			0x8B
 148:lcd.c         **** #define R140			0x8C
 149:lcd.c         **** #define R141			0x8D
 150:lcd.c         **** #define R143			0x8F
 151:lcd.c         **** #define R144			0x90
 152:lcd.c         **** #define R145			0x91
 153:lcd.c         **** #define R146			0x92
 154:lcd.c         **** #define R147			0x93
 155:lcd.c         **** #define R148			0x94
 156:lcd.c         **** #define R149			0x95
 157:lcd.c         **** #define R150			0x96
 158:lcd.c         **** #define R151			0x97
 159:lcd.c         **** #define R152			0x98
 160:lcd.c         **** #define R153			0x99
 161:lcd.c         **** #define R154			0x9A
 162:lcd.c         **** #define R157			0x9D
 163:lcd.c         **** #define R192			0xC0
 164:lcd.c         **** #define R193			0xC1
 165:lcd.c         **** #define R229			0xE5
 166:lcd.c         **** 
 167:lcd.c         **** unsigned short foreground_color,background_color,device_code,maxx,maxy,ax,ay,max_col,max_row,tx,ty,
 168:lcd.c         **** char buff[256],dumy_data[32];
 169:lcd.c         **** const unsigned char s_bit[8] = {0x80,0x40,0x20,0x10,8,4,2,1};
 170:lcd.c         **** volatile unsigned char hangul_mode;
 171:lcd.c         **** 
 172:lcd.c         **** 
 173:lcd.c         **** const unsigned char han_tbl [3][32] = {  // 3 * 32
 174:lcd.c         ****         {0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17,18,19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 175:lcd.c         ****         {0, 0, 0, 1, 2, 3, 4, 5, 0, 0, 6, 7, 8, 9,10,11, 0, 0,12,13,14,15,16,17, 0, 0,18,19,20,21, 
 176:lcd.c         ****         {0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16, 0,17,18,19,20,21,22,23,24,25,26,27, 
 177:lcd.c         **** const unsigned short loc1[8] = {0,20,40,60,80,100,120,140};
 178:lcd.c         **** const unsigned short loc2[4] = {160,182,204,226};
 179:lcd.c         **** const unsigned short loc3[4] = {248,276,304,332};
 180:lcd.c         **** 
 181:lcd.c         **** const unsigned short hangul_chosung_tbl [19] = {
 182:lcd.c         ****       0x8800, 0x8C00, 0X9000, 0x9400, 0x9800, 0x9C00, 0xA000, 0xA400,
 183:lcd.c         ****       0xA800, 0xAC00, 0xB000, 0xB400, 0xB800, 0xBC00, 0xC000, 0xC400,
 184:lcd.c         ****       0xC800, 0xCC00, 0xD000};
 185:lcd.c         **** 
 186:lcd.c         **** const unsigned short hangul_jungsung_tbl [21] = {
 187:lcd.c         ****       0x8060, 0x8080, 0X80A0, 0x80C0, 0x80E0, 0x8140, 0x8160, 0x8180,
 188:lcd.c         ****       0x81A0, 0x81C0, 0x81E0, 0x8240, 0x8260, 0x8280, 0x82A0, 0x82C0,
 189:lcd.c         ****       0x82E0, 0x8340, 0x8360, 0x8380, 0x83A0};
 190:lcd.c         **** 
 191:lcd.c         **** const unsigned short hangul_jongsung_tbl[28] = {
 192:lcd.c         ****       0x8001, 0x8002, 0x8003, 0x8004, 0x8005, 0x8006, 0x8007, 0x8008,
 193:lcd.c         ****       0x8009, 0x800A, 0x800B, 0x800C, 0x800D, 0x800E, 0x800F, 0x8010,
 194:lcd.c         ****       0x8011, 0x8013, 0x8014, 0x8015, 0x8016, 0x8017, 0x8018, 0x8019,
 195:lcd.c         ****       0x801A, 0x801B, 0x801C, 0x801D};
 196:lcd.c         **** 
 197:lcd.c         **** 
 198:lcd.c         **** 
 199:lcd.c         **** void lcd_data_port_input (void)
 200:lcd.c         **** {
  27              		.loc 1 200 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 201:lcd.c         ****       LCD_DATA_PORT->CRL = 0X88888888;
  32              		.loc 1 201 7 view .LVU1
  33              		.loc 1 201 26 is_stmt 0 view .LVU2
  34 0000 4FF08832 		mov	r2, #-2004318072
  35 0004 034B     		ldr	r3, .L2
  36 0006 1A60     		str	r2, [r3]
 202:lcd.c         ****       LCD_DATA_PORT->CRH = 0X88888888;
  37              		.loc 1 202 7 is_stmt 1 view .LVU3
  38              		.loc 1 202 26 is_stmt 0 view .LVU4
  39 0008 5A60     		str	r2, [r3, #4]
 203:lcd.c         ****       LCD_DATA_PORT->ODR = 0XFFFF;
  40              		.loc 1 203 7 is_stmt 1 view .LVU5
  41              		.loc 1 203 26 is_stmt 0 view .LVU6
  42 000a 4FF6FF72 		movw	r2, #65535
  43 000e DA60     		str	r2, [r3, #12]
 204:lcd.c         **** }
  44              		.loc 1 204 1 view .LVU7
  45 0010 7047     		bx	lr
  46              	.L3:
  47 0012 00BF     		.align	2
  48              	.L2:
  49 0014 00180140 		.word	1073813504
  50              		.cfi_endproc
  51              	.LFE32:
  53              		.section	.text.lcd_data_port_output,"ax",%progbits
  54              		.align	1
  55              		.global	lcd_data_port_output
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu softvfp
  61              	lcd_data_port_output:
  62              	.LFB33:
 205:lcd.c         **** 
 206:lcd.c         **** 
 207:lcd.c         **** void lcd_data_port_output (void)
 208:lcd.c         **** {
  63              		.loc 1 208 1 is_stmt 1 view -0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
 209:lcd.c         ****       LCD_DATA_PORT->CRL = 0X33333333;
  68              		.loc 1 209 7 view .LVU9
  69              		.loc 1 209 26 is_stmt 0 view .LVU10
  70 0000 4FF03332 		mov	r2, #858993459
  71 0004 034B     		ldr	r3, .L5
  72 0006 1A60     		str	r2, [r3]
 210:lcd.c         ****       LCD_DATA_PORT->CRH = 0X33333333;
  73              		.loc 1 210 7 is_stmt 1 view .LVU11
  74              		.loc 1 210 26 is_stmt 0 view .LVU12
  75 0008 5A60     		str	r2, [r3, #4]
 211:lcd.c         ****       LCD_DATA_PORT->ODR = 0XFFFF;
  76              		.loc 1 211 7 is_stmt 1 view .LVU13
  77              		.loc 1 211 26 is_stmt 0 view .LVU14
  78 000a 4FF6FF72 		movw	r2, #65535
  79 000e DA60     		str	r2, [r3, #12]
 212:lcd.c         **** }
  80              		.loc 1 212 1 view .LVU15
  81 0010 7047     		bx	lr
  82              	.L6:
  83 0012 00BF     		.align	2
  84              	.L5:
  85 0014 00180140 		.word	1073813504
  86              		.cfi_endproc
  87              	.LFE33:
  89              		.section	.text.lcd_data_write,"ax",%progbits
  90              		.align	1
  91              		.global	lcd_data_write
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu softvfp
  97              	lcd_data_write:
  98              	.LVL0:
  99              	.LFB34:
 213:lcd.c         **** 
 214:lcd.c         **** 
 215:lcd.c         **** void lcd_data_write (unsigned short value)
 216:lcd.c         **** {
 100              		.loc 1 216 1 is_stmt 1 view -0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 217:lcd.c         ****       LCD_DATA_PORT->ODR = value;
 105              		.loc 1 217 7 view .LVU17
 106              		.loc 1 217 26 is_stmt 0 view .LVU18
 107 0000 014B     		ldr	r3, .L8
 108 0002 D860     		str	r0, [r3, #12]
 218:lcd.c         **** }
 109              		.loc 1 218 1 view .LVU19
 110 0004 7047     		bx	lr
 111              	.L9:
 112 0006 00BF     		.align	2
 113              	.L8:
 114 0008 00180140 		.word	1073813504
 115              		.cfi_endproc
 116              	.LFE34:
 118              		.section	.text.lcd_data_read,"ax",%progbits
 119              		.align	1
 120              		.global	lcd_data_read
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu softvfp
 126              	lcd_data_read:
 127              	.LFB35:
 219:lcd.c         **** 
 220:lcd.c         **** 
 221:lcd.c         **** unsigned short lcd_data_read (void)
 222:lcd.c         **** {
 128              		.loc 1 222 1 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 223:lcd.c         ****       return (LCD_DATA_PORT->IDR);
 133              		.loc 1 223 7 view .LVU21
 134              		.loc 1 223 28 is_stmt 0 view .LVU22
 135 0000 014B     		ldr	r3, .L11
 136 0002 9868     		ldr	r0, [r3, #8]
 224:lcd.c         **** }
 137              		.loc 1 224 1 view .LVU23
 138 0004 80B2     		uxth	r0, r0
 139 0006 7047     		bx	lr
 140              	.L12:
 141              		.align	2
 142              	.L11:
 143 0008 00180140 		.word	1073813504
 144              		.cfi_endproc
 145              	.LFE35:
 147              		.section	.text.lcd_cs_hi,"ax",%progbits
 148              		.align	1
 149              		.global	lcd_cs_hi
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 153              		.fpu softvfp
 155              	lcd_cs_hi:
 156              	.LFB36:
 225:lcd.c         **** 
 226:lcd.c         **** 
 227:lcd.c         **** void lcd_cs_hi (void)
 228:lcd.c         **** {
 157              		.loc 1 228 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 229:lcd.c         ****       GPIO_SetBits(LCD_CTL_PORT,LCD_CS);
 162              		.loc 1 229 7 view .LVU25
 163 0000 4FF48051 		mov	r1, #4096
 164 0004 0148     		ldr	r0, .L14
 165 0006 FFF7FEBF 		b	GPIO_SetBits
 166              	.LVL1:
 167              	.L15:
 168 000a 00BF     		.align	2
 169              	.L14:
 170 000c 00140140 		.word	1073812480
 171              		.cfi_endproc
 172              	.LFE36:
 174              		.section	.text.lcd_cs_lo,"ax",%progbits
 175              		.align	1
 176              		.global	lcd_cs_lo
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu softvfp
 182              	lcd_cs_lo:
 183              	.LFB37:
 230:lcd.c         **** }
 231:lcd.c         **** 
 232:lcd.c         **** 
 233:lcd.c         **** void lcd_cs_lo (void)
 234:lcd.c         **** {
 184              		.loc 1 234 1 view -0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 235:lcd.c         ****       GPIO_ResetBits(LCD_CTL_PORT,LCD_CS);
 189              		.loc 1 235 7 view .LVU27
 190 0000 4FF48051 		mov	r1, #4096
 191 0004 0148     		ldr	r0, .L17
 192 0006 FFF7FEBF 		b	GPIO_ResetBits
 193              	.LVL2:
 194              	.L18:
 195 000a 00BF     		.align	2
 196              	.L17:
 197 000c 00140140 		.word	1073812480
 198              		.cfi_endproc
 199              	.LFE37:
 201              		.section	.text.lcd_rs_hi,"ax",%progbits
 202              		.align	1
 203              		.global	lcd_rs_hi
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu softvfp
 209              	lcd_rs_hi:
 210              	.LFB38:
 236:lcd.c         **** }
 237:lcd.c         **** 
 238:lcd.c         **** 
 239:lcd.c         **** void lcd_rs_hi (void)
 240:lcd.c         **** {
 211              		.loc 1 240 1 view -0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              		@ link register save eliminated.
 241:lcd.c         ****       GPIO_SetBits(LCD_CTL_PORT,LCD_RS);
 216              		.loc 1 241 7 view .LVU29
 217 0000 4FF40051 		mov	r1, #8192
 218 0004 0148     		ldr	r0, .L20
 219 0006 FFF7FEBF 		b	GPIO_SetBits
 220              	.LVL3:
 221              	.L21:
 222 000a 00BF     		.align	2
 223              	.L20:
 224 000c 00140140 		.word	1073812480
 225              		.cfi_endproc
 226              	.LFE38:
 228              		.section	.text.lcd_rs_lo,"ax",%progbits
 229              		.align	1
 230              		.global	lcd_rs_lo
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 234              		.fpu softvfp
 236              	lcd_rs_lo:
 237              	.LFB39:
 242:lcd.c         **** }
 243:lcd.c         **** 
 244:lcd.c         **** 
 245:lcd.c         **** void lcd_rs_lo (void)
 246:lcd.c         **** {
 238              		.loc 1 246 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 247:lcd.c         ****       GPIO_ResetBits(LCD_CTL_PORT,LCD_RS);
 243              		.loc 1 247 7 view .LVU31
 244 0000 4FF40051 		mov	r1, #8192
 245 0004 0148     		ldr	r0, .L23
 246 0006 FFF7FEBF 		b	GPIO_ResetBits
 247              	.LVL4:
 248              	.L24:
 249 000a 00BF     		.align	2
 250              	.L23:
 251 000c 00140140 		.word	1073812480
 252              		.cfi_endproc
 253              	.LFE39:
 255              		.section	.text.lcd_wr_hi,"ax",%progbits
 256              		.align	1
 257              		.global	lcd_wr_hi
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 261              		.fpu softvfp
 263              	lcd_wr_hi:
 264              	.LFB40:
 248:lcd.c         **** }
 249:lcd.c         **** 
 250:lcd.c         **** 
 251:lcd.c         **** void lcd_wr_hi (void)
 252:lcd.c         **** {
 265              		.loc 1 252 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 253:lcd.c         ****       GPIO_SetBits(LCD_CTL_PORT,LCD_WR);
 270              		.loc 1 253 7 view .LVU33
 271 0000 4FF48041 		mov	r1, #16384
 272 0004 0148     		ldr	r0, .L26
 273 0006 FFF7FEBF 		b	GPIO_SetBits
 274              	.LVL5:
 275              	.L27:
 276 000a 00BF     		.align	2
 277              	.L26:
 278 000c 00140140 		.word	1073812480
 279              		.cfi_endproc
 280              	.LFE40:
 282              		.section	.text.lcd_wr_lo,"ax",%progbits
 283              		.align	1
 284              		.global	lcd_wr_lo
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu softvfp
 290              	lcd_wr_lo:
 291              	.LFB41:
 254:lcd.c         **** }
 255:lcd.c         **** 
 256:lcd.c         **** 
 257:lcd.c         **** void lcd_wr_lo (void)
 258:lcd.c         **** {
 292              		.loc 1 258 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 259:lcd.c         ****       GPIO_ResetBits(LCD_CTL_PORT,LCD_WR);
 297              		.loc 1 259 7 view .LVU35
 298 0000 4FF48041 		mov	r1, #16384
 299 0004 0148     		ldr	r0, .L29
 300 0006 FFF7FEBF 		b	GPIO_ResetBits
 301              	.LVL6:
 302              	.L30:
 303 000a 00BF     		.align	2
 304              	.L29:
 305 000c 00140140 		.word	1073812480
 306              		.cfi_endproc
 307              	.LFE41:
 309              		.section	.text.lcd_rd_hi,"ax",%progbits
 310              		.align	1
 311              		.global	lcd_rd_hi
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu softvfp
 317              	lcd_rd_hi:
 318              	.LFB42:
 260:lcd.c         **** }
 261:lcd.c         **** 
 262:lcd.c         **** 
 263:lcd.c         **** void lcd_rd_hi (void)
 264:lcd.c         **** {
 319              		.loc 1 264 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              		@ link register save eliminated.
 265:lcd.c         ****       GPIO_SetBits(LCD_CTL_PORT,LCD_RD);
 324              		.loc 1 265 7 view .LVU37
 325 0000 4FF40041 		mov	r1, #32768
 326 0004 0148     		ldr	r0, .L32
 327 0006 FFF7FEBF 		b	GPIO_SetBits
 328              	.LVL7:
 329              	.L33:
 330 000a 00BF     		.align	2
 331              	.L32:
 332 000c 00140140 		.word	1073812480
 333              		.cfi_endproc
 334              	.LFE42:
 336              		.section	.text.lcd_rd_lo,"ax",%progbits
 337              		.align	1
 338              		.global	lcd_rd_lo
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 342              		.fpu softvfp
 344              	lcd_rd_lo:
 345              	.LFB43:
 266:lcd.c         **** }
 267:lcd.c         **** 
 268:lcd.c         **** 
 269:lcd.c         **** void lcd_rd_lo (void)
 270:lcd.c         **** {
 346              		.loc 1 270 1 view -0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              		@ link register save eliminated.
 271:lcd.c         ****       GPIO_ResetBits(LCD_CTL_PORT,LCD_RD);
 351              		.loc 1 271 7 view .LVU39
 352 0000 4FF40041 		mov	r1, #32768
 353 0004 0148     		ldr	r0, .L35
 354 0006 FFF7FEBF 		b	GPIO_ResetBits
 355              	.LVL8:
 356              	.L36:
 357 000a 00BF     		.align	2
 358              	.L35:
 359 000c 00140140 		.word	1073812480
 360              		.cfi_endproc
 361              	.LFE43:
 363              		.section	.text.lcd_wr_data,"ax",%progbits
 364              		.align	1
 365              		.global	lcd_wr_data
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu softvfp
 371              	lcd_wr_data:
 372              	.LVL9:
 373              	.LFB44:
 272:lcd.c         **** }
 273:lcd.c         **** 
 274:lcd.c         **** 
 275:lcd.c         **** void lcd_wr_data (unsigned short data)
 276:lcd.c         **** {
 374              		.loc 1 276 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 277:lcd.c         ****       lcd_rs_hi();
 378              		.loc 1 277 7 view .LVU41
 276:lcd.c         ****       lcd_rs_hi();
 379              		.loc 1 276 1 is_stmt 0 view .LVU42
 380 0000 10B5     		push	{r4, lr}
 381              		.cfi_def_cfa_offset 8
 382              		.cfi_offset 4, -8
 383              		.cfi_offset 14, -4
 276:lcd.c         ****       lcd_rs_hi();
 384              		.loc 1 276 1 view .LVU43
 385 0002 0446     		mov	r4, r0
 386              		.loc 1 277 7 view .LVU44
 387 0004 FFF7FEFF 		bl	lcd_rs_hi
 388              	.LVL10:
 278:lcd.c         ****       lcd_cs_lo();
 389              		.loc 1 278 7 is_stmt 1 view .LVU45
 390 0008 FFF7FEFF 		bl	lcd_cs_lo
 391              	.LVL11:
 279:lcd.c         ****       lcd_data_write(data);
 392              		.loc 1 279 7 view .LVU46
 393              	.LBB48:
 394              	.LBI48:
 215:lcd.c         **** {
 395              		.loc 1 215 6 view .LVU47
 396              	.LBB49:
 217:lcd.c         **** }
 397              		.loc 1 217 7 view .LVU48
 217:lcd.c         **** }
 398              		.loc 1 217 26 is_stmt 0 view .LVU49
 399 000c 044B     		ldr	r3, .L38
 400 000e DC60     		str	r4, [r3, #12]
 401              	.LVL12:
 217:lcd.c         **** }
 402              		.loc 1 217 26 view .LVU50
 403              	.LBE49:
 404              	.LBE48:
 280:lcd.c         ****       lcd_wr_lo();
 405              		.loc 1 280 7 is_stmt 1 view .LVU51
 406 0010 FFF7FEFF 		bl	lcd_wr_lo
 407              	.LVL13:
 281:lcd.c         ****       lcd_wr_hi();
 408              		.loc 1 281 7 view .LVU52
 409 0014 FFF7FEFF 		bl	lcd_wr_hi
 410              	.LVL14:
 282:lcd.c         ****       lcd_cs_hi();
 411              		.loc 1 282 7 view .LVU53
 283:lcd.c         **** }
 412              		.loc 1 283 1 is_stmt 0 view .LVU54
 413 0018 BDE81040 		pop	{r4, lr}
 414              		.cfi_restore 14
 415              		.cfi_restore 4
 416              		.cfi_def_cfa_offset 0
 282:lcd.c         ****       lcd_cs_hi();
 417              		.loc 1 282 7 view .LVU55
 418 001c FFF7FEBF 		b	lcd_cs_hi
 419              	.LVL15:
 420              	.L39:
 421              		.align	2
 422              	.L38:
 423 0020 00180140 		.word	1073813504
 424              		.cfi_endproc
 425              	.LFE44:
 427              		.section	.text.lcd_wr_register,"ax",%progbits
 428              		.align	1
 429              		.global	lcd_wr_register
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu softvfp
 435              	lcd_wr_register:
 436              	.LVL16:
 437              	.LFB45:
 284:lcd.c         **** 
 285:lcd.c         **** 
 286:lcd.c         **** void lcd_wr_register (unsigned char data)
 287:lcd.c         **** {
 438              		.loc 1 287 1 is_stmt 1 view -0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 288:lcd.c         ****       lcd_rs_lo();
 442              		.loc 1 288 7 view .LVU57
 287:lcd.c         ****       lcd_rs_lo();
 443              		.loc 1 287 1 is_stmt 0 view .LVU58
 444 0000 10B5     		push	{r4, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 4, -8
 447              		.cfi_offset 14, -4
 287:lcd.c         ****       lcd_rs_lo();
 448              		.loc 1 287 1 view .LVU59
 449 0002 0446     		mov	r4, r0
 450              		.loc 1 288 7 view .LVU60
 451 0004 FFF7FEFF 		bl	lcd_rs_lo
 452              	.LVL17:
 289:lcd.c         ****       lcd_cs_lo();
 453              		.loc 1 289 7 is_stmt 1 view .LVU61
 454 0008 FFF7FEFF 		bl	lcd_cs_lo
 455              	.LVL18:
 290:lcd.c         ****       lcd_data_write(data);
 456              		.loc 1 290 7 view .LVU62
 457              	.LBB50:
 458              	.LBI50:
 215:lcd.c         **** {
 459              		.loc 1 215 6 view .LVU63
 460              	.LBB51:
 217:lcd.c         **** }
 461              		.loc 1 217 7 view .LVU64
 217:lcd.c         **** }
 462              		.loc 1 217 26 is_stmt 0 view .LVU65
 463 000c 044B     		ldr	r3, .L41
 464 000e DC60     		str	r4, [r3, #12]
 465              	.LVL19:
 217:lcd.c         **** }
 466              		.loc 1 217 26 view .LVU66
 467              	.LBE51:
 468              	.LBE50:
 291:lcd.c         ****       lcd_wr_lo();
 469              		.loc 1 291 7 is_stmt 1 view .LVU67
 470 0010 FFF7FEFF 		bl	lcd_wr_lo
 471              	.LVL20:
 292:lcd.c         ****       lcd_wr_hi();
 472              		.loc 1 292 7 view .LVU68
 473 0014 FFF7FEFF 		bl	lcd_wr_hi
 474              	.LVL21:
 293:lcd.c         ****       lcd_cs_hi();
 475              		.loc 1 293 7 view .LVU69
 294:lcd.c         **** }
 476              		.loc 1 294 1 is_stmt 0 view .LVU70
 477 0018 BDE81040 		pop	{r4, lr}
 478              		.cfi_restore 14
 479              		.cfi_restore 4
 480              		.cfi_def_cfa_offset 0
 293:lcd.c         ****       lcd_cs_hi();
 481              		.loc 1 293 7 view .LVU71
 482 001c FFF7FEBF 		b	lcd_cs_hi
 483              	.LVL22:
 484              	.L42:
 485              		.align	2
 486              	.L41:
 487 0020 00180140 		.word	1073813504
 488              		.cfi_endproc
 489              	.LFE45:
 491              		.section	.text.lcd_write_register,"ax",%progbits
 492              		.align	1
 493              		.global	lcd_write_register
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 497              		.fpu softvfp
 499              	lcd_write_register:
 500              	.LVL23:
 501              	.LFB46:
 295:lcd.c         **** 
 296:lcd.c         **** 
 297:lcd.c         **** void lcd_write_register (unsigned char reg, unsigned short value)
 298:lcd.c         **** {
 502              		.loc 1 298 1 is_stmt 1 view -0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 299:lcd.c         ****       lcd_wr_register(reg);
 506              		.loc 1 299 7 view .LVU73
 298:lcd.c         ****       lcd_wr_register(reg);
 507              		.loc 1 298 1 is_stmt 0 view .LVU74
 508 0000 10B5     		push	{r4, lr}
 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 4, -8
 511              		.cfi_offset 14, -4
 298:lcd.c         ****       lcd_wr_register(reg);
 512              		.loc 1 298 1 view .LVU75
 513 0002 0C46     		mov	r4, r1
 514              		.loc 1 299 7 view .LVU76
 515 0004 FFF7FEFF 		bl	lcd_wr_register
 516              	.LVL24:
 300:lcd.c         ****       lcd_wr_data(value);
 517              		.loc 1 300 7 is_stmt 1 view .LVU77
 518 0008 2046     		mov	r0, r4
 301:lcd.c         **** }
 519              		.loc 1 301 1 is_stmt 0 view .LVU78
 520 000a BDE81040 		pop	{r4, lr}
 521              		.cfi_restore 14
 522              		.cfi_restore 4
 523              		.cfi_def_cfa_offset 0
 300:lcd.c         ****       lcd_wr_data(value);
 524              		.loc 1 300 7 view .LVU79
 525 000e FFF7FEBF 		b	lcd_wr_data
 526              	.LVL25:
 527              		.cfi_endproc
 528              	.LFE46:
 530              		.section	.text.lcd_read_register,"ax",%progbits
 531              		.align	1
 532              		.global	lcd_read_register
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 536              		.fpu softvfp
 538              	lcd_read_register:
 539              	.LVL26:
 540              	.LFB47:
 302:lcd.c         **** 
 303:lcd.c         **** 
 304:lcd.c         **** unsigned short lcd_read_register (unsigned char reg)
 305:lcd.c         **** {
 541              		.loc 1 305 1 is_stmt 1 view -0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 306:lcd.c         ****       unsigned short value;
 545              		.loc 1 306 7 view .LVU81
 307:lcd.c         ****       lcd_wr_register(reg);
 546              		.loc 1 307 7 view .LVU82
 305:lcd.c         ****       unsigned short value;
 547              		.loc 1 305 1 is_stmt 0 view .LVU83
 548 0000 10B5     		push	{r4, lr}
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 4, -8
 551              		.cfi_offset 14, -4
 552              		.loc 1 307 7 view .LVU84
 553 0002 FFF7FEFF 		bl	lcd_wr_register
 554              	.LVL27:
 308:lcd.c         ****       lcd_data_port_input();
 555              		.loc 1 308 7 is_stmt 1 view .LVU85
 556 0006 FFF7FEFF 		bl	lcd_data_port_input
 557              	.LVL28:
 309:lcd.c         ****       lcd_rs_hi();
 558              		.loc 1 309 7 view .LVU86
 559 000a FFF7FEFF 		bl	lcd_rs_hi
 560              	.LVL29:
 310:lcd.c         ****       lcd_cs_lo();
 561              		.loc 1 310 7 view .LVU87
 562 000e FFF7FEFF 		bl	lcd_cs_lo
 563              	.LVL30:
 311:lcd.c         ****       lcd_rd_lo();
 564              		.loc 1 311 7 view .LVU88
 565 0012 FFF7FEFF 		bl	lcd_rd_lo
 566              	.LVL31:
 312:lcd.c         ****       lcd_rd_hi();
 567              		.loc 1 312 7 view .LVU89
 568 0016 FFF7FEFF 		bl	lcd_rd_hi
 569              	.LVL32:
 313:lcd.c         ****       value = lcd_data_read();
 570              		.loc 1 313 7 view .LVU90
 571              	.LBB52:
 572              	.LBI52:
 221:lcd.c         **** {
 573              		.loc 1 221 16 view .LVU91
 574              	.LBB53:
 223:lcd.c         **** }
 575              		.loc 1 223 7 view .LVU92
 223:lcd.c         **** }
 576              		.loc 1 223 28 is_stmt 0 view .LVU93
 577 001a 044B     		ldr	r3, .L45
 578 001c 9C68     		ldr	r4, [r3, #8]
 579              	.LVL33:
 223:lcd.c         **** }
 580              		.loc 1 223 28 view .LVU94
 581              	.LBE53:
 582              	.LBE52:
 314:lcd.c         ****       lcd_cs_hi();
 583              		.loc 1 314 7 is_stmt 1 view .LVU95
 584 001e FFF7FEFF 		bl	lcd_cs_hi
 585              	.LVL34:
 315:lcd.c         ****       lcd_data_port_output();
 586              		.loc 1 315 7 view .LVU96
 587 0022 FFF7FEFF 		bl	lcd_data_port_output
 588              	.LVL35:
 316:lcd.c         ****       return value;
 589              		.loc 1 316 7 view .LVU97
 317:lcd.c         **** }
 590              		.loc 1 317 1 is_stmt 0 view .LVU98
 591 0026 A0B2     		uxth	r0, r4
 592 0028 10BD     		pop	{r4, pc}
 593              	.LVL36:
 594              	.L46:
 595              		.loc 1 317 1 view .LVU99
 596 002a 00BF     		.align	2
 597              	.L45:
 598 002c 00180140 		.word	1073813504
 599              		.cfi_endproc
 600              	.LFE47:
 602              		.section	.text.lcd_read_data,"ax",%progbits
 603              		.align	1
 604              		.global	lcd_read_data
 605              		.syntax unified
 606              		.thumb
 607              		.thumb_func
 608              		.fpu softvfp
 610              	lcd_read_data:
 611              	.LFB48:
 318:lcd.c         **** 
 319:lcd.c         **** 
 320:lcd.c         **** unsigned short lcd_read_data(void)
 321:lcd.c         **** {
 612              		.loc 1 321 1 is_stmt 1 view -0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 322:lcd.c         ****       unsigned short value;
 616              		.loc 1 322 7 view .LVU101
 323:lcd.c         ****       lcd_data_port_input();
 617              		.loc 1 323 7 view .LVU102
 321:lcd.c         ****       unsigned short value;
 618              		.loc 1 321 1 is_stmt 0 view .LVU103
 619 0000 10B5     		push	{r4, lr}
 620              		.cfi_def_cfa_offset 8
 621              		.cfi_offset 4, -8
 622              		.cfi_offset 14, -4
 623              		.loc 1 323 7 view .LVU104
 624 0002 FFF7FEFF 		bl	lcd_data_port_input
 625              	.LVL37:
 324:lcd.c         ****       lcd_rs_hi();
 626              		.loc 1 324 7 is_stmt 1 view .LVU105
 627 0006 FFF7FEFF 		bl	lcd_rs_hi
 628              	.LVL38:
 325:lcd.c         ****       lcd_cs_lo();
 629              		.loc 1 325 7 view .LVU106
 630 000a FFF7FEFF 		bl	lcd_cs_lo
 631              	.LVL39:
 326:lcd.c         ****       lcd_rd_lo();
 632              		.loc 1 326 7 view .LVU107
 633 000e FFF7FEFF 		bl	lcd_rd_lo
 634              	.LVL40:
 327:lcd.c         ****       lcd_rd_hi();
 635              		.loc 1 327 7 view .LVU108
 636 0012 FFF7FEFF 		bl	lcd_rd_hi
 637              	.LVL41:
 328:lcd.c         ****       value = lcd_data_read();
 638              		.loc 1 328 7 view .LVU109
 639              	.LBB54:
 640              	.LBI54:
 221:lcd.c         **** {
 641              		.loc 1 221 16 view .LVU110
 642              	.LBB55:
 223:lcd.c         **** }
 643              		.loc 1 223 7 view .LVU111
 223:lcd.c         **** }
 644              		.loc 1 223 28 is_stmt 0 view .LVU112
 645 0016 044B     		ldr	r3, .L48
 646 0018 9C68     		ldr	r4, [r3, #8]
 647              	.LVL42:
 223:lcd.c         **** }
 648              		.loc 1 223 28 view .LVU113
 649              	.LBE55:
 650              	.LBE54:
 329:lcd.c         ****       lcd_cs_hi();
 651              		.loc 1 329 7 is_stmt 1 view .LVU114
 652 001a FFF7FEFF 		bl	lcd_cs_hi
 653              	.LVL43:
 330:lcd.c         ****       lcd_data_port_output();
 654              		.loc 1 330 7 view .LVU115
 655 001e FFF7FEFF 		bl	lcd_data_port_output
 656              	.LVL44:
 331:lcd.c         ****       return value;
 657              		.loc 1 331 7 view .LVU116
 332:lcd.c         **** }
 658              		.loc 1 332 1 is_stmt 0 view .LVU117
 659 0022 A0B2     		uxth	r0, r4
 660 0024 10BD     		pop	{r4, pc}
 661              	.LVL45:
 662              	.L49:
 663              		.loc 1 332 1 view .LVU118
 664 0026 00BF     		.align	2
 665              	.L48:
 666 0028 00180140 		.word	1073813504
 667              		.cfi_endproc
 668              	.LFE48:
 670              		.section	.text.lcd_write_ram_prepare,"ax",%progbits
 671              		.align	1
 672              		.global	lcd_write_ram_prepare
 673              		.syntax unified
 674              		.thumb
 675              		.thumb_func
 676              		.fpu softvfp
 678              	lcd_write_ram_prepare:
 679              	.LFB49:
 333:lcd.c         **** 
 334:lcd.c         **** 
 335:lcd.c         **** void lcd_write_ram_prepare (void)
 336:lcd.c         **** {
 680              		.loc 1 336 1 is_stmt 1 view -0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684              		@ link register save eliminated.
 337:lcd.c         ****       lcd_wr_register(R34);
 685              		.loc 1 337 7 view .LVU120
 686 0000 2220     		movs	r0, #34
 687 0002 FFF7FEBF 		b	lcd_wr_register
 688              	.LVL46:
 689              		.cfi_endproc
 690              	.LFE49:
 692              		.section	.text.lcd_write_ram,"ax",%progbits
 693              		.align	1
 694              		.global	lcd_write_ram
 695              		.syntax unified
 696              		.thumb
 697              		.thumb_func
 698              		.fpu softvfp
 700              	lcd_write_ram:
 701              	.LVL47:
 702              	.LFB50:
 338:lcd.c         **** }
 339:lcd.c         **** 
 340:lcd.c         **** 
 341:lcd.c         **** void lcd_write_ram (unsigned short rgb_code)
 342:lcd.c         **** {
 703              		.loc 1 342 1 view -0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707              		@ link register save eliminated.
 343:lcd.c         ****       lcd_wr_data(rgb_code);
 708              		.loc 1 343 7 view .LVU122
 709 0000 FFF7FEBF 		b	lcd_wr_data
 710              	.LVL48:
 711              		.loc 1 343 7 is_stmt 0 view .LVU123
 712              		.cfi_endproc
 713              	.LFE50:
 715              		.section	.text.lcd_bgr_to_rgb,"ax",%progbits
 716              		.align	1
 717              		.global	lcd_bgr_to_rgb
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 721              		.fpu softvfp
 723              	lcd_bgr_to_rgb:
 724              	.LVL49:
 725              	.LFB51:
 344:lcd.c         **** }
 345:lcd.c         **** 
 346:lcd.c         **** 
 347:lcd.c         **** unsigned short lcd_bgr_to_rgb (unsigned short c)
 348:lcd.c         **** {
 726              		.loc 1 348 1 is_stmt 1 view -0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 0, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 349:lcd.c         ****       unsigned short r,g,b,rgb;
 731              		.loc 1 349 7 view .LVU125
 350:lcd.c         ****       b = (c >> 0) & 0x1f;
 732              		.loc 1 350 7 view .LVU126
 351:lcd.c         ****       g = (c >> 5) & 0x3f;
 733              		.loc 1 351 7 view .LVU127
 352:lcd.c         ****       r = (c >> 11) & 0x1f;
 734              		.loc 1 352 7 view .LVU128
 353:lcd.c         ****       rgb = (b << 11) + (g << 5) + (r << 0);
 735              		.loc 1 353 7 view .LVU129
 354:lcd.c         ****       return (rgb);
 736              		.loc 1 354 7 view .LVU130
 353:lcd.c         ****       rgb = (b << 11) + (g << 5) + (r << 0);
 737              		.loc 1 353 11 is_stmt 0 view .LVU131
 738 0000 C202     		lsls	r2, r0, #11
 353:lcd.c         ****       rgb = (b << 11) + (g << 5) + (r << 0);
 739              		.loc 1 353 28 view .LVU132
 740 0002 00F4FC63 		and	r3, r0, #2016
 353:lcd.c         ****       rgb = (b << 11) + (g << 5) + (r << 0);
 741              		.loc 1 353 11 view .LVU133
 742 0006 02EBD020 		add	r0, r2, r0, lsr #11
 743              	.LVL50:
 353:lcd.c         ****       rgb = (b << 11) + (g << 5) + (r << 0);
 744              		.loc 1 353 11 view .LVU134
 745 000a 1844     		add	r0, r0, r3
 355:lcd.c         **** }
 746              		.loc 1 355 1 view .LVU135
 747 000c 80B2     		uxth	r0, r0
 748 000e 7047     		bx	lr
 749              		.cfi_endproc
 750              	.LFE51:
 752              		.section	.text.lcd_get_pixel,"ax",%progbits
 753              		.align	1
 754              		.global	lcd_get_pixel
 755              		.syntax unified
 756              		.thumb
 757              		.thumb_func
 758              		.fpu softvfp
 760              	lcd_get_pixel:
 761              	.LVL51:
 762              	.LFB53:
 356:lcd.c         **** 
 357:lcd.c         **** 
 358:lcd.c         **** __inline void lcd_set_cursor (unsigned char xpos, unsigned short ypos)
 359:lcd.c         **** {
 360:lcd.c         ****       if ((device_code == 0x8999) || (device_code == 0x8989) || (device_code == 0x9919)) {
 361:lcd.c         **** 	 lcd_write_register(0x004E,xpos);
 362:lcd.c         **** 	 lcd_write_register(0X004F,ypos);
 363:lcd.c         ****       } else {
 364:lcd.c         **** 	 lcd_write_register(0x0020,xpos);
 365:lcd.c         **** 	 lcd_write_register(0X0021,ypos);
 366:lcd.c         ****       }
 367:lcd.c         **** }
 368:lcd.c         **** 
 369:lcd.c         **** 
 370:lcd.c         **** unsigned short lcd_get_pixel (unsigned char x,unsigned short y)
 371:lcd.c         **** {
 763              		.loc 1 371 1 is_stmt 1 view -0
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 0
 766              		@ frame_needed = 0, uses_anonymous_args = 0
 372:lcd.c         ****       unsigned short value;
 767              		.loc 1 372 7 view .LVU137
 373:lcd.c         ****       lcd_set_cursor(x,y);
 768              		.loc 1 373 7 view .LVU138
 371:lcd.c         ****       unsigned short value;
 769              		.loc 1 371 1 is_stmt 0 view .LVU139
 770 0000 10B5     		push	{r4, lr}
 771              		.cfi_def_cfa_offset 8
 772              		.cfi_offset 4, -8
 773              		.cfi_offset 14, -4
 774              		.loc 1 373 7 view .LVU140
 775 0002 FFF7FEFF 		bl	lcd_set_cursor
 776              	.LVL52:
 374:lcd.c         ****       lcd_wr_register(R34);
 777              		.loc 1 374 7 is_stmt 1 view .LVU141
 778 0006 2220     		movs	r0, #34
 779 0008 FFF7FEFF 		bl	lcd_wr_register
 780              	.LVL53:
 375:lcd.c         ****       lcd_data_port_input();
 781              		.loc 1 375 7 view .LVU142
 782 000c FFF7FEFF 		bl	lcd_data_port_input
 783              	.LVL54:
 376:lcd.c         ****       lcd_rs_hi();
 784              		.loc 1 376 7 view .LVU143
 785 0010 FFF7FEFF 		bl	lcd_rs_hi
 786              	.LVL55:
 377:lcd.c         ****       lcd_cs_lo();;
 787              		.loc 1 377 7 view .LVU144
 788 0014 FFF7FEFF 		bl	lcd_cs_lo
 789              	.LVL56:
 790              		.loc 1 377 19 view .LVU145
 378:lcd.c         ****       lcd_rd_lo();;
 791              		.loc 1 378 7 view .LVU146
 792 0018 FFF7FEFF 		bl	lcd_rd_lo
 793              	.LVL57:
 794              		.loc 1 378 19 view .LVU147
 379:lcd.c         ****       lcd_rd_hi();
 795              		.loc 1 379 7 view .LVU148
 796 001c FFF7FEFF 		bl	lcd_rd_hi
 797              	.LVL58:
 380:lcd.c         ****       //dummy READ
 381:lcd.c         ****       lcd_rd_lo();;
 798              		.loc 1 381 7 view .LVU149
 799 0020 FFF7FEFF 		bl	lcd_rd_lo
 800              	.LVL59:
 801              		.loc 1 381 19 view .LVU150
 382:lcd.c         ****       lcd_rd_hi();
 802              		.loc 1 382 7 view .LVU151
 803 0024 FFF7FEFF 		bl	lcd_rd_hi
 804              	.LVL60:
 383:lcd.c         ****       value = lcd_data_read();
 805              		.loc 1 383 7 view .LVU152
 806              	.LBB56:
 807              	.LBI56:
 221:lcd.c         **** {
 808              		.loc 1 221 16 view .LVU153
 809              	.LBB57:
 223:lcd.c         **** }
 810              		.loc 1 223 7 view .LVU154
 223:lcd.c         **** }
 811              		.loc 1 223 28 is_stmt 0 view .LVU155
 812 0028 054B     		ldr	r3, .L54
 813 002a 9C68     		ldr	r4, [r3, #8]
 814              	.LVL61:
 223:lcd.c         **** }
 815              		.loc 1 223 28 view .LVU156
 816              	.LBE57:
 817              	.LBE56:
 384:lcd.c         ****       lcd_cs_hi();
 818              		.loc 1 384 7 is_stmt 1 view .LVU157
 819 002c FFF7FEFF 		bl	lcd_cs_hi
 820              	.LVL62:
 385:lcd.c         ****       lcd_data_port_output();
 821              		.loc 1 385 7 view .LVU158
 822 0030 FFF7FEFF 		bl	lcd_data_port_output
 823              	.LVL63:
 386:lcd.c         ****       return lcd_bgr_to_rgb(value);
 824              		.loc 1 386 7 view .LVU159
 825              		.loc 1 386 14 is_stmt 0 view .LVU160
 826 0034 A0B2     		uxth	r0, r4
 387:lcd.c         **** }
 827              		.loc 1 387 1 view .LVU161
 828 0036 BDE81040 		pop	{r4, lr}
 829              		.cfi_restore 14
 830              		.cfi_restore 4
 831              		.cfi_def_cfa_offset 0
 832              	.LVL64:
 386:lcd.c         ****       return lcd_bgr_to_rgb(value);
 833              		.loc 1 386 14 view .LVU162
 834 003a FFF7FEBF 		b	lcd_bgr_to_rgb
 835              	.LVL65:
 836              	.L55:
 386:lcd.c         ****       return lcd_bgr_to_rgb(value);
 837              		.loc 1 386 14 view .LVU163
 838 003e 00BF     		.align	2
 839              	.L54:
 840 0040 00180140 		.word	1073813504
 841              		.cfi_endproc
 842              	.LFE53:
 844              		.section	.text.lcd_display_on,"ax",%progbits
 845              		.align	1
 846              		.global	lcd_display_on
 847              		.syntax unified
 848              		.thumb
 849              		.thumb_func
 850              		.fpu softvfp
 852              	lcd_display_on:
 853              	.LFB54:
 388:lcd.c         **** 
 389:lcd.c         **** 
 390:lcd.c         **** void lcd_display_on (void)
 391:lcd.c         **** {
 854              		.loc 1 391 1 is_stmt 1 view -0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 858              		@ link register save eliminated.
 392:lcd.c         ****       lcd_write_register(R7,0x0173);
 859              		.loc 1 392 7 view .LVU165
 860 0000 40F27311 		movw	r1, #371
 861 0004 0720     		movs	r0, #7
 862 0006 FFF7FEBF 		b	lcd_write_register
 863              	.LVL66:
 864              		.cfi_endproc
 865              	.LFE54:
 867              		.section	.text.lcd_display_off,"ax",%progbits
 868              		.align	1
 869              		.global	lcd_display_off
 870              		.syntax unified
 871              		.thumb
 872              		.thumb_func
 873              		.fpu softvfp
 875              	lcd_display_off:
 876              	.LFB55:
 393:lcd.c         **** }
 394:lcd.c         **** 
 395:lcd.c         **** 
 396:lcd.c         **** void lcd_display_off (void)
 397:lcd.c         **** {
 877              		.loc 1 397 1 view -0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 0
 880              		@ frame_needed = 0, uses_anonymous_args = 0
 881              		@ link register save eliminated.
 398:lcd.c         ****       lcd_write_register(R7,0x0);
 882              		.loc 1 398 7 view .LVU167
 883 0000 0021     		movs	r1, #0
 884 0002 0720     		movs	r0, #7
 885 0004 FFF7FEBF 		b	lcd_write_register
 886              	.LVL67:
 887              		.cfi_endproc
 888              	.LFE55:
 890              		.section	.text.lcd_delay,"ax",%progbits
 891              		.align	1
 892              		.global	lcd_delay
 893              		.syntax unified
 894              		.thumb
 895              		.thumb_func
 896              		.fpu softvfp
 898              	lcd_delay:
 899              	.LVL68:
 900              	.LFB56:
 399:lcd.c         **** }
 400:lcd.c         **** 
 401:lcd.c         **** 
 402:lcd.c         **** void lcd_delay (unsigned short count)
 403:lcd.c         **** {
 901              		.loc 1 403 1 view -0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              		@ link register save eliminated.
 404:lcd.c         ****       wait_ms(count);
 906              		.loc 1 404 7 view .LVU169
 907 0000 FFF7FEBF 		b	wait_ms
 908              	.LVL69:
 909              		.loc 1 404 7 is_stmt 0 view .LVU170
 910              		.cfi_endproc
 911              	.LFE56:
 913              		.section	.text.lcd_window_max,"ax",%progbits
 914              		.align	1
 915              		.global	lcd_window_max
 916              		.syntax unified
 917              		.thumb
 918              		.thumb_func
 919              		.fpu softvfp
 921              	lcd_window_max:
 922              	.LVL70:
 923              	.LFB57:
 405:lcd.c         **** }
 406:lcd.c         **** 
 407:lcd.c         **** 
 408:lcd.c         **** void lcd_window_max (unsigned short x,unsigned short y,unsigned short x_end,unsigned short y_end)
 409:lcd.c         **** {
 924              		.loc 1 409 1 is_stmt 1 view -0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 0
 927              		@ frame_needed = 0, uses_anonymous_args = 0
 410:lcd.c         **** 
 411:lcd.c         ****       if ((device_code == 0x8999) || (device_code == 0x8989)) {
 928              		.loc 1 411 7 view .LVU172
 409:lcd.c         **** 
 929              		.loc 1 409 1 is_stmt 0 view .LVU173
 930 0000 70B5     		push	{r4, r5, r6, lr}
 931              		.cfi_def_cfa_offset 16
 932              		.cfi_offset 4, -16
 933              		.cfi_offset 5, -12
 934              		.cfi_offset 6, -8
 935              		.cfi_offset 14, -4
 409:lcd.c         **** 
 936              		.loc 1 409 1 view .LVU174
 937 0002 0E46     		mov	r6, r1
 938              		.loc 1 411 35 view .LVU175
 939 0004 48F68911 		movw	r1, #35209
 940              	.LVL71:
 941              		.loc 1 411 35 view .LVU176
 942 0008 5C1E     		subs	r4, r3, #1
 943              		.loc 1 411 24 view .LVU177
 944 000a 144B     		ldr	r3, .L62
 945              	.LVL72:
 946              		.loc 1 411 24 view .LVU178
 947 000c A4B2     		uxth	r4, r4
 948              		.loc 1 411 35 view .LVU179
 949 000e 1B88     		ldrh	r3, [r3]
 950 0010 551E     		subs	r5, r2, #1
 951 0012 23F01003 		bic	r3, r3, #16
 952 0016 9BB2     		uxth	r3, r3
 953 0018 8B42     		cmp	r3, r1
 954 001a 0FD1     		bne	.L60
 412:lcd.c         **** 	 lcd_write_register(0x44,x | ((x_end - 1) << 8));
 955              		.loc 1 412 3 is_stmt 1 view .LVU180
 956              		.loc 1 412 29 is_stmt 0 view .LVU181
 957 001c 40EA0525 		orr	r5, r0, r5, lsl #8
 958              		.loc 1 412 3 view .LVU182
 959 0020 A9B2     		uxth	r1, r5
 960 0022 4420     		movs	r0, #68
 961              	.LVL73:
 962              		.loc 1 412 3 view .LVU183
 963 0024 FFF7FEFF 		bl	lcd_write_register
 964              	.LVL74:
 413:lcd.c         **** 	 lcd_write_register(0x45,y);
 965              		.loc 1 413 3 is_stmt 1 view .LVU184
 966 0028 3146     		mov	r1, r6
 967 002a 4520     		movs	r0, #69
 968 002c FFF7FEFF 		bl	lcd_write_register
 969              	.LVL75:
 414:lcd.c         **** 	 lcd_write_register(0x46,y_end - 1);
 970              		.loc 1 414 3 view .LVU185
 971 0030 2146     		mov	r1, r4
 972 0032 4620     		movs	r0, #70
 973              	.L61:
 415:lcd.c         ****       } else {
 416:lcd.c         **** 	 lcd_write_register(0x50,x);		/* Horizontal GRAM Start Address      */
 417:lcd.c         **** 	 lcd_write_register(0x51,x_end - 1);	/* Horizontal GRAM End   Address (-1) */
 418:lcd.c         **** 	 lcd_write_register(0x52,y);		/* Vertical   GRAM Start Address      */
 419:lcd.c         **** 	 lcd_write_register(0x53,y_end - 1);	/* Vertical   GRAM End   Address (-1) */
 420:lcd.c         ****       }
 421:lcd.c         **** }
 974              		.loc 1 421 1 is_stmt 0 view .LVU186
 975 0034 BDE87040 		pop	{r4, r5, r6, lr}
 976              		.cfi_remember_state
 977              		.cfi_restore 14
 978              		.cfi_restore 6
 979              		.cfi_restore 5
 980              		.cfi_restore 4
 981              		.cfi_def_cfa_offset 0
 419:lcd.c         ****       }
 982              		.loc 1 419 3 view .LVU187
 983 0038 FFF7FEBF 		b	lcd_write_register
 984              	.LVL76:
 985              	.L60:
 986              		.cfi_restore_state
 416:lcd.c         **** 	 lcd_write_register(0x51,x_end - 1);	/* Horizontal GRAM End   Address (-1) */
 987              		.loc 1 416 3 is_stmt 1 view .LVU188
 988 003c 0146     		mov	r1, r0
 989 003e 5020     		movs	r0, #80
 990              	.LVL77:
 416:lcd.c         **** 	 lcd_write_register(0x51,x_end - 1);	/* Horizontal GRAM End   Address (-1) */
 991              		.loc 1 416 3 is_stmt 0 view .LVU189
 992 0040 FFF7FEFF 		bl	lcd_write_register
 993              	.LVL78:
 417:lcd.c         **** 	 lcd_write_register(0x52,y);		/* Vertical   GRAM Start Address      */
 994              		.loc 1 417 3 is_stmt 1 view .LVU190
 995 0044 5120     		movs	r0, #81
 996 0046 A9B2     		uxth	r1, r5
 997 0048 FFF7FEFF 		bl	lcd_write_register
 998              	.LVL79:
 418:lcd.c         **** 	 lcd_write_register(0x53,y_end - 1);	/* Vertical   GRAM End   Address (-1) */
 999              		.loc 1 418 3 view .LVU191
 1000 004c 3146     		mov	r1, r6
 1001 004e 5220     		movs	r0, #82
 1002 0050 FFF7FEFF 		bl	lcd_write_register
 1003              	.LVL80:
 419:lcd.c         ****       }
 1004              		.loc 1 419 3 view .LVU192
 1005 0054 2146     		mov	r1, r4
 1006 0056 5320     		movs	r0, #83
 1007 0058 ECE7     		b	.L61
 1008              	.L63:
 1009 005a 00BF     		.align	2
 1010              	.L62:
 1011 005c 00000000 		.word	device_code
 1012              		.cfi_endproc
 1013              	.LFE57:
 1015              		.section	.text.lcd_set_pixel,"ax",%progbits
 1016              		.align	1
 1017              		.global	lcd_set_pixel
 1018              		.syntax unified
 1019              		.thumb
 1020              		.thumb_func
 1021              		.fpu softvfp
 1023              	lcd_set_pixel:
 1024              	.LVL81:
 1025              	.LFB58:
 422:lcd.c         **** 
 423:lcd.c         **** 
 424:lcd.c         **** void lcd_set_pixel (unsigned char x,unsigned short y)
 425:lcd.c         **** {
 1026              		.loc 1 425 1 view -0
 1027              		.cfi_startproc
 1028              		@ args = 0, pretend = 0, frame = 0
 1029              		@ frame_needed = 0, uses_anonymous_args = 0
 426:lcd.c         ****       lcd_set_cursor(x,y);
 1030              		.loc 1 426 7 view .LVU194
 425:lcd.c         ****       lcd_set_cursor(x,y);
 1031              		.loc 1 425 1 is_stmt 0 view .LVU195
 1032 0000 08B5     		push	{r3, lr}
 1033              		.cfi_def_cfa_offset 8
 1034              		.cfi_offset 3, -8
 1035              		.cfi_offset 14, -4
 1036              		.loc 1 426 7 view .LVU196
 1037 0002 FFF7FEFF 		bl	lcd_set_cursor
 1038              	.LVL82:
 427:lcd.c         ****       lcd_wr_register(R34);
 1039              		.loc 1 427 7 is_stmt 1 view .LVU197
 1040 0006 2220     		movs	r0, #34
 1041 0008 FFF7FEFF 		bl	lcd_wr_register
 1042              	.LVL83:
 428:lcd.c         ****       lcd_wr_data(foreground_color);
 1043              		.loc 1 428 7 view .LVU198
 1044 000c 024B     		ldr	r3, .L65
 1045 000e 1888     		ldrh	r0, [r3]
 429:lcd.c         **** }
 1046              		.loc 1 429 1 is_stmt 0 view .LVU199
 1047 0010 BDE80840 		pop	{r3, lr}
 1048              		.cfi_restore 14
 1049              		.cfi_restore 3
 1050              		.cfi_def_cfa_offset 0
 428:lcd.c         ****       lcd_wr_data(foreground_color);
 1051              		.loc 1 428 7 view .LVU200
 1052 0014 FFF7FEBF 		b	lcd_wr_data
 1053              	.LVL84:
 1054              	.L66:
 1055              		.align	2
 1056              	.L65:
 1057 0018 00000000 		.word	foreground_color
 1058              		.cfi_endproc
 1059              	.LFE58:
 1061              		.section	.text.lcd_clear,"ax",%progbits
 1062              		.align	1
 1063              		.global	lcd_clear
 1064              		.syntax unified
 1065              		.thumb
 1066              		.thumb_func
 1067              		.fpu softvfp
 1069              	lcd_clear:
 1070              	.LVL85:
 1071              	.LFB59:
 430:lcd.c         **** 
 431:lcd.c         **** 
 432:lcd.c         **** void lcd_clear (unsigned short color)
 433:lcd.c         **** {
 1072              		.loc 1 433 1 is_stmt 1 view -0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 0
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
 434:lcd.c         ****        unsigned int idx = 0;
 1076              		.loc 1 434 8 view .LVU202
 435:lcd.c         ****        lcd_set_cursor(0x00,0x0000);
 1077              		.loc 1 435 8 view .LVU203
 1078 0000 0021     		movs	r1, #0
 433:lcd.c         ****        unsigned int idx = 0;
 1079              		.loc 1 433 1 is_stmt 0 view .LVU204
 1080 0002 38B5     		push	{r3, r4, r5, lr}
 1081              		.cfi_def_cfa_offset 16
 1082              		.cfi_offset 3, -16
 1083              		.cfi_offset 4, -12
 1084              		.cfi_offset 5, -8
 1085              		.cfi_offset 14, -4
 433:lcd.c         ****        unsigned int idx = 0;
 1086              		.loc 1 433 1 view .LVU205
 1087 0004 0546     		mov	r5, r0
 1088              		.loc 1 435 8 view .LVU206
 1089 0006 0846     		mov	r0, r1
 1090              	.LVL86:
 1091              		.loc 1 435 8 view .LVU207
 1092 0008 FFF7FEFF 		bl	lcd_set_cursor
 1093              	.LVL87:
 436:lcd.c         ****        lcd_write_ram_prepare();
 1094              		.loc 1 436 8 is_stmt 1 view .LVU208
 1095 000c 4FF49634 		mov	r4, #76800
 1096 0010 FFF7FEFF 		bl	lcd_write_ram_prepare
 1097              	.LVL88:
 437:lcd.c         ****        for (idx=0;idx<76800;idx++) {
 1098              		.loc 1 437 8 view .LVU209
 1099              		.loc 1 437 19 view .LVU210
 1100              	.L68:
 438:lcd.c         **** 	   lcd_wr_data(color);
 1101              		.loc 1 438 5 discriminator 3 view .LVU211
 1102 0014 2846     		mov	r0, r5
 1103 0016 FFF7FEFF 		bl	lcd_wr_data
 1104              	.LVL89:
 437:lcd.c         ****        for (idx=0;idx<76800;idx++) {
 1105              		.loc 1 437 29 discriminator 3 view .LVU212
 437:lcd.c         ****        for (idx=0;idx<76800;idx++) {
 1106              		.loc 1 437 19 discriminator 3 view .LVU213
 437:lcd.c         ****        for (idx=0;idx<76800;idx++) {
 1107              		.loc 1 437 8 is_stmt 0 discriminator 3 view .LVU214
 1108 001a 013C     		subs	r4, r4, #1
 1109              	.LVL90:
 437:lcd.c         ****        for (idx=0;idx<76800;idx++) {
 1110              		.loc 1 437 8 discriminator 3 view .LVU215
 1111 001c FAD1     		bne	.L68
 439:lcd.c         ****        }
 440:lcd.c         **** }
 1112              		.loc 1 440 1 view .LVU216
 1113 001e 38BD     		pop	{r3, r4, r5, pc}
 1114              		.loc 1 440 1 view .LVU217
 1115              		.cfi_endproc
 1116              	.LFE59:
 1118              		.section	.text.lcd_init,"ax",%progbits
 1119              		.align	1
 1120              		.global	lcd_init
 1121              		.syntax unified
 1122              		.thumb
 1123              		.thumb_func
 1124              		.fpu softvfp
 1126              	lcd_init:
 1127              	.LFB60:
 441:lcd.c         **** 
 442:lcd.c         **** 
 443:lcd.c         **** void lcd_init (void)
 444:lcd.c         **** {
 1128              		.loc 1 444 1 is_stmt 1 view -0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 0
 1131              		@ frame_needed = 0, uses_anonymous_args = 0
 445:lcd.c         ****       maxx = 240;
 1132              		.loc 1 445 7 view .LVU219
 1133              		.loc 1 445 12 is_stmt 0 view .LVU220
 1134 0000 F022     		movs	r2, #240
 444:lcd.c         ****       maxx = 240;
 1135              		.loc 1 444 1 view .LVU221
 1136 0002 38B5     		push	{r3, r4, r5, lr}
 1137              		.cfi_def_cfa_offset 16
 1138              		.cfi_offset 3, -16
 1139              		.cfi_offset 4, -12
 1140              		.cfi_offset 5, -8
 1141              		.cfi_offset 14, -4
 1142              		.loc 1 445 12 view .LVU222
 1143 0004 DE4B     		ldr	r3, .L79
 446:lcd.c         ****       maxy = 320;
 447:lcd.c         ****       ax = 0;
 1144              		.loc 1 447 10 view .LVU223
 1145 0006 0024     		movs	r4, #0
 445:lcd.c         ****       maxy = 320;
 1146              		.loc 1 445 12 view .LVU224
 1147 0008 1A80     		strh	r2, [r3]	@ movhi
 446:lcd.c         ****       maxy = 320;
 1148              		.loc 1 446 7 is_stmt 1 view .LVU225
 446:lcd.c         ****       maxy = 320;
 1149              		.loc 1 446 12 is_stmt 0 view .LVU226
 1150 000a 4FF4A072 		mov	r2, #320
 1151 000e DD4B     		ldr	r3, .L79+4
 448:lcd.c         ****       ay = 0;
 449:lcd.c         ****       page = 0;
 450:lcd.c         ****       eng_mode = 0;
 451:lcd.c         ****       hangul_mode = 0;
 452:lcd.c         ****       max_col = (maxx / 8);
 1152              		.loc 1 452 15 view .LVU227
 1153 0010 1E25     		movs	r5, #30
 446:lcd.c         ****       ax = 0;
 1154              		.loc 1 446 12 view .LVU228
 1155 0012 1A80     		strh	r2, [r3]	@ movhi
 447:lcd.c         ****       ay = 0;
 1156              		.loc 1 447 7 is_stmt 1 view .LVU229
 453:lcd.c         ****       max_row = (maxy / 16);
 1157              		.loc 1 453 15 is_stmt 0 view .LVU230
 1158 0014 1422     		movs	r2, #20
 447:lcd.c         ****       ay = 0;
 1159              		.loc 1 447 10 view .LVU231
 1160 0016 DC4B     		ldr	r3, .L79+8
 454:lcd.c         ****       foreground_color = WHITE;
 455:lcd.c         ****       background_color = BLACK;
 456:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA0,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1161              		.loc 1 456 7 view .LVU232
 1162 0018 0121     		movs	r1, #1
 447:lcd.c         ****       ay = 0;
 1163              		.loc 1 447 10 view .LVU233
 1164 001a 1C80     		strh	r4, [r3]	@ movhi
 448:lcd.c         ****       page = 0;
 1165              		.loc 1 448 7 is_stmt 1 view .LVU234
 448:lcd.c         ****       page = 0;
 1166              		.loc 1 448 10 is_stmt 0 view .LVU235
 1167 001c DB4B     		ldr	r3, .L79+12
 1168              		.loc 1 456 7 view .LVU236
 1169 001e DC48     		ldr	r0, .L79+16
 448:lcd.c         ****       page = 0;
 1170              		.loc 1 448 10 view .LVU237
 1171 0020 1C80     		strh	r4, [r3]	@ movhi
 449:lcd.c         ****       eng_mode = 0;
 1172              		.loc 1 449 7 is_stmt 1 view .LVU238
 449:lcd.c         ****       eng_mode = 0;
 1173              		.loc 1 449 12 is_stmt 0 view .LVU239
 1174 0022 DC4B     		ldr	r3, .L79+20
 1175 0024 1C80     		strh	r4, [r3]	@ movhi
 450:lcd.c         ****       hangul_mode = 0;
 1176              		.loc 1 450 7 is_stmt 1 view .LVU240
 450:lcd.c         ****       hangul_mode = 0;
 1177              		.loc 1 450 16 is_stmt 0 view .LVU241
 1178 0026 DC4B     		ldr	r3, .L79+24
 1179 0028 1C80     		strh	r4, [r3]	@ movhi
 451:lcd.c         ****       max_col = (maxx / 8);
 1180              		.loc 1 451 7 is_stmt 1 view .LVU242
 451:lcd.c         ****       max_col = (maxx / 8);
 1181              		.loc 1 451 19 is_stmt 0 view .LVU243
 1182 002a DC4B     		ldr	r3, .L79+28
 1183 002c 1C70     		strb	r4, [r3]
 452:lcd.c         ****       max_row = (maxy / 16);
 1184              		.loc 1 452 7 is_stmt 1 view .LVU244
 452:lcd.c         ****       max_row = (maxy / 16);
 1185              		.loc 1 452 15 is_stmt 0 view .LVU245
 1186 002e DC4B     		ldr	r3, .L79+32
 1187 0030 1D80     		strh	r5, [r3]	@ movhi
 453:lcd.c         ****       foreground_color = WHITE;
 1188              		.loc 1 453 7 is_stmt 1 view .LVU246
 453:lcd.c         ****       foreground_color = WHITE;
 1189              		.loc 1 453 15 is_stmt 0 view .LVU247
 1190 0032 DC4B     		ldr	r3, .L79+36
 1191 0034 1A80     		strh	r2, [r3]	@ movhi
 454:lcd.c         ****       background_color = BLACK;
 1192              		.loc 1 454 7 is_stmt 1 view .LVU248
 454:lcd.c         ****       background_color = BLACK;
 1193              		.loc 1 454 24 is_stmt 0 view .LVU249
 1194 0036 4FF6FF72 		movw	r2, #65535
 1195 003a DB4B     		ldr	r3, .L79+40
 1196 003c 1A80     		strh	r2, [r3]	@ movhi
 455:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA0,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1197              		.loc 1 455 7 is_stmt 1 view .LVU250
 455:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA0,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1198              		.loc 1 455 24 is_stmt 0 view .LVU251
 1199 003e DB4B     		ldr	r3, .L79+44
 1200              		.loc 1 456 7 view .LVU252
 1201 0040 0322     		movs	r2, #3
 455:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA0,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1202              		.loc 1 455 24 view .LVU253
 1203 0042 1C80     		strh	r4, [r3]	@ movhi
 1204              		.loc 1 456 7 is_stmt 1 view .LVU254
 1205 0044 1023     		movs	r3, #16
 1206 0046 FFF7FEFF 		bl	GPIO_Init_Pin
 1207              	.LVL91:
 457:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA1,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1208              		.loc 1 457 7 view .LVU255
 1209 004a 1023     		movs	r3, #16
 1210 004c 0322     		movs	r2, #3
 1211 004e 0221     		movs	r1, #2
 1212 0050 CF48     		ldr	r0, .L79+16
 1213 0052 FFF7FEFF 		bl	GPIO_Init_Pin
 1214              	.LVL92:
 458:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA2,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1215              		.loc 1 458 7 view .LVU256
 1216 0056 1023     		movs	r3, #16
 1217 0058 0322     		movs	r2, #3
 1218 005a 0421     		movs	r1, #4
 1219 005c CC48     		ldr	r0, .L79+16
 1220 005e FFF7FEFF 		bl	GPIO_Init_Pin
 1221              	.LVL93:
 459:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA3,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1222              		.loc 1 459 7 view .LVU257
 1223 0062 1023     		movs	r3, #16
 1224 0064 0322     		movs	r2, #3
 1225 0066 0821     		movs	r1, #8
 1226 0068 C948     		ldr	r0, .L79+16
 1227 006a FFF7FEFF 		bl	GPIO_Init_Pin
 1228              	.LVL94:
 460:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA4,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1229              		.loc 1 460 7 view .LVU258
 1230 006e 1023     		movs	r3, #16
 1231 0070 0322     		movs	r2, #3
 1232 0072 1946     		mov	r1, r3
 1233 0074 C648     		ldr	r0, .L79+16
 1234 0076 FFF7FEFF 		bl	GPIO_Init_Pin
 1235              	.LVL95:
 461:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA5,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1236              		.loc 1 461 7 view .LVU259
 1237 007a 1023     		movs	r3, #16
 1238 007c 0322     		movs	r2, #3
 1239 007e 2021     		movs	r1, #32
 1240 0080 C348     		ldr	r0, .L79+16
 1241 0082 FFF7FEFF 		bl	GPIO_Init_Pin
 1242              	.LVL96:
 462:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA6,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1243              		.loc 1 462 7 view .LVU260
 1244 0086 1023     		movs	r3, #16
 1245 0088 0322     		movs	r2, #3
 1246 008a 4021     		movs	r1, #64
 1247 008c C048     		ldr	r0, .L79+16
 1248 008e FFF7FEFF 		bl	GPIO_Init_Pin
 1249              	.LVL97:
 463:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA7,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1250              		.loc 1 463 7 view .LVU261
 1251 0092 1023     		movs	r3, #16
 1252 0094 0322     		movs	r2, #3
 1253 0096 8021     		movs	r1, #128
 1254 0098 BD48     		ldr	r0, .L79+16
 1255 009a FFF7FEFF 		bl	GPIO_Init_Pin
 1256              	.LVL98:
 464:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA8,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1257              		.loc 1 464 7 view .LVU262
 1258 009e 1023     		movs	r3, #16
 1259 00a0 0322     		movs	r2, #3
 1260 00a2 4FF48071 		mov	r1, #256
 1261 00a6 BA48     		ldr	r0, .L79+16
 1262 00a8 FFF7FEFF 		bl	GPIO_Init_Pin
 1263              	.LVL99:
 465:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA9,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1264              		.loc 1 465 7 view .LVU263
 1265 00ac 1023     		movs	r3, #16
 1266 00ae 0322     		movs	r2, #3
 1267 00b0 4FF40071 		mov	r1, #512
 1268 00b4 B648     		ldr	r0, .L79+16
 1269 00b6 FFF7FEFF 		bl	GPIO_Init_Pin
 1270              	.LVL100:
 466:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA10,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1271              		.loc 1 466 7 view .LVU264
 1272 00ba 1023     		movs	r3, #16
 1273 00bc 0322     		movs	r2, #3
 1274 00be 4FF48061 		mov	r1, #1024
 1275 00c2 B348     		ldr	r0, .L79+16
 1276 00c4 FFF7FEFF 		bl	GPIO_Init_Pin
 1277              	.LVL101:
 467:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA11,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1278              		.loc 1 467 7 view .LVU265
 1279 00c8 1023     		movs	r3, #16
 1280 00ca 0322     		movs	r2, #3
 1281 00cc 4FF40061 		mov	r1, #2048
 1282 00d0 AF48     		ldr	r0, .L79+16
 1283 00d2 FFF7FEFF 		bl	GPIO_Init_Pin
 1284              	.LVL102:
 468:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA12,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1285              		.loc 1 468 7 view .LVU266
 1286 00d6 1023     		movs	r3, #16
 1287 00d8 0322     		movs	r2, #3
 1288 00da 4FF48051 		mov	r1, #4096
 1289 00de AC48     		ldr	r0, .L79+16
 1290 00e0 FFF7FEFF 		bl	GPIO_Init_Pin
 1291              	.LVL103:
 469:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA13,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1292              		.loc 1 469 7 view .LVU267
 1293 00e4 1023     		movs	r3, #16
 1294 00e6 0322     		movs	r2, #3
 1295 00e8 4FF40051 		mov	r1, #8192
 1296 00ec A848     		ldr	r0, .L79+16
 1297 00ee FFF7FEFF 		bl	GPIO_Init_Pin
 1298              	.LVL104:
 470:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA14,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1299              		.loc 1 470 7 view .LVU268
 1300 00f2 1023     		movs	r3, #16
 1301 00f4 0322     		movs	r2, #3
 1302 00f6 4FF48041 		mov	r1, #16384
 1303 00fa A548     		ldr	r0, .L79+16
 1304 00fc FFF7FEFF 		bl	GPIO_Init_Pin
 1305              	.LVL105:
 471:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA15,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1306              		.loc 1 471 7 view .LVU269
 1307 0100 1023     		movs	r3, #16
 1308 0102 0322     		movs	r2, #3
 1309 0104 4FF40041 		mov	r1, #32768
 1310 0108 A148     		ldr	r0, .L79+16
 1311 010a FFF7FEFF 		bl	GPIO_Init_Pin
 1312              	.LVL106:
 472:lcd.c         ****       GPIO_Init_Pin(LCD_CTL_PORT,LCD_CS,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1313              		.loc 1 472 7 view .LVU270
 1314 010e 1023     		movs	r3, #16
 1315 0110 0322     		movs	r2, #3
 1316 0112 4FF48051 		mov	r1, #4096
 1317 0116 A648     		ldr	r0, .L79+48
 1318 0118 FFF7FEFF 		bl	GPIO_Init_Pin
 1319              	.LVL107:
 473:lcd.c         ****       GPIO_Init_Pin(LCD_CTL_PORT,LCD_RS,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1320              		.loc 1 473 7 view .LVU271
 1321 011c 1023     		movs	r3, #16
 1322 011e 0322     		movs	r2, #3
 1323 0120 4FF40051 		mov	r1, #8192
 1324 0124 A248     		ldr	r0, .L79+48
 1325 0126 FFF7FEFF 		bl	GPIO_Init_Pin
 1326              	.LVL108:
 474:lcd.c         ****       GPIO_Init_Pin(LCD_CTL_PORT,LCD_RD,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1327              		.loc 1 474 7 view .LVU272
 1328 012a 1023     		movs	r3, #16
 1329 012c 0322     		movs	r2, #3
 1330 012e 4FF40041 		mov	r1, #32768
 1331 0132 9F48     		ldr	r0, .L79+48
 1332 0134 FFF7FEFF 		bl	GPIO_Init_Pin
 1333              	.LVL109:
 475:lcd.c         ****       GPIO_Init_Pin(LCD_CTL_PORT,LCD_WR,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1334              		.loc 1 475 7 view .LVU273
 1335 0138 1023     		movs	r3, #16
 1336 013a 0322     		movs	r2, #3
 1337 013c 4FF48041 		mov	r1, #16384
 1338 0140 9B48     		ldr	r0, .L79+48
 1339 0142 FFF7FEFF 		bl	GPIO_Init_Pin
 1340              	.LVL110:
 476:lcd.c         ****       lcd_delay(50);
 1341              		.loc 1 476 7 view .LVU274
 1342              	.LBB58:
 1343              	.LBI58:
 402:lcd.c         **** {
 1344              		.loc 1 402 6 view .LVU275
 1345              	.LBB59:
 404:lcd.c         **** }
 1346              		.loc 1 404 7 view .LVU276
 1347 0146 3220     		movs	r0, #50
 1348 0148 FFF7FEFF 		bl	wait_ms
 1349              	.LVL111:
 404:lcd.c         **** }
 1350              		.loc 1 404 7 is_stmt 0 view .LVU277
 1351              	.LBE59:
 1352              	.LBE58:
 477:lcd.c         ****       lcd_write_register(0x0000,0x0001);
 1353              		.loc 1 477 7 is_stmt 1 view .LVU278
 1354 014c 0121     		movs	r1, #1
 1355 014e 2046     		mov	r0, r4
 1356 0150 FFF7FEFF 		bl	lcd_write_register
 1357              	.LVL112:
 478:lcd.c         ****       lcd_delay(50);
 1358              		.loc 1 478 7 view .LVU279
 1359              	.LBB60:
 1360              	.LBI60:
 402:lcd.c         **** {
 1361              		.loc 1 402 6 view .LVU280
 1362              	.LBB61:
 404:lcd.c         **** }
 1363              		.loc 1 404 7 view .LVU281
 1364 0154 3220     		movs	r0, #50
 1365 0156 FFF7FEFF 		bl	wait_ms
 1366              	.LVL113:
 404:lcd.c         **** }
 1367              		.loc 1 404 7 is_stmt 0 view .LVU282
 1368              	.LBE61:
 1369              	.LBE60:
 479:lcd.c         ****       device_code = lcd_read_register(0x0000);
 1370              		.loc 1 479 7 is_stmt 1 view .LVU283
 1371              		.loc 1 479 21 is_stmt 0 view .LVU284
 1372 015a 2046     		mov	r0, r4
 1373 015c FFF7FEFF 		bl	lcd_read_register
 1374              	.LVL114:
 1375              		.loc 1 479 19 view .LVU285
 1376 0160 944B     		ldr	r3, .L79+52
 1377 0162 1880     		strh	r0, [r3]	@ movhi
 480:lcd.c         ****       //s_printf(" Lcd Init -> DeviceCode %4X \r\n",device_code);
 481:lcd.c         ****       if ((device_code == 0x9325) || (device_code == 0x9328)) {
 1378              		.loc 1 481 7 is_stmt 1 view .LVU286
 1379              		.loc 1 481 10 is_stmt 0 view .LVU287
 1380 0164 49F22533 		movw	r3, #37669
 1381 0168 9842     		cmp	r0, r3
 1382 016a 04D0     		beq	.L71
 1383              		.loc 1 481 35 discriminator 1 view .LVU288
 1384 016c 49F22833 		movw	r3, #37672
 1385 0170 9842     		cmp	r0, r3
 1386 0172 40F02181 		bne	.L72
 1387              	.L71:
 482:lcd.c         ****   	 lcd_write_register(0x00e7,0x0010);
 1388              		.loc 1 482 5 is_stmt 1 view .LVU289
 1389 0176 1021     		movs	r1, #16
 1390 0178 E720     		movs	r0, #231
 1391 017a FFF7FEFF 		bl	lcd_write_register
 1392              	.LVL115:
 483:lcd.c         ****          lcd_write_register(0x0000,0x0001);
 1393              		.loc 1 483 10 view .LVU290
 1394 017e 0121     		movs	r1, #1
 1395 0180 0020     		movs	r0, #0
 1396 0182 FFF7FEFF 		bl	lcd_write_register
 1397              	.LVL116:
 484:lcd.c         ****          lcd_write_register(0x0001,0x0100);
 1398              		.loc 1 484 10 view .LVU291
 1399 0186 4FF48071 		mov	r1, #256
 1400 018a 0120     		movs	r0, #1
 1401 018c FFF7FEFF 		bl	lcd_write_register
 1402              	.LVL117:
 485:lcd.c         ****          lcd_write_register(0x0002,0x0700);
 1403              		.loc 1 485 10 view .LVU292
 1404 0190 4FF4E061 		mov	r1, #1792
 1405 0194 0220     		movs	r0, #2
 1406 0196 FFF7FEFF 		bl	lcd_write_register
 1407              	.LVL118:
 486:lcd.c         ****          lcd_write_register(0x0003,0x1030);
 1408              		.loc 1 486 10 view .LVU293
 1409 019a 41F23001 		movw	r1, #4144
 1410 019e 0320     		movs	r0, #3
 1411 01a0 FFF7FEFF 		bl	lcd_write_register
 1412              	.LVL119:
 487:lcd.c         ****          lcd_write_register(0x0004,0x0000);
 1413              		.loc 1 487 10 view .LVU294
 1414 01a4 0021     		movs	r1, #0
 1415 01a6 0420     		movs	r0, #4
 1416 01a8 FFF7FEFF 		bl	lcd_write_register
 1417              	.LVL120:
 488:lcd.c         ****          lcd_write_register(0x0008,0x0207);
 1418              		.loc 1 488 10 view .LVU295
 1419 01ac 40F20721 		movw	r1, #519
 1420 01b0 0820     		movs	r0, #8
 1421 01b2 FFF7FEFF 		bl	lcd_write_register
 1422              	.LVL121:
 489:lcd.c         ****          lcd_write_register(0x0009,0x0000);
 1423              		.loc 1 489 10 view .LVU296
 1424 01b6 0021     		movs	r1, #0
 1425 01b8 0920     		movs	r0, #9
 1426 01ba FFF7FEFF 		bl	lcd_write_register
 1427              	.LVL122:
 490:lcd.c         ****          lcd_write_register(0x000a,0x0000);
 1428              		.loc 1 490 10 view .LVU297
 1429 01be 0021     		movs	r1, #0
 1430 01c0 0A20     		movs	r0, #10
 1431 01c2 FFF7FEFF 		bl	lcd_write_register
 1432              	.LVL123:
 491:lcd.c         ****          lcd_write_register(0x000c,0x0001);
 1433              		.loc 1 491 10 view .LVU298
 1434 01c6 0121     		movs	r1, #1
 1435 01c8 0C20     		movs	r0, #12
 1436 01ca FFF7FEFF 		bl	lcd_write_register
 1437              	.LVL124:
 492:lcd.c         ****          lcd_write_register(0x000d,0x0000);
 1438              		.loc 1 492 10 view .LVU299
 1439 01ce 0021     		movs	r1, #0
 1440 01d0 0D20     		movs	r0, #13
 1441 01d2 FFF7FEFF 		bl	lcd_write_register
 1442              	.LVL125:
 493:lcd.c         ****          lcd_write_register(0x000f,0x0000);
 1443              		.loc 1 493 10 view .LVU300
 1444 01d6 0021     		movs	r1, #0
 1445 01d8 0F20     		movs	r0, #15
 1446 01da FFF7FEFF 		bl	lcd_write_register
 1447              	.LVL126:
 494:lcd.c         ****          lcd_write_register(0x0010,0x0000);
 1448              		.loc 1 494 10 view .LVU301
 1449 01de 0021     		movs	r1, #0
 1450 01e0 1020     		movs	r0, #16
 1451 01e2 FFF7FEFF 		bl	lcd_write_register
 1452              	.LVL127:
 495:lcd.c         ****          lcd_write_register(0x0011,0x0007);
 1453              		.loc 1 495 10 view .LVU302
 1454 01e6 0721     		movs	r1, #7
 1455 01e8 1120     		movs	r0, #17
 1456 01ea FFF7FEFF 		bl	lcd_write_register
 1457              	.LVL128:
 496:lcd.c         ****          lcd_write_register(0x0012,0x0000);
 1458              		.loc 1 496 10 view .LVU303
 1459 01ee 0021     		movs	r1, #0
 1460 01f0 1220     		movs	r0, #18
 1461 01f2 FFF7FEFF 		bl	lcd_write_register
 1462              	.LVL129:
 497:lcd.c         ****          lcd_write_register(0x0013,0x0000);
 1463              		.loc 1 497 10 view .LVU304
 1464 01f6 0021     		movs	r1, #0
 1465 01f8 1320     		movs	r0, #19
 1466 01fa FFF7FEFF 		bl	lcd_write_register
 1467              	.LVL130:
 498:lcd.c         ****          lcd_delay(50);
 1468              		.loc 1 498 10 view .LVU305
 1469              	.LBB62:
 1470              	.LBI62:
 402:lcd.c         **** {
 1471              		.loc 1 402 6 view .LVU306
 1472              	.LBB63:
 404:lcd.c         **** }
 1473              		.loc 1 404 7 view .LVU307
 1474 01fe 3220     		movs	r0, #50
 1475 0200 FFF7FEFF 		bl	wait_ms
 1476              	.LVL131:
 404:lcd.c         **** }
 1477              		.loc 1 404 7 is_stmt 0 view .LVU308
 1478              	.LBE63:
 1479              	.LBE62:
 499:lcd.c         ****          lcd_write_register(0x0010,0x1590);
 1480              		.loc 1 499 10 is_stmt 1 view .LVU309
 1481 0204 41F29051 		movw	r1, #5520
 1482 0208 1020     		movs	r0, #16
 1483 020a FFF7FEFF 		bl	lcd_write_register
 1484              	.LVL132:
 500:lcd.c         ****          lcd_write_register(0x0011,0x0227);
 1485              		.loc 1 500 10 view .LVU310
 1486 020e 40F22721 		movw	r1, #551
 1487 0212 1120     		movs	r0, #17
 1488 0214 FFF7FEFF 		bl	lcd_write_register
 1489              	.LVL133:
 501:lcd.c         ****          lcd_delay(50);
 1490              		.loc 1 501 10 view .LVU311
 1491              	.LBB64:
 1492              	.LBI64:
 402:lcd.c         **** {
 1493              		.loc 1 402 6 view .LVU312
 1494              	.LBB65:
 404:lcd.c         **** }
 1495              		.loc 1 404 7 view .LVU313
 1496 0218 3220     		movs	r0, #50
 1497 021a FFF7FEFF 		bl	wait_ms
 1498              	.LVL134:
 404:lcd.c         **** }
 1499              		.loc 1 404 7 is_stmt 0 view .LVU314
 1500              	.LBE65:
 1501              	.LBE64:
 502:lcd.c         ****          lcd_write_register(0x0012,0x009c);
 1502              		.loc 1 502 10 is_stmt 1 view .LVU315
 1503 021e 9C21     		movs	r1, #156
 1504 0220 1220     		movs	r0, #18
 1505 0222 FFF7FEFF 		bl	lcd_write_register
 1506              	.LVL135:
 503:lcd.c         ****          lcd_delay(50);
 1507              		.loc 1 503 10 view .LVU316
 1508              	.LBB66:
 1509              	.LBI66:
 402:lcd.c         **** {
 1510              		.loc 1 402 6 view .LVU317
 1511              	.LBB67:
 404:lcd.c         **** }
 1512              		.loc 1 404 7 view .LVU318
 1513 0226 3220     		movs	r0, #50
 1514 0228 FFF7FEFF 		bl	wait_ms
 1515              	.LVL136:
 404:lcd.c         **** }
 1516              		.loc 1 404 7 is_stmt 0 view .LVU319
 1517              	.LBE67:
 1518              	.LBE66:
 504:lcd.c         ****          lcd_write_register(0x0013,0x1900);
 1519              		.loc 1 504 10 is_stmt 1 view .LVU320
 1520 022c 4FF4C851 		mov	r1, #6400
 1521 0230 1320     		movs	r0, #19
 1522 0232 FFF7FEFF 		bl	lcd_write_register
 1523              	.LVL137:
 505:lcd.c         ****          lcd_write_register(0x0029,0x0023);
 1524              		.loc 1 505 10 view .LVU321
 1525 0236 2321     		movs	r1, #35
 1526 0238 2920     		movs	r0, #41
 1527 023a FFF7FEFF 		bl	lcd_write_register
 1528              	.LVL138:
 506:lcd.c         ****          lcd_write_register(0x002b,0x000e);
 1529              		.loc 1 506 10 view .LVU322
 1530 023e 0E21     		movs	r1, #14
 1531 0240 2B20     		movs	r0, #43
 1532 0242 FFF7FEFF 		bl	lcd_write_register
 1533              	.LVL139:
 507:lcd.c         ****          lcd_delay(50);
 1534              		.loc 1 507 10 view .LVU323
 1535              	.LBB68:
 1536              	.LBI68:
 402:lcd.c         **** {
 1537              		.loc 1 402 6 view .LVU324
 1538              	.LBB69:
 404:lcd.c         **** }
 1539              		.loc 1 404 7 view .LVU325
 1540 0246 3220     		movs	r0, #50
 1541 0248 FFF7FEFF 		bl	wait_ms
 1542              	.LVL140:
 404:lcd.c         **** }
 1543              		.loc 1 404 7 is_stmt 0 view .LVU326
 1544              	.LBE69:
 1545              	.LBE68:
 508:lcd.c         ****          lcd_write_register(0x0020,0x0000);
 1546              		.loc 1 508 10 is_stmt 1 view .LVU327
 1547 024c 0021     		movs	r1, #0
 1548 024e 2020     		movs	r0, #32
 1549 0250 FFF7FEFF 		bl	lcd_write_register
 1550              	.LVL141:
 509:lcd.c         ****          lcd_write_register(0x0021,0x013f);
 1551              		.loc 1 509 10 view .LVU328
 1552 0254 40F23F11 		movw	r1, #319
 1553 0258 2120     		movs	r0, #33
 1554 025a FFF7FEFF 		bl	lcd_write_register
 1555              	.LVL142:
 510:lcd.c         **** 	 lcd_delay(50);
 1556              		.loc 1 510 3 view .LVU329
 1557              	.LBB70:
 1558              	.LBI70:
 402:lcd.c         **** {
 1559              		.loc 1 402 6 view .LVU330
 1560              	.LBB71:
 404:lcd.c         **** }
 1561              		.loc 1 404 7 view .LVU331
 1562 025e 3220     		movs	r0, #50
 1563 0260 FFF7FEFF 		bl	wait_ms
 1564              	.LVL143:
 404:lcd.c         **** }
 1565              		.loc 1 404 7 is_stmt 0 view .LVU332
 1566              	.LBE71:
 1567              	.LBE70:
 511:lcd.c         ****          lcd_write_register(0x0030,0x0007);
 1568              		.loc 1 511 10 is_stmt 1 view .LVU333
 1569 0264 0721     		movs	r1, #7
 1570 0266 3020     		movs	r0, #48
 1571 0268 FFF7FEFF 		bl	lcd_write_register
 1572              	.LVL144:
 512:lcd.c         ****          lcd_write_register(0x0031,0x0707);
 1573              		.loc 1 512 10 view .LVU334
 1574 026c 40F20771 		movw	r1, #1799
 1575 0270 3120     		movs	r0, #49
 1576 0272 FFF7FEFF 		bl	lcd_write_register
 1577              	.LVL145:
 513:lcd.c         ****          lcd_write_register(0x0032,0x0006);
 1578              		.loc 1 513 10 view .LVU335
 1579 0276 0621     		movs	r1, #6
 1580 0278 3220     		movs	r0, #50
 1581 027a FFF7FEFF 		bl	lcd_write_register
 1582              	.LVL146:
 514:lcd.c         ****          lcd_write_register(0x0035,0x0704);
 1583              		.loc 1 514 10 view .LVU336
 1584 027e 40F20471 		movw	r1, #1796
 1585 0282 3520     		movs	r0, #53
 1586 0284 FFF7FEFF 		bl	lcd_write_register
 1587              	.LVL147:
 515:lcd.c         ****          lcd_write_register(0x0036,0x1f04);
 1588              		.loc 1 515 10 view .LVU337
 1589 0288 41F60471 		movw	r1, #7940
 1590 028c 3620     		movs	r0, #54
 1591 028e FFF7FEFF 		bl	lcd_write_register
 1592              	.LVL148:
 516:lcd.c         ****          lcd_write_register(0x0037,0x0004);
 1593              		.loc 1 516 10 view .LVU338
 1594 0292 0421     		movs	r1, #4
 1595 0294 3720     		movs	r0, #55
 1596 0296 FFF7FEFF 		bl	lcd_write_register
 1597              	.LVL149:
 517:lcd.c         ****          lcd_write_register(0x0038,0x0000);
 1598              		.loc 1 517 10 view .LVU339
 1599 029a 0021     		movs	r1, #0
 1600 029c 3820     		movs	r0, #56
 1601 029e FFF7FEFF 		bl	lcd_write_register
 1602              	.LVL150:
 518:lcd.c         ****          lcd_write_register(0x0039,0x0706);
 1603              		.loc 1 518 10 view .LVU340
 1604 02a2 40F20671 		movw	r1, #1798
 1605 02a6 3920     		movs	r0, #57
 1606 02a8 FFF7FEFF 		bl	lcd_write_register
 1607              	.LVL151:
 519:lcd.c         ****          lcd_write_register(0x003c,0x0701);
 1608              		.loc 1 519 10 view .LVU341
 1609 02ac 40F20171 		movw	r1, #1793
 1610 02b0 3C20     		movs	r0, #60
 1611 02b2 FFF7FEFF 		bl	lcd_write_register
 1612              	.LVL152:
 520:lcd.c         ****          lcd_write_register(0x003d,0x000f);
 1613              		.loc 1 520 10 view .LVU342
 1614 02b6 0F21     		movs	r1, #15
 1615 02b8 3D20     		movs	r0, #61
 1616 02ba FFF7FEFF 		bl	lcd_write_register
 1617              	.LVL153:
 521:lcd.c         ****          lcd_delay(50);
 1618              		.loc 1 521 10 view .LVU343
 1619              	.LBB72:
 1620              	.LBI72:
 402:lcd.c         **** {
 1621              		.loc 1 402 6 view .LVU344
 1622              	.LBB73:
 404:lcd.c         **** }
 1623              		.loc 1 404 7 view .LVU345
 1624 02be 3220     		movs	r0, #50
 1625 02c0 FFF7FEFF 		bl	wait_ms
 1626              	.LVL154:
 404:lcd.c         **** }
 1627              		.loc 1 404 7 is_stmt 0 view .LVU346
 1628              	.LBE73:
 1629              	.LBE72:
 522:lcd.c         ****          lcd_write_register(0x0050,0x0000);
 1630              		.loc 1 522 10 is_stmt 1 view .LVU347
 1631 02c4 0021     		movs	r1, #0
 1632 02c6 5020     		movs	r0, #80
 1633 02c8 FFF7FEFF 		bl	lcd_write_register
 1634              	.LVL155:
 523:lcd.c         ****          lcd_write_register(0x0051,0x00ef);
 1635              		.loc 1 523 10 view .LVU348
 1636 02cc EF21     		movs	r1, #239
 1637 02ce 5120     		movs	r0, #81
 1638 02d0 FFF7FEFF 		bl	lcd_write_register
 1639              	.LVL156:
 524:lcd.c         ****          lcd_write_register(0x0052,0x0000);
 1640              		.loc 1 524 10 view .LVU349
 1641 02d4 0021     		movs	r1, #0
 1642 02d6 5220     		movs	r0, #82
 1643 02d8 FFF7FEFF 		bl	lcd_write_register
 1644              	.LVL157:
 525:lcd.c         ****          lcd_write_register(0x0053,0x013f);
 1645              		.loc 1 525 10 view .LVU350
 1646 02dc 40F23F11 		movw	r1, #319
 1647 02e0 5320     		movs	r0, #83
 1648 02e2 FFF7FEFF 		bl	lcd_write_register
 1649              	.LVL158:
 526:lcd.c         ****          lcd_write_register(0x0060,0xa700);
 1650              		.loc 1 526 10 view .LVU351
 1651 02e6 4FF42741 		mov	r1, #42752
 1652 02ea 6020     		movs	r0, #96
 1653 02ec FFF7FEFF 		bl	lcd_write_register
 1654              	.LVL159:
 527:lcd.c         ****          lcd_write_register(0x0061,0x0001);
 1655              		.loc 1 527 10 view .LVU352
 1656 02f0 0121     		movs	r1, #1
 1657 02f2 6120     		movs	r0, #97
 1658 02f4 FFF7FEFF 		bl	lcd_write_register
 1659              	.LVL160:
 528:lcd.c         ****          lcd_write_register(0x006a,0x0000);
 1660              		.loc 1 528 10 view .LVU353
 1661 02f8 0021     		movs	r1, #0
 1662 02fa 6A20     		movs	r0, #106
 1663 02fc FFF7FEFF 		bl	lcd_write_register
 1664              	.LVL161:
 529:lcd.c         ****          lcd_write_register(0x0080,0x0000);
 1665              		.loc 1 529 10 view .LVU354
 1666 0300 0021     		movs	r1, #0
 1667 0302 8020     		movs	r0, #128
 1668 0304 FFF7FEFF 		bl	lcd_write_register
 1669              	.LVL162:
 530:lcd.c         ****          lcd_write_register(0x0081,0x0000);
 1670              		.loc 1 530 10 view .LVU355
 1671 0308 0021     		movs	r1, #0
 1672 030a 8120     		movs	r0, #129
 1673 030c FFF7FEFF 		bl	lcd_write_register
 1674              	.LVL163:
 531:lcd.c         ****          lcd_write_register(0x0082,0x0000);
 1675              		.loc 1 531 10 view .LVU356
 1676 0310 0021     		movs	r1, #0
 1677 0312 8220     		movs	r0, #130
 1678 0314 FFF7FEFF 		bl	lcd_write_register
 1679              	.LVL164:
 532:lcd.c         ****          lcd_write_register(0x0083,0x0000);
 1680              		.loc 1 532 10 view .LVU357
 1681 0318 0021     		movs	r1, #0
 1682 031a 8320     		movs	r0, #131
 1683 031c FFF7FEFF 		bl	lcd_write_register
 1684              	.LVL165:
 533:lcd.c         ****          lcd_write_register(0x0084,0x0000);
 1685              		.loc 1 533 10 view .LVU358
 1686 0320 0021     		movs	r1, #0
 1687 0322 8420     		movs	r0, #132
 1688 0324 FFF7FEFF 		bl	lcd_write_register
 1689              	.LVL166:
 534:lcd.c         ****          lcd_write_register(0x0085,0x0000);
 1690              		.loc 1 534 10 view .LVU359
 1691 0328 0021     		movs	r1, #0
 1692 032a 8520     		movs	r0, #133
 1693 032c FFF7FEFF 		bl	lcd_write_register
 1694              	.LVL167:
 535:lcd.c         ****          lcd_write_register(0x0090,0x0010);
 1695              		.loc 1 535 10 view .LVU360
 1696 0330 1021     		movs	r1, #16
 1697 0332 9020     		movs	r0, #144
 1698 0334 FFF7FEFF 		bl	lcd_write_register
 1699              	.LVL168:
 536:lcd.c         ****          lcd_write_register(0x0092,0x0000);
 1700              		.loc 1 536 10 view .LVU361
 1701 0338 0021     		movs	r1, #0
 1702 033a 9220     		movs	r0, #146
 1703 033c FFF7FEFF 		bl	lcd_write_register
 1704              	.LVL169:
 537:lcd.c         ****          lcd_write_register(0x0093,0x0003);
 1705              		.loc 1 537 10 view .LVU362
 1706 0340 0321     		movs	r1, #3
 1707 0342 9320     		movs	r0, #147
 1708 0344 FFF7FEFF 		bl	lcd_write_register
 1709              	.LVL170:
 538:lcd.c         ****          lcd_write_register(0x0095,0x0110);
 1710              		.loc 1 538 10 view .LVU363
 1711 0348 4FF48871 		mov	r1, #272
 1712 034c 9520     		movs	r0, #149
 1713 034e FFF7FEFF 		bl	lcd_write_register
 1714              	.LVL171:
 539:lcd.c         ****          lcd_write_register(0x0097,0x0000);
 1715              		.loc 1 539 10 view .LVU364
 1716 0352 0021     		movs	r1, #0
 1717 0354 9720     		movs	r0, #151
 1718 0356 FFF7FEFF 		bl	lcd_write_register
 1719              	.LVL172:
 540:lcd.c         ****          lcd_write_register(0x0098,0x0000);
 1720              		.loc 1 540 10 view .LVU365
 1721 035a 0021     		movs	r1, #0
 1722 035c 9820     		movs	r0, #152
 1723 035e FFF7FEFF 		bl	lcd_write_register
 1724              	.LVL173:
 541:lcd.c         ****          lcd_write_register(0x0007,0x0133);
 1725              		.loc 1 541 10 view .LVU366
 1726 0362 40F23311 		movw	r1, #307
 1727 0366 0720     		movs	r0, #7
 1728 0368 FFF7FEFF 		bl	lcd_write_register
 1729              	.LVL174:
 542:lcd.c         ****          lcd_write_register(0x0020,0x0000);
 1730              		.loc 1 542 10 view .LVU367
 1731 036c 0021     		movs	r1, #0
 1732 036e 2020     		movs	r0, #32
 1733 0370 FFF7FEFF 		bl	lcd_write_register
 1734              	.LVL175:
 543:lcd.c         ****          lcd_write_register(0x0021,0x013f);
 1735              		.loc 1 543 10 view .LVU368
 1736 0374 40F23F11 		movw	r1, #319
 1737 0378 2120     		movs	r0, #33
 1738              	.L77:
 544:lcd.c         ****       }	else if ((device_code == 0x9320) || (device_code == 0x9300)) {
 545:lcd.c         **** 	 lcd_write_register(0x00,0x0000);
 546:lcd.c         **** 	 lcd_write_register(0x01,0x0100);
 547:lcd.c         **** 	 lcd_write_register(0x02,0x0700);
 548:lcd.c         **** 	 lcd_write_register(0x03,0x1030);
 549:lcd.c         **** 	 lcd_write_register(0x04,0x0000);
 550:lcd.c         **** 	 lcd_write_register(0x08,0x0202);
 551:lcd.c         **** 	 lcd_write_register(0x09,0x0000);
 552:lcd.c         **** 	 lcd_write_register(0x0a,0x0000);
 553:lcd.c         **** 	 lcd_write_register(0x0c,(1 << 0));
 554:lcd.c         **** 	 lcd_write_register(0x0d,0x0000);
 555:lcd.c         **** 	 lcd_write_register(0x0f,0x0000);
 556:lcd.c         **** 	 lcd_delay(50);
 557:lcd.c         **** 	 lcd_write_register(0x07,0x0101);
 558:lcd.c         **** 	 lcd_delay(50);
 559:lcd.c         **** 	 lcd_write_register(0x10,(1 << 12) | (0 << 8) | (1 << 7) | (1 << 6) | (0 << 4));
 560:lcd.c         **** 	 lcd_write_register(0x11,0x0007);
 561:lcd.c         **** 	 lcd_write_register(0x12,(1 << 8) | (1 << 4) | (0 << 0));
 562:lcd.c         **** 	 lcd_write_register(0x13,0x0b00);
 563:lcd.c         **** 	 lcd_write_register(0x29,0x0000);
 564:lcd.c         **** 	 lcd_write_register(0x2b,(1 << 14) | (1 << 4));
 565:lcd.c         **** 	 lcd_write_register(0x50,0);
 566:lcd.c         **** 	 lcd_write_register(0x51,239);
 567:lcd.c         **** 	 lcd_write_register(0x52,0);
 568:lcd.c         **** 	 lcd_write_register(0x53,319);
 569:lcd.c         **** 	 lcd_write_register(0x60,0x2700);
 570:lcd.c         **** 	 lcd_write_register(0x61,0x0001);
 571:lcd.c         **** 	 lcd_write_register(0x6a,0x0000);
 572:lcd.c         **** 	 lcd_write_register(0x80,0x0000);
 573:lcd.c         **** 	 lcd_write_register(0x81,0x0000);
 574:lcd.c         **** 	 lcd_write_register(0x82,0x0000);
 575:lcd.c         **** 	 lcd_write_register(0x83,0x0000);
 576:lcd.c         **** 	 lcd_write_register(0x84,0x0000);
 577:lcd.c         **** 	 lcd_write_register(0x85,0x0000);
 578:lcd.c         **** 	 lcd_write_register(0x90,(0 << 7) | (16 << 0));
 579:lcd.c         **** 	 lcd_write_register(0x92,0x0000);
 580:lcd.c         **** 	 lcd_write_register(0x93,0x0001);
 581:lcd.c         **** 	 lcd_write_register(0x95,0x0110);
 582:lcd.c         **** 	 lcd_write_register(0x97,(0 << 8));
 583:lcd.c         **** 	 lcd_write_register(0x98,0x0000);
 584:lcd.c         **** 	 lcd_write_register(0x07,0x0173);
 585:lcd.c         ****       }	else if (device_code == 0x1505)	{
 586:lcd.c         ****          lcd_write_register(0x0007,0x0000);
 587:lcd.c         ****          lcd_delay(50);
 588:lcd.c         ****          lcd_write_register(0x0012,0x011C);
 589:lcd.c         ****          lcd_write_register(0x00A4,0x0001);
 590:lcd.c         ****          lcd_write_register(0x0008,0x000F);
 591:lcd.c         ****          lcd_write_register(0x000A,0x0008);
 592:lcd.c         ****          lcd_write_register(0x000D,0x0008);
 593:lcd.c         ****          lcd_write_register(0x0030,0x0707);
 594:lcd.c         ****          lcd_write_register(0x0031,0x0007);
 595:lcd.c         ****          lcd_write_register(0x0032,0x0603);
 596:lcd.c         ****          lcd_write_register(0x0033,0x0700);
 597:lcd.c         ****          lcd_write_register(0x0034,0x0202);
 598:lcd.c         ****          lcd_write_register(0x0035,0x0002);
 599:lcd.c         ****          lcd_write_register(0x0036,0x1F0F);
 600:lcd.c         ****          lcd_write_register(0x0037,0x0707);
 601:lcd.c         ****          lcd_write_register(0x0038,0x0000);
 602:lcd.c         ****          lcd_write_register(0x0039,0x0000);
 603:lcd.c         ****          lcd_write_register(0x003A,0x0707);
 604:lcd.c         ****          lcd_write_register(0x003B,0x0000);
 605:lcd.c         ****          lcd_write_register(0x003C,0x0007);
 606:lcd.c         ****          lcd_write_register(0x003D,0x0000);
 607:lcd.c         ****          lcd_delay(50);
 608:lcd.c         ****          lcd_write_register(0x0007,0x0001);
 609:lcd.c         ****          lcd_write_register(0x0017,0x0001);
 610:lcd.c         ****          lcd_delay(50);
 611:lcd.c         ****          lcd_write_register(0x0010,0x17A0);
 612:lcd.c         ****          lcd_write_register(0x0011,0x0217);
 613:lcd.c         ****          lcd_write_register(0x0012,0x011E);
 614:lcd.c         ****          lcd_write_register(0x0013,0x0F00);
 615:lcd.c         ****          lcd_write_register(0x002A,0x0000);
 616:lcd.c         ****          lcd_write_register(0x0029,0x000A);
 617:lcd.c         ****          lcd_write_register(0x0012,0x013E);
 618:lcd.c         ****          lcd_write_register(0x0050,0x0000);
 619:lcd.c         ****          lcd_write_register(0x0051,0x00EF);
 620:lcd.c         ****          lcd_write_register(0x0052,0x0000);
 621:lcd.c         ****          lcd_write_register(0x0053,0x013F);
 622:lcd.c         ****          lcd_write_register(0x0060,0x2700);
 623:lcd.c         ****          lcd_write_register(0x0061,0x0001);
 624:lcd.c         ****          lcd_write_register(0x006A,0x0000);
 625:lcd.c         ****          lcd_write_register(0x0080,0x0000);
 626:lcd.c         ****          lcd_write_register(0x0081,0x0000);
 627:lcd.c         ****          lcd_write_register(0x0082,0x0000);
 628:lcd.c         ****          lcd_write_register(0x0083,0x0000);
 629:lcd.c         ****          lcd_write_register(0x0084,0x0000);
 630:lcd.c         ****          lcd_write_register(0x0085,0x0000);
 631:lcd.c         ****          lcd_write_register(0x0090,0x0013);
 632:lcd.c         ****          lcd_write_register(0x0092,0x0300);
 633:lcd.c         ****          lcd_write_register(0x0093,0x0005);
 634:lcd.c         ****          lcd_write_register(0x0095,0x0000);
 635:lcd.c         ****          lcd_write_register(0x0097,0x0000);
 636:lcd.c         ****          lcd_write_register(0x0098,0x0000);
 637:lcd.c         ****          lcd_write_register(0x0001,0x0100);
 638:lcd.c         ****          lcd_write_register(0x0002,0x0700);
 639:lcd.c         ****          lcd_write_register(0x0003,0x1030);
 640:lcd.c         ****          lcd_write_register(0x0004,0x0000);
 641:lcd.c         ****          lcd_write_register(0x000C,0x0000);
 642:lcd.c         ****          lcd_write_register(0x000F,0x0000);
 643:lcd.c         ****          lcd_write_register(0x0020,0x0000);
 644:lcd.c         ****          lcd_write_register(0x0021,0x0000);
 645:lcd.c         ****          lcd_write_register(0x0007,0x0021);
 646:lcd.c         ****          lcd_delay(200);
 647:lcd.c         ****          lcd_write_register(0x0007,0x0061);
 648:lcd.c         ****          lcd_delay(200);
 649:lcd.c         ****          lcd_write_register(0x0007,0x0173);
 650:lcd.c         ****          lcd_delay(200);
 651:lcd.c         ****       }	else if (device_code == 0x8989) {
 652:lcd.c         **** 	 lcd_write_register(0x0000,0x0001);
 653:lcd.c         ****     	 lcd_write_register(0x0003,0xA8A4);
 654:lcd.c         ****     	 lcd_write_register(0x000C,0x0000);
 655:lcd.c         ****     	 lcd_write_register(0x000D,0x080C);
 656:lcd.c         ****     	 lcd_write_register(0x000E,0x2B00);
 657:lcd.c         ****     	 lcd_write_register(0x001E,0x00B0);
 658:lcd.c         ****     	 lcd_write_register(0x0001,0x2B3F);
 659:lcd.c         ****     	 lcd_write_register(0x0002,0x0600);
 660:lcd.c         ****     	 lcd_write_register(0x0010,0x0000);
 661:lcd.c         ****     	 lcd_write_register(0x0011,0x6070);
 662:lcd.c         ****     	 lcd_write_register(0x0005,0x0000);
 663:lcd.c         ****     	 lcd_write_register(0x0006,0x0000);
 664:lcd.c         ****     	 lcd_write_register(0x0016,0xEF1C);
 665:lcd.c         ****     	 lcd_write_register(0x0017,0x0003);
 666:lcd.c         ****     	 lcd_write_register(0x0007,0x0233);
 667:lcd.c         ****     	 lcd_write_register(0x000B,0x0000);
 668:lcd.c         ****     	 lcd_write_register(0x000F,0x0000);
 669:lcd.c         ****     	 lcd_write_register(0x0041,0x0000);
 670:lcd.c         ****     	 lcd_write_register(0x0042,0x0000);
 671:lcd.c         ****     	 lcd_write_register(0x0048,0x0000);
 672:lcd.c         ****     	 lcd_write_register(0x0049,0x013F);
 673:lcd.c         ****     	 lcd_write_register(0x004A,0x0000);
 674:lcd.c         ****     	 lcd_write_register(0x004B,0x0000);
 675:lcd.c         ****     	 lcd_write_register(0x0044,0xEF00);
 676:lcd.c         ****     	 lcd_write_register(0x0045,0x0000);
 677:lcd.c         ****     	 lcd_write_register(0x0046,0x013F);
 678:lcd.c         ****     	 lcd_write_register(0x0030,0x0707);
 679:lcd.c         ****     	 lcd_write_register(0x0031,0x0204);
 680:lcd.c         ****     	 lcd_write_register(0x0032,0x0204);
 681:lcd.c         ****     	 lcd_write_register(0x0033,0x0502);
 682:lcd.c         ****     	 lcd_write_register(0x0034,0x0507);
 683:lcd.c         ****     	 lcd_write_register(0x0035,0x0204);
 684:lcd.c         ****     	 lcd_write_register(0x0036,0x0204);
 685:lcd.c         ****     	 lcd_write_register(0x0037,0x0502);
 686:lcd.c         ****     	 lcd_write_register(0x003A,0x0302);
 687:lcd.c         ****     	 lcd_write_register(0x003B,0x0302);
 688:lcd.c         ****     	 lcd_write_register(0x0023,0x0000);
 689:lcd.c         ****     	 lcd_write_register(0x0024,0x0000);
 690:lcd.c         ****     	 lcd_write_register(0x0025,0x8000);
 691:lcd.c         ****     	 lcd_write_register(0x004f,0);
 692:lcd.c         ****     	 lcd_write_register(0x004e,0);
 693:lcd.c         ****       }	else if (device_code == 0x8999) {
 694:lcd.c         **** 	 /************* Start Initial Sequence **********/
 695:lcd.c         **** 	 lcd_write_register(0x00,0x0001);
 696:lcd.c         **** 	 lcd_write_register(0x01,0x3B3F);
 697:lcd.c         **** 	 lcd_write_register(0x02,0x0600);
 698:lcd.c         **** 	 /************* Power control setup ***********/
 699:lcd.c         **** 	 lcd_write_register(0x0C,0x0007);
 700:lcd.c         **** 	 lcd_write_register(0x0D,0x0006);
 701:lcd.c         **** 	 lcd_write_register(0x0E,0x3200);
 702:lcd.c         **** 	 lcd_write_register(0x1E,0x00BB);
 703:lcd.c         **** 	 lcd_write_register(0x03,0x6A64);
 704:lcd.c         **** 	 //************ RAM position control **********/
 705:lcd.c         **** 	 lcd_write_register(0x0F,0x0000);
 706:lcd.c         **** 	 lcd_write_register(0x44,0xEF00);
 707:lcd.c         **** 	 lcd_write_register(0x45,0x0000);
 708:lcd.c         **** 	 lcd_write_register(0x46,0x013F);
 709:lcd.c         **** 	 /************* Adjust the Gamma Curve ********/
 710:lcd.c         **** 	 lcd_write_register(0x30,0x0000);
 711:lcd.c         **** 	 lcd_write_register(0x31,0x0706);
 712:lcd.c         **** 	 lcd_write_register(0x32,0x0206);
 713:lcd.c         **** 	 lcd_write_register(0x33,0x0300);
 714:lcd.c         **** 	 lcd_write_register(0x34,0x0002);
 715:lcd.c         **** 	 lcd_write_register(0x35,0x0000);
 716:lcd.c         **** 	 lcd_write_register(0x36,0x0707);
 717:lcd.c         **** 	 lcd_write_register(0x37,0x0200);
 718:lcd.c         **** 	 lcd_write_register(0x3A,0x0908);
 719:lcd.c         **** 	 lcd_write_register(0x3B,0x0F0D);
 720:lcd.c         **** 	 /************* Special command **************/
 721:lcd.c         **** 	 lcd_write_register(0x28,0x0006);
 722:lcd.c         **** 	 lcd_write_register(0x2F,0x12EB);
 723:lcd.c         **** 	 lcd_write_register(0x26,0x7000);
 724:lcd.c         **** 	 lcd_write_register(0x20,0xB0E3);
 725:lcd.c         **** 	 lcd_write_register(0x27,0x0044);
 726:lcd.c         **** 	 lcd_write_register(0x2E,0x7E45);
 727:lcd.c         **** 	 /************* Turn On display **************/
 728:lcd.c         **** 	 lcd_write_register(0x10,0x0000);
 729:lcd.c         **** 	 lcd_delay(30);
 730:lcd.c         **** 	 lcd_write_register(0x11,0x6870);
 731:lcd.c         **** 	 lcd_write_register(0x07,0x0033);
 1739              		.loc 1 731 3 is_stmt 0 view .LVU369
 1740 037a FFF7FEFF 		bl	lcd_write_register
 1741              	.LVL176:
 1742 037e E2E1     		b	.L73
 1743              	.L80:
 1744              		.align	2
 1745              	.L79:
 1746 0380 00000000 		.word	maxx
 1747 0384 00000000 		.word	maxy
 1748 0388 00000000 		.word	ax
 1749 038c 00000000 		.word	ay
 1750 0390 00180140 		.word	1073813504
 1751 0394 00000000 		.word	page
 1752 0398 00000000 		.word	eng_mode
 1753 039c 00000000 		.word	hangul_mode
 1754 03a0 00000000 		.word	max_col
 1755 03a4 00000000 		.word	max_row
 1756 03a8 00000000 		.word	foreground_color
 1757 03ac 00000000 		.word	background_color
 1758 03b0 00140140 		.word	1073812480
 1759 03b4 00000000 		.word	device_code
 1760              	.L72:
 544:lcd.c         ****       }	else if ((device_code == 0x9320) || (device_code == 0x9300)) {
 1761              		.loc 1 544 14 is_stmt 1 discriminator 1 view .LVU370
 544:lcd.c         ****       }	else if ((device_code == 0x9320) || (device_code == 0x9300)) {
 1762              		.loc 1 544 42 is_stmt 0 discriminator 1 view .LVU371
 1763 03b8 20F02003 		bic	r3, r0, #32
 1764 03bc B3F5134F 		cmp	r3, #37632
 1765 03c0 40F0AA80 		bne	.L74
 545:lcd.c         **** 	 lcd_write_register(0x01,0x0100);
 1766              		.loc 1 545 3 is_stmt 1 view .LVU372
 1767 03c4 2146     		mov	r1, r4
 1768 03c6 2046     		mov	r0, r4
 1769 03c8 FFF7FEFF 		bl	lcd_write_register
 1770              	.LVL177:
 546:lcd.c         **** 	 lcd_write_register(0x02,0x0700);
 1771              		.loc 1 546 3 view .LVU373
 1772 03cc 4FF48071 		mov	r1, #256
 1773 03d0 0120     		movs	r0, #1
 1774 03d2 FFF7FEFF 		bl	lcd_write_register
 1775              	.LVL178:
 547:lcd.c         **** 	 lcd_write_register(0x03,0x1030);
 1776              		.loc 1 547 3 view .LVU374
 1777 03d6 4FF4E061 		mov	r1, #1792
 1778 03da 0220     		movs	r0, #2
 1779 03dc FFF7FEFF 		bl	lcd_write_register
 1780              	.LVL179:
 548:lcd.c         **** 	 lcd_write_register(0x04,0x0000);
 1781              		.loc 1 548 3 view .LVU375
 1782 03e0 41F23001 		movw	r1, #4144
 1783 03e4 0320     		movs	r0, #3
 1784 03e6 FFF7FEFF 		bl	lcd_write_register
 1785              	.LVL180:
 549:lcd.c         **** 	 lcd_write_register(0x08,0x0202);
 1786              		.loc 1 549 3 view .LVU376
 1787 03ea 2146     		mov	r1, r4
 1788 03ec 0420     		movs	r0, #4
 1789 03ee FFF7FEFF 		bl	lcd_write_register
 1790              	.LVL181:
 550:lcd.c         **** 	 lcd_write_register(0x09,0x0000);
 1791              		.loc 1 550 3 view .LVU377
 1792 03f2 40F20221 		movw	r1, #514
 1793 03f6 0820     		movs	r0, #8
 1794 03f8 FFF7FEFF 		bl	lcd_write_register
 1795              	.LVL182:
 551:lcd.c         **** 	 lcd_write_register(0x0a,0x0000);
 1796              		.loc 1 551 3 view .LVU378
 1797 03fc 2146     		mov	r1, r4
 1798 03fe 0920     		movs	r0, #9
 1799 0400 FFF7FEFF 		bl	lcd_write_register
 1800              	.LVL183:
 552:lcd.c         **** 	 lcd_write_register(0x0c,(1 << 0));
 1801              		.loc 1 552 3 view .LVU379
 1802 0404 2146     		mov	r1, r4
 1803 0406 0A20     		movs	r0, #10
 1804 0408 FFF7FEFF 		bl	lcd_write_register
 1805              	.LVL184:
 553:lcd.c         **** 	 lcd_write_register(0x0d,0x0000);
 1806              		.loc 1 553 3 view .LVU380
 1807 040c 0121     		movs	r1, #1
 1808 040e 0C20     		movs	r0, #12
 1809 0410 FFF7FEFF 		bl	lcd_write_register
 1810              	.LVL185:
 554:lcd.c         **** 	 lcd_write_register(0x0f,0x0000);
 1811              		.loc 1 554 3 view .LVU381
 1812 0414 2146     		mov	r1, r4
 1813 0416 0D20     		movs	r0, #13
 1814 0418 FFF7FEFF 		bl	lcd_write_register
 1815              	.LVL186:
 555:lcd.c         **** 	 lcd_delay(50);
 1816              		.loc 1 555 3 view .LVU382
 1817 041c 2146     		mov	r1, r4
 1818 041e 0F20     		movs	r0, #15
 1819 0420 FFF7FEFF 		bl	lcd_write_register
 1820              	.LVL187:
 556:lcd.c         **** 	 lcd_write_register(0x07,0x0101);
 1821              		.loc 1 556 3 view .LVU383
 1822              	.LBB74:
 1823              	.LBI74:
 402:lcd.c         **** {
 1824              		.loc 1 402 6 view .LVU384
 1825              	.LBB75:
 404:lcd.c         **** }
 1826              		.loc 1 404 7 view .LVU385
 1827 0424 3220     		movs	r0, #50
 1828 0426 FFF7FEFF 		bl	wait_ms
 1829              	.LVL188:
 404:lcd.c         **** }
 1830              		.loc 1 404 7 is_stmt 0 view .LVU386
 1831              	.LBE75:
 1832              	.LBE74:
 557:lcd.c         **** 	 lcd_delay(50);
 1833              		.loc 1 557 3 is_stmt 1 view .LVU387
 1834 042a 40F20111 		movw	r1, #257
 1835 042e 0720     		movs	r0, #7
 1836 0430 FFF7FEFF 		bl	lcd_write_register
 1837              	.LVL189:
 558:lcd.c         **** 	 lcd_write_register(0x10,(1 << 12) | (0 << 8) | (1 << 7) | (1 << 6) | (0 << 4));
 1838              		.loc 1 558 3 view .LVU388
 1839              	.LBB76:
 1840              	.LBI76:
 402:lcd.c         **** {
 1841              		.loc 1 402 6 view .LVU389
 1842              	.LBB77:
 404:lcd.c         **** }
 1843              		.loc 1 404 7 view .LVU390
 1844 0434 3220     		movs	r0, #50
 1845 0436 FFF7FEFF 		bl	wait_ms
 1846              	.LVL190:
 404:lcd.c         **** }
 1847              		.loc 1 404 7 is_stmt 0 view .LVU391
 1848              	.LBE77:
 1849              	.LBE76:
 559:lcd.c         **** 	 lcd_write_register(0x11,0x0007);
 1850              		.loc 1 559 3 is_stmt 1 view .LVU392
 1851 043a 4FF48651 		mov	r1, #4288
 1852 043e 1020     		movs	r0, #16
 1853 0440 FFF7FEFF 		bl	lcd_write_register
 1854              	.LVL191:
 560:lcd.c         **** 	 lcd_write_register(0x12,(1 << 8) | (1 << 4) | (0 << 0));
 1855              		.loc 1 560 3 view .LVU393
 1856 0444 0721     		movs	r1, #7
 1857 0446 1120     		movs	r0, #17
 1858 0448 FFF7FEFF 		bl	lcd_write_register
 1859              	.LVL192:
 561:lcd.c         **** 	 lcd_write_register(0x13,0x0b00);
 1860              		.loc 1 561 3 view .LVU394
 1861 044c 4FF48871 		mov	r1, #272
 1862 0450 1220     		movs	r0, #18
 1863 0452 FFF7FEFF 		bl	lcd_write_register
 1864              	.LVL193:
 562:lcd.c         **** 	 lcd_write_register(0x29,0x0000);
 1865              		.loc 1 562 3 view .LVU395
 1866 0456 4FF43061 		mov	r1, #2816
 1867 045a 1320     		movs	r0, #19
 1868 045c FFF7FEFF 		bl	lcd_write_register
 1869              	.LVL194:
 563:lcd.c         **** 	 lcd_write_register(0x2b,(1 << 14) | (1 << 4));
 1870              		.loc 1 563 3 view .LVU396
 1871 0460 2146     		mov	r1, r4
 1872 0462 2920     		movs	r0, #41
 1873 0464 FFF7FEFF 		bl	lcd_write_register
 1874              	.LVL195:
 564:lcd.c         **** 	 lcd_write_register(0x50,0);
 1875              		.loc 1 564 3 view .LVU397
 1876 0468 44F21001 		movw	r1, #16400
 1877 046c 2B20     		movs	r0, #43
 1878 046e FFF7FEFF 		bl	lcd_write_register
 1879              	.LVL196:
 565:lcd.c         **** 	 lcd_write_register(0x51,239);
 1880              		.loc 1 565 3 view .LVU398
 1881 0472 2146     		mov	r1, r4
 1882 0474 5020     		movs	r0, #80
 1883 0476 FFF7FEFF 		bl	lcd_write_register
 1884              	.LVL197:
 566:lcd.c         **** 	 lcd_write_register(0x52,0);
 1885              		.loc 1 566 3 view .LVU399
 1886 047a EF21     		movs	r1, #239
 1887 047c 5120     		movs	r0, #81
 1888 047e FFF7FEFF 		bl	lcd_write_register
 1889              	.LVL198:
 567:lcd.c         **** 	 lcd_write_register(0x53,319);
 1890              		.loc 1 567 3 view .LVU400
 1891 0482 2146     		mov	r1, r4
 1892 0484 5220     		movs	r0, #82
 1893 0486 FFF7FEFF 		bl	lcd_write_register
 1894              	.LVL199:
 568:lcd.c         **** 	 lcd_write_register(0x60,0x2700);
 1895              		.loc 1 568 3 view .LVU401
 1896 048a 40F23F11 		movw	r1, #319
 1897 048e 5320     		movs	r0, #83
 1898 0490 FFF7FEFF 		bl	lcd_write_register
 1899              	.LVL200:
 569:lcd.c         **** 	 lcd_write_register(0x61,0x0001);
 1900              		.loc 1 569 3 view .LVU402
 1901 0494 4FF41C51 		mov	r1, #9984
 1902 0498 6020     		movs	r0, #96
 1903 049a FFF7FEFF 		bl	lcd_write_register
 1904              	.LVL201:
 570:lcd.c         **** 	 lcd_write_register(0x6a,0x0000);
 1905              		.loc 1 570 3 view .LVU403
 1906 049e 0121     		movs	r1, #1
 1907 04a0 6120     		movs	r0, #97
 1908 04a2 FFF7FEFF 		bl	lcd_write_register
 1909              	.LVL202:
 571:lcd.c         **** 	 lcd_write_register(0x80,0x0000);
 1910              		.loc 1 571 3 view .LVU404
 1911 04a6 2146     		mov	r1, r4
 1912 04a8 6A20     		movs	r0, #106
 1913 04aa FFF7FEFF 		bl	lcd_write_register
 1914              	.LVL203:
 572:lcd.c         **** 	 lcd_write_register(0x81,0x0000);
 1915              		.loc 1 572 3 view .LVU405
 1916 04ae 2146     		mov	r1, r4
 1917 04b0 8020     		movs	r0, #128
 1918 04b2 FFF7FEFF 		bl	lcd_write_register
 1919              	.LVL204:
 573:lcd.c         **** 	 lcd_write_register(0x82,0x0000);
 1920              		.loc 1 573 3 view .LVU406
 1921 04b6 2146     		mov	r1, r4
 1922 04b8 8120     		movs	r0, #129
 1923 04ba FFF7FEFF 		bl	lcd_write_register
 1924              	.LVL205:
 574:lcd.c         **** 	 lcd_write_register(0x83,0x0000);
 1925              		.loc 1 574 3 view .LVU407
 1926 04be 2146     		mov	r1, r4
 1927 04c0 8220     		movs	r0, #130
 1928 04c2 FFF7FEFF 		bl	lcd_write_register
 1929              	.LVL206:
 575:lcd.c         **** 	 lcd_write_register(0x84,0x0000);
 1930              		.loc 1 575 3 view .LVU408
 1931 04c6 2146     		mov	r1, r4
 1932 04c8 8320     		movs	r0, #131
 1933 04ca FFF7FEFF 		bl	lcd_write_register
 1934              	.LVL207:
 576:lcd.c         **** 	 lcd_write_register(0x85,0x0000);
 1935              		.loc 1 576 3 view .LVU409
 1936 04ce 2146     		mov	r1, r4
 1937 04d0 8420     		movs	r0, #132
 1938 04d2 FFF7FEFF 		bl	lcd_write_register
 1939              	.LVL208:
 577:lcd.c         **** 	 lcd_write_register(0x90,(0 << 7) | (16 << 0));
 1940              		.loc 1 577 3 view .LVU410
 1941 04d6 2146     		mov	r1, r4
 1942 04d8 8520     		movs	r0, #133
 1943 04da FFF7FEFF 		bl	lcd_write_register
 1944              	.LVL209:
 578:lcd.c         **** 	 lcd_write_register(0x92,0x0000);
 1945              		.loc 1 578 3 view .LVU411
 1946 04de 1021     		movs	r1, #16
 1947 04e0 9020     		movs	r0, #144
 1948 04e2 FFF7FEFF 		bl	lcd_write_register
 1949              	.LVL210:
 579:lcd.c         **** 	 lcd_write_register(0x93,0x0001);
 1950              		.loc 1 579 3 view .LVU412
 1951 04e6 2146     		mov	r1, r4
 1952 04e8 9220     		movs	r0, #146
 1953 04ea FFF7FEFF 		bl	lcd_write_register
 1954              	.LVL211:
 580:lcd.c         **** 	 lcd_write_register(0x95,0x0110);
 1955              		.loc 1 580 3 view .LVU413
 1956 04ee 0121     		movs	r1, #1
 1957 04f0 9320     		movs	r0, #147
 1958 04f2 FFF7FEFF 		bl	lcd_write_register
 1959              	.LVL212:
 581:lcd.c         **** 	 lcd_write_register(0x97,(0 << 8));
 1960              		.loc 1 581 3 view .LVU414
 1961 04f6 4FF48871 		mov	r1, #272
 1962 04fa 9520     		movs	r0, #149
 1963 04fc FFF7FEFF 		bl	lcd_write_register
 1964              	.LVL213:
 582:lcd.c         **** 	 lcd_write_register(0x98,0x0000);
 1965              		.loc 1 582 3 view .LVU415
 1966 0500 2146     		mov	r1, r4
 1967 0502 9720     		movs	r0, #151
 1968 0504 FFF7FEFF 		bl	lcd_write_register
 1969              	.LVL214:
 583:lcd.c         **** 	 lcd_write_register(0x07,0x0173);
 1970              		.loc 1 583 3 view .LVU416
 1971 0508 2146     		mov	r1, r4
 1972 050a 9820     		movs	r0, #152
 1973 050c FFF7FEFF 		bl	lcd_write_register
 1974              	.LVL215:
 584:lcd.c         ****       }	else if (device_code == 0x1505)	{
 1975              		.loc 1 584 3 view .LVU417
 1976 0510 40F27311 		movw	r1, #371
 1977              	.L78:
 1978              		.loc 1 731 3 is_stmt 0 view .LVU418
 1979 0514 0720     		movs	r0, #7
 1980 0516 30E7     		b	.L77
 1981              	.L74:
 585:lcd.c         ****          lcd_write_register(0x0007,0x0000);
 1982              		.loc 1 585 14 is_stmt 1 view .LVU419
 585:lcd.c         ****          lcd_write_register(0x0007,0x0000);
 1983              		.loc 1 585 17 is_stmt 0 view .LVU420
 1984 0518 41F20553 		movw	r3, #5381
 1985 051c 9842     		cmp	r0, r3
 1986 051e 40F01B81 		bne	.L75
 586:lcd.c         ****          lcd_delay(50);
 1987              		.loc 1 586 10 is_stmt 1 view .LVU421
 1988 0522 2146     		mov	r1, r4
 1989 0524 0720     		movs	r0, #7
 1990 0526 FFF7FEFF 		bl	lcd_write_register
 1991              	.LVL216:
 587:lcd.c         ****          lcd_write_register(0x0012,0x011C);
 1992              		.loc 1 587 10 view .LVU422
 1993              	.LBB78:
 1994              	.LBI78:
 402:lcd.c         **** {
 1995              		.loc 1 402 6 view .LVU423
 1996              	.LBB79:
 404:lcd.c         **** }
 1997              		.loc 1 404 7 view .LVU424
 1998 052a 3220     		movs	r0, #50
 1999 052c FFF7FEFF 		bl	wait_ms
 2000              	.LVL217:
 404:lcd.c         **** }
 2001              		.loc 1 404 7 is_stmt 0 view .LVU425
 2002              	.LBE79:
 2003              	.LBE78:
 588:lcd.c         ****          lcd_write_register(0x00A4,0x0001);
 2004              		.loc 1 588 10 is_stmt 1 view .LVU426
 2005 0530 4FF48E71 		mov	r1, #284
 2006 0534 1220     		movs	r0, #18
 2007 0536 FFF7FEFF 		bl	lcd_write_register
 2008              	.LVL218:
 589:lcd.c         ****          lcd_write_register(0x0008,0x000F);
 2009              		.loc 1 589 10 view .LVU427
 2010 053a 0121     		movs	r1, #1
 2011 053c A420     		movs	r0, #164
 2012 053e FFF7FEFF 		bl	lcd_write_register
 2013              	.LVL219:
 590:lcd.c         ****          lcd_write_register(0x000A,0x0008);
 2014              		.loc 1 590 10 view .LVU428
 2015 0542 0F21     		movs	r1, #15
 2016 0544 0820     		movs	r0, #8
 2017 0546 FFF7FEFF 		bl	lcd_write_register
 2018              	.LVL220:
 591:lcd.c         ****          lcd_write_register(0x000D,0x0008);
 2019              		.loc 1 591 10 view .LVU429
 2020 054a 0821     		movs	r1, #8
 2021 054c 0A20     		movs	r0, #10
 2022 054e FFF7FEFF 		bl	lcd_write_register
 2023              	.LVL221:
 592:lcd.c         ****          lcd_write_register(0x0030,0x0707);
 2024              		.loc 1 592 10 view .LVU430
 2025 0552 0821     		movs	r1, #8
 2026 0554 0D20     		movs	r0, #13
 2027 0556 FFF7FEFF 		bl	lcd_write_register
 2028              	.LVL222:
 593:lcd.c         ****          lcd_write_register(0x0031,0x0007);
 2029              		.loc 1 593 10 view .LVU431
 2030 055a 40F20771 		movw	r1, #1799
 2031 055e 3020     		movs	r0, #48
 2032 0560 FFF7FEFF 		bl	lcd_write_register
 2033              	.LVL223:
 594:lcd.c         ****          lcd_write_register(0x0032,0x0603);
 2034              		.loc 1 594 10 view .LVU432
 2035 0564 0721     		movs	r1, #7
 2036 0566 3120     		movs	r0, #49
 2037 0568 FFF7FEFF 		bl	lcd_write_register
 2038              	.LVL224:
 595:lcd.c         ****          lcd_write_register(0x0033,0x0700);
 2039              		.loc 1 595 10 view .LVU433
 2040 056c 40F20361 		movw	r1, #1539
 2041 0570 3220     		movs	r0, #50
 2042 0572 FFF7FEFF 		bl	lcd_write_register
 2043              	.LVL225:
 596:lcd.c         ****          lcd_write_register(0x0034,0x0202);
 2044              		.loc 1 596 10 view .LVU434
 2045 0576 4FF4E061 		mov	r1, #1792
 2046 057a 3320     		movs	r0, #51
 2047 057c FFF7FEFF 		bl	lcd_write_register
 2048              	.LVL226:
 597:lcd.c         ****          lcd_write_register(0x0035,0x0002);
 2049              		.loc 1 597 10 view .LVU435
 2050 0580 40F20221 		movw	r1, #514
 2051 0584 3420     		movs	r0, #52
 2052 0586 FFF7FEFF 		bl	lcd_write_register
 2053              	.LVL227:
 598:lcd.c         ****          lcd_write_register(0x0036,0x1F0F);
 2054              		.loc 1 598 10 view .LVU436
 2055 058a 0221     		movs	r1, #2
 2056 058c 3520     		movs	r0, #53
 2057 058e FFF7FEFF 		bl	lcd_write_register
 2058              	.LVL228:
 599:lcd.c         ****          lcd_write_register(0x0037,0x0707);
 2059              		.loc 1 599 10 view .LVU437
 2060 0592 41F60F71 		movw	r1, #7951
 2061 0596 3620     		movs	r0, #54
 2062 0598 FFF7FEFF 		bl	lcd_write_register
 2063              	.LVL229:
 600:lcd.c         ****          lcd_write_register(0x0038,0x0000);
 2064              		.loc 1 600 10 view .LVU438
 2065 059c 40F20771 		movw	r1, #1799
 2066 05a0 3720     		movs	r0, #55
 2067 05a2 FFF7FEFF 		bl	lcd_write_register
 2068              	.LVL230:
 601:lcd.c         ****          lcd_write_register(0x0039,0x0000);
 2069              		.loc 1 601 10 view .LVU439
 2070 05a6 2146     		mov	r1, r4
 2071 05a8 3820     		movs	r0, #56
 2072 05aa FFF7FEFF 		bl	lcd_write_register
 2073              	.LVL231:
 602:lcd.c         ****          lcd_write_register(0x003A,0x0707);
 2074              		.loc 1 602 10 view .LVU440
 2075 05ae 2146     		mov	r1, r4
 2076 05b0 3920     		movs	r0, #57
 2077 05b2 FFF7FEFF 		bl	lcd_write_register
 2078              	.LVL232:
 603:lcd.c         ****          lcd_write_register(0x003B,0x0000);
 2079              		.loc 1 603 10 view .LVU441
 2080 05b6 40F20771 		movw	r1, #1799
 2081 05ba 3A20     		movs	r0, #58
 2082 05bc FFF7FEFF 		bl	lcd_write_register
 2083              	.LVL233:
 604:lcd.c         ****          lcd_write_register(0x003C,0x0007);
 2084              		.loc 1 604 10 view .LVU442
 2085 05c0 2146     		mov	r1, r4
 2086 05c2 3B20     		movs	r0, #59
 2087 05c4 FFF7FEFF 		bl	lcd_write_register
 2088              	.LVL234:
 605:lcd.c         ****          lcd_write_register(0x003D,0x0000);
 2089              		.loc 1 605 10 view .LVU443
 2090 05c8 0721     		movs	r1, #7
 2091 05ca 3C20     		movs	r0, #60
 2092 05cc FFF7FEFF 		bl	lcd_write_register
 2093              	.LVL235:
 606:lcd.c         ****          lcd_delay(50);
 2094              		.loc 1 606 10 view .LVU444
 2095 05d0 2146     		mov	r1, r4
 2096 05d2 3D20     		movs	r0, #61
 2097 05d4 FFF7FEFF 		bl	lcd_write_register
 2098              	.LVL236:
 607:lcd.c         ****          lcd_write_register(0x0007,0x0001);
 2099              		.loc 1 607 10 view .LVU445
 2100              	.LBB80:
 2101              	.LBI80:
 402:lcd.c         **** {
 2102              		.loc 1 402 6 view .LVU446
 2103              	.LBB81:
 404:lcd.c         **** }
 2104              		.loc 1 404 7 view .LVU447
 2105 05d8 3220     		movs	r0, #50
 2106 05da FFF7FEFF 		bl	wait_ms
 2107              	.LVL237:
 404:lcd.c         **** }
 2108              		.loc 1 404 7 is_stmt 0 view .LVU448
 2109              	.LBE81:
 2110              	.LBE80:
 608:lcd.c         ****          lcd_write_register(0x0017,0x0001);
 2111              		.loc 1 608 10 is_stmt 1 view .LVU449
 2112 05de 0121     		movs	r1, #1
 2113 05e0 0720     		movs	r0, #7
 2114 05e2 FFF7FEFF 		bl	lcd_write_register
 2115              	.LVL238:
 609:lcd.c         ****          lcd_delay(50);
 2116              		.loc 1 609 10 view .LVU450
 2117 05e6 0121     		movs	r1, #1
 2118 05e8 1720     		movs	r0, #23
 2119 05ea FFF7FEFF 		bl	lcd_write_register
 2120              	.LVL239:
 610:lcd.c         ****          lcd_write_register(0x0010,0x17A0);
 2121              		.loc 1 610 10 view .LVU451
 2122              	.LBB82:
 2123              	.LBI82:
 402:lcd.c         **** {
 2124              		.loc 1 402 6 view .LVU452
 2125              	.LBB83:
 404:lcd.c         **** }
 2126              		.loc 1 404 7 view .LVU453
 2127 05ee 3220     		movs	r0, #50
 2128 05f0 FFF7FEFF 		bl	wait_ms
 2129              	.LVL240:
 404:lcd.c         **** }
 2130              		.loc 1 404 7 is_stmt 0 view .LVU454
 2131              	.LBE83:
 2132              	.LBE82:
 611:lcd.c         ****          lcd_write_register(0x0011,0x0217);
 2133              		.loc 1 611 10 is_stmt 1 view .LVU455
 2134 05f4 4FF4BD51 		mov	r1, #6048
 2135 05f8 1020     		movs	r0, #16
 2136 05fa FFF7FEFF 		bl	lcd_write_register
 2137              	.LVL241:
 612:lcd.c         ****          lcd_write_register(0x0012,0x011E);
 2138              		.loc 1 612 10 view .LVU456
 2139 05fe 40F21721 		movw	r1, #535
 2140 0602 1120     		movs	r0, #17
 2141 0604 FFF7FEFF 		bl	lcd_write_register
 2142              	.LVL242:
 613:lcd.c         ****          lcd_write_register(0x0013,0x0F00);
 2143              		.loc 1 613 10 view .LVU457
 2144 0608 4FF48F71 		mov	r1, #286
 2145 060c 1220     		movs	r0, #18
 2146 060e FFF7FEFF 		bl	lcd_write_register
 2147              	.LVL243:
 614:lcd.c         ****          lcd_write_register(0x002A,0x0000);
 2148              		.loc 1 614 10 view .LVU458
 2149 0612 4FF47061 		mov	r1, #3840
 2150 0616 1320     		movs	r0, #19
 2151 0618 FFF7FEFF 		bl	lcd_write_register
 2152              	.LVL244:
 615:lcd.c         ****          lcd_write_register(0x0029,0x000A);
 2153              		.loc 1 615 10 view .LVU459
 2154 061c 2146     		mov	r1, r4
 2155 061e 2A20     		movs	r0, #42
 2156 0620 FFF7FEFF 		bl	lcd_write_register
 2157              	.LVL245:
 616:lcd.c         ****          lcd_write_register(0x0012,0x013E);
 2158              		.loc 1 616 10 view .LVU460
 2159 0624 0A21     		movs	r1, #10
 2160 0626 2920     		movs	r0, #41
 2161 0628 FFF7FEFF 		bl	lcd_write_register
 2162              	.LVL246:
 617:lcd.c         ****          lcd_write_register(0x0050,0x0000);
 2163              		.loc 1 617 10 view .LVU461
 2164 062c 4FF49F71 		mov	r1, #318
 2165 0630 1220     		movs	r0, #18
 2166 0632 FFF7FEFF 		bl	lcd_write_register
 2167              	.LVL247:
 618:lcd.c         ****          lcd_write_register(0x0051,0x00EF);
 2168              		.loc 1 618 10 view .LVU462
 2169 0636 2146     		mov	r1, r4
 2170 0638 5020     		movs	r0, #80
 2171 063a FFF7FEFF 		bl	lcd_write_register
 2172              	.LVL248:
 619:lcd.c         ****          lcd_write_register(0x0052,0x0000);
 2173              		.loc 1 619 10 view .LVU463
 2174 063e EF21     		movs	r1, #239
 2175 0640 5120     		movs	r0, #81
 2176 0642 FFF7FEFF 		bl	lcd_write_register
 2177              	.LVL249:
 620:lcd.c         ****          lcd_write_register(0x0053,0x013F);
 2178              		.loc 1 620 10 view .LVU464
 2179 0646 2146     		mov	r1, r4
 2180 0648 5220     		movs	r0, #82
 2181 064a FFF7FEFF 		bl	lcd_write_register
 2182              	.LVL250:
 621:lcd.c         ****          lcd_write_register(0x0060,0x2700);
 2183              		.loc 1 621 10 view .LVU465
 2184 064e 40F23F11 		movw	r1, #319
 2185 0652 5320     		movs	r0, #83
 2186 0654 FFF7FEFF 		bl	lcd_write_register
 2187              	.LVL251:
 622:lcd.c         ****          lcd_write_register(0x0061,0x0001);
 2188              		.loc 1 622 10 view .LVU466
 2189 0658 4FF41C51 		mov	r1, #9984
 2190 065c 6020     		movs	r0, #96
 2191 065e FFF7FEFF 		bl	lcd_write_register
 2192              	.LVL252:
 623:lcd.c         ****          lcd_write_register(0x006A,0x0000);
 2193              		.loc 1 623 10 view .LVU467
 2194 0662 0121     		movs	r1, #1
 2195 0664 6120     		movs	r0, #97
 2196 0666 FFF7FEFF 		bl	lcd_write_register
 2197              	.LVL253:
 624:lcd.c         ****          lcd_write_register(0x0080,0x0000);
 2198              		.loc 1 624 10 view .LVU468
 2199 066a 2146     		mov	r1, r4
 2200 066c 6A20     		movs	r0, #106
 2201 066e FFF7FEFF 		bl	lcd_write_register
 2202              	.LVL254:
 625:lcd.c         ****          lcd_write_register(0x0081,0x0000);
 2203              		.loc 1 625 10 view .LVU469
 2204 0672 2146     		mov	r1, r4
 2205 0674 8020     		movs	r0, #128
 2206 0676 FFF7FEFF 		bl	lcd_write_register
 2207              	.LVL255:
 626:lcd.c         ****          lcd_write_register(0x0082,0x0000);
 2208              		.loc 1 626 10 view .LVU470
 2209 067a 2146     		mov	r1, r4
 2210 067c 8120     		movs	r0, #129
 2211 067e FFF7FEFF 		bl	lcd_write_register
 2212              	.LVL256:
 627:lcd.c         ****          lcd_write_register(0x0083,0x0000);
 2213              		.loc 1 627 10 view .LVU471
 2214 0682 2146     		mov	r1, r4
 2215 0684 8220     		movs	r0, #130
 2216 0686 FFF7FEFF 		bl	lcd_write_register
 2217              	.LVL257:
 628:lcd.c         ****          lcd_write_register(0x0084,0x0000);
 2218              		.loc 1 628 10 view .LVU472
 2219 068a 2146     		mov	r1, r4
 2220 068c 8320     		movs	r0, #131
 2221 068e FFF7FEFF 		bl	lcd_write_register
 2222              	.LVL258:
 629:lcd.c         ****          lcd_write_register(0x0085,0x0000);
 2223              		.loc 1 629 10 view .LVU473
 2224 0692 2146     		mov	r1, r4
 2225 0694 8420     		movs	r0, #132
 2226 0696 FFF7FEFF 		bl	lcd_write_register
 2227              	.LVL259:
 630:lcd.c         ****          lcd_write_register(0x0090,0x0013);
 2228              		.loc 1 630 10 view .LVU474
 2229 069a 2146     		mov	r1, r4
 2230 069c 8520     		movs	r0, #133
 2231 069e FFF7FEFF 		bl	lcd_write_register
 2232              	.LVL260:
 631:lcd.c         ****          lcd_write_register(0x0092,0x0300);
 2233              		.loc 1 631 10 view .LVU475
 2234 06a2 1321     		movs	r1, #19
 2235 06a4 9020     		movs	r0, #144
 2236 06a6 FFF7FEFF 		bl	lcd_write_register
 2237              	.LVL261:
 632:lcd.c         ****          lcd_write_register(0x0093,0x0005);
 2238              		.loc 1 632 10 view .LVU476
 2239 06aa 4FF44071 		mov	r1, #768
 2240 06ae 9220     		movs	r0, #146
 2241 06b0 FFF7FEFF 		bl	lcd_write_register
 2242              	.LVL262:
 633:lcd.c         ****          lcd_write_register(0x0095,0x0000);
 2243              		.loc 1 633 10 view .LVU477
 2244 06b4 0521     		movs	r1, #5
 2245 06b6 9320     		movs	r0, #147
 2246 06b8 FFF7FEFF 		bl	lcd_write_register
 2247              	.LVL263:
 634:lcd.c         ****          lcd_write_register(0x0097,0x0000);
 2248              		.loc 1 634 10 view .LVU478
 2249 06bc 2146     		mov	r1, r4
 2250 06be 9520     		movs	r0, #149
 2251 06c0 FFF7FEFF 		bl	lcd_write_register
 2252              	.LVL264:
 635:lcd.c         ****          lcd_write_register(0x0098,0x0000);
 2253              		.loc 1 635 10 view .LVU479
 2254 06c4 2146     		mov	r1, r4
 2255 06c6 9720     		movs	r0, #151
 2256 06c8 FFF7FEFF 		bl	lcd_write_register
 2257              	.LVL265:
 636:lcd.c         ****          lcd_write_register(0x0001,0x0100);
 2258              		.loc 1 636 10 view .LVU480
 2259 06cc 2146     		mov	r1, r4
 2260 06ce 9820     		movs	r0, #152
 2261 06d0 FFF7FEFF 		bl	lcd_write_register
 2262              	.LVL266:
 637:lcd.c         ****          lcd_write_register(0x0002,0x0700);
 2263              		.loc 1 637 10 view .LVU481
 2264 06d4 4FF48071 		mov	r1, #256
 2265 06d8 0120     		movs	r0, #1
 2266 06da FFF7FEFF 		bl	lcd_write_register
 2267              	.LVL267:
 638:lcd.c         ****          lcd_write_register(0x0003,0x1030);
 2268              		.loc 1 638 10 view .LVU482
 2269 06de 4FF4E061 		mov	r1, #1792
 2270 06e2 0220     		movs	r0, #2
 2271 06e4 FFF7FEFF 		bl	lcd_write_register
 2272              	.LVL268:
 639:lcd.c         ****          lcd_write_register(0x0004,0x0000);
 2273              		.loc 1 639 10 view .LVU483
 2274 06e8 41F23001 		movw	r1, #4144
 2275 06ec 0320     		movs	r0, #3
 2276 06ee FFF7FEFF 		bl	lcd_write_register
 2277              	.LVL269:
 640:lcd.c         ****          lcd_write_register(0x000C,0x0000);
 2278              		.loc 1 640 10 view .LVU484
 2279 06f2 2146     		mov	r1, r4
 2280 06f4 0420     		movs	r0, #4
 2281 06f6 FFF7FEFF 		bl	lcd_write_register
 2282              	.LVL270:
 641:lcd.c         ****          lcd_write_register(0x000F,0x0000);
 2283              		.loc 1 641 10 view .LVU485
 2284 06fa 2146     		mov	r1, r4
 2285 06fc 0C20     		movs	r0, #12
 2286 06fe FFF7FEFF 		bl	lcd_write_register
 2287              	.LVL271:
 642:lcd.c         ****          lcd_write_register(0x0020,0x0000);
 2288              		.loc 1 642 10 view .LVU486
 2289 0702 2146     		mov	r1, r4
 2290 0704 0F20     		movs	r0, #15
 2291 0706 FFF7FEFF 		bl	lcd_write_register
 2292              	.LVL272:
 643:lcd.c         ****          lcd_write_register(0x0021,0x0000);
 2293              		.loc 1 643 10 view .LVU487
 2294 070a 2146     		mov	r1, r4
 2295 070c 2020     		movs	r0, #32
 2296 070e FFF7FEFF 		bl	lcd_write_register
 2297              	.LVL273:
 644:lcd.c         ****          lcd_write_register(0x0007,0x0021);
 2298              		.loc 1 644 10 view .LVU488
 2299 0712 2146     		mov	r1, r4
 2300 0714 2120     		movs	r0, #33
 2301 0716 FFF7FEFF 		bl	lcd_write_register
 2302              	.LVL274:
 645:lcd.c         ****          lcd_delay(200);
 2303              		.loc 1 645 10 view .LVU489
 2304 071a 2121     		movs	r1, #33
 2305 071c 0720     		movs	r0, #7
 2306 071e FFF7FEFF 		bl	lcd_write_register
 2307              	.LVL275:
 646:lcd.c         ****          lcd_write_register(0x0007,0x0061);
 2308              		.loc 1 646 10 view .LVU490
 2309              	.LBB84:
 2310              	.LBI84:
 402:lcd.c         **** {
 2311              		.loc 1 402 6 view .LVU491
 2312              	.LBB85:
 404:lcd.c         **** }
 2313              		.loc 1 404 7 view .LVU492
 2314 0722 C820     		movs	r0, #200
 2315 0724 FFF7FEFF 		bl	wait_ms
 2316              	.LVL276:
 404:lcd.c         **** }
 2317              		.loc 1 404 7 is_stmt 0 view .LVU493
 2318              	.LBE85:
 2319              	.LBE84:
 647:lcd.c         ****          lcd_delay(200);
 2320              		.loc 1 647 10 is_stmt 1 view .LVU494
 2321 0728 6121     		movs	r1, #97
 2322 072a 0720     		movs	r0, #7
 2323 072c FFF7FEFF 		bl	lcd_write_register
 2324              	.LVL277:
 648:lcd.c         ****          lcd_write_register(0x0007,0x0173);
 2325              		.loc 1 648 10 view .LVU495
 2326              	.LBB86:
 2327              	.LBI86:
 402:lcd.c         **** {
 2328              		.loc 1 402 6 view .LVU496
 2329              	.LBB87:
 404:lcd.c         **** }
 2330              		.loc 1 404 7 view .LVU497
 2331 0730 C820     		movs	r0, #200
 2332 0732 FFF7FEFF 		bl	wait_ms
 2333              	.LVL278:
 404:lcd.c         **** }
 2334              		.loc 1 404 7 is_stmt 0 view .LVU498
 2335              	.LBE87:
 2336              	.LBE86:
 649:lcd.c         ****          lcd_delay(200);
 2337              		.loc 1 649 10 is_stmt 1 view .LVU499
 2338 0736 0720     		movs	r0, #7
 2339 0738 40F27311 		movw	r1, #371
 2340 073c FFF7FEFF 		bl	lcd_write_register
 2341              	.LVL279:
 650:lcd.c         ****       }	else if (device_code == 0x8989) {
 2342              		.loc 1 650 10 view .LVU500
 2343              	.LBB88:
 2344              	.LBI88:
 402:lcd.c         **** {
 2345              		.loc 1 402 6 view .LVU501
 2346              	.LBB89:
 404:lcd.c         **** }
 2347              		.loc 1 404 7 view .LVU502
 2348 0740 C820     		movs	r0, #200
 2349 0742 FFF7FEFF 		bl	wait_ms
 2350              	.LVL280:
 2351              	.L73:
 404:lcd.c         **** }
 2352              		.loc 1 404 7 is_stmt 0 view .LVU503
 2353              	.LBE89:
 2354              	.LBE88:
 732:lcd.c         ****       }
 733:lcd.c         ****       lcd_delay(500);
 2355              		.loc 1 733 7 is_stmt 1 view .LVU504
 2356              	.LBB90:
 2357              	.LBI90:
 402:lcd.c         **** {
 2358              		.loc 1 402 6 view .LVU505
 2359              	.LBB91:
 404:lcd.c         **** }
 2360              		.loc 1 404 7 view .LVU506
 2361 0746 4FF4FA70 		mov	r0, #500
 2362 074a FFF7FEFF 		bl	wait_ms
 2363              	.LVL281:
 404:lcd.c         **** }
 2364              		.loc 1 404 7 is_stmt 0 view .LVU507
 2365              	.LBE91:
 2366              	.LBE90:
 734:lcd.c         ****       lcd_clear(BLACK);
 2367              		.loc 1 734 7 is_stmt 1 view .LVU508
 735:lcd.c         **** }
 2368              		.loc 1 735 1 is_stmt 0 view .LVU509
 2369 074e BDE83840 		pop	{r3, r4, r5, lr}
 2370              		.cfi_remember_state
 2371              		.cfi_restore 14
 2372              		.cfi_restore 5
 2373              		.cfi_restore 4
 2374              		.cfi_restore 3
 2375              		.cfi_def_cfa_offset 0
 734:lcd.c         ****       lcd_clear(BLACK);
 2376              		.loc 1 734 7 view .LVU510
 2377 0752 0020     		movs	r0, #0
 2378 0754 FFF7FEBF 		b	lcd_clear
 2379              	.LVL282:
 2380              	.L75:
 2381              		.cfi_restore_state
 651:lcd.c         **** 	 lcd_write_register(0x0000,0x0001);
 2382              		.loc 1 651 14 is_stmt 1 view .LVU511
 651:lcd.c         **** 	 lcd_write_register(0x0000,0x0001);
 2383              		.loc 1 651 17 is_stmt 0 view .LVU512
 2384 0758 48F68913 		movw	r3, #35209
 2385 075c 9842     		cmp	r0, r3
 2386 075e 40F0B980 		bne	.L76
 652:lcd.c         ****     	 lcd_write_register(0x0003,0xA8A4);
 2387              		.loc 1 652 3 is_stmt 1 view .LVU513
 2388 0762 0121     		movs	r1, #1
 2389 0764 2046     		mov	r0, r4
 2390 0766 FFF7FEFF 		bl	lcd_write_register
 2391              	.LVL283:
 653:lcd.c         ****     	 lcd_write_register(0x000C,0x0000);
 2392              		.loc 1 653 7 view .LVU514
 2393 076a 4AF6A401 		movw	r1, #43172
 2394 076e 0320     		movs	r0, #3
 2395 0770 FFF7FEFF 		bl	lcd_write_register
 2396              	.LVL284:
 654:lcd.c         ****     	 lcd_write_register(0x000D,0x080C);
 2397              		.loc 1 654 7 view .LVU515
 2398 0774 2146     		mov	r1, r4
 2399 0776 0C20     		movs	r0, #12
 2400 0778 FFF7FEFF 		bl	lcd_write_register
 2401              	.LVL285:
 655:lcd.c         ****     	 lcd_write_register(0x000E,0x2B00);
 2402              		.loc 1 655 7 view .LVU516
 2403 077c 40F60C01 		movw	r1, #2060
 2404 0780 0D20     		movs	r0, #13
 2405 0782 FFF7FEFF 		bl	lcd_write_register
 2406              	.LVL286:
 656:lcd.c         ****     	 lcd_write_register(0x001E,0x00B0);
 2407              		.loc 1 656 7 view .LVU517
 2408 0786 4FF42C51 		mov	r1, #11008
 2409 078a 0E20     		movs	r0, #14
 2410 078c FFF7FEFF 		bl	lcd_write_register
 2411              	.LVL287:
 657:lcd.c         ****     	 lcd_write_register(0x0001,0x2B3F);
 2412              		.loc 1 657 7 view .LVU518
 2413 0790 B021     		movs	r1, #176
 2414 0792 2846     		mov	r0, r5
 2415 0794 FFF7FEFF 		bl	lcd_write_register
 2416              	.LVL288:
 658:lcd.c         ****     	 lcd_write_register(0x0002,0x0600);
 2417              		.loc 1 658 7 view .LVU519
 2418 0798 42F63F31 		movw	r1, #11071
 2419 079c 0120     		movs	r0, #1
 2420 079e FFF7FEFF 		bl	lcd_write_register
 2421              	.LVL289:
 659:lcd.c         ****     	 lcd_write_register(0x0010,0x0000);
 2422              		.loc 1 659 7 view .LVU520
 2423 07a2 4FF4C061 		mov	r1, #1536
 2424 07a6 0220     		movs	r0, #2
 2425 07a8 FFF7FEFF 		bl	lcd_write_register
 2426              	.LVL290:
 660:lcd.c         ****     	 lcd_write_register(0x0011,0x6070);
 2427              		.loc 1 660 7 view .LVU521
 2428 07ac 2146     		mov	r1, r4
 2429 07ae 1020     		movs	r0, #16
 2430 07b0 FFF7FEFF 		bl	lcd_write_register
 2431              	.LVL291:
 661:lcd.c         ****     	 lcd_write_register(0x0005,0x0000);
 2432              		.loc 1 661 7 view .LVU522
 2433 07b4 46F27001 		movw	r1, #24688
 2434 07b8 1120     		movs	r0, #17
 2435 07ba FFF7FEFF 		bl	lcd_write_register
 2436              	.LVL292:
 662:lcd.c         ****     	 lcd_write_register(0x0006,0x0000);
 2437              		.loc 1 662 7 view .LVU523
 2438 07be 2146     		mov	r1, r4
 2439 07c0 0520     		movs	r0, #5
 2440 07c2 FFF7FEFF 		bl	lcd_write_register
 2441              	.LVL293:
 663:lcd.c         ****     	 lcd_write_register(0x0016,0xEF1C);
 2442              		.loc 1 663 7 view .LVU524
 2443 07c6 2146     		mov	r1, r4
 2444 07c8 0620     		movs	r0, #6
 2445 07ca FFF7FEFF 		bl	lcd_write_register
 2446              	.LVL294:
 664:lcd.c         ****     	 lcd_write_register(0x0017,0x0003);
 2447              		.loc 1 664 7 view .LVU525
 2448 07ce 4EF61C71 		movw	r1, #61212
 2449 07d2 1620     		movs	r0, #22
 2450 07d4 FFF7FEFF 		bl	lcd_write_register
 2451              	.LVL295:
 665:lcd.c         ****     	 lcd_write_register(0x0007,0x0233);
 2452              		.loc 1 665 7 view .LVU526
 2453 07d8 0321     		movs	r1, #3
 2454 07da 1720     		movs	r0, #23
 2455 07dc FFF7FEFF 		bl	lcd_write_register
 2456              	.LVL296:
 666:lcd.c         ****     	 lcd_write_register(0x000B,0x0000);
 2457              		.loc 1 666 7 view .LVU527
 2458 07e0 40F23321 		movw	r1, #563
 2459 07e4 0720     		movs	r0, #7
 2460 07e6 FFF7FEFF 		bl	lcd_write_register
 2461              	.LVL297:
 667:lcd.c         ****     	 lcd_write_register(0x000F,0x0000);
 2462              		.loc 1 667 7 view .LVU528
 2463 07ea 2146     		mov	r1, r4
 2464 07ec 0B20     		movs	r0, #11
 2465 07ee FFF7FEFF 		bl	lcd_write_register
 2466              	.LVL298:
 668:lcd.c         ****     	 lcd_write_register(0x0041,0x0000);
 2467              		.loc 1 668 7 view .LVU529
 2468 07f2 2146     		mov	r1, r4
 2469 07f4 0F20     		movs	r0, #15
 2470 07f6 FFF7FEFF 		bl	lcd_write_register
 2471              	.LVL299:
 669:lcd.c         ****     	 lcd_write_register(0x0042,0x0000);
 2472              		.loc 1 669 7 view .LVU530
 2473 07fa 2146     		mov	r1, r4
 2474 07fc 4120     		movs	r0, #65
 2475 07fe FFF7FEFF 		bl	lcd_write_register
 2476              	.LVL300:
 670:lcd.c         ****     	 lcd_write_register(0x0048,0x0000);
 2477              		.loc 1 670 7 view .LVU531
 2478 0802 2146     		mov	r1, r4
 2479 0804 4220     		movs	r0, #66
 2480 0806 FFF7FEFF 		bl	lcd_write_register
 2481              	.LVL301:
 671:lcd.c         ****     	 lcd_write_register(0x0049,0x013F);
 2482              		.loc 1 671 7 view .LVU532
 2483 080a 2146     		mov	r1, r4
 2484 080c 4820     		movs	r0, #72
 2485 080e FFF7FEFF 		bl	lcd_write_register
 2486              	.LVL302:
 672:lcd.c         ****     	 lcd_write_register(0x004A,0x0000);
 2487              		.loc 1 672 7 view .LVU533
 2488 0812 40F23F11 		movw	r1, #319
 2489 0816 4920     		movs	r0, #73
 2490 0818 FFF7FEFF 		bl	lcd_write_register
 2491              	.LVL303:
 673:lcd.c         ****     	 lcd_write_register(0x004B,0x0000);
 2492              		.loc 1 673 7 view .LVU534
 2493 081c 2146     		mov	r1, r4
 2494 081e 4A20     		movs	r0, #74
 2495 0820 FFF7FEFF 		bl	lcd_write_register
 2496              	.LVL304:
 674:lcd.c         ****     	 lcd_write_register(0x0044,0xEF00);
 2497              		.loc 1 674 7 view .LVU535
 2498 0824 2146     		mov	r1, r4
 2499 0826 4B20     		movs	r0, #75
 2500 0828 FFF7FEFF 		bl	lcd_write_register
 2501              	.LVL305:
 675:lcd.c         ****     	 lcd_write_register(0x0045,0x0000);
 2502              		.loc 1 675 7 view .LVU536
 2503 082c 4FF46F41 		mov	r1, #61184
 2504 0830 4420     		movs	r0, #68
 2505 0832 FFF7FEFF 		bl	lcd_write_register
 2506              	.LVL306:
 676:lcd.c         ****     	 lcd_write_register(0x0046,0x013F);
 2507              		.loc 1 676 7 view .LVU537
 2508 0836 2146     		mov	r1, r4
 2509 0838 4520     		movs	r0, #69
 2510 083a FFF7FEFF 		bl	lcd_write_register
 2511              	.LVL307:
 677:lcd.c         ****     	 lcd_write_register(0x0030,0x0707);
 2512              		.loc 1 677 7 view .LVU538
 2513 083e 40F23F11 		movw	r1, #319
 2514 0842 4620     		movs	r0, #70
 2515 0844 FFF7FEFF 		bl	lcd_write_register
 2516              	.LVL308:
 678:lcd.c         ****     	 lcd_write_register(0x0031,0x0204);
 2517              		.loc 1 678 7 view .LVU539
 2518 0848 40F20771 		movw	r1, #1799
 2519 084c 3020     		movs	r0, #48
 2520 084e FFF7FEFF 		bl	lcd_write_register
 2521              	.LVL309:
 679:lcd.c         ****     	 lcd_write_register(0x0032,0x0204);
 2522              		.loc 1 679 7 view .LVU540
 2523 0852 4FF40171 		mov	r1, #516
 2524 0856 3120     		movs	r0, #49
 2525 0858 FFF7FEFF 		bl	lcd_write_register
 2526              	.LVL310:
 680:lcd.c         ****     	 lcd_write_register(0x0033,0x0502);
 2527              		.loc 1 680 7 view .LVU541
 2528 085c 4FF40171 		mov	r1, #516
 2529 0860 3220     		movs	r0, #50
 2530 0862 FFF7FEFF 		bl	lcd_write_register
 2531              	.LVL311:
 681:lcd.c         ****     	 lcd_write_register(0x0034,0x0507);
 2532              		.loc 1 681 7 view .LVU542
 2533 0866 40F20251 		movw	r1, #1282
 2534 086a 3320     		movs	r0, #51
 2535 086c FFF7FEFF 		bl	lcd_write_register
 2536              	.LVL312:
 682:lcd.c         ****     	 lcd_write_register(0x0035,0x0204);
 2537              		.loc 1 682 7 view .LVU543
 2538 0870 40F20751 		movw	r1, #1287
 2539 0874 3420     		movs	r0, #52
 2540 0876 FFF7FEFF 		bl	lcd_write_register
 2541              	.LVL313:
 683:lcd.c         ****     	 lcd_write_register(0x0036,0x0204);
 2542              		.loc 1 683 7 view .LVU544
 2543 087a 4FF40171 		mov	r1, #516
 2544 087e 3520     		movs	r0, #53
 2545 0880 FFF7FEFF 		bl	lcd_write_register
 2546              	.LVL314:
 684:lcd.c         ****     	 lcd_write_register(0x0037,0x0502);
 2547              		.loc 1 684 7 view .LVU545
 2548 0884 4FF40171 		mov	r1, #516
 2549 0888 3620     		movs	r0, #54
 2550 088a FFF7FEFF 		bl	lcd_write_register
 2551              	.LVL315:
 685:lcd.c         ****     	 lcd_write_register(0x003A,0x0302);
 2552              		.loc 1 685 7 view .LVU546
 2553 088e 40F20251 		movw	r1, #1282
 2554 0892 3720     		movs	r0, #55
 2555 0894 FFF7FEFF 		bl	lcd_write_register
 2556              	.LVL316:
 686:lcd.c         ****     	 lcd_write_register(0x003B,0x0302);
 2557              		.loc 1 686 7 view .LVU547
 2558 0898 40F20231 		movw	r1, #770
 2559 089c 3A20     		movs	r0, #58
 2560 089e FFF7FEFF 		bl	lcd_write_register
 2561              	.LVL317:
 687:lcd.c         ****     	 lcd_write_register(0x0023,0x0000);
 2562              		.loc 1 687 7 view .LVU548
 2563 08a2 40F20231 		movw	r1, #770
 2564 08a6 3B20     		movs	r0, #59
 2565 08a8 FFF7FEFF 		bl	lcd_write_register
 2566              	.LVL318:
 688:lcd.c         ****     	 lcd_write_register(0x0024,0x0000);
 2567              		.loc 1 688 7 view .LVU549
 2568 08ac 2146     		mov	r1, r4
 2569 08ae 2320     		movs	r0, #35
 2570 08b0 FFF7FEFF 		bl	lcd_write_register
 2571              	.LVL319:
 689:lcd.c         ****     	 lcd_write_register(0x0025,0x8000);
 2572              		.loc 1 689 7 view .LVU550
 2573 08b4 2146     		mov	r1, r4
 2574 08b6 2420     		movs	r0, #36
 2575 08b8 FFF7FEFF 		bl	lcd_write_register
 2576              	.LVL320:
 690:lcd.c         ****     	 lcd_write_register(0x004f,0);
 2577              		.loc 1 690 7 view .LVU551
 2578 08bc 4FF40041 		mov	r1, #32768
 2579 08c0 2520     		movs	r0, #37
 2580 08c2 FFF7FEFF 		bl	lcd_write_register
 2581              	.LVL321:
 691:lcd.c         ****     	 lcd_write_register(0x004e,0);
 2582              		.loc 1 691 7 view .LVU552
 2583 08c6 2146     		mov	r1, r4
 2584 08c8 4F20     		movs	r0, #79
 2585 08ca FFF7FEFF 		bl	lcd_write_register
 2586              	.LVL322:
 692:lcd.c         ****       }	else if (device_code == 0x8999) {
 2587              		.loc 1 692 7 view .LVU553
 2588 08ce 2146     		mov	r1, r4
 2589 08d0 4E20     		movs	r0, #78
 2590 08d2 52E5     		b	.L77
 2591              	.L76:
 693:lcd.c         **** 	 /************* Start Initial Sequence **********/
 2592              		.loc 1 693 14 view .LVU554
 693:lcd.c         **** 	 /************* Start Initial Sequence **********/
 2593              		.loc 1 693 17 is_stmt 0 view .LVU555
 2594 08d4 48F69913 		movw	r3, #35225
 2595 08d8 9842     		cmp	r0, r3
 2596 08da 7FF434AF 		bne	.L73
 695:lcd.c         **** 	 lcd_write_register(0x01,0x3B3F);
 2597              		.loc 1 695 3 is_stmt 1 view .LVU556
 2598 08de 0121     		movs	r1, #1
 2599 08e0 2046     		mov	r0, r4
 2600 08e2 FFF7FEFF 		bl	lcd_write_register
 2601              	.LVL323:
 696:lcd.c         **** 	 lcd_write_register(0x02,0x0600);
 2602              		.loc 1 696 3 view .LVU557
 2603 08e6 43F63F31 		movw	r1, #15167
 2604 08ea 0120     		movs	r0, #1
 2605 08ec FFF7FEFF 		bl	lcd_write_register
 2606              	.LVL324:
 697:lcd.c         **** 	 /************* Power control setup ***********/
 2607              		.loc 1 697 3 view .LVU558
 2608 08f0 4FF4C061 		mov	r1, #1536
 2609 08f4 0220     		movs	r0, #2
 2610 08f6 FFF7FEFF 		bl	lcd_write_register
 2611              	.LVL325:
 699:lcd.c         **** 	 lcd_write_register(0x0D,0x0006);
 2612              		.loc 1 699 3 view .LVU559
 2613 08fa 0721     		movs	r1, #7
 2614 08fc 0C20     		movs	r0, #12
 2615 08fe FFF7FEFF 		bl	lcd_write_register
 2616              	.LVL326:
 700:lcd.c         **** 	 lcd_write_register(0x0E,0x3200);
 2617              		.loc 1 700 3 view .LVU560
 2618 0902 0621     		movs	r1, #6
 2619 0904 0D20     		movs	r0, #13
 2620 0906 FFF7FEFF 		bl	lcd_write_register
 2621              	.LVL327:
 701:lcd.c         **** 	 lcd_write_register(0x1E,0x00BB);
 2622              		.loc 1 701 3 view .LVU561
 2623 090a 4FF44851 		mov	r1, #12800
 2624 090e 0E20     		movs	r0, #14
 2625 0910 FFF7FEFF 		bl	lcd_write_register
 2626              	.LVL328:
 702:lcd.c         **** 	 lcd_write_register(0x03,0x6A64);
 2627              		.loc 1 702 3 view .LVU562
 2628 0914 BB21     		movs	r1, #187
 2629 0916 2846     		mov	r0, r5
 2630 0918 FFF7FEFF 		bl	lcd_write_register
 2631              	.LVL329:
 703:lcd.c         **** 	 //************ RAM position control **********/
 2632              		.loc 1 703 3 view .LVU563
 2633 091c 46F66421 		movw	r1, #27236
 2634 0920 0320     		movs	r0, #3
 2635 0922 FFF7FEFF 		bl	lcd_write_register
 2636              	.LVL330:
 705:lcd.c         **** 	 lcd_write_register(0x44,0xEF00);
 2637              		.loc 1 705 3 view .LVU564
 2638 0926 2146     		mov	r1, r4
 2639 0928 0F20     		movs	r0, #15
 2640 092a FFF7FEFF 		bl	lcd_write_register
 2641              	.LVL331:
 706:lcd.c         **** 	 lcd_write_register(0x45,0x0000);
 2642              		.loc 1 706 3 view .LVU565
 2643 092e 4FF46F41 		mov	r1, #61184
 2644 0932 4420     		movs	r0, #68
 2645 0934 FFF7FEFF 		bl	lcd_write_register
 2646              	.LVL332:
 707:lcd.c         **** 	 lcd_write_register(0x46,0x013F);
 2647              		.loc 1 707 3 view .LVU566
 2648 0938 2146     		mov	r1, r4
 2649 093a 4520     		movs	r0, #69
 2650 093c FFF7FEFF 		bl	lcd_write_register
 2651              	.LVL333:
 708:lcd.c         **** 	 /************* Adjust the Gamma Curve ********/
 2652              		.loc 1 708 3 view .LVU567
 2653 0940 40F23F11 		movw	r1, #319
 2654 0944 4620     		movs	r0, #70
 2655 0946 FFF7FEFF 		bl	lcd_write_register
 2656              	.LVL334:
 710:lcd.c         **** 	 lcd_write_register(0x31,0x0706);
 2657              		.loc 1 710 3 view .LVU568
 2658 094a 2146     		mov	r1, r4
 2659 094c 3020     		movs	r0, #48
 2660 094e FFF7FEFF 		bl	lcd_write_register
 2661              	.LVL335:
 711:lcd.c         **** 	 lcd_write_register(0x32,0x0206);
 2662              		.loc 1 711 3 view .LVU569
 2663 0952 40F20671 		movw	r1, #1798
 2664 0956 3120     		movs	r0, #49
 2665 0958 FFF7FEFF 		bl	lcd_write_register
 2666              	.LVL336:
 712:lcd.c         **** 	 lcd_write_register(0x33,0x0300);
 2667              		.loc 1 712 3 view .LVU570
 2668 095c 40F20621 		movw	r1, #518
 2669 0960 3220     		movs	r0, #50
 2670 0962 FFF7FEFF 		bl	lcd_write_register
 2671              	.LVL337:
 713:lcd.c         **** 	 lcd_write_register(0x34,0x0002);
 2672              		.loc 1 713 3 view .LVU571
 2673 0966 4FF44071 		mov	r1, #768
 2674 096a 3320     		movs	r0, #51
 2675 096c FFF7FEFF 		bl	lcd_write_register
 2676              	.LVL338:
 714:lcd.c         **** 	 lcd_write_register(0x35,0x0000);
 2677              		.loc 1 714 3 view .LVU572
 2678 0970 0221     		movs	r1, #2
 2679 0972 3420     		movs	r0, #52
 2680 0974 FFF7FEFF 		bl	lcd_write_register
 2681              	.LVL339:
 715:lcd.c         **** 	 lcd_write_register(0x36,0x0707);
 2682              		.loc 1 715 3 view .LVU573
 2683 0978 2146     		mov	r1, r4
 2684 097a 3520     		movs	r0, #53
 2685 097c FFF7FEFF 		bl	lcd_write_register
 2686              	.LVL340:
 716:lcd.c         **** 	 lcd_write_register(0x37,0x0200);
 2687              		.loc 1 716 3 view .LVU574
 2688 0980 40F20771 		movw	r1, #1799
 2689 0984 3620     		movs	r0, #54
 2690 0986 FFF7FEFF 		bl	lcd_write_register
 2691              	.LVL341:
 717:lcd.c         **** 	 lcd_write_register(0x3A,0x0908);
 2692              		.loc 1 717 3 view .LVU575
 2693 098a 4FF40071 		mov	r1, #512
 2694 098e 3720     		movs	r0, #55
 2695 0990 FFF7FEFF 		bl	lcd_write_register
 2696              	.LVL342:
 718:lcd.c         **** 	 lcd_write_register(0x3B,0x0F0D);
 2697              		.loc 1 718 3 view .LVU576
 2698 0994 40F60811 		movw	r1, #2312
 2699 0998 3A20     		movs	r0, #58
 2700 099a FFF7FEFF 		bl	lcd_write_register
 2701              	.LVL343:
 719:lcd.c         **** 	 /************* Special command **************/
 2702              		.loc 1 719 3 view .LVU577
 2703 099e 40F60D71 		movw	r1, #3853
 2704 09a2 3B20     		movs	r0, #59
 2705 09a4 FFF7FEFF 		bl	lcd_write_register
 2706              	.LVL344:
 721:lcd.c         **** 	 lcd_write_register(0x2F,0x12EB);
 2707              		.loc 1 721 3 view .LVU578
 2708 09a8 0621     		movs	r1, #6
 2709 09aa 2820     		movs	r0, #40
 2710 09ac FFF7FEFF 		bl	lcd_write_register
 2711              	.LVL345:
 722:lcd.c         **** 	 lcd_write_register(0x26,0x7000);
 2712              		.loc 1 722 3 view .LVU579
 2713 09b0 41F2EB21 		movw	r1, #4843
 2714 09b4 2F20     		movs	r0, #47
 2715 09b6 FFF7FEFF 		bl	lcd_write_register
 2716              	.LVL346:
 723:lcd.c         **** 	 lcd_write_register(0x20,0xB0E3);
 2717              		.loc 1 723 3 view .LVU580
 2718 09ba 4FF4E041 		mov	r1, #28672
 2719 09be 2620     		movs	r0, #38
 2720 09c0 FFF7FEFF 		bl	lcd_write_register
 2721              	.LVL347:
 724:lcd.c         **** 	 lcd_write_register(0x27,0x0044);
 2722              		.loc 1 724 3 view .LVU581
 2723 09c4 4BF2E301 		movw	r1, #45283
 2724 09c8 2020     		movs	r0, #32
 2725 09ca FFF7FEFF 		bl	lcd_write_register
 2726              	.LVL348:
 725:lcd.c         **** 	 lcd_write_register(0x2E,0x7E45);
 2727              		.loc 1 725 3 view .LVU582
 2728 09ce 4421     		movs	r1, #68
 2729 09d0 2720     		movs	r0, #39
 2730 09d2 FFF7FEFF 		bl	lcd_write_register
 2731              	.LVL349:
 726:lcd.c         **** 	 /************* Turn On display **************/
 2732              		.loc 1 726 3 view .LVU583
 2733 09d6 47F64561 		movw	r1, #32325
 2734 09da 2E20     		movs	r0, #46
 2735 09dc FFF7FEFF 		bl	lcd_write_register
 2736              	.LVL350:
 728:lcd.c         **** 	 lcd_delay(30);
 2737              		.loc 1 728 3 view .LVU584
 2738 09e0 2146     		mov	r1, r4
 2739 09e2 1020     		movs	r0, #16
 2740 09e4 FFF7FEFF 		bl	lcd_write_register
 2741              	.LVL351:
 729:lcd.c         **** 	 lcd_write_register(0x11,0x6870);
 2742              		.loc 1 729 3 view .LVU585
 2743              	.LBB92:
 2744              	.LBI92:
 402:lcd.c         **** {
 2745              		.loc 1 402 6 view .LVU586
 2746              	.LBB93:
 404:lcd.c         **** }
 2747              		.loc 1 404 7 view .LVU587
 2748 09e8 2846     		mov	r0, r5
 2749 09ea FFF7FEFF 		bl	wait_ms
 2750              	.LVL352:
 404:lcd.c         **** }
 2751              		.loc 1 404 7 is_stmt 0 view .LVU588
 2752              	.LBE93:
 2753              	.LBE92:
 730:lcd.c         **** 	 lcd_write_register(0x07,0x0033);
 2754              		.loc 1 730 3 is_stmt 1 view .LVU589
 2755 09ee 46F67001 		movw	r1, #26736
 2756 09f2 1120     		movs	r0, #17
 2757 09f4 FFF7FEFF 		bl	lcd_write_register
 2758              	.LVL353:
 731:lcd.c         ****       }
 2759              		.loc 1 731 3 view .LVU590
 2760 09f8 3321     		movs	r1, #51
 2761 09fa 8BE5     		b	.L78
 2762              		.cfi_endproc
 2763              	.LFE60:
 2765              		.section	.text.lcd_fill,"ax",%progbits
 2766              		.align	1
 2767              		.global	lcd_fill
 2768              		.syntax unified
 2769              		.thumb
 2770              		.thumb_func
 2771              		.fpu softvfp
 2773              	lcd_fill:
 2774              	.LVL354:
 2775              	.LFB61:
 736:lcd.c         **** 
 737:lcd.c         **** 
 738:lcd.c         **** void lcd_fill (unsigned char xsta,unsigned short ysta,unsigned char xend,unsigned short yend,unsign
 739:lcd.c         **** {
 2776              		.loc 1 739 1 view -0
 2777              		.cfi_startproc
 2778              		@ args = 4, pretend = 0, frame = 0
 2779              		@ frame_needed = 0, uses_anonymous_args = 0
 740:lcd.c         ****       unsigned int n;
 2780              		.loc 1 740 7 view .LVU592
 741:lcd.c         ****       lcd_write_register(R80,xsta);
 2781              		.loc 1 741 7 view .LVU593
 739:lcd.c         ****       unsigned int n;
 2782              		.loc 1 739 1 is_stmt 0 view .LVU594
 2783 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2784              		.cfi_def_cfa_offset 24
 2785              		.cfi_offset 4, -24
 2786              		.cfi_offset 5, -20
 2787              		.cfi_offset 6, -16
 2788              		.cfi_offset 7, -12
 2789              		.cfi_offset 8, -8
 2790              		.cfi_offset 14, -4
 739:lcd.c         ****       unsigned int n;
 2791              		.loc 1 739 1 view .LVU595
 2792 0004 1546     		mov	r5, r2
 2793 0006 8846     		mov	r8, r1
 2794 0008 1E46     		mov	r6, r3
 2795 000a 0446     		mov	r4, r0
 2796              		.loc 1 741 7 view .LVU596
 2797 000c 0146     		mov	r1, r0
 2798              	.LVL355:
 2799              		.loc 1 741 7 view .LVU597
 2800 000e 5020     		movs	r0, #80
 2801              	.LVL356:
 739:lcd.c         ****       unsigned int n;
 2802              		.loc 1 739 1 view .LVU598
 2803 0010 BDF81870 		ldrh	r7, [sp, #24]
 2804              		.loc 1 741 7 view .LVU599
 2805 0014 FFF7FEFF 		bl	lcd_write_register
 2806              	.LVL357:
 742:lcd.c         ****       lcd_write_register(R81,xend);
 2807              		.loc 1 742 7 is_stmt 1 view .LVU600
 2808 0018 2946     		mov	r1, r5
 2809 001a 5120     		movs	r0, #81
 2810 001c FFF7FEFF 		bl	lcd_write_register
 2811              	.LVL358:
 743:lcd.c         ****       lcd_write_register(R82,ysta);
 2812              		.loc 1 743 7 view .LVU601
 2813 0020 4146     		mov	r1, r8
 2814 0022 5220     		movs	r0, #82
 2815 0024 FFF7FEFF 		bl	lcd_write_register
 2816              	.LVL359:
 744:lcd.c         ****       lcd_write_register(R83,yend);
 2817              		.loc 1 744 7 view .LVU602
 2818 0028 3146     		mov	r1, r6
 2819 002a 5320     		movs	r0, #83
 2820 002c FFF7FEFF 		bl	lcd_write_register
 2821              	.LVL360:
 745:lcd.c         ****       lcd_set_cursor(xsta,ysta);
 2822              		.loc 1 745 7 view .LVU603
 2823 0030 2046     		mov	r0, r4
 2824 0032 4146     		mov	r1, r8
 2825 0034 FFF7FEFF 		bl	lcd_set_cursor
 2826              	.LVL361:
 746:lcd.c         ****       lcd_write_ram_prepare();
 2827              		.loc 1 746 7 view .LVU604
 2828 0038 FFF7FEFF 		bl	lcd_write_ram_prepare
 2829              	.LVL362:
 747:lcd.c         ****       n = (unsigned int)(yend - ysta + 1) *(xend - xsta + 1);
 2830              		.loc 1 747 7 view .LVU605
 2831              		.loc 1 747 50 is_stmt 0 view .LVU606
 2832 003c 2C1B     		subs	r4, r5, r4
 2833              		.loc 1 747 31 view .LVU607
 2834 003e A6EB0806 		sub	r6, r6, r8
 2835              		.loc 1 747 57 view .LVU608
 2836 0042 0134     		adds	r4, r4, #1
 2837              		.loc 1 747 9 view .LVU609
 2838 0044 06FB0444 		mla	r4, r6, r4, r4
 2839              	.LVL363:
 748:lcd.c         ****       while (n--) {
 2840              		.loc 1 748 7 is_stmt 1 view .LVU610
 2841              	.L82:
 2842              		.loc 1 748 13 view .LVU611
 2843 0048 013C     		subs	r4, r4, #1
 2844              	.LVL364:
 2845              		.loc 1 748 13 is_stmt 0 view .LVU612
 2846 004a 12D2     		bcs	.L83
 749:lcd.c         ****       	    lcd_wr_data(color);
 750:lcd.c         ****       }
 751:lcd.c         ****       lcd_write_register(R80,0x0000);
 2847              		.loc 1 751 7 is_stmt 1 view .LVU613
 2848 004c 0021     		movs	r1, #0
 2849 004e 5020     		movs	r0, #80
 2850 0050 FFF7FEFF 		bl	lcd_write_register
 2851              	.LVL365:
 752:lcd.c         ****       lcd_write_register(R81,0x00EF);
 2852              		.loc 1 752 7 view .LVU614
 2853 0054 EF21     		movs	r1, #239
 2854 0056 5120     		movs	r0, #81
 2855 0058 FFF7FEFF 		bl	lcd_write_register
 2856              	.LVL366:
 753:lcd.c         ****       lcd_write_register(R82,0x0000);
 2857              		.loc 1 753 7 view .LVU615
 2858 005c 0021     		movs	r1, #0
 2859 005e 5220     		movs	r0, #82
 2860 0060 FFF7FEFF 		bl	lcd_write_register
 2861              	.LVL367:
 754:lcd.c         ****       lcd_write_register(R83,0x013F);
 2862              		.loc 1 754 7 view .LVU616
 755:lcd.c         **** }
 2863              		.loc 1 755 1 is_stmt 0 view .LVU617
 2864 0064 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2865              		.cfi_remember_state
 2866              		.cfi_restore 14
 2867              		.cfi_restore 8
 2868              		.cfi_restore 7
 2869              		.cfi_restore 6
 2870              		.cfi_restore 5
 2871              		.cfi_restore 4
 2872              		.cfi_def_cfa_offset 0
 2873              	.LVL368:
 754:lcd.c         ****       lcd_write_register(R83,0x013F);
 2874              		.loc 1 754 7 view .LVU618
 2875 0068 40F23F11 		movw	r1, #319
 2876 006c 5320     		movs	r0, #83
 2877 006e FFF7FEBF 		b	lcd_write_register
 2878              	.LVL369:
 2879              	.L83:
 2880              		.cfi_restore_state
 749:lcd.c         ****       }
 2881              		.loc 1 749 12 is_stmt 1 view .LVU619
 2882 0072 3846     		mov	r0, r7
 2883 0074 FFF7FEFF 		bl	lcd_wr_data
 2884              	.LVL370:
 2885 0078 E6E7     		b	.L82
 2886              		.cfi_endproc
 2887              	.LFE61:
 2889              		.section	.text.lcd_draw_line,"ax",%progbits
 2890              		.align	1
 2891              		.global	lcd_draw_line
 2892              		.syntax unified
 2893              		.thumb
 2894              		.thumb_func
 2895              		.fpu softvfp
 2897              	lcd_draw_line:
 2898              	.LVL371:
 2899              	.LFB62:
 756:lcd.c         **** 
 757:lcd.c         **** 
 758:lcd.c         **** void lcd_draw_line (unsigned char x1, unsigned short y1, unsigned char x2, unsigned short y2)
 759:lcd.c         **** {
 2900              		.loc 1 759 1 view -0
 2901              		.cfi_startproc
 2902              		@ args = 0, pretend = 0, frame = 0
 2903              		@ frame_needed = 0, uses_anonymous_args = 0
 760:lcd.c         ****       unsigned short x, y, t;
 2904              		.loc 1 760 7 view .LVU621
 761:lcd.c         ****       if ((x1 == x2) && (y1 == y2)) lcd_set_pixel(x1, y1);
 2905              		.loc 1 761 7 view .LVU622
 2906              		.loc 1 761 10 is_stmt 0 view .LVU623
 2907 0000 9042     		cmp	r0, r2
 759:lcd.c         ****       unsigned short x, y, t;
 2908              		.loc 1 759 1 view .LVU624
 2909 0002 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2910              		.cfi_def_cfa_offset 32
 2911              		.cfi_offset 3, -32
 2912              		.cfi_offset 4, -28
 2913              		.cfi_offset 5, -24
 2914              		.cfi_offset 6, -20
 2915              		.cfi_offset 7, -16
 2916              		.cfi_offset 8, -12
 2917              		.cfi_offset 9, -8
 2918              		.cfi_offset 14, -4
 759:lcd.c         ****       unsigned short x, y, t;
 2919              		.loc 1 759 1 view .LVU625
 2920 0006 0546     		mov	r5, r0
 2921 0008 0C46     		mov	r4, r1
 2922 000a 1E46     		mov	r6, r3
 2923              		.loc 1 761 10 view .LVU626
 2924 000c 05D1     		bne	.L85
 2925              		.loc 1 761 22 discriminator 1 view .LVU627
 2926 000e 9942     		cmp	r1, r3
 2927 0010 03D1     		bne	.L85
 2928              		.loc 1 761 37 is_stmt 1 discriminator 2 view .LVU628
 762:lcd.c         ****       else if (abs(y2 - y1) > abs(x2 - x1)) {
 763:lcd.c         **** 	 if (y1 > y2) {
 764:lcd.c         **** 	    t = y1;
 765:lcd.c         ****   	    y1 = y2;
 766:lcd.c         **** 	    y2 = t;
 767:lcd.c         **** 	    t = x1;
 768:lcd.c         **** 	    x1 = x2;
 769:lcd.c         **** 	    x2 = t;
 770:lcd.c         ****          }
 771:lcd.c         **** 	 for (y=y1;y<y2;y++) {
 772:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 773:lcd.c         **** 	     lcd_set_pixel(x, y);
 774:lcd.c         **** 	 }
 775:lcd.c         ****       }	else {
 776:lcd.c         **** 	 if (x1 > x2) {
 777:lcd.c         **** 	    t = y1;
 778:lcd.c         ****    	    y1 = y2;
 779:lcd.c         ****      	    y2 = t;
 780:lcd.c         ****             t = x1;
 781:lcd.c         **** 	    x1 = x2;
 782:lcd.c         **** 	    x2 = t;
 783:lcd.c         **** 	 }
 784:lcd.c         **** 	 for (x=x1;x<=x2;x++) {
 785:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 786:lcd.c         **** 	     lcd_set_pixel(x,y);
 787:lcd.c         **** 	 }
 788:lcd.c         ****       }
 789:lcd.c         **** }
 2929              		.loc 1 789 1 is_stmt 0 discriminator 2 view .LVU629
 2930 0012 BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}
 2931              		.cfi_remember_state
 2932              		.cfi_restore 14
 2933              		.cfi_restore 9
 2934              		.cfi_restore 8
 2935              		.cfi_restore 7
 2936              		.cfi_restore 6
 2937              		.cfi_restore 5
 2938              		.cfi_restore 4
 2939              		.cfi_restore 3
 2940              		.cfi_def_cfa_offset 0
 2941              	.LVL372:
 761:lcd.c         ****       else if (abs(y2 - y1) > abs(x2 - x1)) {
 2942              		.loc 1 761 37 discriminator 2 view .LVU630
 2943 0016 FFF7FEBF 		b	lcd_set_pixel
 2944              	.LVL373:
 2945              	.L85:
 2946              		.cfi_restore_state
 762:lcd.c         ****       else if (abs(y2 - y1) > abs(x2 - x1)) {
 2947              		.loc 1 762 12 is_stmt 1 view .LVU631
 762:lcd.c         ****       else if (abs(y2 - y1) > abs(x2 - x1)) {
 2948              		.loc 1 762 23 is_stmt 0 view .LVU632
 2949 001a 311B     		subs	r1, r6, r4
 2950              	.LVL374:
 762:lcd.c         ****       else if (abs(y2 - y1) > abs(x2 - x1)) {
 2951              		.loc 1 762 38 view .LVU633
 2952 001c 531B     		subs	r3, r2, r5
 2953              	.LVL375:
 762:lcd.c         ****       else if (abs(y2 - y1) > abs(x2 - x1)) {
 2954              		.loc 1 762 16 view .LVU634
 2955 001e 0029     		cmp	r1, #0
 2956 0020 B8BF     		it	lt
 2957 0022 4942     		rsblt	r1, r1, #0
 762:lcd.c         ****       else if (abs(y2 - y1) > abs(x2 - x1)) {
 2958              		.loc 1 762 31 view .LVU635
 2959 0024 002B     		cmp	r3, #0
 2960 0026 B8BF     		it	lt
 2961 0028 5B42     		rsblt	r3, r3, #0
 762:lcd.c         ****       else if (abs(y2 - y1) > abs(x2 - x1)) {
 2962              		.loc 1 762 15 view .LVU636
 2963 002a 9942     		cmp	r1, r3
 2964 002c 1BDD     		ble	.L86
 2965              	.LVL376:
 2966              	.LBB96:
 2967              	.LBI96:
 758:lcd.c         **** {
 2968              		.loc 1 758 6 is_stmt 1 view .LVU637
 2969              	.LBB97:
 763:lcd.c         **** 	    t = y1;
 2970              		.loc 1 763 3 view .LVU638
 763:lcd.c         **** 	    t = y1;
 2971              		.loc 1 763 6 is_stmt 0 view .LVU639
 2972 002e B442     		cmp	r4, r6
 2973 0030 05D9     		bls	.L87
 2974 0032 2346     		mov	r3, r4
 2975 0034 3446     		mov	r4, r6
 2976              	.LVL377:
 763:lcd.c         **** 	    t = y1;
 2977              		.loc 1 763 6 view .LVU640
 2978 0036 1E46     		mov	r6, r3
 2979              	.LVL378:
 763:lcd.c         **** 	    t = y1;
 2980              		.loc 1 763 6 view .LVU641
 2981 0038 2B46     		mov	r3, r5
 2982 003a 1546     		mov	r5, r2
 2983              	.LVL379:
 763:lcd.c         **** 	    t = y1;
 2984              		.loc 1 763 6 view .LVU642
 2985 003c 1A46     		mov	r2, r3
 2986              	.LVL380:
 2987              	.L87:
 771:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 2988              		.loc 1 771 3 is_stmt 1 view .LVU643
 771:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 2989              		.loc 1 771 3 is_stmt 0 view .LVU644
 2990 003e 0027     		movs	r7, #0
 2991 0040 A2EB0508 		sub	r8, r2, r5
 772:lcd.c         **** 	     lcd_set_pixel(x, y);
 2992              		.loc 1 772 52 view .LVU645
 2993 0044 A6EB0409 		sub	r9, r6, r4
 2994              	.LVL381:
 2995              	.L88:
 771:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 2996              		.loc 1 771 13 is_stmt 1 view .LVU646
 771:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 2997              		.loc 1 771 3 is_stmt 0 view .LVU647
 2998 0048 B442     		cmp	r4, r6
 2999 004a 01D3     		bcc	.L89
 3000              	.LVL382:
 3001              	.L84:
 771:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 3002              		.loc 1 771 3 view .LVU648
 3003              	.LBE97:
 3004              	.LBE96:
 3005              		.loc 1 789 1 view .LVU649
 3006 004c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3007              	.LVL383:
 3008              	.L89:
 3009              	.LBB99:
 3010              	.LBB98:
 772:lcd.c         **** 	     lcd_set_pixel(x, y);
 3011              		.loc 1 772 7 is_stmt 1 view .LVU650
 773:lcd.c         **** 	 }
 3012              		.loc 1 773 7 view .LVU651
 772:lcd.c         **** 	     lcd_set_pixel(x, y);
 3013              		.loc 1 772 46 is_stmt 0 view .LVU652
 3014 0050 B7FBF9F0 		udiv	r0, r7, r9
 772:lcd.c         **** 	     lcd_set_pixel(x, y);
 3015              		.loc 1 772 9 view .LVU653
 3016 0054 2844     		add	r0, r0, r5
 773:lcd.c         **** 	 }
 3017              		.loc 1 773 7 view .LVU654
 3018 0056 2146     		mov	r1, r4
 3019 0058 C0B2     		uxtb	r0, r0
 771:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 3020              		.loc 1 771 19 view .LVU655
 3021 005a 0134     		adds	r4, r4, #1
 3022              	.LVL384:
 773:lcd.c         **** 	 }
 3023              		.loc 1 773 7 view .LVU656
 3024 005c FFF7FEFF 		bl	lcd_set_pixel
 3025              	.LVL385:
 771:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 3026              		.loc 1 771 18 is_stmt 1 view .LVU657
 771:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 3027              		.loc 1 771 19 is_stmt 0 view .LVU658
 3028 0060 A4B2     		uxth	r4, r4
 3029              	.LVL386:
 771:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 3030              		.loc 1 771 19 view .LVU659
 3031 0062 4744     		add	r7, r7, r8
 771:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 3032              		.loc 1 771 19 view .LVU660
 3033 0064 F0E7     		b	.L88
 3034              	.LVL387:
 3035              	.L86:
 771:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 3036              		.loc 1 771 19 view .LVU661
 3037              	.LBE98:
 3038              	.LBE99:
 776:lcd.c         **** 	    t = y1;
 3039              		.loc 1 776 3 is_stmt 1 view .LVU662
 776:lcd.c         **** 	    t = y1;
 3040              		.loc 1 776 6 is_stmt 0 view .LVU663
 3041 0066 9542     		cmp	r5, r2
 3042 0068 05D9     		bls	.L91
 3043 006a 2346     		mov	r3, r4
 3044 006c 3446     		mov	r4, r6
 3045 006e 1E46     		mov	r6, r3
 3046 0070 2B46     		mov	r3, r5
 3047 0072 1546     		mov	r5, r2
 3048 0074 1A46     		mov	r2, r3
 3049              	.LVL388:
 3050              	.L91:
 784:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3051              		.loc 1 784 3 is_stmt 1 view .LVU664
 3052 0076 4FF00008 		mov	r8, #0
 784:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3053              		.loc 1 784 9 is_stmt 0 view .LVU665
 3054 007a AFB2     		uxth	r7, r5
 3055              	.LVL389:
 784:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3056              		.loc 1 784 9 view .LVU666
 3057 007c 361B     		subs	r6, r6, r4
 3058              	.LVL390:
 784:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3059              		.loc 1 784 3 view .LVU667
 3060 007e 1FFA82F9 		uxth	r9, r2
 785:lcd.c         **** 	     lcd_set_pixel(x,y);
 3061              		.loc 1 785 51 view .LVU668
 3062 0082 551B     		subs	r5, r2, r5
 3063              	.LVL391:
 3064              	.L92:
 784:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3065              		.loc 1 784 13 is_stmt 1 discriminator 1 view .LVU669
 784:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3066              		.loc 1 784 3 is_stmt 0 discriminator 1 view .LVU670
 3067 0084 B945     		cmp	r9, r7
 3068 0086 E1D3     		bcc	.L84
 785:lcd.c         **** 	     lcd_set_pixel(x,y);
 3069              		.loc 1 785 7 is_stmt 1 discriminator 3 view .LVU671
 3070              	.LVL392:
 786:lcd.c         **** 	 }
 3071              		.loc 1 786 7 discriminator 3 view .LVU672
 785:lcd.c         **** 	     lcd_set_pixel(x,y);
 3072              		.loc 1 785 45 is_stmt 0 discriminator 3 view .LVU673
 3073 0088 B8FBF5F1 		udiv	r1, r8, r5
 785:lcd.c         **** 	     lcd_set_pixel(x,y);
 3074              		.loc 1 785 9 discriminator 3 view .LVU674
 3075 008c 2144     		add	r1, r1, r4
 786:lcd.c         **** 	 }
 3076              		.loc 1 786 7 discriminator 3 view .LVU675
 3077 008e F8B2     		uxtb	r0, r7
 3078 0090 89B2     		uxth	r1, r1
 784:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3079              		.loc 1 784 20 discriminator 3 view .LVU676
 3080 0092 0137     		adds	r7, r7, #1
 3081              	.LVL393:
 786:lcd.c         **** 	 }
 3082              		.loc 1 786 7 discriminator 3 view .LVU677
 3083 0094 FFF7FEFF 		bl	lcd_set_pixel
 3084              	.LVL394:
 784:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3085              		.loc 1 784 19 is_stmt 1 discriminator 3 view .LVU678
 784:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3086              		.loc 1 784 20 is_stmt 0 discriminator 3 view .LVU679
 3087 0098 BFB2     		uxth	r7, r7
 3088              	.LVL395:
 784:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3089              		.loc 1 784 20 discriminator 3 view .LVU680
 3090 009a B044     		add	r8, r8, r6
 784:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3091              		.loc 1 784 20 discriminator 3 view .LVU681
 3092 009c F2E7     		b	.L92
 3093              		.cfi_endproc
 3094              	.LFE62:
 3096              		.section	.text.lcd_draw_rectangle,"ax",%progbits
 3097              		.align	1
 3098              		.global	lcd_draw_rectangle
 3099              		.syntax unified
 3100              		.thumb
 3101              		.thumb_func
 3102              		.fpu softvfp
 3104              	lcd_draw_rectangle:
 3105              	.LVL396:
 3106              	.LFB63:
 790:lcd.c         **** 
 791:lcd.c         **** 
 792:lcd.c         **** void lcd_draw_rectangle (unsigned char x1, unsigned short y1, unsigned char x2, unsigned short y2)
 793:lcd.c         **** {
 3107              		.loc 1 793 1 is_stmt 1 view -0
 3108              		.cfi_startproc
 3109              		@ args = 0, pretend = 0, frame = 0
 3110              		@ frame_needed = 0, uses_anonymous_args = 0
 794:lcd.c         ****       lcd_draw_line(x1,y1,x2,y1);
 3111              		.loc 1 794 7 view .LVU683
 793:lcd.c         ****       lcd_draw_line(x1,y1,x2,y1);
 3112              		.loc 1 793 1 is_stmt 0 view .LVU684
 3113 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3114              		.cfi_def_cfa_offset 24
 3115              		.cfi_offset 4, -24
 3116              		.cfi_offset 5, -20
 3117              		.cfi_offset 6, -16
 3118              		.cfi_offset 7, -12
 3119              		.cfi_offset 8, -8
 3120              		.cfi_offset 14, -4
 793:lcd.c         ****       lcd_draw_line(x1,y1,x2,y1);
 3121              		.loc 1 793 1 view .LVU685
 3122 0004 1C46     		mov	r4, r3
 3123 0006 0646     		mov	r6, r0
 3124 0008 0D46     		mov	r5, r1
 3125 000a 1746     		mov	r7, r2
 3126              		.loc 1 794 7 view .LVU686
 3127 000c 0B46     		mov	r3, r1
 3128              	.LVL397:
 3129              		.loc 1 794 7 view .LVU687
 3130 000e FFF7FEFF 		bl	lcd_draw_line
 3131              	.LVL398:
 795:lcd.c         ****       lcd_draw_line(x1,y1,x1,y2);
 3132              		.loc 1 795 7 is_stmt 1 view .LVU688
 3133 0012 2346     		mov	r3, r4
 3134 0014 3246     		mov	r2, r6
 3135 0016 2946     		mov	r1, r5
 3136 0018 3046     		mov	r0, r6
 3137 001a FFF7FEFF 		bl	lcd_draw_line
 3138              	.LVL399:
 796:lcd.c         ****       lcd_draw_line(x1,y2,x2,y2);
 3139              		.loc 1 796 7 view .LVU689
 3140 001e 2346     		mov	r3, r4
 3141 0020 3A46     		mov	r2, r7
 3142 0022 2146     		mov	r1, r4
 3143 0024 3046     		mov	r0, r6
 3144 0026 FFF7FEFF 		bl	lcd_draw_line
 3145              	.LVL400:
 797:lcd.c         ****       lcd_draw_line(x2,y1,x2,y2);
 3146              		.loc 1 797 7 view .LVU690
 3147 002a 2346     		mov	r3, r4
 3148 002c 3A46     		mov	r2, r7
 3149 002e 2946     		mov	r1, r5
 3150 0030 3846     		mov	r0, r7
 798:lcd.c         **** }
 3151              		.loc 1 798 1 is_stmt 0 view .LVU691
 3152 0032 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 3153              		.cfi_restore 14
 3154              		.cfi_restore 8
 3155              		.cfi_restore 7
 3156              		.cfi_restore 6
 3157              		.cfi_restore 5
 3158              		.cfi_restore 4
 3159              		.cfi_def_cfa_offset 0
 797:lcd.c         ****       lcd_draw_line(x2,y1,x2,y2);
 3160              		.loc 1 797 7 view .LVU692
 3161 0036 FFF7FEBF 		b	lcd_draw_line
 3162              	.LVL401:
 3163              		.cfi_endproc
 3164              	.LFE63:
 3166              		.section	.text.lcd_draw_circle,"ax",%progbits
 3167              		.align	1
 3168              		.global	lcd_draw_circle
 3169              		.syntax unified
 3170              		.thumb
 3171              		.thumb_func
 3172              		.fpu softvfp
 3174              	lcd_draw_circle:
 3175              	.LVL402:
 3176              	.LFB64:
 799:lcd.c         **** 
 800:lcd.c         **** 
 801:lcd.c         **** void lcd_draw_circle (unsigned char x0,unsigned short y0,unsigned char r)
 802:lcd.c         **** {
 3177              		.loc 1 802 1 is_stmt 1 view -0
 3178              		.cfi_startproc
 3179              		@ args = 0, pretend = 0, frame = 24
 3180              		@ frame_needed = 0, uses_anonymous_args = 0
 803:lcd.c         ****       int a,b;
 3181              		.loc 1 803 7 view .LVU694
 804:lcd.c         ****       int di;
 3182              		.loc 1 804 7 view .LVU695
 805:lcd.c         ****       a = 0;
 3183              		.loc 1 805 7 view .LVU696
 806:lcd.c         ****       b = r;
 3184              		.loc 1 806 7 view .LVU697
 807:lcd.c         ****       di = 3 - (r << 1);
 3185              		.loc 1 807 7 view .LVU698
 802:lcd.c         ****       int a,b;
 3186              		.loc 1 802 1 is_stmt 0 view .LVU699
 3187 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3188              		.cfi_def_cfa_offset 36
 3189              		.cfi_offset 4, -36
 3190              		.cfi_offset 5, -32
 3191              		.cfi_offset 6, -28
 3192              		.cfi_offset 7, -24
 3193              		.cfi_offset 8, -20
 3194              		.cfi_offset 9, -16
 3195              		.cfi_offset 10, -12
 3196              		.cfi_offset 11, -8
 3197              		.cfi_offset 14, -4
 3198 0004 0746     		mov	r7, r0
 3199 0006 8846     		mov	r8, r1
 3200 0008 1446     		mov	r4, r2
 805:lcd.c         ****       b = r;
 3201              		.loc 1 805 9 view .LVU700
 3202 000a 0026     		movs	r6, #0
 3203              		.loc 1 807 19 view .LVU701
 3204 000c 5500     		lsls	r5, r2, #1
 802:lcd.c         ****       int a,b;
 3205              		.loc 1 802 1 view .LVU702
 3206 000e 87B0     		sub	sp, sp, #28
 3207              		.cfi_def_cfa_offset 64
 3208              		.loc 1 807 10 view .LVU703
 3209 0010 C5F10305 		rsb	r5, r5, #3
 3210              	.LVL403:
 808:lcd.c         ****       while (a <= b) {
 3211              		.loc 1 808 7 is_stmt 1 view .LVU704
 3212              		.loc 1 808 13 view .LVU705
 3213              	.L99:
 809:lcd.c         **** 	    lcd_set_pixel(x0-b,y0-a);
 3214              		.loc 1 809 6 view .LVU706
 3215 0014 B3B2     		uxth	r3, r6
 3216 0016 5FFA84F9 		uxtb	r9, r4
 3217 001a A8EB030B 		sub	fp, r8, r3
 3218 001e A7EB090A 		sub	r10, r7, r9
 3219 0022 1FFA8BFB 		uxth	fp, fp
 3220 0026 5FFA8AFA 		uxtb	r10, r10
 810:lcd.c         **** 	    lcd_set_pixel(x0+b,y0-a);
 3221              		.loc 1 810 6 is_stmt 0 view .LVU707
 3222 002a B944     		add	r9, r9, r7
 809:lcd.c         **** 	    lcd_set_pixel(x0-b,y0-a);
 3223              		.loc 1 809 6 view .LVU708
 3224 002c 5946     		mov	r1, fp
 3225              		.loc 1 810 6 view .LVU709
 3226 002e 5FFA89F9 		uxtb	r9, r9
 809:lcd.c         **** 	    lcd_set_pixel(x0-b,y0-a);
 3227              		.loc 1 809 6 view .LVU710
 3228 0032 5046     		mov	r0, r10
 3229 0034 0393     		str	r3, [sp, #12]
 3230 0036 FFF7FEFF 		bl	lcd_set_pixel
 3231              	.LVL404:
 3232              		.loc 1 810 6 is_stmt 1 view .LVU711
 3233 003a 5946     		mov	r1, fp
 3234 003c 4846     		mov	r0, r9
 3235 003e FFF7FEFF 		bl	lcd_set_pixel
 3236              	.LVL405:
 811:lcd.c         **** 	    lcd_set_pixel(x0-a,y0+b);
 3237              		.loc 1 811 6 view .LVU712
 3238 0042 F3B2     		uxtb	r3, r6
 3239 0044 0293     		str	r3, [sp, #8]
 3240 0046 FA1A     		subs	r2, r7, r3
 3241 0048 A3B2     		uxth	r3, r4
 3242 004a 0193     		str	r3, [sp, #4]
 3243 004c 4344     		add	r3, r3, r8
 3244 004e D2B2     		uxtb	r2, r2
 3245 0050 9BB2     		uxth	r3, r3
 3246 0052 1946     		mov	r1, r3
 3247 0054 1046     		mov	r0, r2
 3248 0056 0593     		str	r3, [sp, #20]
 3249 0058 0492     		str	r2, [sp, #16]
 3250 005a FFF7FEFF 		bl	lcd_set_pixel
 3251              	.LVL406:
 812:lcd.c         **** 	    lcd_set_pixel(x0-b,y0-a);
 3252              		.loc 1 812 6 view .LVU713
 3253 005e 5946     		mov	r1, fp
 3254 0060 5046     		mov	r0, r10
 3255 0062 FFF7FEFF 		bl	lcd_set_pixel
 3256              	.LVL407:
 813:lcd.c         **** 	    lcd_set_pixel(x0-a,y0-b);
 3257              		.loc 1 813 6 view .LVU714
 3258 0066 019B     		ldr	r3, [sp, #4]
 3259 0068 049A     		ldr	r2, [sp, #16]
 3260 006a A8EB030B 		sub	fp, r8, r3
 3261 006e 1FFA8BFB 		uxth	fp, fp
 3262 0072 1046     		mov	r0, r2
 3263 0074 5946     		mov	r1, fp
 3264 0076 FFF7FEFF 		bl	lcd_set_pixel
 3265              	.LVL408:
 814:lcd.c         **** 	    lcd_set_pixel(x0+b,y0+a);
 3266              		.loc 1 814 6 view .LVU715
 3267 007a 039B     		ldr	r3, [sp, #12]
 3268 007c 4846     		mov	r0, r9
 3269 007e 08EB0302 		add	r2, r8, r3
 3270 0082 92B2     		uxth	r2, r2
 3271 0084 1146     		mov	r1, r2
 3272 0086 0192     		str	r2, [sp, #4]
 3273 0088 FFF7FEFF 		bl	lcd_set_pixel
 3274              	.LVL409:
 815:lcd.c         **** 	    lcd_set_pixel(x0+a,y0-b);
 3275              		.loc 1 815 6 view .LVU716
 3276 008c 029B     		ldr	r3, [sp, #8]
 3277 008e 5946     		mov	r1, fp
 3278 0090 03EB0709 		add	r9, r3, r7
 3279 0094 5FFA89F9 		uxtb	r9, r9
 3280 0098 4846     		mov	r0, r9
 3281 009a FFF7FEFF 		bl	lcd_set_pixel
 3282              	.LVL410:
 816:lcd.c         **** 	    lcd_set_pixel(x0+a,y0+b);
 3283              		.loc 1 816 6 view .LVU717
 3284 009e 059B     		ldr	r3, [sp, #20]
 3285 00a0 4846     		mov	r0, r9
 3286 00a2 1946     		mov	r1, r3
 3287 00a4 FFF7FEFF 		bl	lcd_set_pixel
 3288              	.LVL411:
 817:lcd.c         **** 	    lcd_set_pixel(x0-b,y0+a);
 3289              		.loc 1 817 6 view .LVU718
 3290 00a8 019A     		ldr	r2, [sp, #4]
 3291 00aa 5046     		mov	r0, r10
 3292 00ac 1146     		mov	r1, r2
 3293 00ae FFF7FEFF 		bl	lcd_set_pixel
 3294              	.LVL412:
 818:lcd.c         **** 	    a++;
 3295              		.loc 1 818 6 view .LVU719
 3296              		.loc 1 818 7 is_stmt 0 view .LVU720
 3297 00b2 0136     		adds	r6, r6, #1
 3298              	.LVL413:
 819:lcd.c         **** 	    if (di < 0) {
 3299              		.loc 1 819 6 is_stmt 1 view .LVU721
 3300              		.loc 1 819 9 is_stmt 0 view .LVU722
 3301 00b4 002D     		cmp	r5, #0
 820:lcd.c         **** 	       di += 4 * a + 6;
 3302              		.loc 1 820 9 is_stmt 1 view .LVU723
 821:lcd.c         **** 	    } else {
 822:lcd.c         **** 	       di += 10 + 4 * (a - b);
 3303              		.loc 1 822 27 is_stmt 0 view .LVU724
 3304 00b6 A4BF     		itt	ge
 3305 00b8 331B     		subge	r3, r6, r4
 823:lcd.c         **** 	       b--;
 3306              		.loc 1 823 10 view .LVU725
 3307 00ba 04F1FF34 		addge	r4, r4, #-1
 3308              	.LVL414:
 824:lcd.c         **** 	    }
 825:lcd.c         **** 	    lcd_set_pixel(x0+a,y0+b);
 3309              		.loc 1 825 6 view .LVU726
 3310 00be 08EB0401 		add	r1, r8, r4
 3311 00c2 07EB0600 		add	r0, r7, r6
 820:lcd.c         **** 	    } else {
 3312              		.loc 1 820 12 view .LVU727
 3313 00c6 B4BF     		ite	lt
 3314 00c8 05EB8605 		addlt	r5, r5, r6, lsl #2
 3315              	.LVL415:
 822:lcd.c         **** 	       b--;
 3316              		.loc 1 822 18 view .LVU728
 3317 00cc 05EB8305 		addge	r5, r5, r3, lsl #2
 3318              		.loc 1 825 6 view .LVU729
 3319 00d0 89B2     		uxth	r1, r1
 3320 00d2 C0B2     		uxtb	r0, r0
 820:lcd.c         **** 	    } else {
 3321              		.loc 1 820 12 view .LVU730
 3322 00d4 B4BF     		ite	lt
 3323 00d6 0635     		addlt	r5, r5, #6
 822:lcd.c         **** 	       b--;
 3324              		.loc 1 822 9 is_stmt 1 view .LVU731
 822:lcd.c         **** 	       b--;
 3325              		.loc 1 822 12 is_stmt 0 view .LVU732
 3326 00d8 0A35     		addge	r5, r5, #10
 3327              	.LVL416:
 823:lcd.c         **** 	    }
 3328              		.loc 1 823 9 is_stmt 1 view .LVU733
 3329              		.loc 1 825 6 view .LVU734
 3330 00da FFF7FEFF 		bl	lcd_set_pixel
 3331              	.LVL417:
 808:lcd.c         **** 	    lcd_set_pixel(x0-b,y0-a);
 3332              		.loc 1 808 13 view .LVU735
 3333 00de B442     		cmp	r4, r6
 3334 00e0 98DA     		bge	.L99
 826:lcd.c         ****       }
 827:lcd.c         **** }
 3335              		.loc 1 827 1 is_stmt 0 view .LVU736
 3336 00e2 07B0     		add	sp, sp, #28
 3337              		.cfi_def_cfa_offset 36
 3338              		@ sp needed
 3339 00e4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3340              		.loc 1 827 1 view .LVU737
 3341              		.cfi_endproc
 3342              	.LFE64:
 3344              		.section	.text.set_color,"ax",%progbits
 3345              		.align	1
 3346              		.global	set_color
 3347              		.syntax unified
 3348              		.thumb
 3349              		.thumb_func
 3350              		.fpu softvfp
 3352              	set_color:
 3353              	.LVL418:
 3354              	.LFB65:
 828:lcd.c         **** 
 829:lcd.c         **** 
 830:lcd.c         **** void set_color (unsigned short color)
 831:lcd.c         **** {
 3355              		.loc 1 831 1 is_stmt 1 view -0
 3356              		.cfi_startproc
 3357              		@ args = 0, pretend = 0, frame = 0
 3358              		@ frame_needed = 0, uses_anonymous_args = 0
 3359              		@ link register save eliminated.
 832:lcd.c         ****       foreground_color = color;
 3360              		.loc 1 832 7 view .LVU739
 3361              		.loc 1 832 24 is_stmt 0 view .LVU740
 3362 0000 014B     		ldr	r3, .L102
 3363 0002 1880     		strh	r0, [r3]	@ movhi
 833:lcd.c         **** }
 3364              		.loc 1 833 1 view .LVU741
 3365 0004 7047     		bx	lr
 3366              	.L103:
 3367 0006 00BF     		.align	2
 3368              	.L102:
 3369 0008 00000000 		.word	foreground_color
 3370              		.cfi_endproc
 3371              	.LFE65:
 3373              		.section	.text.set_background_color,"ax",%progbits
 3374              		.align	1
 3375              		.global	set_background_color
 3376              		.syntax unified
 3377              		.thumb
 3378              		.thumb_func
 3379              		.fpu softvfp
 3381              	set_background_color:
 3382              	.LVL419:
 3383              	.LFB66:
 834:lcd.c         **** 
 835:lcd.c         **** 
 836:lcd.c         **** void set_background_color (unsigned short color)
 837:lcd.c         **** {
 3384              		.loc 1 837 1 is_stmt 1 view -0
 3385              		.cfi_startproc
 3386              		@ args = 0, pretend = 0, frame = 0
 3387              		@ frame_needed = 0, uses_anonymous_args = 0
 3388              		@ link register save eliminated.
 838:lcd.c         ****       background_color = color;
 3389              		.loc 1 838 7 view .LVU743
 3390              		.loc 1 838 24 is_stmt 0 view .LVU744
 3391 0000 014B     		ldr	r3, .L105
 3392 0002 1880     		strh	r0, [r3]	@ movhi
 839:lcd.c         **** }
 3393              		.loc 1 839 1 view .LVU745
 3394 0004 7047     		bx	lr
 3395              	.L106:
 3396 0006 00BF     		.align	2
 3397              	.L105:
 3398 0008 00000000 		.word	background_color
 3399              		.cfi_endproc
 3400              	.LFE66:
 3402              		.section	.text.set_pixel,"ax",%progbits
 3403              		.align	1
 3404              		.global	set_pixel
 3405              		.syntax unified
 3406              		.thumb
 3407              		.thumb_func
 3408              		.fpu softvfp
 3410              	set_pixel:
 3411              	.LVL420:
 3412              	.LFB67:
 840:lcd.c         **** 
 841:lcd.c         **** 
 842:lcd.c         **** void set_pixel (unsigned short x, unsigned short y, unsigned short color)
 843:lcd.c         **** {
 3413              		.loc 1 843 1 is_stmt 1 view -0
 3414              		.cfi_startproc
 3415              		@ args = 0, pretend = 0, frame = 0
 3416              		@ frame_needed = 0, uses_anonymous_args = 0
 844:lcd.c         ****       unsigned short temp = foreground_color;
 3417              		.loc 1 844 7 view .LVU747
 843:lcd.c         ****       unsigned short temp = foreground_color;
 3418              		.loc 1 843 1 is_stmt 0 view .LVU748
 3419 0000 38B5     		push	{r3, r4, r5, lr}
 3420              		.cfi_def_cfa_offset 16
 3421              		.cfi_offset 3, -16
 3422              		.cfi_offset 4, -12
 3423              		.cfi_offset 5, -8
 3424              		.cfi_offset 14, -4
 3425              		.loc 1 844 22 view .LVU749
 3426 0002 044C     		ldr	r4, .L108
 845:lcd.c         ****       foreground_color = color;
 846:lcd.c         ****       lcd_set_pixel(x,y);
 3427              		.loc 1 846 7 view .LVU750
 3428 0004 C0B2     		uxtb	r0, r0
 3429              	.LVL421:
 844:lcd.c         ****       foreground_color = color;
 3430              		.loc 1 844 22 view .LVU751
 3431 0006 2588     		ldrh	r5, [r4]
 3432              	.LVL422:
 845:lcd.c         ****       foreground_color = color;
 3433              		.loc 1 845 7 is_stmt 1 view .LVU752
 845:lcd.c         ****       foreground_color = color;
 3434              		.loc 1 845 24 is_stmt 0 view .LVU753
 3435 0008 2280     		strh	r2, [r4]	@ movhi
 3436              		.loc 1 846 7 is_stmt 1 view .LVU754
 3437 000a FFF7FEFF 		bl	lcd_set_pixel
 3438              	.LVL423:
 847:lcd.c         ****       foreground_color = temp;
 3439              		.loc 1 847 7 view .LVU755
 3440              		.loc 1 847 24 is_stmt 0 view .LVU756
 3441 000e 2580     		strh	r5, [r4]	@ movhi
 848:lcd.c         **** }
 3442              		.loc 1 848 1 view .LVU757
 3443 0010 38BD     		pop	{r3, r4, r5, pc}
 3444              	.LVL424:
 3445              	.L109:
 3446              		.loc 1 848 1 view .LVU758
 3447 0012 00BF     		.align	2
 3448              	.L108:
 3449 0014 00000000 		.word	foreground_color
 3450              		.cfi_endproc
 3451              	.LFE67:
 3453              		.section	.text.out_lcd,"ax",%progbits
 3454              		.align	1
 3455              		.global	out_lcd
 3456              		.syntax unified
 3457              		.thumb
 3458              		.thumb_func
 3459              		.fpu softvfp
 3461              	out_lcd:
 3462              	.LVL425:
 3463              	.LFB68:
 849:lcd.c         **** 
 850:lcd.c         **** 
 851:lcd.c         **** void out_lcd (char wchar)
 852:lcd.c         **** {
 3464              		.loc 1 852 1 is_stmt 1 view -0
 3465              		.cfi_startproc
 3466              		@ args = 0, pretend = 0, frame = 0
 3467              		@ frame_needed = 0, uses_anonymous_args = 0
 853:lcd.c         ****       int idx;
 3468              		.loc 1 853 7 view .LVU760
 854:lcd.c         ****       for (idx=0;idx<8;idx++) {
 3469              		.loc 1 854 7 view .LVU761
 3470              		.loc 1 854 18 view .LVU762
 852:lcd.c         ****       int idx;
 3471              		.loc 1 852 1 is_stmt 0 view .LVU763
 3472 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3473              		.cfi_def_cfa_offset 32
 3474              		.cfi_offset 3, -32
 3475              		.cfi_offset 4, -28
 3476              		.cfi_offset 5, -24
 3477              		.cfi_offset 6, -20
 3478              		.cfi_offset 7, -16
 3479              		.cfi_offset 8, -12
 3480              		.cfi_offset 9, -8
 3481              		.cfi_offset 14, -4
 3482 0004 DFF84480 		ldr	r8, .L116+12
 852:lcd.c         ****       int idx;
 3483              		.loc 1 852 1 view .LVU764
 3484 0008 0546     		mov	r5, r0
 3485              		.loc 1 854 15 view .LVU765
 3486 000a 0024     		movs	r4, #0
 3487 000c 4646     		mov	r6, r8
 3488 000e 0C4F     		ldr	r7, .L116
 3489 0010 DFF83C90 		ldr	r9, .L116+16
 3490              	.LVL426:
 3491              	.L113:
 855:lcd.c         ****           if ((s_bit[idx] & wchar) == 0) set_pixel(tx,ty,background_color); else set_pixel(tx,ty,fo
 3492              		.loc 1 855 11 is_stmt 1 view .LVU766
 3493              		.loc 1 855 21 is_stmt 0 view .LVU767
 3494 0014 17F8013B 		ldrb	r3, [r7], #1	@ zero_extendqisi2
 3495 0018 B8F80000 		ldrh	r0, [r8]
 3496              		.loc 1 855 14 view .LVU768
 3497 001c 2B42     		tst	r3, r5
 3498              		.loc 1 855 42 is_stmt 1 view .LVU769
 3499 001e 0CBF     		ite	eq
 3500 0020 084B     		ldreq	r3, .L116+4
 3501              		.loc 1 855 82 view .LVU770
 3502 0022 094B     		ldrne	r3, .L116+8
 3503 0024 B9F80010 		ldrh	r1, [r9]
 3504 0028 1A88     		ldrh	r2, [r3]
 3505 002a FFF7FEFF 		bl	set_pixel
 3506              	.LVL427:
 856:lcd.c         ****           tx++;
 3507              		.loc 1 856 11 view .LVU771
 3508              		.loc 1 856 13 is_stmt 0 view .LVU772
 3509 002e 3388     		ldrh	r3, [r6]
 854:lcd.c         ****           if ((s_bit[idx] & wchar) == 0) set_pixel(tx,ty,background_color); else set_pixel(tx,ty,fo
 3510              		.loc 1 854 27 view .LVU773
 3511 0030 0134     		adds	r4, r4, #1
 3512              	.LVL428:
 3513              		.loc 1 856 13 view .LVU774
 3514 0032 0133     		adds	r3, r3, #1
 854:lcd.c         ****           if ((s_bit[idx] & wchar) == 0) set_pixel(tx,ty,background_color); else set_pixel(tx,ty,fo
 3515              		.loc 1 854 7 view .LVU775
 3516 0034 082C     		cmp	r4, #8
 3517              		.loc 1 856 13 view .LVU776
 3518 0036 3380     		strh	r3, [r6]	@ movhi
 854:lcd.c         ****           if ((s_bit[idx] & wchar) == 0) set_pixel(tx,ty,background_color); else set_pixel(tx,ty,fo
 3519              		.loc 1 854 24 is_stmt 1 view .LVU777
 3520              	.LVL429:
 854:lcd.c         ****           if ((s_bit[idx] & wchar) == 0) set_pixel(tx,ty,background_color); else set_pixel(tx,ty,fo
 3521              		.loc 1 854 18 view .LVU778
 854:lcd.c         ****           if ((s_bit[idx] & wchar) == 0) set_pixel(tx,ty,background_color); else set_pixel(tx,ty,fo
 3522              		.loc 1 854 7 is_stmt 0 view .LVU779
 3523 0038 ECD1     		bne	.L113
 857:lcd.c         ****       }
 858:lcd.c         **** }
 3524              		.loc 1 858 1 view .LVU780
 3525 003a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3526              	.LVL430:
 3527              	.L117:
 3528              		.loc 1 858 1 view .LVU781
 3529 003e 00BF     		.align	2
 3530              	.L116:
 3531 0040 00000000 		.word	.LANCHOR0
 3532 0044 00000000 		.word	background_color
 3533 0048 00000000 		.word	foreground_color
 3534 004c 00000000 		.word	tx
 3535 0050 00000000 		.word	ty
 3536              		.cfi_endproc
 3537              	.LFE68:
 3539              		.section	.text.uni_to_kssm2,"ax",%progbits
 3540              		.align	1
 3541              		.global	uni_to_kssm2
 3542              		.syntax unified
 3543              		.thumb
 3544              		.thumb_func
 3545              		.fpu softvfp
 3547              	uni_to_kssm2:
 3548              	.LVL431:
 3549              	.LFB69:
 859:lcd.c         **** 
 860:lcd.c         **** 
 861:lcd.c         **** unsigned short uni_to_kssm2 (unsigned short wchar)
 862:lcd.c         **** {
 3550              		.loc 1 862 1 is_stmt 1 view -0
 3551              		.cfi_startproc
 3552              		@ args = 0, pretend = 0, frame = 0
 3553              		@ frame_needed = 0, uses_anonymous_args = 0
 3554              		@ link register save eliminated.
 863:lcd.c         ****       unsigned short cho_sung,jung_sung,jong_sung,unicode;
 3555              		.loc 1 863 7 view .LVU783
 864:lcd.c         ****       unsigned short temp = 0x0000;
 3556              		.loc 1 864 7 view .LVU784
 865:lcd.c         ****       unsigned short unicode_hangul_base = 0xAC00;
 3557              		.loc 1 865 7 view .LVU785
 866:lcd.c         ****       unsigned short unicode_hangul_last = 0xD79F;
 3558              		.loc 1 866 7 view .LVU786
 867:lcd.c         ****       unsigned short cho,jung,jong,result;
 3559              		.loc 1 867 7 view .LVU787
 868:lcd.c         ****       temp = wchar;
 3560              		.loc 1 868 7 view .LVU788
 869:lcd.c         ****       if ((temp < unicode_hangul_base) || (temp > unicode_hangul_last)) return temp;
 3561              		.loc 1 869 7 view .LVU789
 3562              		.loc 1 869 10 is_stmt 0 view .LVU790
 3563 0000 00F5A843 		add	r3, r0, #21504
 3564 0004 9AB2     		uxth	r2, r3
 3565 0006 42F69F33 		movw	r3, #11167
 3566 000a 9A42     		cmp	r2, r3
 3567 000c 18D8     		bhi	.L119
 870:lcd.c         ****       unicode = temp - unicode_hangul_base;
 3568              		.loc 1 870 7 is_stmt 1 view .LVU791
 3569              	.LVL432:
 871:lcd.c         ****       cho_sung = unicode / (21 * 28);
 3570              		.loc 1 871 7 view .LVU792
 872:lcd.c         ****       unicode = unicode % (21 * 28);
 3571              		.loc 1 872 7 view .LVU793
 3572              		.loc 1 872 15 is_stmt 0 view .LVU794
 3573 000e 4FF41373 		mov	r3, #588
 3574 0012 B2FBF3F1 		udiv	r1, r2, r3
 3575 0016 03FB1123 		mls	r3, r3, r1, r2
 873:lcd.c         ****       jung_sung = unicode / 28;
 3576              		.loc 1 873 17 view .LVU795
 3577 001a 1C22     		movs	r2, #28
 3578              	.LVL433:
 872:lcd.c         ****       unicode = unicode % (21 * 28);
 3579              		.loc 1 872 15 view .LVU796
 3580 001c 9BB2     		uxth	r3, r3
 3581              	.LVL434:
 3582              		.loc 1 873 7 is_stmt 1 view .LVU797
 874:lcd.c         ****       unicode = unicode % 28;
 3583              		.loc 1 874 7 view .LVU798
 875:lcd.c         ****       jong_sung = unicode;
 3584              		.loc 1 875 7 view .LVU799
 876:lcd.c         ****       cho = hangul_chosung_tbl[cho_sung];
 3585              		.loc 1 876 7 view .LVU800
 877:lcd.c         ****       jung = hangul_jungsung_tbl[jung_sung];
 3586              		.loc 1 877 7 view .LVU801
 878:lcd.c         ****       jong = hangul_jongsung_tbl[jong_sung];
 3587              		.loc 1 878 7 view .LVU802
 879:lcd.c         ****       result = (cho | jung | jong);
 3588              		.loc 1 879 7 view .LVU803
 873:lcd.c         ****       unicode = unicode % 28;
 3589              		.loc 1 873 17 is_stmt 0 view .LVU804
 3590 001e B3FBF2F0 		udiv	r0, r3, r2
 3591              	.LVL435:
 874:lcd.c         ****       jong_sung = unicode;
 3592              		.loc 1 874 15 view .LVU805
 3593 0022 02FB1033 		mls	r3, r2, r0, r3
 3594              	.LVL436:
 3595              		.loc 1 879 14 view .LVU806
 3596 0026 074A     		ldr	r2, .L120
 878:lcd.c         ****       result = (cho | jung | jong);
 3597              		.loc 1 878 33 view .LVU807
 3598 0028 9BB2     		uxth	r3, r3
 3599              		.loc 1 879 14 view .LVU808
 3600 002a 32F81000 		ldrh	r0, [r2, r0, lsl #1]
 3601 002e 064A     		ldr	r2, .L120+4
 3602 0030 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 3603 0034 1843     		orrs	r0, r0, r3
 3604 0036 054B     		ldr	r3, .L120+8
 3605 0038 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3606 003c 1843     		orrs	r0, r0, r3
 3607 003e 80B2     		uxth	r0, r0
 3608              	.LVL437:
 880:lcd.c         ****       return result;
 3609              		.loc 1 880 7 is_stmt 1 view .LVU809
 3610              	.L119:
 881:lcd.c         **** }
 3611              		.loc 1 881 1 is_stmt 0 view .LVU810
 3612 0040 7047     		bx	lr
 3613              	.L121:
 3614 0042 00BF     		.align	2
 3615              	.L120:
 3616 0044 00000000 		.word	.LANCHOR1
 3617 0048 00000000 		.word	.LANCHOR2
 3618 004c 00000000 		.word	.LANCHOR3
 3619              		.cfi_endproc
 3620              	.LFE69:
 3622              		.section	.text.uni_to_kssm,"ax",%progbits
 3623              		.align	1
 3624              		.global	uni_to_kssm
 3625              		.syntax unified
 3626              		.thumb
 3627              		.thumb_func
 3628              		.fpu softvfp
 3630              	uni_to_kssm:
 3631              	.LVL438:
 3632              	.LFB70:
 882:lcd.c         **** 
 883:lcd.c         **** 
 884:lcd.c         **** unsigned short uni_to_kssm (unsigned short wchar)
 885:lcd.c         **** {
 3633              		.loc 1 885 1 is_stmt 1 view -0
 3634              		.cfi_startproc
 3635              		@ args = 0, pretend = 0, frame = 0
 3636              		@ frame_needed = 0, uses_anonymous_args = 0
 886:lcd.c         ****       unsigned short cho,joong,jong;
 3637              		.loc 1 886 7 view .LVU812
 887:lcd.c         ****       unsigned short result = 0x8000;
 3638              		.loc 1 887 7 view .LVU813
 888:lcd.c         ****       cho = 2 + (wchar - 0xAC00) / (21 * 28);
 3639              		.loc 1 888 7 view .LVU814
 885:lcd.c         ****       unsigned short cho,joong,jong;
 3640              		.loc 1 885 1 is_stmt 0 view .LVU815
 3641 0000 30B5     		push	{r4, r5, lr}
 3642              		.cfi_def_cfa_offset 12
 3643              		.cfi_offset 4, -12
 3644              		.cfi_offset 5, -8
 3645              		.cfi_offset 14, -4
 3646              		.loc 1 888 34 view .LVU816
 3647 0002 4FF41375 		mov	r5, #588
 3648              		.loc 1 888 24 view .LVU817
 3649 0006 A0F52C44 		sub	r4, r0, #44032
 3650              		.loc 1 888 34 view .LVU818
 3651 000a 94FBF5F2 		sdiv	r2, r4, r5
 3652              		.loc 1 888 11 view .LVU819
 3653 000e 931C     		adds	r3, r2, #2
 3654 0010 99B2     		uxth	r1, r3
 3655              	.LVL439:
 889:lcd.c         ****       joong = (wchar - 0xAC00) % (21 * 28) / 28;
 3656              		.loc 1 889 7 is_stmt 1 view .LVU820
 3657              		.loc 1 889 44 is_stmt 0 view .LVU821
 3658 0012 1C23     		movs	r3, #28
 3659              		.loc 1 889 32 view .LVU822
 3660 0014 05FB1242 		mls	r2, r5, r2, r4
 3661              		.loc 1 889 44 view .LVU823
 3662 0018 92FBF3F3 		sdiv	r3, r2, r3
 3663              		.loc 1 889 13 view .LVU824
 3664 001c 9BB2     		uxth	r3, r3
 3665              	.LVL440:
 890:lcd.c         ****       if (joong < 5) joong += 3;
 3666              		.loc 1 890 7 is_stmt 1 view .LVU825
 3667              		.loc 1 890 10 is_stmt 0 view .LVU826
 3668 001e 042B     		cmp	r3, #4
 3669 0020 16D8     		bhi	.L123
 3670              		.loc 1 890 22 is_stmt 1 discriminator 1 view .LVU827
 3671              		.loc 1 890 28 is_stmt 0 discriminator 1 view .LVU828
 3672 0022 0333     		adds	r3, r3, #3
 3673              	.LVL441:
 3674              	.L129:
 891:lcd.c         ****       else if (joong < 11) joong += 5;
 892:lcd.c         ****       else if (joong < 17) joong += 7;
 893:lcd.c         ****       else joong += 9;
 894:lcd.c         ****       jong  = (wchar - 0xAC00) % 28;
 3675              		.loc 1 894 32 view .LVU829
 3676 0024 1C22     		movs	r2, #28
 3677              	.LVL442:
 893:lcd.c         ****       jong  = (wchar - 0xAC00) % 28;
 3678              		.loc 1 893 18 view .LVU830
 3679 0026 9BB2     		uxth	r3, r3
 3680              	.LVL443:
 3681              		.loc 1 894 7 is_stmt 1 view .LVU831
 895:lcd.c         ****       if (jong < 17) jong++;
 896:lcd.c         ****       else jong += 2;
 897:lcd.c         ****       result |= cho << 10;
 898:lcd.c         ****       result |= joong << 5;
 3682              		.loc 1 898 23 is_stmt 0 view .LVU832
 3683 0028 5B01     		lsls	r3, r3, #5
 3684              	.LVL444:
 3685              		.loc 1 898 14 view .LVU833
 3686 002a 43EA8123 		orr	r3, r3, r1, lsl #10
 3687 002e 6FEA4343 		mvn	r3, r3, lsl #17
 894:lcd.c         ****       if (jong < 17) jong++;
 3688              		.loc 1 894 32 view .LVU834
 3689 0032 94FBF2F0 		sdiv	r0, r4, r2
 3690              	.LVL445:
 3691              		.loc 1 898 14 view .LVU835
 3692 0036 6FEA5343 		mvn	r3, r3, lsr #17
 894:lcd.c         ****       if (jong < 17) jong++;
 3693              		.loc 1 894 32 view .LVU836
 3694 003a 02FB1040 		mls	r0, r2, r0, r4
 894:lcd.c         ****       if (jong < 17) jong++;
 3695              		.loc 1 894 13 view .LVU837
 3696 003e 80B2     		uxth	r0, r0
 3697              	.LVL446:
 895:lcd.c         ****       if (jong < 17) jong++;
 3698              		.loc 1 895 7 is_stmt 1 view .LVU838
 895:lcd.c         ****       if (jong < 17) jong++;
 3699              		.loc 1 895 10 is_stmt 0 view .LVU839
 3700 0040 1028     		cmp	r0, #16
 895:lcd.c         ****       if (jong < 17) jong++;
 3701              		.loc 1 895 22 is_stmt 1 view .LVU840
 895:lcd.c         ****       if (jong < 17) jong++;
 3702              		.loc 1 895 26 is_stmt 0 view .LVU841
 3703 0042 94BF     		ite	ls
 3704 0044 0130     		addls	r0, r0, #1
 3705              	.LVL447:
 896:lcd.c         ****       result |= cho << 10;
 3706              		.loc 1 896 12 is_stmt 1 view .LVU842
 896:lcd.c         ****       result |= cho << 10;
 3707              		.loc 1 896 17 is_stmt 0 view .LVU843
 3708 0046 0230     		addhi	r0, r0, #2
 3709              		.loc 1 898 14 view .LVU844
 3710 0048 9BB2     		uxth	r3, r3
 896:lcd.c         ****       result |= cho << 10;
 3711              		.loc 1 896 17 view .LVU845
 3712 004a 80B2     		uxth	r0, r0
 3713              	.LVL448:
 897:lcd.c         ****       result |= joong << 5;
 3714              		.loc 1 897 7 is_stmt 1 view .LVU846
 3715              		.loc 1 898 7 view .LVU847
 899:lcd.c         ****       result |= jong;
 3716              		.loc 1 899 7 view .LVU848
 900:lcd.c         ****       return result;
 3717              		.loc 1 900 7 view .LVU849
 901:lcd.c         **** }
 3718              		.loc 1 901 1 is_stmt 0 view .LVU850
 3719 004c 1843     		orrs	r0, r0, r3
 3720              	.LVL449:
 3721              		.loc 1 901 1 view .LVU851
 3722 004e 30BD     		pop	{r4, r5, pc}
 3723              	.LVL450:
 3724              	.L123:
 891:lcd.c         ****       else if (joong < 17) joong += 7;
 3725              		.loc 1 891 12 is_stmt 1 view .LVU852
 891:lcd.c         ****       else if (joong < 17) joong += 7;
 3726              		.loc 1 891 15 is_stmt 0 view .LVU853
 3727 0050 0A2B     		cmp	r3, #10
 3728 0052 01D8     		bhi	.L125
 891:lcd.c         ****       else if (joong < 17) joong += 7;
 3729              		.loc 1 891 28 is_stmt 1 discriminator 1 view .LVU854
 891:lcd.c         ****       else if (joong < 17) joong += 7;
 3730              		.loc 1 891 34 is_stmt 0 discriminator 1 view .LVU855
 3731 0054 0533     		adds	r3, r3, #5
 3732              	.LVL451:
 891:lcd.c         ****       else if (joong < 17) joong += 7;
 3733              		.loc 1 891 34 discriminator 1 view .LVU856
 3734 0056 E5E7     		b	.L129
 3735              	.LVL452:
 3736              	.L125:
 892:lcd.c         ****       else joong += 9;
 3737              		.loc 1 892 12 is_stmt 1 view .LVU857
 892:lcd.c         ****       else joong += 9;
 3738              		.loc 1 892 15 is_stmt 0 view .LVU858
 3739 0058 102B     		cmp	r3, #16
 892:lcd.c         ****       else joong += 9;
 3740              		.loc 1 892 28 is_stmt 1 view .LVU859
 892:lcd.c         ****       else joong += 9;
 3741              		.loc 1 892 34 is_stmt 0 view .LVU860
 3742 005a 94BF     		ite	ls
 3743 005c 0733     		addls	r3, r3, #7
 3744              	.LVL453:
 893:lcd.c         ****       jong  = (wchar - 0xAC00) % 28;
 3745              		.loc 1 893 12 is_stmt 1 view .LVU861
 893:lcd.c         ****       jong  = (wchar - 0xAC00) % 28;
 3746              		.loc 1 893 18 is_stmt 0 view .LVU862
 3747 005e 0933     		addhi	r3, r3, #9
 3748 0060 E0E7     		b	.L129
 3749              		.cfi_endproc
 3750              	.LFE70:
 3752              		.section	.text.ks5601_to_kssm,"ax",%progbits
 3753              		.align	1
 3754              		.global	ks5601_to_kssm
 3755              		.syntax unified
 3756              		.thumb
 3757              		.thumb_func
 3758              		.fpu softvfp
 3760              	ks5601_to_kssm:
 3761              	.LVL454:
 3762              	.LFB71:
 902:lcd.c         **** 
 903:lcd.c         **** 
 904:lcd.c         **** 
 905:lcd.c         **** unsigned short ks5601_to_kssm (unsigned short wchar)
 906:lcd.c         **** {
 3763              		.loc 1 906 1 is_stmt 1 view -0
 3764              		.cfi_startproc
 3765              		@ args = 0, pretend = 0, frame = 0
 3766              		@ frame_needed = 0, uses_anonymous_args = 0
 3767              		@ link register save eliminated.
 907:lcd.c         ****       unsigned char xh,xl;
 3768              		.loc 1 907 7 view .LVU864
 908:lcd.c         ****       unsigned short i,result;
 3769              		.loc 1 908 7 view .LVU865
 909:lcd.c         ****       xh = ((wchar >> 8) & 0xFF);
 3770              		.loc 1 909 7 view .LVU866
 910:lcd.c         ****       xl = (wchar & 0x00FF);
 911:lcd.c         ****       if ((xh >= 0xB0) && (xl >= 0xA0)) {
 3771              		.loc 1 911 10 is_stmt 0 view .LVU867
 3772 0000 B0F5304F 		cmp	r0, #45056
 909:lcd.c         ****       xh = ((wchar >> 8) & 0xFF);
 3773              		.loc 1 909 10 view .LVU868
 3774 0004 4FEA1023 		lsr	r3, r0, #8
 3775              	.LVL455:
 910:lcd.c         ****       xl = (wchar & 0x00FF);
 3776              		.loc 1 910 7 is_stmt 1 view .LVU869
 3777              		.loc 1 911 7 view .LVU870
 3778              		.loc 1 911 10 is_stmt 0 view .LVU871
 3779 0008 13D3     		bcc	.L134
 910:lcd.c         ****       xl = (wchar & 0x00FF);
 3780              		.loc 1 910 10 discriminator 1 view .LVU872
 3781 000a C0B2     		uxtb	r0, r0
 3782              	.LVL456:
 3783              		.loc 1 911 24 discriminator 1 view .LVU873
 3784 000c 9F28     		cmp	r0, #159
 3785 000e 10D9     		bls	.L134
 912:lcd.c         ****          xh = xh - 0xB0;
 3786              		.loc 1 912 10 is_stmt 1 view .LVU874
 3787              	.LVL457:
 913:lcd.c         ****          xl = xl - 0xA0;
 3788              		.loc 1 913 10 view .LVU875
 914:lcd.c         ****          i = xl + xh * 96;
 3789              		.loc 1 914 10 view .LVU876
 915:lcd.c         ****          result = KS_CODE[i][0] << 8 | KS_CODE[i][1];
 3790              		.loc 1 915 10 view .LVU877
 912:lcd.c         ****          xl = xl - 0xA0;
 3791              		.loc 1 912 13 is_stmt 0 view .LVU878
 3792 0010 5033     		adds	r3, r3, #80
 3793              	.LVL458:
 914:lcd.c         ****          i = xl + xh * 96;
 3794              		.loc 1 914 17 view .LVU879
 3795 0012 DBB2     		uxtb	r3, r3
 3796              	.LVL459:
 913:lcd.c         ****          i = xl + xh * 96;
 3797              		.loc 1 913 13 view .LVU880
 3798 0014 6030     		adds	r0, r0, #96
 3799              	.LVL460:
 914:lcd.c         ****          result = KS_CODE[i][0] << 8 | KS_CODE[i][1];
 3800              		.loc 1 914 17 view .LVU881
 3801 0016 03EB4302 		add	r2, r3, r3, lsl #1
 3802 001a C3B2     		uxtb	r3, r0
 3803              		.loc 1 915 29 view .LVU882
 3804 001c 03EB4213 		add	r3, r3, r2, lsl #5
 3805 0020 054A     		ldr	r2, .L135
 3806 0022 12F81310 		ldrb	r1, [r2, r3, lsl #1]	@ zero_extendqisi2
 3807              		.loc 1 915 50 view .LVU883
 3808 0026 02EB4303 		add	r3, r2, r3, lsl #1
 3809 002a 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 3810              	.LVL461:
 3811              		.loc 1 915 17 view .LVU884
 3812 002c 40EA0120 		orr	r0, r0, r1, lsl #8
 3813              	.LVL462:
 916:lcd.c         ****          return result;
 3814              		.loc 1 916 10 is_stmt 1 view .LVU885
 3815              		.loc 1 916 17 is_stmt 0 view .LVU886
 3816 0030 7047     		bx	lr
 3817              	.LVL463:
 3818              	.L134:
 917:lcd.c         ****       }
 918:lcd.c         ****       return 0;
 3819              		.loc 1 918 14 view .LVU887
 3820 0032 0020     		movs	r0, #0
 919:lcd.c         **** }
 3821              		.loc 1 919 1 view .LVU888
 3822 0034 7047     		bx	lr
 3823              	.L136:
 3824 0036 00BF     		.align	2
 3825              	.L135:
 3826 0038 00000000 		.word	KS_CODE
 3827              		.cfi_endproc
 3828              	.LFE71:
 3830              		.section	.text.put_eng,"ax",%progbits
 3831              		.align	1
 3832              		.global	put_eng
 3833              		.syntax unified
 3834              		.thumb
 3835              		.thumb_func
 3836              		.fpu softvfp
 3838              	put_eng:
 3839              	.LVL464:
 3840              	.LFB72:
 920:lcd.c         **** 
 921:lcd.c         **** 
 922:lcd.c         **** void put_eng (char cdata)
 923:lcd.c         **** {
 3841              		.loc 1 923 1 is_stmt 1 view -0
 3842              		.cfi_startproc
 3843              		@ args = 0, pretend = 0, frame = 0
 3844              		@ frame_needed = 0, uses_anonymous_args = 0
 924:lcd.c         ****       unsigned short val,pi;
 3845              		.loc 1 924 7 view .LVU890
 925:lcd.c         ****       if (cdata < 0x20) {
 3846              		.loc 1 925 7 view .LVU891
 3847              		.loc 1 925 10 is_stmt 0 view .LVU892
 3848 0000 1F28     		cmp	r0, #31
 923:lcd.c         ****       unsigned short val,pi;
 3849              		.loc 1 923 1 view .LVU893
 3850 0002 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3851              		.cfi_def_cfa_offset 40
 3852              		.cfi_offset 3, -40
 3853              		.cfi_offset 4, -36
 3854              		.cfi_offset 5, -32
 3855              		.cfi_offset 6, -28
 3856              		.cfi_offset 7, -24
 3857              		.cfi_offset 8, -20
 3858              		.cfi_offset 9, -16
 3859              		.cfi_offset 10, -12
 3860              		.cfi_offset 11, -8
 3861              		.cfi_offset 14, -4
 3862              		.loc 1 925 10 view .LVU894
 3863 0006 13D8     		bhi	.L138
 926:lcd.c         ****          if (cdata == 0x0D) ax = 0;
 3864              		.loc 1 926 10 is_stmt 1 view .LVU895
 3865              		.loc 1 926 13 is_stmt 0 view .LVU896
 3866 0008 0D28     		cmp	r0, #13
 3867 000a 04D1     		bne	.L139
 3868              	.LVL465:
 3869              	.L149:
 927:lcd.c         ****          if (cdata == 0x0A) {
 928:lcd.c         ****             ay++;
 929:lcd.c         ****             if (ay >= max_row) {
 930:lcd.c         ****                ay -= 1;
 931:lcd.c         ****                ax = 0;
 3870              		.loc 1 931 16 is_stmt 1 view .LVU897
 3871              		.loc 1 931 19 is_stmt 0 view .LVU898
 3872 000c 0022     		movs	r2, #0
 3873 000e 304B     		ldr	r3, .L150
 3874 0010 1A80     		strh	r2, [r3]	@ movhi
 3875              	.L137:
 932:lcd.c         ****             }
 933:lcd.c         ****          }
 934:lcd.c         ****       } else {
 935:lcd.c         **** 	 val = (unsigned short)cdata;
 936:lcd.c         ****          ty = ay * 16;
 937:lcd.c         ****          for (pi=0;pi<16;pi++) {
 938:lcd.c         ****              tx = ax * 8;
 939:lcd.c         ****              if (eng_mode == 0) {
 940:lcd.c         ****                 dumy_data[pi] = eng_font[val][pi];
 941:lcd.c         ****              } else {
 942:lcd.c         ****                 if (page == 0) dumy_data[pi] = eng_font[val*2][pi];else dumy_data[pi] = eng_font[va
 943:lcd.c         ****              }
 944:lcd.c         ****              out_lcd(dumy_data[pi]);
 945:lcd.c         ****              ty++;
 946:lcd.c         ****          }
 947:lcd.c         ****          ax++;
 948:lcd.c         ****          if (ax >= max_col) {
 949:lcd.c         ****             ax = 0;
 950:lcd.c         ****             ay++;
 951:lcd.c         ****             if (ay >= max_row) {
 952:lcd.c         ****                ay -= 1;
 953:lcd.c         ****             }
 954:lcd.c         ****          }
 955:lcd.c         ****       }
 956:lcd.c         **** }
 3876              		.loc 1 956 1 view .LVU899
 3877 0012 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3878              	.LVL466:
 3879              	.L139:
 927:lcd.c         ****          if (cdata == 0x0A) {
 3880              		.loc 1 927 10 is_stmt 1 view .LVU900
 927:lcd.c         ****          if (cdata == 0x0A) {
 3881              		.loc 1 927 13 is_stmt 0 view .LVU901
 3882 0016 0A28     		cmp	r0, #10
 3883 0018 FBD1     		bne	.L137
 928:lcd.c         ****             if (ay >= max_row) {
 3884              		.loc 1 928 13 is_stmt 1 view .LVU902
 928:lcd.c         ****             if (ay >= max_row) {
 3885              		.loc 1 928 15 is_stmt 0 view .LVU903
 3886 001a 2E4A     		ldr	r2, .L150+4
 929:lcd.c         ****                ay -= 1;
 3887              		.loc 1 929 20 view .LVU904
 3888 001c 2E48     		ldr	r0, .L150+8
 3889              	.LVL467:
 928:lcd.c         ****             if (ay >= max_row) {
 3890              		.loc 1 928 15 view .LVU905
 3891 001e 1188     		ldrh	r1, [r2]
 929:lcd.c         ****                ay -= 1;
 3892              		.loc 1 929 16 view .LVU906
 3893 0020 0088     		ldrh	r0, [r0]
 928:lcd.c         ****             if (ay >= max_row) {
 3894              		.loc 1 928 15 view .LVU907
 3895 0022 4B1C     		adds	r3, r1, #1
 3896 0024 9BB2     		uxth	r3, r3
 929:lcd.c         ****                ay -= 1;
 3897              		.loc 1 929 16 view .LVU908
 3898 0026 9842     		cmp	r0, r3
 928:lcd.c         ****             if (ay >= max_row) {
 3899              		.loc 1 928 15 view .LVU909
 3900 0028 1380     		strh	r3, [r2]	@ movhi
 929:lcd.c         ****                ay -= 1;
 3901              		.loc 1 929 13 is_stmt 1 view .LVU910
 929:lcd.c         ****                ay -= 1;
 3902              		.loc 1 929 16 is_stmt 0 view .LVU911
 3903 002a F2D8     		bhi	.L137
 930:lcd.c         ****                ax = 0;
 3904              		.loc 1 930 16 is_stmt 1 view .LVU912
 930:lcd.c         ****                ax = 0;
 3905              		.loc 1 930 19 is_stmt 0 view .LVU913
 3906 002c 1180     		strh	r1, [r2]	@ movhi
 3907 002e EDE7     		b	.L149
 3908              	.LVL468:
 3909              	.L138:
 3910              	.LBB102:
 3911              	.LBI102:
 922:lcd.c         **** {
 3912              		.loc 1 922 6 is_stmt 1 view .LVU914
 3913              	.LBB103:
 935:lcd.c         ****          ty = ay * 16;
 3914              		.loc 1 935 3 view .LVU915
 936:lcd.c         ****          for (pi=0;pi<16;pi++) {
 3915              		.loc 1 936 10 view .LVU916
 936:lcd.c         ****          for (pi=0;pi<16;pi++) {
 3916              		.loc 1 936 13 is_stmt 0 view .LVU917
 3917 0030 284F     		ldr	r7, .L150+4
 3918 0032 2A49     		ldr	r1, .L150+12
 3919 0034 3B88     		ldrh	r3, [r7]
 3920 0036 6FF00F0A 		mvn	r10, #15
 3921 003a 1B01     		lsls	r3, r3, #4
 3922 003c 0B80     		strh	r3, [r1]	@ movhi
 937:lcd.c         ****              tx = ax * 8;
 3923              		.loc 1 937 10 is_stmt 1 view .LVU918
 3924              	.LVL469:
 937:lcd.c         ****              tx = ax * 8;
 3925              		.loc 1 937 20 view .LVU919
 938:lcd.c         ****              if (eng_mode == 0) {
 3926              		.loc 1 938 17 is_stmt 0 view .LVU920
 3927 003e 244B     		ldr	r3, .L150
 3928 0040 0AFB00FA 		mul	r10, r10, r0
 3929 0044 9946     		mov	r9, r3
 3930 0046 264E     		ldr	r6, .L150+16
 3931 0048 8846     		mov	r8, r1
 942:lcd.c         ****              }
 3932              		.loc 1 942 103 view .LVU921
 3933 004a 4FEA401B 		lsl	fp, r0, #5
 3934 004e 254D     		ldr	r5, .L150+20
 938:lcd.c         ****              if (eng_mode == 0) {
 3935              		.loc 1 938 17 view .LVU922
 3936 0050 2549     		ldr	r1, .L150+24
 3937 0052 06EB0016 		add	r6, r6, r0, lsl #4
 3938 0056 0BF1100B 		add	fp, fp, #16
 3939 005a 4401     		lsls	r4, r0, #5
 3940              	.LVL470:
 3941              	.L146:
 938:lcd.c         ****              if (eng_mode == 0) {
 3942              		.loc 1 938 14 is_stmt 1 view .LVU923
 938:lcd.c         ****              if (eng_mode == 0) {
 3943              		.loc 1 938 17 is_stmt 0 view .LVU924
 3944 005c 1888     		ldrh	r0, [r3]
 3945 005e C000     		lsls	r0, r0, #3
 3946 0060 0880     		strh	r0, [r1]	@ movhi
 939:lcd.c         ****                 dumy_data[pi] = eng_font[val][pi];
 3947              		.loc 1 939 14 is_stmt 1 view .LVU925
 939:lcd.c         ****                 dumy_data[pi] = eng_font[val][pi];
 3948              		.loc 1 939 27 is_stmt 0 view .LVU926
 3949 0062 2248     		ldr	r0, .L150+28
 939:lcd.c         ****                 dumy_data[pi] = eng_font[val][pi];
 3950              		.loc 1 939 17 view .LVU927
 3951 0064 0088     		ldrh	r0, [r0]
 3952 0066 40BB     		cbnz	r0, .L143
 940:lcd.c         ****              } else {
 3953              		.loc 1 940 17 is_stmt 1 view .LVU928
 940:lcd.c         ****              } else {
 3954              		.loc 1 940 31 is_stmt 0 view .LVU929
 3955 0068 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 3956              	.L148:
 944:lcd.c         ****              ty++;
 3957              		.loc 1 944 14 is_stmt 1 view .LVU930
 942:lcd.c         ****              }
 3958              		.loc 1 942 87 is_stmt 0 view .LVU931
 3959 006a 2870     		strb	r0, [r5]
 944:lcd.c         ****              ty++;
 3960              		.loc 1 944 14 view .LVU932
 3961 006c 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 3962              	.LVL471:
 944:lcd.c         ****              ty++;
 3963              		.loc 1 944 14 view .LVU933
 3964 0070 FFF7FEFF 		bl	out_lcd
 3965              	.LVL472:
 945:lcd.c         ****          }
 3966              		.loc 1 945 14 is_stmt 1 view .LVU934
 945:lcd.c         ****          }
 3967              		.loc 1 945 16 is_stmt 0 view .LVU935
 3968 0074 B8F80000 		ldrh	r0, [r8]
 937:lcd.c         ****              tx = ax * 8;
 3969              		.loc 1 937 10 view .LVU936
 3970 0078 1D4B     		ldr	r3, .L150+32
 945:lcd.c         ****          }
 3971              		.loc 1 945 16 view .LVU937
 3972 007a 0130     		adds	r0, r0, #1
 937:lcd.c         ****              tx = ax * 8;
 3973              		.loc 1 937 10 view .LVU938
 3974 007c 9D42     		cmp	r5, r3
 3975 007e 1A49     		ldr	r1, .L150+24
 3976 0080 134B     		ldr	r3, .L150
 945:lcd.c         ****          }
 3977              		.loc 1 945 16 view .LVU939
 3978 0082 A8F80000 		strh	r0, [r8]	@ movhi
 937:lcd.c         ****              tx = ax * 8;
 3979              		.loc 1 937 26 is_stmt 1 view .LVU940
 3980              	.LVL473:
 937:lcd.c         ****              tx = ax * 8;
 3981              		.loc 1 937 20 view .LVU941
 3982 0086 06F10106 		add	r6, r6, #1
 937:lcd.c         ****              tx = ax * 8;
 3983              		.loc 1 937 10 is_stmt 0 view .LVU942
 3984 008a E7D1     		bne	.L146
 947:lcd.c         ****          if (ax >= max_col) {
 3985              		.loc 1 947 10 is_stmt 1 view .LVU943
 947:lcd.c         ****          if (ax >= max_col) {
 3986              		.loc 1 947 12 is_stmt 0 view .LVU944
 3987 008c B9F80030 		ldrh	r3, [r9]
 948:lcd.c         ****             ax = 0;
 3988              		.loc 1 948 17 view .LVU945
 3989 0090 184A     		ldr	r2, .L150+36
 947:lcd.c         ****          if (ax >= max_col) {
 3990              		.loc 1 947 12 view .LVU946
 3991 0092 0133     		adds	r3, r3, #1
 948:lcd.c         ****             ax = 0;
 3992              		.loc 1 948 13 view .LVU947
 3993 0094 1288     		ldrh	r2, [r2]
 947:lcd.c         ****          if (ax >= max_col) {
 3994              		.loc 1 947 12 view .LVU948
 3995 0096 9BB2     		uxth	r3, r3
 948:lcd.c         ****             ax = 0;
 3996              		.loc 1 948 13 view .LVU949
 3997 0098 9A42     		cmp	r2, r3
 947:lcd.c         ****          if (ax >= max_col) {
 3998              		.loc 1 947 12 view .LVU950
 3999 009a A9F80030 		strh	r3, [r9]	@ movhi
 948:lcd.c         ****             ax = 0;
 4000              		.loc 1 948 10 is_stmt 1 view .LVU951
 948:lcd.c         ****             ax = 0;
 4001              		.loc 1 948 13 is_stmt 0 view .LVU952
 4002 009e B8D8     		bhi	.L137
 949:lcd.c         ****             ay++;
 4003              		.loc 1 949 13 is_stmt 1 view .LVU953
 949:lcd.c         ****             ay++;
 4004              		.loc 1 949 16 is_stmt 0 view .LVU954
 4005 00a0 0023     		movs	r3, #0
 950:lcd.c         ****             if (ay >= max_row) {
 4006              		.loc 1 950 15 view .LVU955
 4007 00a2 3A88     		ldrh	r2, [r7]
 951:lcd.c         ****                ay -= 1;
 4008              		.loc 1 951 20 view .LVU956
 4009 00a4 0C49     		ldr	r1, .L150+8
 949:lcd.c         ****             ay++;
 4010              		.loc 1 949 16 view .LVU957
 4011 00a6 A9F80030 		strh	r3, [r9]	@ movhi
 950:lcd.c         ****             if (ay >= max_row) {
 4012              		.loc 1 950 13 is_stmt 1 view .LVU958
 951:lcd.c         ****                ay -= 1;
 4013              		.loc 1 951 16 is_stmt 0 view .LVU959
 4014 00aa 0988     		ldrh	r1, [r1]
 950:lcd.c         ****             if (ay >= max_row) {
 4015              		.loc 1 950 15 view .LVU960
 4016 00ac 531C     		adds	r3, r2, #1
 4017 00ae 9BB2     		uxth	r3, r3
 951:lcd.c         ****                ay -= 1;
 4018              		.loc 1 951 13 is_stmt 1 view .LVU961
 952:lcd.c         ****             }
 4019              		.loc 1 952 19 is_stmt 0 view .LVU962
 4020 00b0 9942     		cmp	r1, r3
 4021 00b2 98BF     		it	ls
 4022 00b4 1346     		movls	r3, r2
 4023 00b6 3B80     		strh	r3, [r7]	@ movhi
 4024 00b8 ABE7     		b	.L137
 4025              	.L143:
 942:lcd.c         ****              }
 4026              		.loc 1 942 17 is_stmt 1 view .LVU963
 942:lcd.c         ****              }
 4027              		.loc 1 942 26 is_stmt 0 view .LVU964
 4028 00ba 0F48     		ldr	r0, .L150+40
 942:lcd.c         ****              }
 4029              		.loc 1 942 20 view .LVU965
 4030 00bc 0288     		ldrh	r2, [r0]
 4031 00be 06EB0A00 		add	r0, r6, r10
 4032 00c2 0AB9     		cbnz	r2, .L145
 942:lcd.c         ****              }
 4033              		.loc 1 942 32 is_stmt 1 view .LVU966
 942:lcd.c         ****              }
 4034              		.loc 1 942 46 is_stmt 0 view .LVU967
 4035 00c4 005D     		ldrb	r0, [r0, r4]	@ zero_extendqisi2
 4036 00c6 D0E7     		b	.L148
 4037              	.L145:
 942:lcd.c         ****              }
 4038              		.loc 1 942 73 is_stmt 1 view .LVU968
 942:lcd.c         ****              }
 4039              		.loc 1 942 87 is_stmt 0 view .LVU969
 4040 00c8 10F80B00 		ldrb	r0, [r0, fp]	@ zero_extendqisi2
 4041 00cc CDE7     		b	.L148
 4042              	.L151:
 4043 00ce 00BF     		.align	2
 4044              	.L150:
 4045 00d0 00000000 		.word	ax
 4046 00d4 00000000 		.word	ay
 4047 00d8 00000000 		.word	max_row
 4048 00dc 00000000 		.word	ty
 4049 00e0 00000000 		.word	.LANCHOR4
 4050 00e4 00000000 		.word	dumy_data
 4051 00e8 00000000 		.word	tx
 4052 00ec 00000000 		.word	eng_mode
 4053 00f0 10000000 		.word	dumy_data+16
 4054 00f4 00000000 		.word	max_col
 4055 00f8 00000000 		.word	page
 4056              	.LBE103:
 4057              	.LBE102:
 4058              		.cfi_endproc
 4059              	.LFE72:
 4061              		.section	.text.put_han,"ax",%progbits
 4062              		.align	1
 4063              		.global	put_han
 4064              		.syntax unified
 4065              		.thumb
 4066              		.thumb_func
 4067              		.fpu softvfp
 4069              	put_han:
 4070              	.LVL474:
 4071              	.LFB73:
 957:lcd.c         **** 
 958:lcd.c         **** 
 959:lcd.c         **** void put_han (unsigned short c)
 960:lcd.c         **** {
 4072              		.loc 1 960 1 is_stmt 1 view -0
 4073              		.cfi_startproc
 4074              		@ args = 0, pretend = 0, frame = 0
 4075              		@ frame_needed = 0, uses_anonymous_args = 0
 961:lcd.c         ****       unsigned char i,first,mid,last,b1,b2,b3;
 4076              		.loc 1 961 7 view .LVU971
 962:lcd.c         ****       unsigned short cc,hlx1,hlx2,hlx3;
 4077              		.loc 1 962 7 view .LVU972
 963:lcd.c         ****       if (hangul_mode == 0) cc = ks5601_to_kssm(c);else cc = uni_to_kssm(c);
 4078              		.loc 1 963 7 view .LVU973
 960:lcd.c         ****       unsigned char i,first,mid,last,b1,b2,b3;
 4079              		.loc 1 960 1 is_stmt 0 view .LVU974
 4080 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4081              		.cfi_def_cfa_offset 40
 4082              		.cfi_offset 3, -40
 4083              		.cfi_offset 4, -36
 4084              		.cfi_offset 5, -32
 4085              		.cfi_offset 6, -28
 4086              		.cfi_offset 7, -24
 4087              		.cfi_offset 8, -20
 4088              		.cfi_offset 9, -16
 4089              		.cfi_offset 10, -12
 4090              		.cfi_offset 11, -8
 4091              		.cfi_offset 14, -4
 4092              		.loc 1 963 23 view .LVU975
 4093 0004 994B     		ldr	r3, .L219
 4094 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4095              		.loc 1 963 10 view .LVU976
 4096 0008 F3B9     		cbnz	r3, .L153
 4097              		.loc 1 963 29 is_stmt 1 discriminator 1 view .LVU977
 4098              		.loc 1 963 34 is_stmt 0 discriminator 1 view .LVU978
 4099 000a FFF7FEFF 		bl	ks5601_to_kssm
 4100              	.LVL475:
 4101              	.L154:
 964:lcd.c         ****       first = ((cc & 0x7C00) >> 10);
 4102              		.loc 1 964 7 is_stmt 1 view .LVU979
 965:lcd.c         ****       mid = ((cc & 0x03E0) >> 5);
 4103              		.loc 1 965 7 view .LVU980
 966:lcd.c         ****       last = (cc & 0x001F);
 4104              		.loc 1 966 7 view .LVU981
 967:lcd.c         ****       first = han_tbl[0][first];
 4105              		.loc 1 967 7 view .LVU982
 4106              		.loc 1 967 13 is_stmt 0 view .LVU983
 4107 000e 984B     		ldr	r3, .L219+4
 4108              		.loc 1 967 25 view .LVU984
 4109 0010 C0F38422 		ubfx	r2, r0, #10, #5
 4110              		.loc 1 967 13 view .LVU985
 4111 0014 9E5C     		ldrb	r6, [r3, r2]	@ zero_extendqisi2
 4112              	.LVL476:
 968:lcd.c         ****       mid = han_tbl[1][mid];
 4113              		.loc 1 968 7 is_stmt 1 view .LVU986
 4114              		.loc 1 968 23 is_stmt 0 view .LVU987
 4115 0016 C0F34412 		ubfx	r2, r0, #5, #5
 4116              		.loc 1 968 11 view .LVU988
 4117 001a 1A44     		add	r2, r2, r3
 4118 001c 92F82070 		ldrb	r7, [r2, #32]	@ zero_extendqisi2
 4119              	.LVL477:
 969:lcd.c         ****       last = han_tbl[2][last];
 4120              		.loc 1 969 7 is_stmt 1 view .LVU989
 4121              		.loc 1 969 24 is_stmt 0 view .LVU990
 4122 0020 00F01F00 		and	r0, r0, #31
 4123              	.LVL478:
 4124              		.loc 1 969 12 view .LVU991
 4125 0024 1844     		add	r0, r0, r3
 4126 0026 BB1E     		subs	r3, r7, #2
 4127 0028 90F84000 		ldrb	r0, [r0, #64]	@ zero_extendqisi2
 4128              	.LVL479:
 970:lcd.c         ****       b1 = 0;
 4129              		.loc 1 970 7 is_stmt 1 view .LVU992
 971:lcd.c         ****       b2 = 0;
 4130              		.loc 1 971 7 view .LVU993
 972:lcd.c         ****       b3 = 0;
 4131              		.loc 1 972 7 view .LVU994
 973:lcd.c         ****       switch (mid) {
 4132              		.loc 1 973 7 view .LVU995
 4133 002c 132B     		cmp	r3, #19
 4134 002e 38D8     		bhi	.L185
 4135 0030 DFE803F0 		tbb	[pc, r3]
 4136              	.L157:
 4137 0034 33       		.byte	(.L159-.L157)/2
 4138 0035 37       		.byte	(.L185-.L157)/2
 4139 0036 33       		.byte	(.L159-.L157)/2
 4140 0037 0D       		.byte	(.L156-.L157)/2
 4141 0038 33       		.byte	(.L159-.L157)/2
 4142 0039 0D       		.byte	(.L156-.L157)/2
 4143 003a 33       		.byte	(.L159-.L157)/2
 4144 003b 35       		.byte	(.L158-.L157)/2
 4145 003c 37       		.byte	(.L185-.L157)/2
 4146 003d 33       		.byte	(.L159-.L157)/2
 4147 003e 0D       		.byte	(.L156-.L157)/2
 4148 003f 35       		.byte	(.L158-.L157)/2
 4149 0040 35       		.byte	(.L158-.L157)/2
 4150 0041 0D       		.byte	(.L156-.L157)/2
 4151 0042 33       		.byte	(.L159-.L157)/2
 4152 0043 0D       		.byte	(.L156-.L157)/2
 4153 0044 35       		.byte	(.L158-.L157)/2
 4154 0045 35       		.byte	(.L158-.L157)/2
 4155 0046 0D       		.byte	(.L156-.L157)/2
 4156 0047 0D       		.byte	(.L156-.L157)/2
 4157              	.LVL480:
 4158              		.p2align 1
 4159              	.L153:
 963:lcd.c         ****       first = ((cc & 0x7C00) >> 10);
 4160              		.loc 1 963 57 discriminator 2 view .LVU996
 963:lcd.c         ****       first = ((cc & 0x7C00) >> 10);
 4161              		.loc 1 963 62 is_stmt 0 discriminator 2 view .LVU997
 4162 0048 FFF7FEFF 		bl	uni_to_kssm
 4163              	.LVL481:
 963:lcd.c         ****       first = ((cc & 0x7C00) >> 10);
 4164              		.loc 1 963 62 discriminator 2 view .LVU998
 4165 004c DFE7     		b	.L154
 4166              	.LVL482:
 4167              	.L156:
 974:lcd.c         ****       	 case 1:
 975:lcd.c         ****       	 case 3:
 976:lcd.c         ****       	 case 10:
 977:lcd.c         ****            b3 = 0;
 978:lcd.c         ****            break;
 979:lcd.c         ****          case 5:
 980:lcd.c         ****          case 7:
 981:lcd.c         ****          case 12:
 982:lcd.c         ****          case 15:
 983:lcd.c         ****          case 17:
 984:lcd.c         ****          case 20:
 985:lcd.c         ****          case 21:
 986:lcd.c         ****            b3 = 1;
 4168              		.loc 1 986 15 view .LVU999
 4169 004e 0125     		movs	r5, #1
 4170              	.LVL483:
 4171              	.L155:
 987:lcd.c         ****            break;
 988:lcd.c         ****          case 2:
 989:lcd.c         ****          case 4:
 990:lcd.c         ****          case 6:
 991:lcd.c         ****          case 8:
 992:lcd.c         ****          case 11:
 993:lcd.c         ****          case 16:
 994:lcd.c         ****            b3 = 2;
 995:lcd.c         ****            break;
 996:lcd.c         ****          case 9:
 997:lcd.c         ****          case 13:
 998:lcd.c         ****          case 14:
 999:lcd.c         ****          case 18:
1000:lcd.c         ****          case 19:
1001:lcd.c         ****            b3 = 3;
1002:lcd.c         ****            break;
1003:lcd.c         ****       }
1004:lcd.c         ****       switch (first) {
 4172              		.loc 1 1004 7 is_stmt 1 view .LVU1000
 4173 0050 012E     		cmp	r6, #1
 4174 0052 07F1FF33 		add	r3, r7, #-1
 4175 0056 01D0     		beq	.L160
 4176 0058 102E     		cmp	r6, #16
 4177 005a 24D1     		bne	.L161
 4178              	.L160:
1005:lcd.c         ****          case 1:
1006:lcd.c         ****          case 16:
1007:lcd.c         ****            if (last == 0) b2 = 0;else b2 = 2;
 4179              		.loc 1 1007 12 view .LVU1001
 4180              		.loc 1 1007 15 is_stmt 0 view .LVU1002
 4181 005c 0028     		cmp	r0, #0
 4182 005e 00F0CF80 		beq	.L186
 4183              		.loc 1 1007 42 view .LVU1003
 4184 0062 4FF0020C 		mov	ip, #2
 4185              	.L163:
 4186              	.LVL484:
1008:lcd.c         ****            break;
1009:lcd.c         ****          default:
1010:lcd.c         ****            if (last == 0) b2 = 1;else b2 = 3;
1011:lcd.c         ****       }
1012:lcd.c         ****       switch (mid) {
 4187              		.loc 1 1012 7 is_stmt 1 view .LVU1004
 4188 0066 142B     		cmp	r3, #20
 4189 0068 00F2C280 		bhi	.L180
 4190 006c DFE813F0 		tbh	[pc, r3, lsl #1]
 4191              	.L184:
 4192 0070 FB00     		.2byte	(.L183-.L184)/2
 4193 0072 FB00     		.2byte	(.L183-.L184)/2
 4194 0074 FB00     		.2byte	(.L183-.L184)/2
 4195 0076 FB00     		.2byte	(.L183-.L184)/2
 4196 0078 FB00     		.2byte	(.L183-.L184)/2
 4197 007a FB00     		.2byte	(.L183-.L184)/2
 4198 007c FB00     		.2byte	(.L183-.L184)/2
 4199 007e FB00     		.2byte	(.L183-.L184)/2
 4200 0080 2400     		.2byte	(.L193-.L184)/2
 4201 0082 2600     		.2byte	(.L169-.L184)/2
 4202 0084 2600     		.2byte	(.L169-.L184)/2
 4203 0086 2600     		.2byte	(.L169-.L184)/2
 4204 0088 2400     		.2byte	(.L193-.L184)/2
 4205 008a 2100     		.2byte	(.L166-.L184)/2
 4206 008c BB00     		.2byte	(.L170-.L184)/2
 4207 008e BB00     		.2byte	(.L170-.L184)/2
 4208 0090 BB00     		.2byte	(.L170-.L184)/2
 4209 0092 2100     		.2byte	(.L166-.L184)/2
 4210 0094 2400     		.2byte	(.L193-.L184)/2
 4211 0096 2600     		.2byte	(.L169-.L184)/2
 4212 0098 FB00     		.2byte	(.L183-.L184)/2
 4213              	.LVL485:
 4214              		.p2align 1
 4215              	.L159:
 994:lcd.c         ****            break;
 4216              		.loc 1 994 12 view .LVU1005
 995:lcd.c         ****          case 9:
 4217              		.loc 1 995 12 view .LVU1006
 994:lcd.c         ****            break;
 4218              		.loc 1 994 15 is_stmt 0 view .LVU1007
 4219 009a 0225     		movs	r5, #2
 995:lcd.c         ****          case 9:
 4220              		.loc 1 995 12 view .LVU1008
 4221 009c D8E7     		b	.L155
 4222              	.LVL486:
 4223              	.L158:
1001:lcd.c         ****            break;
 4224              		.loc 1 1001 12 is_stmt 1 view .LVU1009
1002:lcd.c         ****       }
 4225              		.loc 1 1002 12 view .LVU1010
1001:lcd.c         ****            break;
 4226              		.loc 1 1001 15 is_stmt 0 view .LVU1011
 4227 009e 0325     		movs	r5, #3
1002:lcd.c         ****       }
 4228              		.loc 1 1002 12 view .LVU1012
 4229 00a0 D6E7     		b	.L155
 4230              	.LVL487:
 4231              	.L185:
 969:lcd.c         ****       b1 = 0;
 4232              		.loc 1 969 12 view .LVU1013
 4233 00a2 0025     		movs	r5, #0
 4234 00a4 D4E7     		b	.L155
 4235              	.LVL488:
 4236              	.L161:
1010:lcd.c         ****       }
 4237              		.loc 1 1010 12 is_stmt 1 view .LVU1014
1010:lcd.c         ****       }
 4238              		.loc 1 1010 15 is_stmt 0 view .LVU1015
 4239 00a6 0028     		cmp	r0, #0
 4240 00a8 00F0DA80 		beq	.L187
1010:lcd.c         ****       }
 4241              		.loc 1 1010 42 view .LVU1016
 4242 00ac 4FF0030C 		mov	ip, #3
 4243 00b0 D9E7     		b	.L163
 4244              	.LVL489:
 4245              	.L166:
1013:lcd.c         ****          case 1:
1014:lcd.c         ****          case 2:
1015:lcd.c         ****          case 3:
1016:lcd.c         ****          case 4:
1017:lcd.c         ****          case 5:
1018:lcd.c         ****          case 6:
1019:lcd.c         ****          case 7:
1020:lcd.c         ****          case 8:
1021:lcd.c         ****          case 21:
1022:lcd.c         ****            if (last == 0) b1 = 0; else b1 = 5;
1023:lcd.c         ****            break;
1024:lcd.c         ****          case 9:
1025:lcd.c         ****          case 13:
1026:lcd.c         ****          case 19:
1027:lcd.c         ****            if (last == 0) b1 = 1;else b1 = 6;
1028:lcd.c         ****            break;
1029:lcd.c         ****          case 14: case 18:
1030:lcd.c         ****            if (last == 0) b1 = 2;else b1 = 6;
 4246              		.loc 1 1030 12 is_stmt 1 view .LVU1017
 4247              		.loc 1 1030 15 is_stmt 0 view .LVU1018
 4248 00b2 0028     		cmp	r0, #0
 4249 00b4 00F09E80 		beq	.L188
 4250              	.L193:
1027:lcd.c         ****            break;
 4251              		.loc 1 1027 42 view .LVU1019
 4252 00b8 0622     		movs	r2, #6
 4253              	.LVL490:
1031:lcd.c         ****            break;
1032:lcd.c         ****          case 10:
1033:lcd.c         ****          case 11:
1034:lcd.c         ****          case 12:
1035:lcd.c         ****          case 20:
1036:lcd.c         ****            if (last == 0) b1 = 3;else b1 = 7;
1037:lcd.c         ****            break;
1038:lcd.c         ****          case 15:
1039:lcd.c         ****          case 16:
1040:lcd.c         ****          case 17:
1041:lcd.c         ****            if (last == 0) b1 = 4;else b1 = 7;
1042:lcd.c         ****            break;
1043:lcd.c         ****       }
1044:lcd.c         ****       if ((mid == 0) && (last == 0)) b1 = 0;
 4254              		.loc 1 1044 7 is_stmt 1 view .LVU1020
 4255 00ba 03E0     		b	.L165
 4256              	.LVL491:
 4257              	.L169:
1036:lcd.c         ****            break;
 4258              		.loc 1 1036 12 view .LVU1021
1036:lcd.c         ****            break;
 4259              		.loc 1 1036 15 is_stmt 0 view .LVU1022
 4260 00bc 0028     		cmp	r0, #0
 4261 00be 00F09B80 		beq	.L189
 4262              	.L218:
1041:lcd.c         ****            break;
 4263              		.loc 1 1041 42 view .LVU1023
 4264 00c2 0722     		movs	r2, #7
 4265              	.LVL492:
 4266              	.L165:
1045:lcd.c         ****       for (i=0;i<16;i++) {
 4267              		.loc 1 1045 7 is_stmt 1 view .LVU1024
 4268              		.loc 1 1045 16 view .LVU1025
 4269 00c4 6B4B     		ldr	r3, .L219+8
1044:lcd.c         ****       for (i=0;i<16;i++) {
 4270              		.loc 1 1044 41 is_stmt 0 view .LVU1026
 4271 00c6 0021     		movs	r1, #0
 4272 00c8 9A46     		mov	r10, r3
1046:lcd.c         ****           if (first != 0) {
1047:lcd.c         ****              hlx1 = first + loc1[b1];
1048:lcd.c         ****              dumy_data[i*2] = kor_font[hlx1][i*2];
 4273              		.loc 1 1048 45 view .LVU1027
 4274 00ca DFF8C8E1 		ldr	lr, .L219+40
1049:lcd.c         ****              dumy_data[i*2+1] = kor_font[hlx1][i*2+1];
1050:lcd.c         ****           }
1051:lcd.c         ****           if (mid != 0) {
1052:lcd.c         ****              hlx2 = mid + loc2[b2];
 4275              		.loc 1 1052 31 view .LVU1028
 4276 00ce DFF8C891 		ldr	r9, .L219+44
 4277              	.LVL493:
 4278              	.L174:
1046:lcd.c         ****           if (first != 0) {
 4279              		.loc 1 1046 11 is_stmt 1 view .LVU1029
1046:lcd.c         ****           if (first != 0) {
 4280              		.loc 1 1046 14 is_stmt 0 view .LVU1030
 4281 00d2 6EB1     		cbz	r6, .L171
1047:lcd.c         ****              dumy_data[i*2] = kor_font[hlx1][i*2];
 4282              		.loc 1 1047 14 is_stmt 1 view .LVU1031
 4283              	.LVL494:
1048:lcd.c         ****              dumy_data[i*2+1] = kor_font[hlx1][i*2+1];
 4284              		.loc 1 1048 14 view .LVU1032
1047:lcd.c         ****              dumy_data[i*2] = kor_font[hlx1][i*2];
 4285              		.loc 1 1047 19 is_stmt 0 view .LVU1033
 4286 00d4 684C     		ldr	r4, .L219+12
 4287 00d6 34F81240 		ldrh	r4, [r4, r2, lsl #1]
 4288 00da 3444     		add	r4, r4, r6
1048:lcd.c         ****              dumy_data[i*2+1] = kor_font[hlx1][i*2+1];
 4289              		.loc 1 1048 45 view .LVU1034
 4290 00dc A4B2     		uxth	r4, r4
 4291 00de 0EEB4414 		add	r4, lr, r4, lsl #5
 4292 00e2 04EB0108 		add	r8, r4, r1
1048:lcd.c         ****              dumy_data[i*2+1] = kor_font[hlx1][i*2+1];
 4293              		.loc 1 1048 29 view .LVU1035
 4294 00e6 645C     		ldrb	r4, [r4, r1]	@ zero_extendqisi2
 4295 00e8 1C70     		strb	r4, [r3]
1049:lcd.c         ****              dumy_data[i*2+1] = kor_font[hlx1][i*2+1];
 4296              		.loc 1 1049 14 is_stmt 1 view .LVU1036
1049:lcd.c         ****              dumy_data[i*2+1] = kor_font[hlx1][i*2+1];
 4297              		.loc 1 1049 31 is_stmt 0 view .LVU1037
 4298 00ea 98F80140 		ldrb	r4, [r8, #1]	@ zero_extendqisi2
 4299 00ee 5C70     		strb	r4, [r3, #1]
 4300              	.LVL495:
 4301              	.L171:
1051:lcd.c         ****              hlx2 = mid + loc2[b2];
 4302              		.loc 1 1051 11 is_stmt 1 view .LVU1038
1051:lcd.c         ****              hlx2 = mid + loc2[b2];
 4303              		.loc 1 1051 14 is_stmt 0 view .LVU1039
 4304 00f0 AFB1     		cbz	r7, .L172
 4305              		.loc 1 1052 14 is_stmt 1 view .LVU1040
 4306              	.LVL496:
1053:lcd.c         ****              dumy_data[i*2] = dumy_data[i*2] | kor_font[hlx2][i*2];
 4307              		.loc 1 1053 14 view .LVU1041
1052:lcd.c         ****              dumy_data[i*2] = dumy_data[i*2] | kor_font[hlx2][i*2];
 4308              		.loc 1 1052 19 is_stmt 0 view .LVU1042
 4309 00f2 39F81C40 		ldrh	r4, [r9, ip, lsl #1]
 4310              		.loc 1 1053 29 view .LVU1043
 4311 00f6 93F80080 		ldrb	r8, [r3]	@ zero_extendqisi2
1052:lcd.c         ****              dumy_data[i*2] = dumy_data[i*2] | kor_font[hlx2][i*2];
 4312              		.loc 1 1052 19 view .LVU1044
 4313 00fa 3C44     		add	r4, r4, r7
 4314              		.loc 1 1053 62 view .LVU1045
 4315 00fc A4B2     		uxth	r4, r4
 4316 00fe 0EEB4414 		add	r4, lr, r4, lsl #5
 4317 0102 04EB010B 		add	fp, r4, r1
 4318              		.loc 1 1053 29 view .LVU1046
 4319 0106 645C     		ldrb	r4, [r4, r1]	@ zero_extendqisi2
 4320 0108 48EA0408 		orr	r8, r8, r4
 4321 010c 83F80080 		strb	r8, [r3]
1054:lcd.c         ****              dumy_data[i*2+1] = dumy_data[i*2+1] | kor_font[hlx2][i*2+1];
 4322              		.loc 1 1054 14 is_stmt 1 view .LVU1047
 4323              		.loc 1 1054 31 is_stmt 0 view .LVU1048
 4324 0110 9BF80140 		ldrb	r4, [fp, #1]	@ zero_extendqisi2
 4325 0114 93F80180 		ldrb	r8, [r3, #1]	@ zero_extendqisi2
 4326 0118 44EA0804 		orr	r4, r4, r8
 4327 011c 5C70     		strb	r4, [r3, #1]
 4328              	.LVL497:
 4329              	.L172:
1055:lcd.c         ****           }
1056:lcd.c         ****           if (last != 0) {
 4330              		.loc 1 1056 11 is_stmt 1 view .LVU1049
 4331              		.loc 1 1056 14 is_stmt 0 view .LVU1050
 4332 011e B0B1     		cbz	r0, .L173
1057:lcd.c         ****              hlx3 = last + loc3[b3];
 4333              		.loc 1 1057 14 is_stmt 1 view .LVU1051
 4334              	.LVL498:
1058:lcd.c         ****              dumy_data[i*2] = dumy_data[i*2] | kor_font[hlx3][i*2];
 4335              		.loc 1 1058 14 view .LVU1052
1057:lcd.c         ****              hlx3 = last + loc3[b3];
 4336              		.loc 1 1057 19 is_stmt 0 view .LVU1053
 4337 0120 564C     		ldr	r4, .L219+16
 4338              		.loc 1 1058 29 view .LVU1054
 4339 0122 93F80080 		ldrb	r8, [r3]	@ zero_extendqisi2
1057:lcd.c         ****              hlx3 = last + loc3[b3];
 4340              		.loc 1 1057 19 view .LVU1055
 4341 0126 34F81540 		ldrh	r4, [r4, r5, lsl #1]
 4342 012a 0444     		add	r4, r4, r0
 4343              		.loc 1 1058 62 view .LVU1056
 4344 012c A4B2     		uxth	r4, r4
 4345 012e 0EEB4414 		add	r4, lr, r4, lsl #5
 4346 0132 04EB010B 		add	fp, r4, r1
 4347              		.loc 1 1058 29 view .LVU1057
 4348 0136 645C     		ldrb	r4, [r4, r1]	@ zero_extendqisi2
 4349 0138 48EA0408 		orr	r8, r8, r4
 4350 013c 83F80080 		strb	r8, [r3]
1059:lcd.c         ****              dumy_data[i*2+1] = dumy_data[i*2+1] | kor_font[hlx3][i*2+1];
 4351              		.loc 1 1059 14 is_stmt 1 view .LVU1058
 4352              		.loc 1 1059 31 is_stmt 0 view .LVU1059
 4353 0140 9BF80140 		ldrb	r4, [fp, #1]	@ zero_extendqisi2
 4354 0144 93F80180 		ldrb	r8, [r3, #1]	@ zero_extendqisi2
 4355 0148 44EA0804 		orr	r4, r4, r8
 4356 014c 5C70     		strb	r4, [r3, #1]
 4357              	.LVL499:
 4358              	.L173:
1045:lcd.c         ****           if (first != 0) {
 4359              		.loc 1 1045 21 is_stmt 1 discriminator 2 view .LVU1060
1045:lcd.c         ****           if (first != 0) {
 4360              		.loc 1 1045 16 discriminator 2 view .LVU1061
 4361 014e 0231     		adds	r1, r1, #2
1045:lcd.c         ****           if (first != 0) {
 4362              		.loc 1 1045 7 is_stmt 0 discriminator 2 view .LVU1062
 4363 0150 2029     		cmp	r1, #32
 4364 0152 03F10203 		add	r3, r3, #2
 4365 0156 BCD1     		bne	.L174
1060:lcd.c         ****           }
1061:lcd.c         ****       }
1062:lcd.c         ****       ty = ay * 16;
 4366              		.loc 1 1062 7 is_stmt 1 view .LVU1063
1063:lcd.c         ****       for (i=0;i<16;i++) {
1064:lcd.c         ****           tx = ax * 8;
 4367              		.loc 1 1064 14 is_stmt 0 view .LVU1064
 4368 0158 DFF84091 		ldr	r9, .L219+48
1062:lcd.c         ****       for (i=0;i<16;i++) {
 4369              		.loc 1 1062 10 view .LVU1065
 4370 015c 4FF00008 		mov	r8, #0
 4371 0160 4F46     		mov	r7, r9
 4372              	.LVL500:
1062:lcd.c         ****       for (i=0;i<16;i++) {
 4373              		.loc 1 1062 10 view .LVU1066
 4374 0162 474D     		ldr	r5, .L219+20
 4375              	.LVL501:
1062:lcd.c         ****       for (i=0;i<16;i++) {
 4376              		.loc 1 1062 10 view .LVU1067
 4377 0164 474C     		ldr	r4, .L219+24
 4378 0166 2B88     		ldrh	r3, [r5]
 4379              		.loc 1 1064 14 view .LVU1068
 4380 0168 474E     		ldr	r6, .L219+28
 4381              	.LVL502:
1062:lcd.c         ****       for (i=0;i<16;i++) {
 4382              		.loc 1 1062 10 view .LVU1069
 4383 016a 1B01     		lsls	r3, r3, #4
 4384 016c 2380     		strh	r3, [r4]	@ movhi
1063:lcd.c         ****       for (i=0;i<16;i++) {
 4385              		.loc 1 1063 7 is_stmt 1 view .LVU1070
 4386              	.LVL503:
1063:lcd.c         ****       for (i=0;i<16;i++) {
 4387              		.loc 1 1063 16 view .LVU1071
 4388              	.L175:
 4389              		.loc 1 1064 11 discriminator 3 view .LVU1072
 4390              		.loc 1 1064 14 is_stmt 0 discriminator 3 view .LVU1073
 4391 016e 3388     		ldrh	r3, [r6]
1065:lcd.c         ****           out_lcd(dumy_data[i*2]);
 4392              		.loc 1 1065 11 discriminator 3 view .LVU1074
 4393 0170 1AF81800 		ldrb	r0, [r10, r8, lsl #1]	@ zero_extendqisi2
1064:lcd.c         ****           out_lcd(dumy_data[i*2]);
 4394              		.loc 1 1064 14 discriminator 3 view .LVU1075
 4395 0174 DB00     		lsls	r3, r3, #3
 4396 0176 A9F80030 		strh	r3, [r9]	@ movhi
 4397              		.loc 1 1065 11 is_stmt 1 discriminator 3 view .LVU1076
 4398 017a FFF7FEFF 		bl	out_lcd
 4399              	.LVL504:
1066:lcd.c         ****           ty++;
 4400              		.loc 1 1066 11 discriminator 3 view .LVU1077
 4401              		.loc 1 1066 13 is_stmt 0 discriminator 3 view .LVU1078
 4402 017e 2388     		ldrh	r3, [r4]
 4403 0180 08F10108 		add	r8, r8, #1
 4404              	.LVL505:
 4405              		.loc 1 1066 13 discriminator 3 view .LVU1079
 4406 0184 0133     		adds	r3, r3, #1
1063:lcd.c         ****           tx = ax * 8;
 4407              		.loc 1 1063 7 discriminator 3 view .LVU1080
 4408 0186 B8F1100F 		cmp	r8, #16
 4409              		.loc 1 1066 13 discriminator 3 view .LVU1081
 4410 018a 2380     		strh	r3, [r4]	@ movhi
1063:lcd.c         ****           tx = ax * 8;
 4411              		.loc 1 1063 21 is_stmt 1 discriminator 3 view .LVU1082
1063:lcd.c         ****           tx = ax * 8;
 4412              		.loc 1 1063 16 discriminator 3 view .LVU1083
1063:lcd.c         ****           tx = ax * 8;
 4413              		.loc 1 1063 7 is_stmt 0 discriminator 3 view .LVU1084
 4414 018c EFD1     		bne	.L175
1067:lcd.c         ****       }
1068:lcd.c         ****       ty = ay * 16;
 4415              		.loc 1 1068 7 is_stmt 1 view .LVU1085
 4416              		.loc 1 1068 10 is_stmt 0 view .LVU1086
 4417 018e 4FF00008 		mov	r8, #0
 4418 0192 2B88     		ldrh	r3, [r5]
1069:lcd.c         ****       for (i=0;i<16;i++) {
1070:lcd.c         ****           tx = (ax+1) * 8;
1071:lcd.c         ****           out_lcd(dumy_data[i*2+1]);
 4419              		.loc 1 1071 11 view .LVU1087
 4420 0194 DFF80891 		ldr	r9, .L219+52
1068:lcd.c         ****       for (i=0;i<16;i++) {
 4421              		.loc 1 1068 10 view .LVU1088
 4422 0198 1B01     		lsls	r3, r3, #4
 4423 019a 2380     		strh	r3, [r4]	@ movhi
1069:lcd.c         ****       for (i=0;i<16;i++) {
 4424              		.loc 1 1069 7 is_stmt 1 view .LVU1089
 4425              	.LVL506:
1069:lcd.c         ****       for (i=0;i<16;i++) {
 4426              		.loc 1 1069 16 view .LVU1090
 4427              	.L176:
1070:lcd.c         ****           out_lcd(dumy_data[i*2+1]);
 4428              		.loc 1 1070 11 discriminator 3 view .LVU1091
1070:lcd.c         ****           out_lcd(dumy_data[i*2+1]);
 4429              		.loc 1 1070 14 is_stmt 0 discriminator 3 view .LVU1092
 4430 019c 3388     		ldrh	r3, [r6]
 4431              		.loc 1 1071 11 discriminator 3 view .LVU1093
 4432 019e 19F81800 		ldrb	r0, [r9, r8, lsl #1]	@ zero_extendqisi2
1070:lcd.c         ****           out_lcd(dumy_data[i*2+1]);
 4433              		.loc 1 1070 14 discriminator 3 view .LVU1094
 4434 01a2 0133     		adds	r3, r3, #1
 4435 01a4 DB00     		lsls	r3, r3, #3
 4436 01a6 3B80     		strh	r3, [r7]	@ movhi
 4437              		.loc 1 1071 11 is_stmt 1 discriminator 3 view .LVU1095
 4438 01a8 FFF7FEFF 		bl	out_lcd
 4439              	.LVL507:
1072:lcd.c         ****           ty++;
 4440              		.loc 1 1072 11 discriminator 3 view .LVU1096
 4441              		.loc 1 1072 13 is_stmt 0 discriminator 3 view .LVU1097
 4442 01ac 2388     		ldrh	r3, [r4]
 4443 01ae 08F10108 		add	r8, r8, #1
 4444              	.LVL508:
 4445              		.loc 1 1072 13 discriminator 3 view .LVU1098
 4446 01b2 0133     		adds	r3, r3, #1
1069:lcd.c         ****           tx = (ax+1) * 8;
 4447              		.loc 1 1069 7 discriminator 3 view .LVU1099
 4448 01b4 B8F1100F 		cmp	r8, #16
 4449              		.loc 1 1072 13 discriminator 3 view .LVU1100
 4450 01b8 2380     		strh	r3, [r4]	@ movhi
1069:lcd.c         ****           tx = (ax+1) * 8;
 4451              		.loc 1 1069 21 is_stmt 1 discriminator 3 view .LVU1101
1069:lcd.c         ****           tx = (ax+1) * 8;
 4452              		.loc 1 1069 16 discriminator 3 view .LVU1102
1069:lcd.c         ****           tx = (ax+1) * 8;
 4453              		.loc 1 1069 7 is_stmt 0 discriminator 3 view .LVU1103
 4454 01ba EFD1     		bne	.L176
1073:lcd.c         ****       }
1074:lcd.c         ****       ax += 2;
 4455              		.loc 1 1074 7 is_stmt 1 view .LVU1104
 4456              		.loc 1 1074 10 is_stmt 0 view .LVU1105
 4457 01bc 3388     		ldrh	r3, [r6]
1075:lcd.c         ****       if (ax >= max_col) {
 4458              		.loc 1 1075 14 view .LVU1106
 4459 01be 334A     		ldr	r2, .L219+32
1074:lcd.c         ****       if (ax >= max_col) {
 4460              		.loc 1 1074 10 view .LVU1107
 4461 01c0 0233     		adds	r3, r3, #2
 4462              		.loc 1 1075 10 view .LVU1108
 4463 01c2 1288     		ldrh	r2, [r2]
1074:lcd.c         ****       if (ax >= max_col) {
 4464              		.loc 1 1074 10 view .LVU1109
 4465 01c4 9BB2     		uxth	r3, r3
 4466              		.loc 1 1075 10 view .LVU1110
 4467 01c6 9A42     		cmp	r2, r3
1074:lcd.c         ****       if (ax >= max_col) {
 4468              		.loc 1 1074 10 view .LVU1111
 4469 01c8 3380     		strh	r3, [r6]	@ movhi
 4470              		.loc 1 1075 7 is_stmt 1 view .LVU1112
 4471              		.loc 1 1075 10 is_stmt 0 view .LVU1113
 4472 01ca 0AD8     		bhi	.L152
1076:lcd.c         ****          ax = 0;
 4473              		.loc 1 1076 10 is_stmt 1 view .LVU1114
 4474              		.loc 1 1076 13 is_stmt 0 view .LVU1115
 4475 01cc 0023     		movs	r3, #0
1077:lcd.c         ****          ay++;
 4476              		.loc 1 1077 12 view .LVU1116
 4477 01ce 2A88     		ldrh	r2, [r5]
1078:lcd.c         ****          if (ay >= max_row) {
 4478              		.loc 1 1078 17 view .LVU1117
 4479 01d0 2F49     		ldr	r1, .L219+36
1076:lcd.c         ****          ax = 0;
 4480              		.loc 1 1076 13 view .LVU1118
 4481 01d2 3380     		strh	r3, [r6]	@ movhi
1077:lcd.c         ****          ay++;
 4482              		.loc 1 1077 10 is_stmt 1 view .LVU1119
 4483              		.loc 1 1078 13 is_stmt 0 view .LVU1120
 4484 01d4 0988     		ldrh	r1, [r1]
1077:lcd.c         ****          ay++;
 4485              		.loc 1 1077 12 view .LVU1121
 4486 01d6 531C     		adds	r3, r2, #1
 4487 01d8 9BB2     		uxth	r3, r3
 4488              		.loc 1 1078 10 is_stmt 1 view .LVU1122
1079:lcd.c         ****             ay -= 1;
 4489              		.loc 1 1079 16 is_stmt 0 view .LVU1123
 4490 01da 9942     		cmp	r1, r3
 4491 01dc 98BF     		it	ls
 4492 01de 1346     		movls	r3, r2
 4493 01e0 2B80     		strh	r3, [r5]	@ movhi
 4494              	.L152:
1080:lcd.c         ****          }
1081:lcd.c         ****       }
1082:lcd.c         **** }
 4495              		.loc 1 1082 1 view .LVU1124
 4496 01e2 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4497              	.LVL509:
 4498              	.L170:
1041:lcd.c         ****            break;
 4499              		.loc 1 1041 12 is_stmt 1 view .LVU1125
1041:lcd.c         ****            break;
 4500              		.loc 1 1041 15 is_stmt 0 view .LVU1126
 4501 01e6 0028     		cmp	r0, #0
 4502 01e8 7FF46BAF 		bne	.L218
 4503              	.L190:
1041:lcd.c         ****            break;
 4504              		.loc 1 1041 30 view .LVU1127
 4505 01ec 0422     		movs	r2, #4
 4506 01ee 69E7     		b	.L165
 4507              	.L180:
1044:lcd.c         ****       for (i=0;i<16;i++) {
 4508              		.loc 1 1044 7 is_stmt 1 view .LVU1128
1044:lcd.c         ****       for (i=0;i<16;i++) {
 4509              		.loc 1 1044 41 is_stmt 0 view .LVU1129
 4510 01f0 0022     		movs	r2, #0
 4511 01f2 67E7     		b	.L165
 4512              	.L188:
1030:lcd.c         ****            break;
 4513              		.loc 1 1030 30 view .LVU1130
 4514 01f4 0222     		movs	r2, #2
 4515 01f6 65E7     		b	.L165
 4516              	.L189:
1036:lcd.c         ****            break;
 4517              		.loc 1 1036 30 view .LVU1131
 4518 01f8 0322     		movs	r2, #3
 4519 01fa 63E7     		b	.L165
 4520              	.L192:
1027:lcd.c         ****            break;
 4521              		.loc 1 1027 30 view .LVU1132
 4522 01fc 0122     		movs	r2, #1
 4523              	.LVL510:
1044:lcd.c         ****       for (i=0;i<16;i++) {
 4524              		.loc 1 1044 7 is_stmt 1 view .LVU1133
 4525 01fe 61E7     		b	.L165
 4526              	.LVL511:
 4527              	.L186:
1007:lcd.c         ****            break;
 4528              		.loc 1 1007 30 is_stmt 0 view .LVU1134
 4529 0200 8446     		mov	ip, r0
 4530              	.L162:
 4531              	.LVL512:
1012:lcd.c         ****          case 1:
 4532              		.loc 1 1012 7 is_stmt 1 view .LVU1135
 4533 0202 142B     		cmp	r3, #20
 4534 0204 F4D8     		bhi	.L180
 4535 0206 01A2     		adr	r2, .L182
 4536 0208 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4537              		.p2align 2
 4538              	.L182:
 4539 020c F1010000 		.word	.L180+1
 4540 0210 F1010000 		.word	.L180+1
 4541 0214 F1010000 		.word	.L180+1
 4542 0218 F1010000 		.word	.L180+1
 4543 021c F1010000 		.word	.L180+1
 4544 0220 F1010000 		.word	.L180+1
 4545 0224 F1010000 		.word	.L180+1
 4546 0228 F1010000 		.word	.L180+1
 4547 022c FD010000 		.word	.L192+1
 4548 0230 F9010000 		.word	.L189+1
 4549 0234 F9010000 		.word	.L189+1
 4550 0238 F9010000 		.word	.L189+1
 4551 023c FD010000 		.word	.L192+1
 4552 0240 F5010000 		.word	.L188+1
 4553 0244 ED010000 		.word	.L190+1
 4554 0248 ED010000 		.word	.L190+1
 4555 024c ED010000 		.word	.L190+1
 4556 0250 F5010000 		.word	.L188+1
 4557 0254 FD010000 		.word	.L192+1
 4558 0258 F9010000 		.word	.L189+1
 4559 025c F1010000 		.word	.L180+1
 4560              	.LVL513:
 4561              		.p2align 1
 4562              	.L187:
1010:lcd.c         ****       }
 4563              		.loc 1 1010 30 is_stmt 0 view .LVU1136
 4564 0260 4FF0010C 		mov	ip, #1
 4565 0264 CDE7     		b	.L162
 4566              	.LVL514:
 4567              	.L183:
1030:lcd.c         ****            break;
 4568              		.loc 1 1030 42 view .LVU1137
 4569 0266 0522     		movs	r2, #5
 4570 0268 2CE7     		b	.L165
 4571              	.L220:
 4572 026a 00BF     		.align	2
 4573              	.L219:
 4574 026c 00000000 		.word	hangul_mode
 4575 0270 00000000 		.word	.LANCHOR5
 4576 0274 00000000 		.word	dumy_data
 4577 0278 00000000 		.word	.LANCHOR6
 4578 027c 00000000 		.word	.LANCHOR8
 4579 0280 00000000 		.word	ay
 4580 0284 00000000 		.word	ty
 4581 0288 00000000 		.word	ax
 4582 028c 00000000 		.word	max_col
 4583 0290 00000000 		.word	max_row
 4584 0294 00000000 		.word	kor_font
 4585 0298 00000000 		.word	.LANCHOR7
 4586 029c 00000000 		.word	tx
 4587 02a0 01000000 		.word	dumy_data+1
 4588              		.cfi_endproc
 4589              	.LFE73:
 4591              		.section	.text.put_engxy,"ax",%progbits
 4592              		.align	1
 4593              		.global	put_engxy
 4594              		.syntax unified
 4595              		.thumb
 4596              		.thumb_func
 4597              		.fpu softvfp
 4599              	put_engxy:
 4600              	.LVL515:
 4601              	.LFB74:
1083:lcd.c         **** 
1084:lcd.c         **** 
1085:lcd.c         **** void put_engxy (unsigned short x,unsigned short y,char pdata)
1086:lcd.c         **** {
 4602              		.loc 1 1086 1 is_stmt 1 view -0
 4603              		.cfi_startproc
 4604              		@ args = 0, pretend = 0, frame = 0
 4605              		@ frame_needed = 0, uses_anonymous_args = 0
 4606              		@ link register save eliminated.
1087:lcd.c         ****       ax = x;
 4607              		.loc 1 1087 7 view .LVU1139
 4608              		.loc 1 1087 10 is_stmt 0 view .LVU1140
 4609 0000 034B     		ldr	r3, .L222
 4610 0002 1880     		strh	r0, [r3]	@ movhi
1088:lcd.c         ****       ay = y;
 4611              		.loc 1 1088 7 is_stmt 1 view .LVU1141
 4612              		.loc 1 1088 10 is_stmt 0 view .LVU1142
 4613 0004 034B     		ldr	r3, .L222+4
1089:lcd.c         ****       put_eng(pdata);
 4614              		.loc 1 1089 7 view .LVU1143
 4615 0006 1046     		mov	r0, r2
 4616              	.LVL516:
1088:lcd.c         ****       ay = y;
 4617              		.loc 1 1088 10 view .LVU1144
 4618 0008 1980     		strh	r1, [r3]	@ movhi
 4619              		.loc 1 1089 7 is_stmt 1 view .LVU1145
 4620 000a FFF7FEBF 		b	put_eng
 4621              	.LVL517:
 4622              	.L223:
 4623              		.loc 1 1089 7 is_stmt 0 view .LVU1146
 4624 000e 00BF     		.align	2
 4625              	.L222:
 4626 0010 00000000 		.word	ax
 4627 0014 00000000 		.word	ay
 4628              		.cfi_endproc
 4629              	.LFE74:
 4631              		.section	.text.put_hanxy,"ax",%progbits
 4632              		.align	1
 4633              		.global	put_hanxy
 4634              		.syntax unified
 4635              		.thumb
 4636              		.thumb_func
 4637              		.fpu softvfp
 4639              	put_hanxy:
 4640              	.LVL518:
 4641              	.LFB75:
1090:lcd.c         **** }
1091:lcd.c         **** 
1092:lcd.c         **** 
1093:lcd.c         **** void put_hanxy (unsigned short x,unsigned short y,unsigned short pdata)
1094:lcd.c         **** {
 4642              		.loc 1 1094 1 is_stmt 1 view -0
 4643              		.cfi_startproc
 4644              		@ args = 0, pretend = 0, frame = 0
 4645              		@ frame_needed = 0, uses_anonymous_args = 0
1095:lcd.c         ****       ax = x;
 4646              		.loc 1 1095 7 view .LVU1148
1094:lcd.c         ****       ax = x;
 4647              		.loc 1 1094 1 is_stmt 0 view .LVU1149
 4648 0000 10B5     		push	{r4, lr}
 4649              		.cfi_def_cfa_offset 8
 4650              		.cfi_offset 4, -8
 4651              		.cfi_offset 14, -4
1094:lcd.c         ****       ax = x;
 4652              		.loc 1 1094 1 view .LVU1150
 4653 0002 0446     		mov	r4, r0
 4654              		.loc 1 1095 10 view .LVU1151
 4655 0004 0A4B     		ldr	r3, .L227
1096:lcd.c         ****       ay = y;
1097:lcd.c         ****       if (pdata >= 0xAC00) {
 4656              		.loc 1 1097 10 view .LVU1152
 4657 0006 B2F52C4F 		cmp	r2, #44032
1095:lcd.c         ****       ay = y;
 4658              		.loc 1 1095 10 view .LVU1153
 4659 000a 1C80     		strh	r4, [r3]	@ movhi
1096:lcd.c         ****       ay = y;
 4660              		.loc 1 1096 7 is_stmt 1 view .LVU1154
1096:lcd.c         ****       ay = y;
 4661              		.loc 1 1096 10 is_stmt 0 view .LVU1155
 4662 000c 094B     		ldr	r3, .L227+4
1094:lcd.c         ****       ax = x;
 4663              		.loc 1 1094 1 view .LVU1156
 4664 000e 1046     		mov	r0, r2
 4665              	.LVL519:
1096:lcd.c         ****       ay = y;
 4666              		.loc 1 1096 10 view .LVU1157
 4667 0010 1980     		strh	r1, [r3]	@ movhi
 4668              		.loc 1 1097 7 is_stmt 1 view .LVU1158
 4669              		.loc 1 1097 10 is_stmt 0 view .LVU1159
 4670 0012 05D3     		bcc	.L225
1098:lcd.c         ****          if (pdata >= 0xB0A1) {
 4671              		.loc 1 1098 10 is_stmt 1 view .LVU1160
 4672              		.loc 1 1098 13 is_stmt 0 view .LVU1161
 4673 0014 4BF2A003 		movw	r3, #45216
 4674 0018 9A42     		cmp	r2, r3
 4675 001a 05D9     		bls	.L226
1099:lcd.c         ****             put_han(ks5601_to_kssm(pdata));
 4676              		.loc 1 1099 13 is_stmt 1 view .LVU1162
 4677 001c FFF7FEFF 		bl	ks5601_to_kssm
 4678              	.LVL520:
 4679              	.L225:
1100:lcd.c         ****          } else {
1101:lcd.c         ****             put_han(uni_to_kssm(pdata));
1102:lcd.c         ****          }
1103:lcd.c         ****       } else {
1104:lcd.c         ****          put_han(pdata);
 4680              		.loc 1 1104 10 view .LVU1163
1105:lcd.c         ****       }
1106:lcd.c         **** }
 4681              		.loc 1 1106 1 is_stmt 0 view .LVU1164
 4682 0020 BDE81040 		pop	{r4, lr}
 4683              		.cfi_remember_state
 4684              		.cfi_restore 14
 4685              		.cfi_restore 4
 4686              		.cfi_def_cfa_offset 0
1104:lcd.c         ****       }
 4687              		.loc 1 1104 10 view .LVU1165
 4688 0024 FFF7FEBF 		b	put_han
 4689              	.LVL521:
 4690              	.L226:
 4691              		.cfi_restore_state
1101:lcd.c         ****          }
 4692              		.loc 1 1101 13 is_stmt 1 view .LVU1166
 4693 0028 FFF7FEFF 		bl	uni_to_kssm
 4694              	.LVL522:
1101:lcd.c         ****          }
 4695              		.loc 1 1101 13 is_stmt 0 view .LVU1167
 4696 002c F8E7     		b	.L225
 4697              	.L228:
 4698 002e 00BF     		.align	2
 4699              	.L227:
 4700 0030 00000000 		.word	ax
 4701 0034 00000000 		.word	ay
 4702              		.cfi_endproc
 4703              	.LFE75:
 4705              		.section	.text.lput_char,"ax",%progbits
 4706              		.align	1
 4707              		.global	lput_char
 4708              		.syntax unified
 4709              		.thumb
 4710              		.thumb_func
 4711              		.fpu softvfp
 4713              	lput_char:
 4714              	.LVL523:
 4715              	.LFB76:
1107:lcd.c         **** 
1108:lcd.c         **** 
1109:lcd.c         **** void lput_char (char *str)
1110:lcd.c         **** {
 4716              		.loc 1 1110 1 is_stmt 1 view -0
 4717              		.cfi_startproc
 4718              		@ args = 0, pretend = 0, frame = 0
 4719              		@ frame_needed = 0, uses_anonymous_args = 0
1111:lcd.c         ****       unsigned char len,n;
 4720              		.loc 1 1111 7 view .LVU1169
1112:lcd.c         ****       unsigned short hangul_char;
 4721              		.loc 1 1112 7 view .LVU1170
1113:lcd.c         ****       len = strlen(str);
 4722              		.loc 1 1113 7 view .LVU1171
1110:lcd.c         ****       unsigned char len,n;
 4723              		.loc 1 1110 1 is_stmt 0 view .LVU1172
 4724 0000 70B5     		push	{r4, r5, r6, lr}
 4725              		.cfi_def_cfa_offset 16
 4726              		.cfi_offset 4, -16
 4727              		.cfi_offset 5, -12
 4728              		.cfi_offset 6, -8
 4729              		.cfi_offset 14, -4
1110:lcd.c         ****       unsigned char len,n;
 4730              		.loc 1 1110 1 view .LVU1173
 4731 0002 0546     		mov	r5, r0
 4732              		.loc 1 1113 13 view .LVU1174
 4733 0004 FFF7FEFF 		bl	strlen
 4734              	.LVL524:
1114:lcd.c         ****       for (n=0;n<len;n++) {
 4735              		.loc 1 1114 13 view .LVU1175
 4736 0008 0024     		movs	r4, #0
1113:lcd.c         ****       len = strlen(str);
 4737              		.loc 1 1113 11 view .LVU1176
 4738 000a C6B2     		uxtb	r6, r0
 4739              	.LVL525:
 4740              		.loc 1 1114 7 is_stmt 1 view .LVU1177
 4741              	.L230:
 4742              		.loc 1 1114 16 discriminator 1 view .LVU1178
 4743              		.loc 1 1114 7 is_stmt 0 discriminator 1 view .LVU1179
 4744 000c B442     		cmp	r4, r6
 4745 000e 00D3     		bcc	.L233
1115:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
1116:lcd.c         ****              put_eng(str[n]);
1117:lcd.c         ****           } else {
1118:lcd.c         ****              hangul_char = str[n];
1119:lcd.c         ****              hangul_char = hangul_char << 8;
1120:lcd.c         ****              hangul_char = hangul_char | str[n + 1];
1121:lcd.c         ****              put_han(hangul_char);
1122:lcd.c         ****              n++;
1123:lcd.c         ****           }
1124:lcd.c         ****       }
1125:lcd.c         **** }
 4746              		.loc 1 1125 1 view .LVU1180
 4747 0010 70BD     		pop	{r4, r5, r6, pc}
 4748              	.LVL526:
 4749              	.L233:
1115:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 4750              		.loc 1 1115 10 is_stmt 1 view .LVU1181
1115:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 4751              		.loc 1 1115 13 is_stmt 0 view .LVU1182
 4752 0012 2A57     		ldrsb	r2, [r5, r4]
1115:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 4753              		.loc 1 1115 18 view .LVU1183
 4754 0014 2346     		mov	r3, r4
1115:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 4755              		.loc 1 1115 13 view .LVU1184
 4756 0016 002A     		cmp	r2, #0
1115:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 4757              		.loc 1 1115 18 view .LVU1185
 4758 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
1115:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 4759              		.loc 1 1115 13 view .LVU1186
 4760 001a 04DB     		blt	.L231
1116:lcd.c         ****           } else {
 4761              		.loc 1 1116 14 is_stmt 1 view .LVU1187
 4762 001c FFF7FEFF 		bl	put_eng
 4763              	.LVL527:
 4764              	.L232:
1114:lcd.c         ****       for (n=0;n<len;n++) {
 4765              		.loc 1 1114 22 discriminator 2 view .LVU1188
1114:lcd.c         ****       for (n=0;n<len;n++) {
 4766              		.loc 1 1114 23 is_stmt 0 discriminator 2 view .LVU1189
 4767 0020 0134     		adds	r4, r4, #1
 4768              	.LVL528:
1114:lcd.c         ****       for (n=0;n<len;n++) {
 4769              		.loc 1 1114 23 discriminator 2 view .LVU1190
 4770 0022 E4B2     		uxtb	r4, r4
 4771              	.LVL529:
1114:lcd.c         ****       for (n=0;n<len;n++) {
 4772              		.loc 1 1114 23 discriminator 2 view .LVU1191
 4773 0024 F2E7     		b	.L230
 4774              	.L231:
1120:lcd.c         ****              put_han(hangul_char);
 4775              		.loc 1 1120 45 view .LVU1192
 4776 0026 2B44     		add	r3, r3, r5
 4777 0028 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4778 002a 0134     		adds	r4, r4, #1
 4779              	.LVL530:
1121:lcd.c         ****              n++;
 4780              		.loc 1 1121 14 view .LVU1193
 4781 002c 43EA0020 		orr	r0, r3, r0, lsl #8
 4782 0030 E4B2     		uxtb	r4, r4
1118:lcd.c         ****              hangul_char = hangul_char << 8;
 4783              		.loc 1 1118 14 is_stmt 1 view .LVU1194
1119:lcd.c         ****              hangul_char = hangul_char | str[n + 1];
 4784              		.loc 1 1119 14 view .LVU1195
1120:lcd.c         ****              put_han(hangul_char);
 4785              		.loc 1 1120 14 view .LVU1196
1121:lcd.c         ****              n++;
 4786              		.loc 1 1121 14 view .LVU1197
 4787 0032 FFF7FEFF 		bl	put_han
 4788              	.LVL531:
1122:lcd.c         ****           }
 4789              		.loc 1 1122 14 view .LVU1198
1122:lcd.c         ****           }
 4790              		.loc 1 1122 14 is_stmt 0 view .LVU1199
 4791 0036 F3E7     		b	.L232
 4792              		.cfi_endproc
 4793              	.LFE76:
 4795              		.section	.text.lput_char_xy,"ax",%progbits
 4796              		.align	1
 4797              		.global	lput_char_xy
 4798              		.syntax unified
 4799              		.thumb
 4800              		.thumb_func
 4801              		.fpu softvfp
 4803              	lput_char_xy:
 4804              	.LVL532:
 4805              	.LFB77:
1126:lcd.c         **** 
1127:lcd.c         **** 
1128:lcd.c         **** void lput_char_xy (unsigned short x,unsigned short y,char *str)
1129:lcd.c         **** {
 4806              		.loc 1 1129 1 is_stmt 1 view -0
 4807              		.cfi_startproc
 4808              		@ args = 0, pretend = 0, frame = 0
 4809              		@ frame_needed = 0, uses_anonymous_args = 0
1130:lcd.c         ****       unsigned char len,n;
 4810              		.loc 1 1130 7 view .LVU1201
1131:lcd.c         ****       unsigned short hangul_char;
 4811              		.loc 1 1131 7 view .LVU1202
1132:lcd.c         ****       ax = x;
 4812              		.loc 1 1132 7 view .LVU1203
 4813              		.loc 1 1132 10 is_stmt 0 view .LVU1204
 4814 0000 104B     		ldr	r3, .L239
1129:lcd.c         ****       unsigned char len,n;
 4815              		.loc 1 1129 1 view .LVU1205
 4816 0002 70B5     		push	{r4, r5, r6, lr}
 4817              		.cfi_def_cfa_offset 16
 4818              		.cfi_offset 4, -16
 4819              		.cfi_offset 5, -12
 4820              		.cfi_offset 6, -8
 4821              		.cfi_offset 14, -4
 4822              		.loc 1 1132 10 view .LVU1206
 4823 0004 1880     		strh	r0, [r3]	@ movhi
1133:lcd.c         ****       ay = y;
 4824              		.loc 1 1133 7 is_stmt 1 view .LVU1207
 4825              		.loc 1 1133 10 is_stmt 0 view .LVU1208
 4826 0006 104B     		ldr	r3, .L239+4
1134:lcd.c         ****       len = strlen(str);
 4827              		.loc 1 1134 13 view .LVU1209
 4828 0008 1046     		mov	r0, r2
 4829              	.LVL533:
1129:lcd.c         ****       unsigned char len,n;
 4830              		.loc 1 1129 1 view .LVU1210
 4831 000a 1546     		mov	r5, r2
1133:lcd.c         ****       ay = y;
 4832              		.loc 1 1133 10 view .LVU1211
 4833 000c 1980     		strh	r1, [r3]	@ movhi
 4834              		.loc 1 1134 7 is_stmt 1 view .LVU1212
 4835              		.loc 1 1134 13 is_stmt 0 view .LVU1213
 4836 000e FFF7FEFF 		bl	strlen
 4837              	.LVL534:
1135:lcd.c         ****       for (n=0;n<len;n++) {
 4838              		.loc 1 1135 13 view .LVU1214
 4839 0012 0024     		movs	r4, #0
1134:lcd.c         ****       len = strlen(str);
 4840              		.loc 1 1134 11 view .LVU1215
 4841 0014 C6B2     		uxtb	r6, r0
 4842              	.LVL535:
 4843              		.loc 1 1135 7 is_stmt 1 view .LVU1216
 4844              	.L235:
 4845              		.loc 1 1135 16 discriminator 1 view .LVU1217
 4846              		.loc 1 1135 7 is_stmt 0 discriminator 1 view .LVU1218
 4847 0016 B442     		cmp	r4, r6
 4848 0018 00D3     		bcc	.L238
1136:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
1137:lcd.c         ****              put_eng(str[n]);
1138:lcd.c         ****           } else {
1139:lcd.c         ****              hangul_char = str[n];
1140:lcd.c         ****              hangul_char = hangul_char << 8;
1141:lcd.c         ****              hangul_char = hangul_char | str[n + 1];
1142:lcd.c         ****              put_han(hangul_char);
1143:lcd.c         ****              n++;
1144:lcd.c         ****           }
1145:lcd.c         ****       }
1146:lcd.c         **** }
 4849              		.loc 1 1146 1 view .LVU1219
 4850 001a 70BD     		pop	{r4, r5, r6, pc}
 4851              	.LVL536:
 4852              	.L238:
1136:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 4853              		.loc 1 1136 10 is_stmt 1 view .LVU1220
1136:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 4854              		.loc 1 1136 13 is_stmt 0 view .LVU1221
 4855 001c 2A57     		ldrsb	r2, [r5, r4]
1136:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 4856              		.loc 1 1136 18 view .LVU1222
 4857 001e 2346     		mov	r3, r4
1136:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 4858              		.loc 1 1136 13 view .LVU1223
 4859 0020 002A     		cmp	r2, #0
1136:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 4860              		.loc 1 1136 18 view .LVU1224
 4861 0022 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
1136:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 4862              		.loc 1 1136 13 view .LVU1225
 4863 0024 04DB     		blt	.L236
1137:lcd.c         ****           } else {
 4864              		.loc 1 1137 14 is_stmt 1 view .LVU1226
 4865 0026 FFF7FEFF 		bl	put_eng
 4866              	.LVL537:
 4867              	.L237:
1135:lcd.c         ****       for (n=0;n<len;n++) {
 4868              		.loc 1 1135 22 discriminator 2 view .LVU1227
1135:lcd.c         ****       for (n=0;n<len;n++) {
 4869              		.loc 1 1135 23 is_stmt 0 discriminator 2 view .LVU1228
 4870 002a 0134     		adds	r4, r4, #1
 4871              	.LVL538:
1135:lcd.c         ****       for (n=0;n<len;n++) {
 4872              		.loc 1 1135 23 discriminator 2 view .LVU1229
 4873 002c E4B2     		uxtb	r4, r4
 4874              	.LVL539:
1135:lcd.c         ****       for (n=0;n<len;n++) {
 4875              		.loc 1 1135 23 discriminator 2 view .LVU1230
 4876 002e F2E7     		b	.L235
 4877              	.L236:
1141:lcd.c         ****              put_han(hangul_char);
 4878              		.loc 1 1141 45 view .LVU1231
 4879 0030 2B44     		add	r3, r3, r5
 4880 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4881 0034 0134     		adds	r4, r4, #1
 4882              	.LVL540:
1142:lcd.c         ****              n++;
 4883              		.loc 1 1142 14 view .LVU1232
 4884 0036 43EA0020 		orr	r0, r3, r0, lsl #8
 4885 003a E4B2     		uxtb	r4, r4
1139:lcd.c         ****              hangul_char = hangul_char << 8;
 4886              		.loc 1 1139 14 is_stmt 1 view .LVU1233
1140:lcd.c         ****              hangul_char = hangul_char | str[n + 1];
 4887              		.loc 1 1140 14 view .LVU1234
1141:lcd.c         ****              put_han(hangul_char);
 4888              		.loc 1 1141 14 view .LVU1235
1142:lcd.c         ****              n++;
 4889              		.loc 1 1142 14 view .LVU1236
 4890 003c FFF7FEFF 		bl	put_han
 4891              	.LVL541:
1143:lcd.c         ****           }
 4892              		.loc 1 1143 14 view .LVU1237
1143:lcd.c         ****           }
 4893              		.loc 1 1143 14 is_stmt 0 view .LVU1238
 4894 0040 F3E7     		b	.L237
 4895              	.L240:
 4896 0042 00BF     		.align	2
 4897              	.L239:
 4898 0044 00000000 		.word	ax
 4899 0048 00000000 		.word	ay
 4900              		.cfi_endproc
 4901              	.LFE77:
 4903              		.section	.text.lcd_printf,"ax",%progbits
 4904              		.align	1
 4905              		.global	lcd_printf
 4906              		.syntax unified
 4907              		.thumb
 4908              		.thumb_func
 4909              		.fpu softvfp
 4911              	lcd_printf:
 4912              	.LVL542:
 4913              	.LFB78:
1147:lcd.c         **** 
1148:lcd.c         **** 
1149:lcd.c         **** void lcd_printf (unsigned short x,unsigned short y,char *form,...)
1150:lcd.c         **** {
 4914              		.loc 1 1150 1 is_stmt 1 view -0
 4915              		.cfi_startproc
 4916              		@ args = 4, pretend = 8, frame = 8
 4917              		@ frame_needed = 0, uses_anonymous_args = 1
1151:lcd.c         ****       va_list argptr;
 4918              		.loc 1 1151 7 view .LVU1240
1152:lcd.c         ****       ax = x;
 4919              		.loc 1 1152 7 view .LVU1241
1150:lcd.c         ****       va_list argptr;
 4920              		.loc 1 1150 1 is_stmt 0 view .LVU1242
 4921 0000 0CB4     		push	{r2, r3}
 4922              		.cfi_def_cfa_offset 8
 4923              		.cfi_offset 2, -8
 4924              		.cfi_offset 3, -4
 4925 0002 13B5     		push	{r0, r1, r4, lr}
 4926              		.cfi_def_cfa_offset 24
 4927              		.cfi_offset 4, -16
 4928              		.cfi_offset 14, -12
 4929              		.loc 1 1152 10 view .LVU1243
 4930 0004 0A4C     		ldr	r4, .L242
1150:lcd.c         ****       va_list argptr;
 4931              		.loc 1 1150 1 view .LVU1244
 4932 0006 04AA     		add	r2, sp, #16
 4933 0008 52F8043B 		ldr	r3, [r2], #4
 4934              		.loc 1 1152 10 view .LVU1245
 4935 000c 2080     		strh	r0, [r4]	@ movhi
1153:lcd.c         ****       ay = y;
 4936              		.loc 1 1153 7 is_stmt 1 view .LVU1246
1154:lcd.c         ****       va_start(argptr,form);
1155:lcd.c         ****       vsprintf(buff,form,argptr);
 4937              		.loc 1 1155 7 is_stmt 0 view .LVU1247
 4938 000e 094C     		ldr	r4, .L242+4
1153:lcd.c         ****       ay = y;
 4939              		.loc 1 1153 10 view .LVU1248
 4940 0010 0948     		ldr	r0, .L242+8
 4941              	.LVL543:
1154:lcd.c         ****       va_start(argptr,form);
 4942              		.loc 1 1154 7 view .LVU1249
 4943 0012 0192     		str	r2, [sp, #4]
1153:lcd.c         ****       ay = y;
 4944              		.loc 1 1153 10 view .LVU1250
 4945 0014 0180     		strh	r1, [r0]	@ movhi
1154:lcd.c         ****       va_start(argptr,form);
 4946              		.loc 1 1154 7 is_stmt 1 view .LVU1251
 4947              		.loc 1 1155 7 view .LVU1252
 4948 0016 1946     		mov	r1, r3
 4949              	.LVL544:
 4950              		.loc 1 1155 7 is_stmt 0 view .LVU1253
 4951 0018 2046     		mov	r0, r4
 4952              		.loc 1 1155 7 view .LVU1254
 4953 001a FFF7FEFF 		bl	vsprintf
 4954              	.LVL545:
1156:lcd.c         ****       lput_char(buff);
 4955              		.loc 1 1156 7 is_stmt 1 view .LVU1255
 4956 001e 2046     		mov	r0, r4
 4957 0020 FFF7FEFF 		bl	lput_char
 4958              	.LVL546:
1157:lcd.c         ****       va_end(argptr);
 4959              		.loc 1 1157 7 view .LVU1256
1158:lcd.c         **** }
 4960              		.loc 1 1158 1 is_stmt 0 view .LVU1257
 4961 0024 02B0     		add	sp, sp, #8
 4962              		.cfi_def_cfa_offset 16
 4963              		@ sp needed
 4964 0026 BDE81040 		pop	{r4, lr}
 4965              		.cfi_restore 14
 4966              		.cfi_restore 4
 4967              		.cfi_def_cfa_offset 8
 4968 002a 02B0     		add	sp, sp, #8
 4969              		.cfi_restore 3
 4970              		.cfi_restore 2
 4971              		.cfi_def_cfa_offset 0
 4972 002c 7047     		bx	lr
 4973              	.L243:
 4974 002e 00BF     		.align	2
 4975              	.L242:
 4976 0030 00000000 		.word	ax
 4977 0034 00000000 		.word	buff
 4978 0038 00000000 		.word	ay
 4979              		.cfi_endproc
 4980              	.LFE78:
 4982              		.global	hangul_jongsung_tbl
 4983              		.global	hangul_jungsung_tbl
 4984              		.global	hangul_chosung_tbl
 4985              		.global	loc3
 4986              		.global	loc2
 4987              		.global	loc1
 4988              		.global	han_tbl
 4989              		.comm	hangul_mode,1,1
 4990              		.global	s_bit
 4991              		.comm	dumy_data,32,1
 4992              		.comm	buff,256,1
 4993              		.comm	page,2,2
 4994              		.comm	eng_mode,2,2
 4995              		.comm	ty,2,2
 4996              		.comm	tx,2,2
 4997              		.comm	max_row,2,2
 4998              		.comm	max_col,2,2
 4999              		.comm	ay,2,2
 5000              		.comm	ax,2,2
 5001              		.comm	maxy,2,2
 5002              		.comm	maxx,2,2
 5003              		.comm	device_code,2,2
 5004              		.comm	background_color,2,2
 5005              		.comm	foreground_color,2,2
 5006              		.global	KS_CODE
 5007              		.global	kor_font
 5008              		.global	eng_font
 5009              		.section	.rodata.KS_CODE,"a"
 5012              	KS_CODE:
 5013 0000 2020     		.ascii	"  "
 5014 0002 8861     		.ascii	"\210a"
 5015 0004 8862     		.ascii	"\210b"
 5016 0006 8865     		.ascii	"\210e"
 5017 0008 8868     		.ascii	"\210h"
 5018 000a 8869     		.ascii	"\210i"
 5019 000c 886A     		.ascii	"\210j"
 5020 000e 886B     		.ascii	"\210k"
 5021 0010 8871     		.ascii	"\210q"
 5022 0012 8873     		.ascii	"\210s"
 5023 0014 8874     		.ascii	"\210t"
 5024 0016 8875     		.ascii	"\210u"
 5025 0018 8876     		.ascii	"\210v"
 5026 001a 8877     		.ascii	"\210w"
 5027 001c 8878     		.ascii	"\210x"
 5028 001e 8879     		.ascii	"\210y"
 5029 0020 887B     		.ascii	"\210{"
 5030 0022 887C     		.ascii	"\210|"
 5031 0024 887D     		.ascii	"\210}"
 5032 0026 8881     		.ascii	"\210\201"
 5033 0028 8882     		.ascii	"\210\202"
 5034 002a 8885     		.ascii	"\210\205"
 5035 002c 8889     		.ascii	"\210\211"
 5036 002e 8891     		.ascii	"\210\221"
 5037 0030 8893     		.ascii	"\210\223"
 5038 0032 8895     		.ascii	"\210\225"
 5039 0034 8896     		.ascii	"\210\226"
 5040 0036 8897     		.ascii	"\210\227"
 5041 0038 88A1     		.ascii	"\210\241"
 5042 003a 88A2     		.ascii	"\210\242"
 5043 003c 88A5     		.ascii	"\210\245"
 5044 003e 88A9     		.ascii	"\210\251"
 5045 0040 88B5     		.ascii	"\210\265"
 5046 0042 88B7     		.ascii	"\210\267"
 5047 0044 88C1     		.ascii	"\210\301"
 5048 0046 88C5     		.ascii	"\210\305"
 5049 0048 88C9     		.ascii	"\210\311"
 5050 004a 88E1     		.ascii	"\210\341"
 5051 004c 88E2     		.ascii	"\210\342"
 5052 004e 88E5     		.ascii	"\210\345"
 5053 0050 88E8     		.ascii	"\210\350"
 5054 0052 88E9     		.ascii	"\210\351"
 5055 0054 88EB     		.ascii	"\210\353"
 5056 0056 88F1     		.ascii	"\210\361"
 5057 0058 88F3     		.ascii	"\210\363"
 5058 005a 88F5     		.ascii	"\210\365"
 5059 005c 88F6     		.ascii	"\210\366"
 5060 005e 88F7     		.ascii	"\210\367"
 5061 0060 88F8     		.ascii	"\210\370"
 5062 0062 88FB     		.ascii	"\210\373"
 5063 0064 88FC     		.ascii	"\210\374"
 5064 0066 88FD     		.ascii	"\210\375"
 5065 0068 8941     		.ascii	"\211A"
 5066 006a 8945     		.ascii	"\211E"
 5067 006c 8949     		.ascii	"\211I"
 5068 006e 8951     		.ascii	"\211Q"
 5069 0070 8953     		.ascii	"\211S"
 5070 0072 8955     		.ascii	"\211U"
 5071 0074 8956     		.ascii	"\211V"
 5072 0076 8957     		.ascii	"\211W"
 5073 0078 8961     		.ascii	"\211a"
 5074 007a 8962     		.ascii	"\211b"
 5075 007c 8963     		.ascii	"\211c"
 5076 007e 8965     		.ascii	"\211e"
 5077 0080 8968     		.ascii	"\211h"
 5078 0082 8969     		.ascii	"\211i"
 5079 0084 8971     		.ascii	"\211q"
 5080 0086 8973     		.ascii	"\211s"
 5081 0088 8975     		.ascii	"\211u"
 5082 008a 8976     		.ascii	"\211v"
 5083 008c 8977     		.ascii	"\211w"
 5084 008e 897B     		.ascii	"\211{"
 5085 0090 8981     		.ascii	"\211\201"
 5086 0092 8985     		.ascii	"\211\205"
 5087 0094 8989     		.ascii	"\211\211"
 5088 0096 8993     		.ascii	"\211\223"
 5089 0098 8995     		.ascii	"\211\225"
 5090 009a 89A1     		.ascii	"\211\241"
 5091 009c 89A2     		.ascii	"\211\242"
 5092 009e 89A5     		.ascii	"\211\245"
 5093 00a0 89A8     		.ascii	"\211\250"
 5094 00a2 89A9     		.ascii	"\211\251"
 5095 00a4 89AB     		.ascii	"\211\253"
 5096 00a6 89AD     		.ascii	"\211\255"
 5097 00a8 89B0     		.ascii	"\211\260"
 5098 00aa 89B1     		.ascii	"\211\261"
 5099 00ac 89B3     		.ascii	"\211\263"
 5100 00ae 89B5     		.ascii	"\211\265"
 5101 00b0 89B7     		.ascii	"\211\267"
 5102 00b2 89B8     		.ascii	"\211\270"
 5103 00b4 89C1     		.ascii	"\211\301"
 5104 00b6 89C2     		.ascii	"\211\302"
 5105 00b8 89C5     		.ascii	"\211\305"
 5106 00ba 89C9     		.ascii	"\211\311"
 5107 00bc 89CB     		.ascii	"\211\313"
 5108 00be 2020     		.ascii	"  "
 5109 00c0 2020     		.ascii	"  "
 5110 00c2 89D1     		.ascii	"\211\321"
 5111 00c4 89D3     		.ascii	"\211\323"
 5112 00c6 89D5     		.ascii	"\211\325"
 5113 00c8 89D7     		.ascii	"\211\327"
 5114 00ca 89E1     		.ascii	"\211\341"
 5115 00cc 89E5     		.ascii	"\211\345"
 5116 00ce 89E9     		.ascii	"\211\351"
 5117 00d0 89F3     		.ascii	"\211\363"
 5118 00d2 89F6     		.ascii	"\211\366"
 5119 00d4 89F7     		.ascii	"\211\367"
 5120 00d6 8A41     		.ascii	"\212A"
 5121 00d8 8A42     		.ascii	"\212B"
 5122 00da 8A45     		.ascii	"\212E"
 5123 00dc 8A49     		.ascii	"\212I"
 5124 00de 8A51     		.ascii	"\212Q"
 5125 00e0 8A53     		.ascii	"\212S"
 5126 00e2 8A55     		.ascii	"\212U"
 5127 00e4 8A57     		.ascii	"\212W"
 5128 00e6 8A61     		.ascii	"\212a"
 5129 00e8 8A65     		.ascii	"\212e"
 5130 00ea 8A69     		.ascii	"\212i"
 5131 00ec 8A73     		.ascii	"\212s"
 5132 00ee 8A75     		.ascii	"\212u"
 5133 00f0 8A81     		.ascii	"\212\201"
 5134 00f2 8A82     		.ascii	"\212\202"
 5135 00f4 8A85     		.ascii	"\212\205"
 5136 00f6 8A88     		.ascii	"\212\210"
 5137 00f8 8A89     		.ascii	"\212\211"
 5138 00fa 8A8A     		.ascii	"\212\212"
 5139 00fc 8A8B     		.ascii	"\212\213"
 5140 00fe 8A90     		.ascii	"\212\220"
 5141 0100 8A91     		.ascii	"\212\221"
 5142 0102 8A93     		.ascii	"\212\223"
 5143 0104 8A95     		.ascii	"\212\225"
 5144 0106 8A97     		.ascii	"\212\227"
 5145 0108 8A98     		.ascii	"\212\230"
 5146 010a 8AA1     		.ascii	"\212\241"
 5147 010c 8AA2     		.ascii	"\212\242"
 5148 010e 8AA5     		.ascii	"\212\245"
 5149 0110 8AA9     		.ascii	"\212\251"
 5150 0112 8AB6     		.ascii	"\212\266"
 5151 0114 8AB7     		.ascii	"\212\267"
 5152 0116 8AC1     		.ascii	"\212\301"
 5153 0118 8AD5     		.ascii	"\212\325"
 5154 011a 8AE1     		.ascii	"\212\341"
 5155 011c 8AE2     		.ascii	"\212\342"
 5156 011e 8AE5     		.ascii	"\212\345"
 5157 0120 8AE9     		.ascii	"\212\351"
 5158 0122 8AF1     		.ascii	"\212\361"
 5159 0124 8AF3     		.ascii	"\212\363"
 5160 0126 8AF5     		.ascii	"\212\365"
 5161 0128 8B41     		.ascii	"\213A"
 5162 012a 8B45     		.ascii	"\213E"
 5163 012c 8B49     		.ascii	"\213I"
 5164 012e 8B61     		.ascii	"\213a"
 5165 0130 8B62     		.ascii	"\213b"
 5166 0132 8B65     		.ascii	"\213e"
 5167 0134 8B68     		.ascii	"\213h"
 5168 0136 8B69     		.ascii	"\213i"
 5169 0138 8B6A     		.ascii	"\213j"
 5170 013a 8B71     		.ascii	"\213q"
 5171 013c 8B73     		.ascii	"\213s"
 5172 013e 8B75     		.ascii	"\213u"
 5173 0140 8B77     		.ascii	"\213w"
 5174 0142 8B81     		.ascii	"\213\201"
 5175 0144 8BA1     		.ascii	"\213\241"
 5176 0146 8BA2     		.ascii	"\213\242"
 5177 0148 8BA5     		.ascii	"\213\245"
 5178 014a 8BA8     		.ascii	"\213\250"
 5179 014c 8BA9     		.ascii	"\213\251"
 5180 014e 8BAB     		.ascii	"\213\253"
 5181 0150 8BB1     		.ascii	"\213\261"
 5182 0152 8BB3     		.ascii	"\213\263"
 5183 0154 8BB5     		.ascii	"\213\265"
 5184 0156 8BB7     		.ascii	"\213\267"
 5185 0158 8BB8     		.ascii	"\213\270"
 5186 015a 8BBC     		.ascii	"\213\274"
 5187 015c 8C61     		.ascii	"\214a"
 5188 015e 8C62     		.ascii	"\214b"
 5189 0160 8C63     		.ascii	"\214c"
 5190 0162 8C65     		.ascii	"\214e"
 5191 0164 8C69     		.ascii	"\214i"
 5192 0166 8C6B     		.ascii	"\214k"
 5193 0168 8C71     		.ascii	"\214q"
 5194 016a 8C73     		.ascii	"\214s"
 5195 016c 8C75     		.ascii	"\214u"
 5196 016e 8C76     		.ascii	"\214v"
 5197 0170 8C77     		.ascii	"\214w"
 5198 0172 8C7B     		.ascii	"\214{"
 5199 0174 8C81     		.ascii	"\214\201"
 5200 0176 8C82     		.ascii	"\214\202"
 5201 0178 8C85     		.ascii	"\214\205"
 5202 017a 8C89     		.ascii	"\214\211"
 5203 017c 8C91     		.ascii	"\214\221"
 5204 017e 2020     		.ascii	"  "
 5205 0180 2020     		.ascii	"  "
 5206 0182 8C93     		.ascii	"\214\223"
 5207 0184 8C95     		.ascii	"\214\225"
 5208 0186 8C96     		.ascii	"\214\226"
 5209 0188 8C97     		.ascii	"\214\227"
 5210 018a 8CA1     		.ascii	"\214\241"
 5211 018c 8CA2     		.ascii	"\214\242"
 5212 018e 8CA9     		.ascii	"\214\251"
 5213 0190 8CE1     		.ascii	"\214\341"
 5214 0192 8CE2     		.ascii	"\214\342"
 5215 0194 8CE3     		.ascii	"\214\343"
 5216 0196 8CE5     		.ascii	"\214\345"
 5217 0198 8CE9     		.ascii	"\214\351"
 5218 019a 8CF1     		.ascii	"\214\361"
 5219 019c 8CF3     		.ascii	"\214\363"
 5220 019e 8CF5     		.ascii	"\214\365"
 5221 01a0 8CF6     		.ascii	"\214\366"
 5222 01a2 8CF7     		.ascii	"\214\367"
 5223 01a4 8D41     		.ascii	"\215A"
 5224 01a6 8D42     		.ascii	"\215B"
 5225 01a8 8D45     		.ascii	"\215E"
 5226 01aa 8D51     		.ascii	"\215Q"
 5227 01ac 8D56     		.ascii	"\215V"
 5228 01ae 8D57     		.ascii	"\215W"
 5229 01b0 8D61     		.ascii	"\215a"
 5230 01b2 8D65     		.ascii	"\215e"
 5231 01b4 8D69     		.ascii	"\215i"
 5232 01b6 8D75     		.ascii	"\215u"
 5233 01b8 8D76     		.ascii	"\215v"
 5234 01ba 8D7B     		.ascii	"\215{"
 5235 01bc 8D81     		.ascii	"\215\201"
 5236 01be 8DA1     		.ascii	"\215\241"
 5237 01c0 8DA2     		.ascii	"\215\242"
 5238 01c2 8DA5     		.ascii	"\215\245"
 5239 01c4 8DA7     		.ascii	"\215\247"
 5240 01c6 8DA9     		.ascii	"\215\251"
 5241 01c8 8DB1     		.ascii	"\215\261"
 5242 01ca 8DB3     		.ascii	"\215\263"
 5243 01cc 8DB5     		.ascii	"\215\265"
 5244 01ce 8DB7     		.ascii	"\215\267"
 5245 01d0 8DB8     		.ascii	"\215\270"
 5246 01d2 8DB9     		.ascii	"\215\271"
 5247 01d4 8DC1     		.ascii	"\215\301"
 5248 01d6 8DC2     		.ascii	"\215\302"
 5249 01d8 8DC9     		.ascii	"\215\311"
 5250 01da 8DD6     		.ascii	"\215\326"
 5251 01dc 8DD7     		.ascii	"\215\327"
 5252 01de 8DE1     		.ascii	"\215\341"
 5253 01e0 8DE2     		.ascii	"\215\342"
 5254 01e2 8DF7     		.ascii	"\215\367"
 5255 01e4 8E41     		.ascii	"\216A"
 5256 01e6 8E45     		.ascii	"\216E"
 5257 01e8 8E49     		.ascii	"\216I"
 5258 01ea 8E51     		.ascii	"\216Q"
 5259 01ec 8E53     		.ascii	"\216S"
 5260 01ee 8E57     		.ascii	"\216W"
 5261 01f0 8E61     		.ascii	"\216a"
 5262 01f2 8E81     		.ascii	"\216\201"
 5263 01f4 8E82     		.ascii	"\216\202"
 5264 01f6 8E85     		.ascii	"\216\205"
 5265 01f8 8E89     		.ascii	"\216\211"
 5266 01fa 8E90     		.ascii	"\216\220"
 5267 01fc 8E91     		.ascii	"\216\221"
 5268 01fe 8E93     		.ascii	"\216\223"
 5269 0200 8E95     		.ascii	"\216\225"
 5270 0202 8E97     		.ascii	"\216\227"
 5271 0204 8E98     		.ascii	"\216\230"
 5272 0206 8EA1     		.ascii	"\216\241"
 5273 0208 8EA9     		.ascii	"\216\251"
 5274 020a 8EB6     		.ascii	"\216\266"
 5275 020c 8EB7     		.ascii	"\216\267"
 5276 020e 8EC1     		.ascii	"\216\301"
 5277 0210 8EC2     		.ascii	"\216\302"
 5278 0212 8EC5     		.ascii	"\216\305"
 5279 0214 8EC9     		.ascii	"\216\311"
 5280 0216 8ED1     		.ascii	"\216\321"
 5281 0218 8ED3     		.ascii	"\216\323"
 5282 021a 8ED6     		.ascii	"\216\326"
 5283 021c 8EE1     		.ascii	"\216\341"
 5284 021e 8EE5     		.ascii	"\216\345"
 5285 0220 8EE9     		.ascii	"\216\351"
 5286 0222 8EF1     		.ascii	"\216\361"
 5287 0224 8EF3     		.ascii	"\216\363"
 5288 0226 8F41     		.ascii	"\217A"
 5289 0228 8F61     		.ascii	"\217a"
 5290 022a 8F62     		.ascii	"\217b"
 5291 022c 8F65     		.ascii	"\217e"
 5292 022e 8F67     		.ascii	"\217g"
 5293 0230 8F69     		.ascii	"\217i"
 5294 0232 8F6B     		.ascii	"\217k"
 5295 0234 8F70     		.ascii	"\217p"
 5296 0236 8F71     		.ascii	"\217q"
 5297 0238 8F73     		.ascii	"\217s"
 5298 023a 8F75     		.ascii	"\217u"
 5299 023c 8F77     		.ascii	"\217w"
 5300 023e 2020     		.ascii	"  "
 5301 0240 2020     		.ascii	"  "
 5302 0242 8F7B     		.ascii	"\217{"
 5303 0244 8FA1     		.ascii	"\217\241"
 5304 0246 8FA2     		.ascii	"\217\242"
 5305 0248 8FA5     		.ascii	"\217\245"
 5306 024a 8FA9     		.ascii	"\217\251"
 5307 024c 8FB1     		.ascii	"\217\261"
 5308 024e 8FB3     		.ascii	"\217\263"
 5309 0250 8FB5     		.ascii	"\217\265"
 5310 0252 8FB7     		.ascii	"\217\267"
 5311 0254 9061     		.ascii	"\220a"
 5312 0256 9062     		.ascii	"\220b"
 5313 0258 9063     		.ascii	"\220c"
 5314 025a 9065     		.ascii	"\220e"
 5315 025c 9068     		.ascii	"\220h"
 5316 025e 9069     		.ascii	"\220i"
 5317 0260 906A     		.ascii	"\220j"
 5318 0262 906B     		.ascii	"\220k"
 5319 0264 9071     		.ascii	"\220q"
 5320 0266 9073     		.ascii	"\220s"
 5321 0268 9075     		.ascii	"\220u"
 5322 026a 9076     		.ascii	"\220v"
 5323 026c 9077     		.ascii	"\220w"
 5324 026e 9078     		.ascii	"\220x"
 5325 0270 9079     		.ascii	"\220y"
 5326 0272 907B     		.ascii	"\220{"
 5327 0274 907D     		.ascii	"\220}"
 5328 0276 9081     		.ascii	"\220\201"
 5329 0278 9082     		.ascii	"\220\202"
 5330 027a 9085     		.ascii	"\220\205"
 5331 027c 9089     		.ascii	"\220\211"
 5332 027e 9091     		.ascii	"\220\221"
 5333 0280 9093     		.ascii	"\220\223"
 5334 0282 9095     		.ascii	"\220\225"
 5335 0284 9096     		.ascii	"\220\226"
 5336 0286 9097     		.ascii	"\220\227"
 5337 0288 90A1     		.ascii	"\220\241"
 5338 028a 90A2     		.ascii	"\220\242"
 5339 028c 90A5     		.ascii	"\220\245"
 5340 028e 90A9     		.ascii	"\220\251"
 5341 0290 90B1     		.ascii	"\220\261"
 5342 0292 90B7     		.ascii	"\220\267"
 5343 0294 90E1     		.ascii	"\220\341"
 5344 0296 90E2     		.ascii	"\220\342"
 5345 0298 90E4     		.ascii	"\220\344"
 5346 029a 90E5     		.ascii	"\220\345"
 5347 029c 90E9     		.ascii	"\220\351"
 5348 029e 90EB     		.ascii	"\220\353"
 5349 02a0 90EC     		.ascii	"\220\354"
 5350 02a2 90F1     		.ascii	"\220\361"
 5351 02a4 90F3     		.ascii	"\220\363"
 5352 02a6 90F5     		.ascii	"\220\365"
 5353 02a8 90F6     		.ascii	"\220\366"
 5354 02aa 90F7     		.ascii	"\220\367"
 5355 02ac 90FD     		.ascii	"\220\375"
 5356 02ae 9141     		.ascii	"\221A"
 5357 02b0 9142     		.ascii	"\221B"
 5358 02b2 9145     		.ascii	"\221E"
 5359 02b4 9149     		.ascii	"\221I"
 5360 02b6 9151     		.ascii	"\221Q"
 5361 02b8 9153     		.ascii	"\221S"
 5362 02ba 9155     		.ascii	"\221U"
 5363 02bc 9156     		.ascii	"\221V"
 5364 02be 9157     		.ascii	"\221W"
 5365 02c0 9161     		.ascii	"\221a"
 5366 02c2 9162     		.ascii	"\221b"
 5367 02c4 9165     		.ascii	"\221e"
 5368 02c6 9169     		.ascii	"\221i"
 5369 02c8 9171     		.ascii	"\221q"
 5370 02ca 9173     		.ascii	"\221s"
 5371 02cc 9176     		.ascii	"\221v"
 5372 02ce 9177     		.ascii	"\221w"
 5373 02d0 917A     		.ascii	"\221z"
 5374 02d2 9181     		.ascii	"\221\201"
 5375 02d4 9185     		.ascii	"\221\205"
 5376 02d6 91A1     		.ascii	"\221\241"
 5377 02d8 91A2     		.ascii	"\221\242"
 5378 02da 91A5     		.ascii	"\221\245"
 5379 02dc 91A9     		.ascii	"\221\251"
 5380 02de 91AB     		.ascii	"\221\253"
 5381 02e0 91B1     		.ascii	"\221\261"
 5382 02e2 91B3     		.ascii	"\221\263"
 5383 02e4 91B5     		.ascii	"\221\265"
 5384 02e6 91B7     		.ascii	"\221\267"
 5385 02e8 91BC     		.ascii	"\221\274"
 5386 02ea 91BD     		.ascii	"\221\275"
 5387 02ec 91C1     		.ascii	"\221\301"
 5388 02ee 91C5     		.ascii	"\221\305"
 5389 02f0 91C9     		.ascii	"\221\311"
 5390 02f2 91D6     		.ascii	"\221\326"
 5391 02f4 9241     		.ascii	"\222A"
 5392 02f6 9245     		.ascii	"\222E"
 5393 02f8 9249     		.ascii	"\222I"
 5394 02fa 9251     		.ascii	"\222Q"
 5395 02fc 9253     		.ascii	"\222S"
 5396 02fe 2020     		.ascii	"  "
 5397 0300 2020     		.ascii	"  "
 5398 0302 9255     		.ascii	"\222U"
 5399 0304 9261     		.ascii	"\222a"
 5400 0306 9262     		.ascii	"\222b"
 5401 0308 9265     		.ascii	"\222e"
 5402 030a 9269     		.ascii	"\222i"
 5403 030c 9273     		.ascii	"\222s"
 5404 030e 9275     		.ascii	"\222u"
 5405 0310 9277     		.ascii	"\222w"
 5406 0312 9281     		.ascii	"\222\201"
 5407 0314 9282     		.ascii	"\222\202"
 5408 0316 9285     		.ascii	"\222\205"
 5409 0318 9288     		.ascii	"\222\210"
 5410 031a 9289     		.ascii	"\222\211"
 5411 031c 9291     		.ascii	"\222\221"
 5412 031e 9293     		.ascii	"\222\223"
 5413 0320 9295     		.ascii	"\222\225"
 5414 0322 9297     		.ascii	"\222\227"
 5415 0324 92A1     		.ascii	"\222\241"
 5416 0326 92B6     		.ascii	"\222\266"
 5417 0328 92C1     		.ascii	"\222\301"
 5418 032a 92E1     		.ascii	"\222\341"
 5419 032c 92E5     		.ascii	"\222\345"
 5420 032e 92E9     		.ascii	"\222\351"
 5421 0330 92F1     		.ascii	"\222\361"
 5422 0332 92F3     		.ascii	"\222\363"
 5423 0334 9341     		.ascii	"\223A"
 5424 0336 9342     		.ascii	"\223B"
 5425 0338 9349     		.ascii	"\223I"
 5426 033a 9351     		.ascii	"\223Q"
 5427 033c 9353     		.ascii	"\223S"
 5428 033e 9357     		.ascii	"\223W"
 5429 0340 9361     		.ascii	"\223a"
 5430 0342 9362     		.ascii	"\223b"
 5431 0344 9365     		.ascii	"\223e"
 5432 0346 9369     		.ascii	"\223i"
 5433 0348 936A     		.ascii	"\223j"
 5434 034a 936B     		.ascii	"\223k"
 5435 034c 9371     		.ascii	"\223q"
 5436 034e 9373     		.ascii	"\223s"
 5437 0350 9375     		.ascii	"\223u"
 5438 0352 9377     		.ascii	"\223w"
 5439 0354 9378     		.ascii	"\223x"
 5440 0356 937C     		.ascii	"\223|"
 5441 0358 9381     		.ascii	"\223\201"
 5442 035a 9385     		.ascii	"\223\205"
 5443 035c 9389     		.ascii	"\223\211"
 5444 035e 93A1     		.ascii	"\223\241"
 5445 0360 93A2     		.ascii	"\223\242"
 5446 0362 93A5     		.ascii	"\223\245"
 5447 0364 93A9     		.ascii	"\223\251"
 5448 0366 93AB     		.ascii	"\223\253"
 5449 0368 93B1     		.ascii	"\223\261"
 5450 036a 93B3     		.ascii	"\223\263"
 5451 036c 93B5     		.ascii	"\223\265"
 5452 036e 93B7     		.ascii	"\223\267"
 5453 0370 93BC     		.ascii	"\223\274"
 5454 0372 9461     		.ascii	"\224a"
 5455 0374 9462     		.ascii	"\224b"
 5456 0376 9463     		.ascii	"\224c"
 5457 0378 9465     		.ascii	"\224e"
 5458 037a 9468     		.ascii	"\224h"
 5459 037c 9469     		.ascii	"\224i"
 5460 037e 946A     		.ascii	"\224j"
 5461 0380 946B     		.ascii	"\224k"
 5462 0382 946C     		.ascii	"\224l"
 5463 0384 9470     		.ascii	"\224p"
 5464 0386 9471     		.ascii	"\224q"
 5465 0388 9473     		.ascii	"\224s"
 5466 038a 9475     		.ascii	"\224u"
 5467 038c 9476     		.ascii	"\224v"
 5468 038e 9477     		.ascii	"\224w"
 5469 0390 9478     		.ascii	"\224x"
 5470 0392 9479     		.ascii	"\224y"
 5471 0394 947D     		.ascii	"\224}"
 5472 0396 9481     		.ascii	"\224\201"
 5473 0398 9482     		.ascii	"\224\202"
 5474 039a 9485     		.ascii	"\224\205"
 5475 039c 9489     		.ascii	"\224\211"
 5476 039e 9491     		.ascii	"\224\221"
 5477 03a0 9493     		.ascii	"\224\223"
 5478 03a2 9495     		.ascii	"\224\225"
 5479 03a4 9496     		.ascii	"\224\226"
 5480 03a6 9497     		.ascii	"\224\227"
 5481 03a8 94A1     		.ascii	"\224\241"
 5482 03aa 94E1     		.ascii	"\224\341"
 5483 03ac 94E2     		.ascii	"\224\342"
 5484 03ae 94E3     		.ascii	"\224\343"
 5485 03b0 94E5     		.ascii	"\224\345"
 5486 03b2 94E8     		.ascii	"\224\350"
 5487 03b4 94E9     		.ascii	"\224\351"
 5488 03b6 94EB     		.ascii	"\224\353"
 5489 03b8 94EC     		.ascii	"\224\354"
 5490 03ba 94F1     		.ascii	"\224\361"
 5491 03bc 94F3     		.ascii	"\224\363"
 5492 03be 2020     		.ascii	"  "
 5493 03c0 2020     		.ascii	"  "
 5494 03c2 94F5     		.ascii	"\224\365"
 5495 03c4 94F7     		.ascii	"\224\367"
 5496 03c6 94F9     		.ascii	"\224\371"
 5497 03c8 94FC     		.ascii	"\224\374"
 5498 03ca 9541     		.ascii	"\225A"
 5499 03cc 9542     		.ascii	"\225B"
 5500 03ce 9545     		.ascii	"\225E"
 5501 03d0 9549     		.ascii	"\225I"
 5502 03d2 9551     		.ascii	"\225Q"
 5503 03d4 9553     		.ascii	"\225S"
 5504 03d6 9555     		.ascii	"\225U"
 5505 03d8 9556     		.ascii	"\225V"
 5506 03da 9557     		.ascii	"\225W"
 5507 03dc 9561     		.ascii	"\225a"
 5508 03de 9565     		.ascii	"\225e"
 5509 03e0 9569     		.ascii	"\225i"
 5510 03e2 9576     		.ascii	"\225v"
 5511 03e4 9577     		.ascii	"\225w"
 5512 03e6 9581     		.ascii	"\225\201"
 5513 03e8 9585     		.ascii	"\225\205"
 5514 03ea 95A1     		.ascii	"\225\241"
 5515 03ec 95A2     		.ascii	"\225\242"
 5516 03ee 95A5     		.ascii	"\225\245"
 5517 03f0 95A8     		.ascii	"\225\250"
 5518 03f2 95A9     		.ascii	"\225\251"
 5519 03f4 95AB     		.ascii	"\225\253"
 5520 03f6 95AD     		.ascii	"\225\255"
 5521 03f8 95B1     		.ascii	"\225\261"
 5522 03fa 95B3     		.ascii	"\225\263"
 5523 03fc 95B5     		.ascii	"\225\265"
 5524 03fe 95B7     		.ascii	"\225\267"
 5525 0400 95B9     		.ascii	"\225\271"
 5526 0402 95BB     		.ascii	"\225\273"
 5527 0404 95C1     		.ascii	"\225\301"
 5528 0406 95C5     		.ascii	"\225\305"
 5529 0408 95C9     		.ascii	"\225\311"
 5530 040a 95E1     		.ascii	"\225\341"
 5531 040c 95F6     		.ascii	"\225\366"
 5532 040e 9641     		.ascii	"\226A"
 5533 0410 9645     		.ascii	"\226E"
 5534 0412 9649     		.ascii	"\226I"
 5535 0414 9651     		.ascii	"\226Q"
 5536 0416 9653     		.ascii	"\226S"
 5537 0418 9655     		.ascii	"\226U"
 5538 041a 9661     		.ascii	"\226a"
 5539 041c 9681     		.ascii	"\226\201"
 5540 041e 9682     		.ascii	"\226\202"
 5541 0420 9685     		.ascii	"\226\205"
 5542 0422 9689     		.ascii	"\226\211"
 5543 0424 9691     		.ascii	"\226\221"
 5544 0426 9693     		.ascii	"\226\223"
 5545 0428 9695     		.ascii	"\226\225"
 5546 042a 9697     		.ascii	"\226\227"
 5547 042c 96A1     		.ascii	"\226\241"
 5548 042e 96B6     		.ascii	"\226\266"
 5549 0430 96C1     		.ascii	"\226\301"
 5550 0432 96D7     		.ascii	"\226\327"
 5551 0434 96E1     		.ascii	"\226\341"
 5552 0436 96E5     		.ascii	"\226\345"
 5553 0438 96E9     		.ascii	"\226\351"
 5554 043a 96F3     		.ascii	"\226\363"
 5555 043c 96F5     		.ascii	"\226\365"
 5556 043e 96F7     		.ascii	"\226\367"
 5557 0440 9741     		.ascii	"\227A"
 5558 0442 9745     		.ascii	"\227E"
 5559 0444 9749     		.ascii	"\227I"
 5560 0446 9751     		.ascii	"\227Q"
 5561 0448 9757     		.ascii	"\227W"
 5562 044a 9761     		.ascii	"\227a"
 5563 044c 9762     		.ascii	"\227b"
 5564 044e 9765     		.ascii	"\227e"
 5565 0450 9768     		.ascii	"\227h"
 5566 0452 9769     		.ascii	"\227i"
 5567 0454 976B     		.ascii	"\227k"
 5568 0456 9771     		.ascii	"\227q"
 5569 0458 9773     		.ascii	"\227s"
 5570 045a 9775     		.ascii	"\227u"
 5571 045c 9777     		.ascii	"\227w"
 5572 045e 9781     		.ascii	"\227\201"
 5573 0460 97A1     		.ascii	"\227\241"
 5574 0462 97A2     		.ascii	"\227\242"
 5575 0464 97A5     		.ascii	"\227\245"
 5576 0466 97A8     		.ascii	"\227\250"
 5577 0468 97A9     		.ascii	"\227\251"
 5578 046a 97B1     		.ascii	"\227\261"
 5579 046c 97B3     		.ascii	"\227\263"
 5580 046e 97B5     		.ascii	"\227\265"
 5581 0470 97B6     		.ascii	"\227\266"
 5582 0472 97B7     		.ascii	"\227\267"
 5583 0474 97B8     		.ascii	"\227\270"
 5584 0476 9861     		.ascii	"\230a"
 5585 0478 9862     		.ascii	"\230b"
 5586 047a 9865     		.ascii	"\230e"
 5587 047c 9869     		.ascii	"\230i"
 5588 047e 2020     		.ascii	"  "
 5589 0480 2020     		.ascii	"  "
 5590 0482 9871     		.ascii	"\230q"
 5591 0484 9873     		.ascii	"\230s"
 5592 0486 9875     		.ascii	"\230u"
 5593 0488 9876     		.ascii	"\230v"
 5594 048a 9877     		.ascii	"\230w"
 5595 048c 987D     		.ascii	"\230}"
 5596 048e 9881     		.ascii	"\230\201"
 5597 0490 9882     		.ascii	"\230\202"
 5598 0492 9885     		.ascii	"\230\205"
 5599 0494 9889     		.ascii	"\230\211"
 5600 0496 9891     		.ascii	"\230\221"
 5601 0498 9893     		.ascii	"\230\223"
 5602 049a 9895     		.ascii	"\230\225"
 5603 049c 9896     		.ascii	"\230\226"
 5604 049e 9897     		.ascii	"\230\227"
 5605 04a0 98E1     		.ascii	"\230\341"
 5606 04a2 98E2     		.ascii	"\230\342"
 5607 04a4 98E5     		.ascii	"\230\345"
 5608 04a6 98E9     		.ascii	"\230\351"
 5609 04a8 98EB     		.ascii	"\230\353"
 5610 04aa 98EC     		.ascii	"\230\354"
 5611 04ac 98F1     		.ascii	"\230\361"
 5612 04ae 98F3     		.ascii	"\230\363"
 5613 04b0 98F5     		.ascii	"\230\365"
 5614 04b2 98F6     		.ascii	"\230\366"
 5615 04b4 98F7     		.ascii	"\230\367"
 5616 04b6 98FD     		.ascii	"\230\375"
 5617 04b8 9941     		.ascii	"\231A"
 5618 04ba 9942     		.ascii	"\231B"
 5619 04bc 9945     		.ascii	"\231E"
 5620 04be 9949     		.ascii	"\231I"
 5621 04c0 9951     		.ascii	"\231Q"
 5622 04c2 9953     		.ascii	"\231S"
 5623 04c4 9955     		.ascii	"\231U"
 5624 04c6 9956     		.ascii	"\231V"
 5625 04c8 9957     		.ascii	"\231W"
 5626 04ca 9961     		.ascii	"\231a"
 5627 04cc 9976     		.ascii	"\231v"
 5628 04ce 99A1     		.ascii	"\231\241"
 5629 04d0 99A2     		.ascii	"\231\242"
 5630 04d2 99A5     		.ascii	"\231\245"
 5631 04d4 99A9     		.ascii	"\231\251"
 5632 04d6 99B7     		.ascii	"\231\267"
 5633 04d8 99C1     		.ascii	"\231\301"
 5634 04da 99C9     		.ascii	"\231\311"
 5635 04dc 99E1     		.ascii	"\231\341"
 5636 04de 9A41     		.ascii	"\232A"
 5637 04e0 9A45     		.ascii	"\232E"
 5638 04e2 9A81     		.ascii	"\232\201"
 5639 04e4 9A82     		.ascii	"\232\202"
 5640 04e6 9A85     		.ascii	"\232\205"
 5641 04e8 9A89     		.ascii	"\232\211"
 5642 04ea 9A90     		.ascii	"\232\220"
 5643 04ec 9A91     		.ascii	"\232\221"
 5644 04ee 9A97     		.ascii	"\232\227"
 5645 04f0 9AC1     		.ascii	"\232\301"
 5646 04f2 9AE1     		.ascii	"\232\341"
 5647 04f4 9AE5     		.ascii	"\232\345"
 5648 04f6 9AE9     		.ascii	"\232\351"
 5649 04f8 9AF1     		.ascii	"\232\361"
 5650 04fa 9AF3     		.ascii	"\232\363"
 5651 04fc 9AF7     		.ascii	"\232\367"
 5652 04fe 9B61     		.ascii	"\233a"
 5653 0500 9B62     		.ascii	"\233b"
 5654 0502 9B65     		.ascii	"\233e"
 5655 0504 9B68     		.ascii	"\233h"
 5656 0506 9B69     		.ascii	"\233i"
 5657 0508 9B71     		.ascii	"\233q"
 5658 050a 9B73     		.ascii	"\233s"
 5659 050c 9B75     		.ascii	"\233u"
 5660 050e 9B81     		.ascii	"\233\201"
 5661 0510 9B85     		.ascii	"\233\205"
 5662 0512 9B89     		.ascii	"\233\211"
 5663 0514 9B91     		.ascii	"\233\221"
 5664 0516 9B93     		.ascii	"\233\223"
 5665 0518 9BA1     		.ascii	"\233\241"
 5666 051a 9BA5     		.ascii	"\233\245"
 5667 051c 9BA9     		.ascii	"\233\251"
 5668 051e 9BB1     		.ascii	"\233\261"
 5669 0520 9BB3     		.ascii	"\233\263"
 5670 0522 9BB5     		.ascii	"\233\265"
 5671 0524 9BB7     		.ascii	"\233\267"
 5672 0526 9C61     		.ascii	"\234a"
 5673 0528 9C62     		.ascii	"\234b"
 5674 052a 9C65     		.ascii	"\234e"
 5675 052c 9C69     		.ascii	"\234i"
 5676 052e 9C71     		.ascii	"\234q"
 5677 0530 9C73     		.ascii	"\234s"
 5678 0532 9C75     		.ascii	"\234u"
 5679 0534 9C76     		.ascii	"\234v"
 5680 0536 9C77     		.ascii	"\234w"
 5681 0538 9C78     		.ascii	"\234x"
 5682 053a 9C7C     		.ascii	"\234|"
 5683 053c 9C7D     		.ascii	"\234}"
 5684 053e 2020     		.ascii	"  "
 5685 0540 2020     		.ascii	"  "
 5686 0542 9C81     		.ascii	"\234\201"
 5687 0544 9C82     		.ascii	"\234\202"
 5688 0546 9C85     		.ascii	"\234\205"
 5689 0548 9C89     		.ascii	"\234\211"
 5690 054a 9C91     		.ascii	"\234\221"
 5691 054c 9C93     		.ascii	"\234\223"
 5692 054e 9C95     		.ascii	"\234\225"
 5693 0550 9C96     		.ascii	"\234\226"
 5694 0552 9C97     		.ascii	"\234\227"
 5695 0554 9CA1     		.ascii	"\234\241"
 5696 0556 9CA2     		.ascii	"\234\242"
 5697 0558 9CA5     		.ascii	"\234\245"
 5698 055a 9CB5     		.ascii	"\234\265"
 5699 055c 9CB7     		.ascii	"\234\267"
 5700 055e 9CE1     		.ascii	"\234\341"
 5701 0560 9CE2     		.ascii	"\234\342"
 5702 0562 9CE5     		.ascii	"\234\345"
 5703 0564 9CE9     		.ascii	"\234\351"
 5704 0566 9CF1     		.ascii	"\234\361"
 5705 0568 9CF3     		.ascii	"\234\363"
 5706 056a 9CF5     		.ascii	"\234\365"
 5707 056c 9CF6     		.ascii	"\234\366"
 5708 056e 9CF7     		.ascii	"\234\367"
 5709 0570 9CFD     		.ascii	"\234\375"
 5710 0572 9D41     		.ascii	"\235A"
 5711 0574 9D42     		.ascii	"\235B"
 5712 0576 9D45     		.ascii	"\235E"
 5713 0578 9D49     		.ascii	"\235I"
 5714 057a 9D51     		.ascii	"\235Q"
 5715 057c 9D53     		.ascii	"\235S"
 5716 057e 9D55     		.ascii	"\235U"
 5717 0580 9D57     		.ascii	"\235W"
 5718 0582 9D61     		.ascii	"\235a"
 5719 0584 9D62     		.ascii	"\235b"
 5720 0586 9D65     		.ascii	"\235e"
 5721 0588 9D69     		.ascii	"\235i"
 5722 058a 9D71     		.ascii	"\235q"
 5723 058c 9D73     		.ascii	"\235s"
 5724 058e 9D75     		.ascii	"\235u"
 5725 0590 9D76     		.ascii	"\235v"
 5726 0592 9D77     		.ascii	"\235w"
 5727 0594 9D81     		.ascii	"\235\201"
 5728 0596 9D85     		.ascii	"\235\205"
 5729 0598 9D93     		.ascii	"\235\223"
 5730 059a 9D95     		.ascii	"\235\225"
 5731 059c 9DA1     		.ascii	"\235\241"
 5732 059e 9DA2     		.ascii	"\235\242"
 5733 05a0 9DA5     		.ascii	"\235\245"
 5734 05a2 9DA9     		.ascii	"\235\251"
 5735 05a4 9DB1     		.ascii	"\235\261"
 5736 05a6 9DB3     		.ascii	"\235\263"
 5737 05a8 9DB5     		.ascii	"\235\265"
 5738 05aa 9DB7     		.ascii	"\235\267"
 5739 05ac 9DC1     		.ascii	"\235\301"
 5740 05ae 9DC5     		.ascii	"\235\305"
 5741 05b0 9DD7     		.ascii	"\235\327"
 5742 05b2 9DF6     		.ascii	"\235\366"
 5743 05b4 9E41     		.ascii	"\236A"
 5744 05b6 9E45     		.ascii	"\236E"
 5745 05b8 9E49     		.ascii	"\236I"
 5746 05ba 9E51     		.ascii	"\236Q"
 5747 05bc 9E53     		.ascii	"\236S"
 5748 05be 9E55     		.ascii	"\236U"
 5749 05c0 9E57     		.ascii	"\236W"
 5750 05c2 9E61     		.ascii	"\236a"
 5751 05c4 9E65     		.ascii	"\236e"
 5752 05c6 9E69     		.ascii	"\236i"
 5753 05c8 9E73     		.ascii	"\236s"
 5754 05ca 9E75     		.ascii	"\236u"
 5755 05cc 9E77     		.ascii	"\236w"
 5756 05ce 9E81     		.ascii	"\236\201"
 5757 05d0 9E82     		.ascii	"\236\202"
 5758 05d2 9E85     		.ascii	"\236\205"
 5759 05d4 9E89     		.ascii	"\236\211"
 5760 05d6 9E91     		.ascii	"\236\221"
 5761 05d8 9E93     		.ascii	"\236\223"
 5762 05da 9E95     		.ascii	"\236\225"
 5763 05dc 9E97     		.ascii	"\236\227"
 5764 05de 9EA1     		.ascii	"\236\241"
 5765 05e0 9EB6     		.ascii	"\236\266"
 5766 05e2 9EC1     		.ascii	"\236\301"
 5767 05e4 9EE1     		.ascii	"\236\341"
 5768 05e6 9EE2     		.ascii	"\236\342"
 5769 05e8 9EE5     		.ascii	"\236\345"
 5770 05ea 9EE9     		.ascii	"\236\351"
 5771 05ec 9EF1     		.ascii	"\236\361"
 5772 05ee 9EF5     		.ascii	"\236\365"
 5773 05f0 9EF7     		.ascii	"\236\367"
 5774 05f2 9F41     		.ascii	"\237A"
 5775 05f4 9F42     		.ascii	"\237B"
 5776 05f6 9F45     		.ascii	"\237E"
 5777 05f8 9F49     		.ascii	"\237I"
 5778 05fa 9F51     		.ascii	"\237Q"
 5779 05fc 9F53     		.ascii	"\237S"
 5780 05fe 2020     		.ascii	"  "
 5781 0600 2020     		.ascii	"  "
 5782 0602 9F55     		.ascii	"\237U"
 5783 0604 9F57     		.ascii	"\237W"
 5784 0606 9F61     		.ascii	"\237a"
 5785 0608 9F62     		.ascii	"\237b"
 5786 060a 9F65     		.ascii	"\237e"
 5787 060c 9F69     		.ascii	"\237i"
 5788 060e 9F71     		.ascii	"\237q"
 5789 0610 9F73     		.ascii	"\237s"
 5790 0612 9F75     		.ascii	"\237u"
 5791 0614 9F77     		.ascii	"\237w"
 5792 0616 9F78     		.ascii	"\237x"
 5793 0618 9F7B     		.ascii	"\237{"
 5794 061a 9F7C     		.ascii	"\237|"
 5795 061c 9FA1     		.ascii	"\237\241"
 5796 061e 9FA2     		.ascii	"\237\242"
 5797 0620 9FA5     		.ascii	"\237\245"
 5798 0622 9FA9     		.ascii	"\237\251"
 5799 0624 9FB1     		.ascii	"\237\261"
 5800 0626 9FB3     		.ascii	"\237\263"
 5801 0628 9FB5     		.ascii	"\237\265"
 5802 062a 9FB7     		.ascii	"\237\267"
 5803 062c A061     		.ascii	"\240a"
 5804 062e A062     		.ascii	"\240b"
 5805 0630 A065     		.ascii	"\240e"
 5806 0632 A067     		.ascii	"\240g"
 5807 0634 A068     		.ascii	"\240h"
 5808 0636 A069     		.ascii	"\240i"
 5809 0638 A06A     		.ascii	"\240j"
 5810 063a A06B     		.ascii	"\240k"
 5811 063c A071     		.ascii	"\240q"
 5812 063e A073     		.ascii	"\240s"
 5813 0640 A075     		.ascii	"\240u"
 5814 0642 A077     		.ascii	"\240w"
 5815 0644 A078     		.ascii	"\240x"
 5816 0646 A07B     		.ascii	"\240{"
 5817 0648 A07D     		.ascii	"\240}"
 5818 064a A081     		.ascii	"\240\201"
 5819 064c A082     		.ascii	"\240\202"
 5820 064e A085     		.ascii	"\240\205"
 5821 0650 A089     		.ascii	"\240\211"
 5822 0652 A091     		.ascii	"\240\221"
 5823 0654 A093     		.ascii	"\240\223"
 5824 0656 A095     		.ascii	"\240\225"
 5825 0658 A096     		.ascii	"\240\226"
 5826 065a A097     		.ascii	"\240\227"
 5827 065c A098     		.ascii	"\240\230"
 5828 065e A0A1     		.ascii	"\240\241"
 5829 0660 A0A2     		.ascii	"\240\242"
 5830 0662 A0A9     		.ascii	"\240\251"
 5831 0664 A0B7     		.ascii	"\240\267"
 5832 0666 A0E1     		.ascii	"\240\341"
 5833 0668 A0E2     		.ascii	"\240\342"
 5834 066a A0E5     		.ascii	"\240\345"
 5835 066c A0E9     		.ascii	"\240\351"
 5836 066e A0EB     		.ascii	"\240\353"
 5837 0670 A0F1     		.ascii	"\240\361"
 5838 0672 A0F3     		.ascii	"\240\363"
 5839 0674 A0F5     		.ascii	"\240\365"
 5840 0676 A0F7     		.ascii	"\240\367"
 5841 0678 A0F8     		.ascii	"\240\370"
 5842 067a A0FD     		.ascii	"\240\375"
 5843 067c A141     		.ascii	"\241A"
 5844 067e A142     		.ascii	"\241B"
 5845 0680 A145     		.ascii	"\241E"
 5846 0682 A149     		.ascii	"\241I"
 5847 0684 A151     		.ascii	"\241Q"
 5848 0686 A153     		.ascii	"\241S"
 5849 0688 A155     		.ascii	"\241U"
 5850 068a A156     		.ascii	"\241V"
 5851 068c A157     		.ascii	"\241W"
 5852 068e A161     		.ascii	"\241a"
 5853 0690 A162     		.ascii	"\241b"
 5854 0692 A165     		.ascii	"\241e"
 5855 0694 A169     		.ascii	"\241i"
 5856 0696 A175     		.ascii	"\241u"
 5857 0698 A176     		.ascii	"\241v"
 5858 069a A177     		.ascii	"\241w"
 5859 069c A179     		.ascii	"\241y"
 5860 069e A181     		.ascii	"\241\201"
 5861 06a0 A1A1     		.ascii	"\241\241"
 5862 06a2 A1A2     		.ascii	"\241\242"
 5863 06a4 A1A4     		.ascii	"\241\244"
 5864 06a6 A1A5     		.ascii	"\241\245"
 5865 06a8 A1A9     		.ascii	"\241\251"
 5866 06aa A1AB     		.ascii	"\241\253"
 5867 06ac A1B1     		.ascii	"\241\261"
 5868 06ae A1B3     		.ascii	"\241\263"
 5869 06b0 A1B5     		.ascii	"\241\265"
 5870 06b2 A1B7     		.ascii	"\241\267"
 5871 06b4 A1C1     		.ascii	"\241\301"
 5872 06b6 A1C5     		.ascii	"\241\305"
 5873 06b8 A1D6     		.ascii	"\241\326"
 5874 06ba A1D7     		.ascii	"\241\327"
 5875 06bc A241     		.ascii	"\242A"
 5876 06be 2020     		.ascii	"  "
 5877 06c0 2020     		.ascii	"  "
 5878 06c2 A245     		.ascii	"\242E"
 5879 06c4 A249     		.ascii	"\242I"
 5880 06c6 A253     		.ascii	"\242S"
 5881 06c8 A255     		.ascii	"\242U"
 5882 06ca A257     		.ascii	"\242W"
 5883 06cc A261     		.ascii	"\242a"
 5884 06ce A265     		.ascii	"\242e"
 5885 06d0 A269     		.ascii	"\242i"
 5886 06d2 A273     		.ascii	"\242s"
 5887 06d4 A275     		.ascii	"\242u"
 5888 06d6 A281     		.ascii	"\242\201"
 5889 06d8 A282     		.ascii	"\242\202"
 5890 06da A283     		.ascii	"\242\203"
 5891 06dc A285     		.ascii	"\242\205"
 5892 06de A288     		.ascii	"\242\210"
 5893 06e0 A289     		.ascii	"\242\211"
 5894 06e2 A28A     		.ascii	"\242\212"
 5895 06e4 A28B     		.ascii	"\242\213"
 5896 06e6 A291     		.ascii	"\242\221"
 5897 06e8 A293     		.ascii	"\242\223"
 5898 06ea A295     		.ascii	"\242\225"
 5899 06ec A297     		.ascii	"\242\227"
 5900 06ee A29B     		.ascii	"\242\233"
 5901 06f0 A29D     		.ascii	"\242\235"
 5902 06f2 A2A1     		.ascii	"\242\241"
 5903 06f4 A2A5     		.ascii	"\242\245"
 5904 06f6 A2A9     		.ascii	"\242\251"
 5905 06f8 A2B1     		.ascii	"\242\261"
 5906 06fa A2B5     		.ascii	"\242\265"
 5907 06fc A2C1     		.ascii	"\242\301"
 5908 06fe A2E1     		.ascii	"\242\341"
 5909 0700 A2E5     		.ascii	"\242\345"
 5910 0702 A2E9     		.ascii	"\242\351"
 5911 0704 A341     		.ascii	"\243A"
 5912 0706 A345     		.ascii	"\243E"
 5913 0708 A349     		.ascii	"\243I"
 5914 070a A351     		.ascii	"\243Q"
 5915 070c A355     		.ascii	"\243U"
 5916 070e A361     		.ascii	"\243a"
 5917 0710 A365     		.ascii	"\243e"
 5918 0712 A369     		.ascii	"\243i"
 5919 0714 A371     		.ascii	"\243q"
 5920 0716 A375     		.ascii	"\243u"
 5921 0718 A3A1     		.ascii	"\243\241"
 5922 071a A3A2     		.ascii	"\243\242"
 5923 071c A3A5     		.ascii	"\243\245"
 5924 071e A3A8     		.ascii	"\243\250"
 5925 0720 A3A9     		.ascii	"\243\251"
 5926 0722 A3AB     		.ascii	"\243\253"
 5927 0724 A3B1     		.ascii	"\243\261"
 5928 0726 A3B3     		.ascii	"\243\263"
 5929 0728 A3B5     		.ascii	"\243\265"
 5930 072a A3B6     		.ascii	"\243\266"
 5931 072c A3B7     		.ascii	"\243\267"
 5932 072e A3B9     		.ascii	"\243\271"
 5933 0730 A3BB     		.ascii	"\243\273"
 5934 0732 A461     		.ascii	"\244a"
 5935 0734 A462     		.ascii	"\244b"
 5936 0736 A463     		.ascii	"\244c"
 5937 0738 A464     		.ascii	"\244d"
 5938 073a A465     		.ascii	"\244e"
 5939 073c A468     		.ascii	"\244h"
 5940 073e A469     		.ascii	"\244i"
 5941 0740 A46A     		.ascii	"\244j"
 5942 0742 A46B     		.ascii	"\244k"
 5943 0744 A46C     		.ascii	"\244l"
 5944 0746 A471     		.ascii	"\244q"
 5945 0748 A473     		.ascii	"\244s"
 5946 074a A475     		.ascii	"\244u"
 5947 074c A477     		.ascii	"\244w"
 5948 074e A47B     		.ascii	"\244{"
 5949 0750 A481     		.ascii	"\244\201"
 5950 0752 A482     		.ascii	"\244\202"
 5951 0754 A485     		.ascii	"\244\205"
 5952 0756 A489     		.ascii	"\244\211"
 5953 0758 A491     		.ascii	"\244\221"
 5954 075a A493     		.ascii	"\244\223"
 5955 075c A495     		.ascii	"\244\225"
 5956 075e A496     		.ascii	"\244\226"
 5957 0760 A497     		.ascii	"\244\227"
 5958 0762 A49B     		.ascii	"\244\233"
 5959 0764 A4A1     		.ascii	"\244\241"
 5960 0766 A4A2     		.ascii	"\244\242"
 5961 0768 A4A5     		.ascii	"\244\245"
 5962 076a A4B3     		.ascii	"\244\263"
 5963 076c A4E1     		.ascii	"\244\341"
 5964 076e A4E2     		.ascii	"\244\342"
 5965 0770 A4E5     		.ascii	"\244\345"
 5966 0772 A4E8     		.ascii	"\244\350"
 5967 0774 A4E9     		.ascii	"\244\351"
 5968 0776 A4EB     		.ascii	"\244\353"
 5969 0778 A4F1     		.ascii	"\244\361"
 5970 077a A4F3     		.ascii	"\244\363"
 5971 077c A4F5     		.ascii	"\244\365"
 5972 077e 2020     		.ascii	"  "
 5973 0780 2020     		.ascii	"  "
 5974 0782 A4F7     		.ascii	"\244\367"
 5975 0784 A4F8     		.ascii	"\244\370"
 5976 0786 A541     		.ascii	"\245A"
 5977 0788 A542     		.ascii	"\245B"
 5978 078a A545     		.ascii	"\245E"
 5979 078c A549     		.ascii	"\245I"
 5980 078e A551     		.ascii	"\245Q"
 5981 0790 A553     		.ascii	"\245S"
 5982 0792 A555     		.ascii	"\245U"
 5983 0794 A556     		.ascii	"\245V"
 5984 0796 A557     		.ascii	"\245W"
 5985 0798 A55B     		.ascii	"\245["
 5986 079a A561     		.ascii	"\245a"
 5987 079c A562     		.ascii	"\245b"
 5988 079e A565     		.ascii	"\245e"
 5989 07a0 A569     		.ascii	"\245i"
 5990 07a2 A573     		.ascii	"\245s"
 5991 07a4 A575     		.ascii	"\245u"
 5992 07a6 A576     		.ascii	"\245v"
 5993 07a8 A577     		.ascii	"\245w"
 5994 07aa A57B     		.ascii	"\245{"
 5995 07ac A581     		.ascii	"\245\201"
 5996 07ae A585     		.ascii	"\245\205"
 5997 07b0 A5A1     		.ascii	"\245\241"
 5998 07b2 A5A2     		.ascii	"\245\242"
 5999 07b4 A5A3     		.ascii	"\245\243"
 6000 07b6 A5A5     		.ascii	"\245\245"
 6001 07b8 A5A9     		.ascii	"\245\251"
 6002 07ba A5B1     		.ascii	"\245\261"
 6003 07bc A5B3     		.ascii	"\245\263"
 6004 07be A5B5     		.ascii	"\245\265"
 6005 07c0 A5B7     		.ascii	"\245\267"
 6006 07c2 A5C1     		.ascii	"\245\301"
 6007 07c4 A5C5     		.ascii	"\245\305"
 6008 07c6 A5D6     		.ascii	"\245\326"
 6009 07c8 A5E1     		.ascii	"\245\341"
 6010 07ca A5F6     		.ascii	"\245\366"
 6011 07cc A641     		.ascii	"\246A"
 6012 07ce A642     		.ascii	"\246B"
 6013 07d0 A645     		.ascii	"\246E"
 6014 07d2 A649     		.ascii	"\246I"
 6015 07d4 A651     		.ascii	"\246Q"
 6016 07d6 A653     		.ascii	"\246S"
 6017 07d8 A661     		.ascii	"\246a"
 6018 07da A665     		.ascii	"\246e"
 6019 07dc A681     		.ascii	"\246\201"
 6020 07de A682     		.ascii	"\246\202"
 6021 07e0 A685     		.ascii	"\246\205"
 6022 07e2 A688     		.ascii	"\246\210"
 6023 07e4 A689     		.ascii	"\246\211"
 6024 07e6 A68A     		.ascii	"\246\212"
 6025 07e8 A68B     		.ascii	"\246\213"
 6026 07ea A691     		.ascii	"\246\221"
 6027 07ec A693     		.ascii	"\246\223"
 6028 07ee A695     		.ascii	"\246\225"
 6029 07f0 A697     		.ascii	"\246\227"
 6030 07f2 A69B     		.ascii	"\246\233"
 6031 07f4 A69C     		.ascii	"\246\234"
 6032 07f6 A6A1     		.ascii	"\246\241"
 6033 07f8 A6A9     		.ascii	"\246\251"
 6034 07fa A6B6     		.ascii	"\246\266"
 6035 07fc A6C1     		.ascii	"\246\301"
 6036 07fe A6E1     		.ascii	"\246\341"
 6037 0800 A6E2     		.ascii	"\246\342"
 6038 0802 A6E5     		.ascii	"\246\345"
 6039 0804 A6E9     		.ascii	"\246\351"
 6040 0806 A6F7     		.ascii	"\246\367"
 6041 0808 A741     		.ascii	"\247A"
 6042 080a A745     		.ascii	"\247E"
 6043 080c A749     		.ascii	"\247I"
 6044 080e A751     		.ascii	"\247Q"
 6045 0810 A755     		.ascii	"\247U"
 6046 0812 A757     		.ascii	"\247W"
 6047 0814 A761     		.ascii	"\247a"
 6048 0816 A762     		.ascii	"\247b"
 6049 0818 A765     		.ascii	"\247e"
 6050 081a A769     		.ascii	"\247i"
 6051 081c A771     		.ascii	"\247q"
 6052 081e A773     		.ascii	"\247s"
 6053 0820 A775     		.ascii	"\247u"
 6054 0822 A7A1     		.ascii	"\247\241"
 6055 0824 A7A2     		.ascii	"\247\242"
 6056 0826 A7A5     		.ascii	"\247\245"
 6057 0828 A7A9     		.ascii	"\247\251"
 6058 082a A7AB     		.ascii	"\247\253"
 6059 082c A7B1     		.ascii	"\247\261"
 6060 082e A7B3     		.ascii	"\247\263"
 6061 0830 A7B5     		.ascii	"\247\265"
 6062 0832 A7B7     		.ascii	"\247\267"
 6063 0834 A7B8     		.ascii	"\247\270"
 6064 0836 A7B9     		.ascii	"\247\271"
 6065 0838 A861     		.ascii	"\250a"
 6066 083a A862     		.ascii	"\250b"
 6067 083c A865     		.ascii	"\250e"
 6068 083e 2020     		.ascii	"  "
 6069 0840 2020     		.ascii	"  "
 6070 0842 A869     		.ascii	"\250i"
 6071 0844 A86B     		.ascii	"\250k"
 6072 0846 A871     		.ascii	"\250q"
 6073 0848 A873     		.ascii	"\250s"
 6074 084a A875     		.ascii	"\250u"
 6075 084c A876     		.ascii	"\250v"
 6076 084e A877     		.ascii	"\250w"
 6077 0850 A87D     		.ascii	"\250}"
 6078 0852 A881     		.ascii	"\250\201"
 6079 0854 A882     		.ascii	"\250\202"
 6080 0856 A885     		.ascii	"\250\205"
 6081 0858 A889     		.ascii	"\250\211"
 6082 085a A891     		.ascii	"\250\221"
 6083 085c A893     		.ascii	"\250\223"
 6084 085e A895     		.ascii	"\250\225"
 6085 0860 A896     		.ascii	"\250\226"
 6086 0862 A897     		.ascii	"\250\227"
 6087 0864 A8A1     		.ascii	"\250\241"
 6088 0866 A8A2     		.ascii	"\250\242"
 6089 0868 A8B1     		.ascii	"\250\261"
 6090 086a A8E1     		.ascii	"\250\341"
 6091 086c A8E2     		.ascii	"\250\342"
 6092 086e A8E5     		.ascii	"\250\345"
 6093 0870 A8E8     		.ascii	"\250\350"
 6094 0872 A8E9     		.ascii	"\250\351"
 6095 0874 A8F1     		.ascii	"\250\361"
 6096 0876 A8F5     		.ascii	"\250\365"
 6097 0878 A8F6     		.ascii	"\250\366"
 6098 087a A8F7     		.ascii	"\250\367"
 6099 087c A941     		.ascii	"\251A"
 6100 087e A957     		.ascii	"\251W"
 6101 0880 A961     		.ascii	"\251a"
 6102 0882 A962     		.ascii	"\251b"
 6103 0884 A971     		.ascii	"\251q"
 6104 0886 A973     		.ascii	"\251s"
 6105 0888 A975     		.ascii	"\251u"
 6106 088a A976     		.ascii	"\251v"
 6107 088c A977     		.ascii	"\251w"
 6108 088e A9A1     		.ascii	"\251\241"
 6109 0890 A9A2     		.ascii	"\251\242"
 6110 0892 A9A5     		.ascii	"\251\245"
 6111 0894 A9A9     		.ascii	"\251\251"
 6112 0896 A9B1     		.ascii	"\251\261"
 6113 0898 A9B3     		.ascii	"\251\263"
 6114 089a A9B7     		.ascii	"\251\267"
 6115 089c AA41     		.ascii	"\252A"
 6116 089e AA61     		.ascii	"\252a"
 6117 08a0 AA77     		.ascii	"\252w"
 6118 08a2 AA81     		.ascii	"\252\201"
 6119 08a4 AA82     		.ascii	"\252\202"
 6120 08a6 AA85     		.ascii	"\252\205"
 6121 08a8 AA89     		.ascii	"\252\211"
 6122 08aa AA91     		.ascii	"\252\221"
 6123 08ac AA95     		.ascii	"\252\225"
 6124 08ae AA97     		.ascii	"\252\227"
 6125 08b0 AB41     		.ascii	"\253A"
 6126 08b2 AB57     		.ascii	"\253W"
 6127 08b4 AB61     		.ascii	"\253a"
 6128 08b6 AB65     		.ascii	"\253e"
 6129 08b8 AB69     		.ascii	"\253i"
 6130 08ba AB71     		.ascii	"\253q"
 6131 08bc AB73     		.ascii	"\253s"
 6132 08be ABA1     		.ascii	"\253\241"
 6133 08c0 ABA2     		.ascii	"\253\242"
 6134 08c2 ABA5     		.ascii	"\253\245"
 6135 08c4 ABA9     		.ascii	"\253\251"
 6136 08c6 ABB1     		.ascii	"\253\261"
 6137 08c8 ABB3     		.ascii	"\253\263"
 6138 08ca ABB5     		.ascii	"\253\265"
 6139 08cc ABB7     		.ascii	"\253\267"
 6140 08ce AC61     		.ascii	"\254a"
 6141 08d0 AC62     		.ascii	"\254b"
 6142 08d2 AC64     		.ascii	"\254d"
 6143 08d4 AC65     		.ascii	"\254e"
 6144 08d6 AC68     		.ascii	"\254h"
 6145 08d8 AC69     		.ascii	"\254i"
 6146 08da AC6A     		.ascii	"\254j"
 6147 08dc AC6B     		.ascii	"\254k"
 6148 08de AC71     		.ascii	"\254q"
 6149 08e0 AC73     		.ascii	"\254s"
 6150 08e2 AC75     		.ascii	"\254u"
 6151 08e4 AC76     		.ascii	"\254v"
 6152 08e6 AC77     		.ascii	"\254w"
 6153 08e8 AC7B     		.ascii	"\254{"
 6154 08ea AC81     		.ascii	"\254\201"
 6155 08ec AC82     		.ascii	"\254\202"
 6156 08ee AC85     		.ascii	"\254\205"
 6157 08f0 AC89     		.ascii	"\254\211"
 6158 08f2 AC91     		.ascii	"\254\221"
 6159 08f4 AC93     		.ascii	"\254\223"
 6160 08f6 AC95     		.ascii	"\254\225"
 6161 08f8 AC96     		.ascii	"\254\226"
 6162 08fa AC97     		.ascii	"\254\227"
 6163 08fc ACA1     		.ascii	"\254\241"
 6164 08fe 2020     		.ascii	"  "
 6165 0900 2020     		.ascii	"  "
 6166 0902 ACA2     		.ascii	"\254\242"
 6167 0904 ACA5     		.ascii	"\254\245"
 6168 0906 ACA9     		.ascii	"\254\251"
 6169 0908 ACB1     		.ascii	"\254\261"
 6170 090a ACB3     		.ascii	"\254\263"
 6171 090c ACB5     		.ascii	"\254\265"
 6172 090e ACB7     		.ascii	"\254\267"
 6173 0910 ACC1     		.ascii	"\254\301"
 6174 0912 ACC5     		.ascii	"\254\305"
 6175 0914 ACC9     		.ascii	"\254\311"
 6176 0916 ACD1     		.ascii	"\254\321"
 6177 0918 ACD7     		.ascii	"\254\327"
 6178 091a ACE1     		.ascii	"\254\341"
 6179 091c ACE2     		.ascii	"\254\342"
 6180 091e ACE3     		.ascii	"\254\343"
 6181 0920 ACE4     		.ascii	"\254\344"
 6182 0922 ACE5     		.ascii	"\254\345"
 6183 0924 ACE8     		.ascii	"\254\350"
 6184 0926 ACE9     		.ascii	"\254\351"
 6185 0928 ACEB     		.ascii	"\254\353"
 6186 092a ACEC     		.ascii	"\254\354"
 6187 092c ACF1     		.ascii	"\254\361"
 6188 092e ACF3     		.ascii	"\254\363"
 6189 0930 ACF5     		.ascii	"\254\365"
 6190 0932 ACF6     		.ascii	"\254\366"
 6191 0934 ACF7     		.ascii	"\254\367"
 6192 0936 ACFC     		.ascii	"\254\374"
 6193 0938 AD41     		.ascii	"\255A"
 6194 093a AD42     		.ascii	"\255B"
 6195 093c AD45     		.ascii	"\255E"
 6196 093e AD49     		.ascii	"\255I"
 6197 0940 AD51     		.ascii	"\255Q"
 6198 0942 AD53     		.ascii	"\255S"
 6199 0944 AD55     		.ascii	"\255U"
 6200 0946 AD56     		.ascii	"\255V"
 6201 0948 AD57     		.ascii	"\255W"
 6202 094a AD61     		.ascii	"\255a"
 6203 094c AD62     		.ascii	"\255b"
 6204 094e AD65     		.ascii	"\255e"
 6205 0950 AD69     		.ascii	"\255i"
 6206 0952 AD71     		.ascii	"\255q"
 6207 0954 AD73     		.ascii	"\255s"
 6208 0956 AD75     		.ascii	"\255u"
 6209 0958 AD76     		.ascii	"\255v"
 6210 095a AD77     		.ascii	"\255w"
 6211 095c AD81     		.ascii	"\255\201"
 6212 095e AD85     		.ascii	"\255\205"
 6213 0960 AD89     		.ascii	"\255\211"
 6214 0962 AD97     		.ascii	"\255\227"
 6215 0964 ADA1     		.ascii	"\255\241"
 6216 0966 ADA2     		.ascii	"\255\242"
 6217 0968 ADA3     		.ascii	"\255\243"
 6218 096a ADA5     		.ascii	"\255\245"
 6219 096c ADA9     		.ascii	"\255\251"
 6220 096e ADAB     		.ascii	"\255\253"
 6221 0970 ADB1     		.ascii	"\255\261"
 6222 0972 ADB3     		.ascii	"\255\263"
 6223 0974 ADB5     		.ascii	"\255\265"
 6224 0976 ADB7     		.ascii	"\255\267"
 6225 0978 ADBB     		.ascii	"\255\273"
 6226 097a ADC1     		.ascii	"\255\301"
 6227 097c ADC2     		.ascii	"\255\302"
 6228 097e ADC5     		.ascii	"\255\305"
 6229 0980 ADC9     		.ascii	"\255\311"
 6230 0982 ADD7     		.ascii	"\255\327"
 6231 0984 ADE1     		.ascii	"\255\341"
 6232 0986 ADE5     		.ascii	"\255\345"
 6233 0988 ADE9     		.ascii	"\255\351"
 6234 098a ADF1     		.ascii	"\255\361"
 6235 098c ADF5     		.ascii	"\255\365"
 6236 098e ADF6     		.ascii	"\255\366"
 6237 0990 AE41     		.ascii	"\256A"
 6238 0992 AE45     		.ascii	"\256E"
 6239 0994 AE49     		.ascii	"\256I"
 6240 0996 AE51     		.ascii	"\256Q"
 6241 0998 AE53     		.ascii	"\256S"
 6242 099a AE55     		.ascii	"\256U"
 6243 099c AE61     		.ascii	"\256a"
 6244 099e AE62     		.ascii	"\256b"
 6245 09a0 AE65     		.ascii	"\256e"
 6246 09a2 AE69     		.ascii	"\256i"
 6247 09a4 AE71     		.ascii	"\256q"
 6248 09a6 AE73     		.ascii	"\256s"
 6249 09a8 AE75     		.ascii	"\256u"
 6250 09aa AE77     		.ascii	"\256w"
 6251 09ac AE81     		.ascii	"\256\201"
 6252 09ae AE82     		.ascii	"\256\202"
 6253 09b0 AE85     		.ascii	"\256\205"
 6254 09b2 AE88     		.ascii	"\256\210"
 6255 09b4 AE89     		.ascii	"\256\211"
 6256 09b6 AE91     		.ascii	"\256\221"
 6257 09b8 AE93     		.ascii	"\256\223"
 6258 09ba AE95     		.ascii	"\256\225"
 6259 09bc AE97     		.ascii	"\256\227"
 6260 09be 2020     		.ascii	"  "
 6261 09c0 2020     		.ascii	"  "
 6262 09c2 AE99     		.ascii	"\256\231"
 6263 09c4 AE9B     		.ascii	"\256\233"
 6264 09c6 AE9C     		.ascii	"\256\234"
 6265 09c8 AEA1     		.ascii	"\256\241"
 6266 09ca AEB6     		.ascii	"\256\266"
 6267 09cc AEC1     		.ascii	"\256\301"
 6268 09ce AEC2     		.ascii	"\256\302"
 6269 09d0 AEC5     		.ascii	"\256\305"
 6270 09d2 AEC9     		.ascii	"\256\311"
 6271 09d4 AED1     		.ascii	"\256\321"
 6272 09d6 AED7     		.ascii	"\256\327"
 6273 09d8 AEE1     		.ascii	"\256\341"
 6274 09da AEE2     		.ascii	"\256\342"
 6275 09dc AEE5     		.ascii	"\256\345"
 6276 09de AEE9     		.ascii	"\256\351"
 6277 09e0 AEF1     		.ascii	"\256\361"
 6278 09e2 AEF3     		.ascii	"\256\363"
 6279 09e4 AEF5     		.ascii	"\256\365"
 6280 09e6 AEF7     		.ascii	"\256\367"
 6281 09e8 AF41     		.ascii	"\257A"
 6282 09ea AF42     		.ascii	"\257B"
 6283 09ec AF49     		.ascii	"\257I"
 6284 09ee AF51     		.ascii	"\257Q"
 6285 09f0 AF55     		.ascii	"\257U"
 6286 09f2 AF57     		.ascii	"\257W"
 6287 09f4 AF61     		.ascii	"\257a"
 6288 09f6 AF62     		.ascii	"\257b"
 6289 09f8 AF65     		.ascii	"\257e"
 6290 09fa AF69     		.ascii	"\257i"
 6291 09fc AF6A     		.ascii	"\257j"
 6292 09fe AF71     		.ascii	"\257q"
 6293 0a00 AF73     		.ascii	"\257s"
 6294 0a02 AF75     		.ascii	"\257u"
 6295 0a04 AF77     		.ascii	"\257w"
 6296 0a06 AFA1     		.ascii	"\257\241"
 6297 0a08 AFA2     		.ascii	"\257\242"
 6298 0a0a AFA5     		.ascii	"\257\245"
 6299 0a0c AFA8     		.ascii	"\257\250"
 6300 0a0e AFA9     		.ascii	"\257\251"
 6301 0a10 AFB0     		.ascii	"\257\260"
 6302 0a12 AFB1     		.ascii	"\257\261"
 6303 0a14 AFB3     		.ascii	"\257\263"
 6304 0a16 AFB5     		.ascii	"\257\265"
 6305 0a18 AFB7     		.ascii	"\257\267"
 6306 0a1a AFBC     		.ascii	"\257\274"
 6307 0a1c B061     		.ascii	"\260a"
 6308 0a1e B062     		.ascii	"\260b"
 6309 0a20 B064     		.ascii	"\260d"
 6310 0a22 B065     		.ascii	"\260e"
 6311 0a24 B069     		.ascii	"\260i"
 6312 0a26 B071     		.ascii	"\260q"
 6313 0a28 B073     		.ascii	"\260s"
 6314 0a2a B076     		.ascii	"\260v"
 6315 0a2c B077     		.ascii	"\260w"
 6316 0a2e B07D     		.ascii	"\260}"
 6317 0a30 B081     		.ascii	"\260\201"
 6318 0a32 B082     		.ascii	"\260\202"
 6319 0a34 B085     		.ascii	"\260\205"
 6320 0a36 B089     		.ascii	"\260\211"
 6321 0a38 B091     		.ascii	"\260\221"
 6322 0a3a B093     		.ascii	"\260\223"
 6323 0a3c B096     		.ascii	"\260\226"
 6324 0a3e B097     		.ascii	"\260\227"
 6325 0a40 B0B7     		.ascii	"\260\267"
 6326 0a42 B0E1     		.ascii	"\260\341"
 6327 0a44 B0E2     		.ascii	"\260\342"
 6328 0a46 B0E5     		.ascii	"\260\345"
 6329 0a48 B0E9     		.ascii	"\260\351"
 6330 0a4a B0EB     		.ascii	"\260\353"
 6331 0a4c B0F1     		.ascii	"\260\361"
 6332 0a4e B0F3     		.ascii	"\260\363"
 6333 0a50 B0F6     		.ascii	"\260\366"
 6334 0a52 B0F7     		.ascii	"\260\367"
 6335 0a54 B141     		.ascii	"\261A"
 6336 0a56 B145     		.ascii	"\261E"
 6337 0a58 B149     		.ascii	"\261I"
 6338 0a5a B185     		.ascii	"\261\205"
 6339 0a5c B1A1     		.ascii	"\261\241"
 6340 0a5e B1A2     		.ascii	"\261\242"
 6341 0a60 B1A5     		.ascii	"\261\245"
 6342 0a62 B1A8     		.ascii	"\261\250"
 6343 0a64 B1A9     		.ascii	"\261\251"
 6344 0a66 B1AB     		.ascii	"\261\253"
 6345 0a68 B1B1     		.ascii	"\261\261"
 6346 0a6a B1B3     		.ascii	"\261\263"
 6347 0a6c B1B7     		.ascii	"\261\267"
 6348 0a6e B1C1     		.ascii	"\261\301"
 6349 0a70 B1C2     		.ascii	"\261\302"
 6350 0a72 B1C5     		.ascii	"\261\305"
 6351 0a74 B1D6     		.ascii	"\261\326"
 6352 0a76 B1E1     		.ascii	"\261\341"
 6353 0a78 B1F6     		.ascii	"\261\366"
 6354 0a7a B241     		.ascii	"\262A"
 6355 0a7c B245     		.ascii	"\262E"
 6356 0a7e 2020     		.ascii	"  "
 6357 0a80 2020     		.ascii	"  "
 6358 0a82 B249     		.ascii	"\262I"
 6359 0a84 B251     		.ascii	"\262Q"
 6360 0a86 B253     		.ascii	"\262S"
 6361 0a88 B261     		.ascii	"\262a"
 6362 0a8a B281     		.ascii	"\262\201"
 6363 0a8c B282     		.ascii	"\262\202"
 6364 0a8e B285     		.ascii	"\262\205"
 6365 0a90 B289     		.ascii	"\262\211"
 6366 0a92 B291     		.ascii	"\262\221"
 6367 0a94 B293     		.ascii	"\262\223"
 6368 0a96 B297     		.ascii	"\262\227"
 6369 0a98 B2A1     		.ascii	"\262\241"
 6370 0a9a B2B6     		.ascii	"\262\266"
 6371 0a9c B2C1     		.ascii	"\262\301"
 6372 0a9e B2E1     		.ascii	"\262\341"
 6373 0aa0 B2E5     		.ascii	"\262\345"
 6374 0aa2 B357     		.ascii	"\263W"
 6375 0aa4 B361     		.ascii	"\263a"
 6376 0aa6 B362     		.ascii	"\263b"
 6377 0aa8 B365     		.ascii	"\263e"
 6378 0aaa B369     		.ascii	"\263i"
 6379 0aac B36B     		.ascii	"\263k"
 6380 0aae B370     		.ascii	"\263p"
 6381 0ab0 B371     		.ascii	"\263q"
 6382 0ab2 B373     		.ascii	"\263s"
 6383 0ab4 B381     		.ascii	"\263\201"
 6384 0ab6 B385     		.ascii	"\263\205"
 6385 0ab8 B389     		.ascii	"\263\211"
 6386 0aba B391     		.ascii	"\263\221"
 6387 0abc B3A1     		.ascii	"\263\241"
 6388 0abe B3A2     		.ascii	"\263\242"
 6389 0ac0 B3A5     		.ascii	"\263\245"
 6390 0ac2 B3A9     		.ascii	"\263\251"
 6391 0ac4 B3B1     		.ascii	"\263\261"
 6392 0ac6 B3B3     		.ascii	"\263\263"
 6393 0ac8 B3B5     		.ascii	"\263\265"
 6394 0aca B3B7     		.ascii	"\263\267"
 6395 0acc B461     		.ascii	"\264a"
 6396 0ace B462     		.ascii	"\264b"
 6397 0ad0 B465     		.ascii	"\264e"
 6398 0ad2 B466     		.ascii	"\264f"
 6399 0ad4 B467     		.ascii	"\264g"
 6400 0ad6 B469     		.ascii	"\264i"
 6401 0ad8 B46A     		.ascii	"\264j"
 6402 0ada B46B     		.ascii	"\264k"
 6403 0adc B470     		.ascii	"\264p"
 6404 0ade B471     		.ascii	"\264q"
 6405 0ae0 B473     		.ascii	"\264s"
 6406 0ae2 B475     		.ascii	"\264u"
 6407 0ae4 B476     		.ascii	"\264v"
 6408 0ae6 B477     		.ascii	"\264w"
 6409 0ae8 B47B     		.ascii	"\264{"
 6410 0aea B47C     		.ascii	"\264|"
 6411 0aec B481     		.ascii	"\264\201"
 6412 0aee B482     		.ascii	"\264\202"
 6413 0af0 B485     		.ascii	"\264\205"
 6414 0af2 B489     		.ascii	"\264\211"
 6415 0af4 B491     		.ascii	"\264\221"
 6416 0af6 B493     		.ascii	"\264\223"
 6417 0af8 B495     		.ascii	"\264\225"
 6418 0afa B496     		.ascii	"\264\226"
 6419 0afc B497     		.ascii	"\264\227"
 6420 0afe B4A1     		.ascii	"\264\241"
 6421 0b00 B4A2     		.ascii	"\264\242"
 6422 0b02 B4A5     		.ascii	"\264\245"
 6423 0b04 B4A9     		.ascii	"\264\251"
 6424 0b06 B4AC     		.ascii	"\264\254"
 6425 0b08 B4B1     		.ascii	"\264\261"
 6426 0b0a B4B3     		.ascii	"\264\263"
 6427 0b0c B4B5     		.ascii	"\264\265"
 6428 0b0e B4B7     		.ascii	"\264\267"
 6429 0b10 B4BB     		.ascii	"\264\273"
 6430 0b12 B4BD     		.ascii	"\264\275"
 6431 0b14 B4C1     		.ascii	"\264\301"
 6432 0b16 B4C5     		.ascii	"\264\305"
 6433 0b18 B4C9     		.ascii	"\264\311"
 6434 0b1a B4D3     		.ascii	"\264\323"
 6435 0b1c B4E1     		.ascii	"\264\341"
 6436 0b1e B4E2     		.ascii	"\264\342"
 6437 0b20 B4E5     		.ascii	"\264\345"
 6438 0b22 B4E6     		.ascii	"\264\346"
 6439 0b24 B4E8     		.ascii	"\264\350"
 6440 0b26 B4E9     		.ascii	"\264\351"
 6441 0b28 B4EA     		.ascii	"\264\352"
 6442 0b2a B4EB     		.ascii	"\264\353"
 6443 0b2c B4F1     		.ascii	"\264\361"
 6444 0b2e B4F3     		.ascii	"\264\363"
 6445 0b30 B4F4     		.ascii	"\264\364"
 6446 0b32 B4F5     		.ascii	"\264\365"
 6447 0b34 B4F6     		.ascii	"\264\366"
 6448 0b36 B4F7     		.ascii	"\264\367"
 6449 0b38 B4F8     		.ascii	"\264\370"
 6450 0b3a B4FA     		.ascii	"\264\372"
 6451 0b3c B4FC     		.ascii	"\264\374"
 6452 0b3e 2020     		.ascii	"  "
 6453 0b40 2020     		.ascii	"  "
 6454 0b42 B541     		.ascii	"\265A"
 6455 0b44 B542     		.ascii	"\265B"
 6456 0b46 B545     		.ascii	"\265E"
 6457 0b48 B549     		.ascii	"\265I"
 6458 0b4a B551     		.ascii	"\265Q"
 6459 0b4c B553     		.ascii	"\265S"
 6460 0b4e B555     		.ascii	"\265U"
 6461 0b50 B557     		.ascii	"\265W"
 6462 0b52 B561     		.ascii	"\265a"
 6463 0b54 B562     		.ascii	"\265b"
 6464 0b56 B563     		.ascii	"\265c"
 6465 0b58 B565     		.ascii	"\265e"
 6466 0b5a B569     		.ascii	"\265i"
 6467 0b5c B56B     		.ascii	"\265k"
 6468 0b5e B56C     		.ascii	"\265l"
 6469 0b60 B571     		.ascii	"\265q"
 6470 0b62 B573     		.ascii	"\265s"
 6471 0b64 B574     		.ascii	"\265t"
 6472 0b66 B575     		.ascii	"\265u"
 6473 0b68 B576     		.ascii	"\265v"
 6474 0b6a B577     		.ascii	"\265w"
 6475 0b6c B57B     		.ascii	"\265{"
 6476 0b6e B57C     		.ascii	"\265|"
 6477 0b70 B57D     		.ascii	"\265}"
 6478 0b72 B581     		.ascii	"\265\201"
 6479 0b74 B585     		.ascii	"\265\205"
 6480 0b76 B589     		.ascii	"\265\211"
 6481 0b78 B591     		.ascii	"\265\221"
 6482 0b7a B593     		.ascii	"\265\223"
 6483 0b7c B595     		.ascii	"\265\225"
 6484 0b7e B596     		.ascii	"\265\226"
 6485 0b80 B5A1     		.ascii	"\265\241"
 6486 0b82 B5A2     		.ascii	"\265\242"
 6487 0b84 B5A5     		.ascii	"\265\245"
 6488 0b86 B5A9     		.ascii	"\265\251"
 6489 0b88 B5AA     		.ascii	"\265\252"
 6490 0b8a B5AB     		.ascii	"\265\253"
 6491 0b8c B5AD     		.ascii	"\265\255"
 6492 0b8e B5B0     		.ascii	"\265\260"
 6493 0b90 B5B1     		.ascii	"\265\261"
 6494 0b92 B5B3     		.ascii	"\265\263"
 6495 0b94 B5B5     		.ascii	"\265\265"
 6496 0b96 B5B7     		.ascii	"\265\267"
 6497 0b98 B5B9     		.ascii	"\265\271"
 6498 0b9a B5C1     		.ascii	"\265\301"
 6499 0b9c B5C2     		.ascii	"\265\302"
 6500 0b9e B5C5     		.ascii	"\265\305"
 6501 0ba0 B5C9     		.ascii	"\265\311"
 6502 0ba2 B5D1     		.ascii	"\265\321"
 6503 0ba4 B5D3     		.ascii	"\265\323"
 6504 0ba6 B5D5     		.ascii	"\265\325"
 6505 0ba8 B5D6     		.ascii	"\265\326"
 6506 0baa B5D7     		.ascii	"\265\327"
 6507 0bac B5E1     		.ascii	"\265\341"
 6508 0bae B5E2     		.ascii	"\265\342"
 6509 0bb0 B5E5     		.ascii	"\265\345"
 6510 0bb2 B5F1     		.ascii	"\265\361"
 6511 0bb4 B5F5     		.ascii	"\265\365"
 6512 0bb6 B5F7     		.ascii	"\265\367"
 6513 0bb8 B641     		.ascii	"\266A"
 6514 0bba B642     		.ascii	"\266B"
 6515 0bbc B645     		.ascii	"\266E"
 6516 0bbe B649     		.ascii	"\266I"
 6517 0bc0 B651     		.ascii	"\266Q"
 6518 0bc2 B653     		.ascii	"\266S"
 6519 0bc4 B655     		.ascii	"\266U"
 6520 0bc6 B657     		.ascii	"\266W"
 6521 0bc8 B661     		.ascii	"\266a"
 6522 0bca B662     		.ascii	"\266b"
 6523 0bcc B665     		.ascii	"\266e"
 6524 0bce B669     		.ascii	"\266i"
 6525 0bd0 B671     		.ascii	"\266q"
 6526 0bd2 B673     		.ascii	"\266s"
 6527 0bd4 B675     		.ascii	"\266u"
 6528 0bd6 B677     		.ascii	"\266w"
 6529 0bd8 B681     		.ascii	"\266\201"
 6530 0bda B682     		.ascii	"\266\202"
 6531 0bdc B685     		.ascii	"\266\205"
 6532 0bde B689     		.ascii	"\266\211"
 6533 0be0 B68A     		.ascii	"\266\212"
 6534 0be2 B68B     		.ascii	"\266\213"
 6535 0be4 B691     		.ascii	"\266\221"
 6536 0be6 B693     		.ascii	"\266\223"
 6537 0be8 B695     		.ascii	"\266\225"
 6538 0bea B697     		.ascii	"\266\227"
 6539 0bec B6A1     		.ascii	"\266\241"
 6540 0bee B6A2     		.ascii	"\266\242"
 6541 0bf0 B6A5     		.ascii	"\266\245"
 6542 0bf2 B6A9     		.ascii	"\266\251"
 6543 0bf4 B6B1     		.ascii	"\266\261"
 6544 0bf6 B6B3     		.ascii	"\266\263"
 6545 0bf8 B6B6     		.ascii	"\266\266"
 6546 0bfa B6B7     		.ascii	"\266\267"
 6547 0bfc B6C1     		.ascii	"\266\301"
 6548 0bfe 2020     		.ascii	"  "
 6549 0c00 2020     		.ascii	"  "
 6550 0c02 B6C2     		.ascii	"\266\302"
 6551 0c04 B6C5     		.ascii	"\266\305"
 6552 0c06 B6C9     		.ascii	"\266\311"
 6553 0c08 B6D1     		.ascii	"\266\321"
 6554 0c0a B6D3     		.ascii	"\266\323"
 6555 0c0c B6D7     		.ascii	"\266\327"
 6556 0c0e B6E1     		.ascii	"\266\341"
 6557 0c10 B6E2     		.ascii	"\266\342"
 6558 0c12 B6E5     		.ascii	"\266\345"
 6559 0c14 B6E9     		.ascii	"\266\351"
 6560 0c16 B6F1     		.ascii	"\266\361"
 6561 0c18 B6F3     		.ascii	"\266\363"
 6562 0c1a B6F5     		.ascii	"\266\365"
 6563 0c1c B6F7     		.ascii	"\266\367"
 6564 0c1e B741     		.ascii	"\267A"
 6565 0c20 B742     		.ascii	"\267B"
 6566 0c22 B745     		.ascii	"\267E"
 6567 0c24 B749     		.ascii	"\267I"
 6568 0c26 B751     		.ascii	"\267Q"
 6569 0c28 B753     		.ascii	"\267S"
 6570 0c2a B755     		.ascii	"\267U"
 6571 0c2c B757     		.ascii	"\267W"
 6572 0c2e B759     		.ascii	"\267Y"
 6573 0c30 B761     		.ascii	"\267a"
 6574 0c32 B762     		.ascii	"\267b"
 6575 0c34 B765     		.ascii	"\267e"
 6576 0c36 B769     		.ascii	"\267i"
 6577 0c38 B76F     		.ascii	"\267o"
 6578 0c3a B771     		.ascii	"\267q"
 6579 0c3c B773     		.ascii	"\267s"
 6580 0c3e B775     		.ascii	"\267u"
 6581 0c40 B777     		.ascii	"\267w"
 6582 0c42 B778     		.ascii	"\267x"
 6583 0c44 B779     		.ascii	"\267y"
 6584 0c46 B77A     		.ascii	"\267z"
 6585 0c48 B77B     		.ascii	"\267{"
 6586 0c4a B77C     		.ascii	"\267|"
 6587 0c4c B77D     		.ascii	"\267}"
 6588 0c4e B781     		.ascii	"\267\201"
 6589 0c50 B785     		.ascii	"\267\205"
 6590 0c52 B789     		.ascii	"\267\211"
 6591 0c54 B791     		.ascii	"\267\221"
 6592 0c56 B795     		.ascii	"\267\225"
 6593 0c58 B7A1     		.ascii	"\267\241"
 6594 0c5a B7A2     		.ascii	"\267\242"
 6595 0c5c B7A5     		.ascii	"\267\245"
 6596 0c5e B7A9     		.ascii	"\267\251"
 6597 0c60 B7AA     		.ascii	"\267\252"
 6598 0c62 B7AB     		.ascii	"\267\253"
 6599 0c64 B7B0     		.ascii	"\267\260"
 6600 0c66 B7B1     		.ascii	"\267\261"
 6601 0c68 B7B3     		.ascii	"\267\263"
 6602 0c6a B7B5     		.ascii	"\267\265"
 6603 0c6c B7B6     		.ascii	"\267\266"
 6604 0c6e B7B7     		.ascii	"\267\267"
 6605 0c70 B7B8     		.ascii	"\267\270"
 6606 0c72 B7BC     		.ascii	"\267\274"
 6607 0c74 B861     		.ascii	"\270a"
 6608 0c76 B862     		.ascii	"\270b"
 6609 0c78 B865     		.ascii	"\270e"
 6610 0c7a B867     		.ascii	"\270g"
 6611 0c7c B868     		.ascii	"\270h"
 6612 0c7e B869     		.ascii	"\270i"
 6613 0c80 B86B     		.ascii	"\270k"
 6614 0c82 B871     		.ascii	"\270q"
 6615 0c84 B873     		.ascii	"\270s"
 6616 0c86 B875     		.ascii	"\270u"
 6617 0c88 B876     		.ascii	"\270v"
 6618 0c8a B877     		.ascii	"\270w"
 6619 0c8c B878     		.ascii	"\270x"
 6620 0c8e B881     		.ascii	"\270\201"
 6621 0c90 B882     		.ascii	"\270\202"
 6622 0c92 B885     		.ascii	"\270\205"
 6623 0c94 B889     		.ascii	"\270\211"
 6624 0c96 B891     		.ascii	"\270\221"
 6625 0c98 B893     		.ascii	"\270\223"
 6626 0c9a B895     		.ascii	"\270\225"
 6627 0c9c B896     		.ascii	"\270\226"
 6628 0c9e B897     		.ascii	"\270\227"
 6629 0ca0 B8A1     		.ascii	"\270\241"
 6630 0ca2 B8A2     		.ascii	"\270\242"
 6631 0ca4 B8A5     		.ascii	"\270\245"
 6632 0ca6 B8A7     		.ascii	"\270\247"
 6633 0ca8 B8A9     		.ascii	"\270\251"
 6634 0caa B8B1     		.ascii	"\270\261"
 6635 0cac B8B7     		.ascii	"\270\267"
 6636 0cae B8C1     		.ascii	"\270\301"
 6637 0cb0 B8C5     		.ascii	"\270\305"
 6638 0cb2 B8C9     		.ascii	"\270\311"
 6639 0cb4 B8E1     		.ascii	"\270\341"
 6640 0cb6 B8E2     		.ascii	"\270\342"
 6641 0cb8 B8E5     		.ascii	"\270\345"
 6642 0cba B8E9     		.ascii	"\270\351"
 6643 0cbc B8EB     		.ascii	"\270\353"
 6644 0cbe 2020     		.ascii	"  "
 6645 0cc0 2020     		.ascii	"  "
 6646 0cc2 B8F1     		.ascii	"\270\361"
 6647 0cc4 B8F3     		.ascii	"\270\363"
 6648 0cc6 B8F5     		.ascii	"\270\365"
 6649 0cc8 B8F7     		.ascii	"\270\367"
 6650 0cca B8F8     		.ascii	"\270\370"
 6651 0ccc B941     		.ascii	"\271A"
 6652 0cce B942     		.ascii	"\271B"
 6653 0cd0 B945     		.ascii	"\271E"
 6654 0cd2 B949     		.ascii	"\271I"
 6655 0cd4 B951     		.ascii	"\271Q"
 6656 0cd6 B953     		.ascii	"\271S"
 6657 0cd8 B955     		.ascii	"\271U"
 6658 0cda B957     		.ascii	"\271W"
 6659 0cdc B961     		.ascii	"\271a"
 6660 0cde B965     		.ascii	"\271e"
 6661 0ce0 B969     		.ascii	"\271i"
 6662 0ce2 B971     		.ascii	"\271q"
 6663 0ce4 B973     		.ascii	"\271s"
 6664 0ce6 B976     		.ascii	"\271v"
 6665 0ce8 B977     		.ascii	"\271w"
 6666 0cea B981     		.ascii	"\271\201"
 6667 0cec B9A1     		.ascii	"\271\241"
 6668 0cee B9A2     		.ascii	"\271\242"
 6669 0cf0 B9A5     		.ascii	"\271\245"
 6670 0cf2 B9A9     		.ascii	"\271\251"
 6671 0cf4 B9AB     		.ascii	"\271\253"
 6672 0cf6 B9B1     		.ascii	"\271\261"
 6673 0cf8 B9B3     		.ascii	"\271\263"
 6674 0cfa B9B5     		.ascii	"\271\265"
 6675 0cfc B9B7     		.ascii	"\271\267"
 6676 0cfe B9B8     		.ascii	"\271\270"
 6677 0d00 B9B9     		.ascii	"\271\271"
 6678 0d02 B9BD     		.ascii	"\271\275"
 6679 0d04 B9C1     		.ascii	"\271\301"
 6680 0d06 B9C2     		.ascii	"\271\302"
 6681 0d08 B9C9     		.ascii	"\271\311"
 6682 0d0a B9D3     		.ascii	"\271\323"
 6683 0d0c B9D5     		.ascii	"\271\325"
 6684 0d0e B9D7     		.ascii	"\271\327"
 6685 0d10 B9E1     		.ascii	"\271\341"
 6686 0d12 B9F6     		.ascii	"\271\366"
 6687 0d14 B9F7     		.ascii	"\271\367"
 6688 0d16 BA41     		.ascii	"\272A"
 6689 0d18 BA45     		.ascii	"\272E"
 6690 0d1a BA49     		.ascii	"\272I"
 6691 0d1c BA51     		.ascii	"\272Q"
 6692 0d1e BA53     		.ascii	"\272S"
 6693 0d20 BA55     		.ascii	"\272U"
 6694 0d22 BA57     		.ascii	"\272W"
 6695 0d24 BA61     		.ascii	"\272a"
 6696 0d26 BA62     		.ascii	"\272b"
 6697 0d28 BA65     		.ascii	"\272e"
 6698 0d2a BA77     		.ascii	"\272w"
 6699 0d2c BA81     		.ascii	"\272\201"
 6700 0d2e BA82     		.ascii	"\272\202"
 6701 0d30 BA85     		.ascii	"\272\205"
 6702 0d32 BA89     		.ascii	"\272\211"
 6703 0d34 BA8A     		.ascii	"\272\212"
 6704 0d36 BA8B     		.ascii	"\272\213"
 6705 0d38 BA91     		.ascii	"\272\221"
 6706 0d3a BA93     		.ascii	"\272\223"
 6707 0d3c BA95     		.ascii	"\272\225"
 6708 0d3e BA97     		.ascii	"\272\227"
 6709 0d40 BAA1     		.ascii	"\272\241"
 6710 0d42 BAB6     		.ascii	"\272\266"
 6711 0d44 BAC1     		.ascii	"\272\301"
 6712 0d46 BAE1     		.ascii	"\272\341"
 6713 0d48 BAE2     		.ascii	"\272\342"
 6714 0d4a BAE5     		.ascii	"\272\345"
 6715 0d4c BAE9     		.ascii	"\272\351"
 6716 0d4e BAF1     		.ascii	"\272\361"
 6717 0d50 BAF3     		.ascii	"\272\363"
 6718 0d52 BAF5     		.ascii	"\272\365"
 6719 0d54 BB41     		.ascii	"\273A"
 6720 0d56 BB45     		.ascii	"\273E"
 6721 0d58 BB49     		.ascii	"\273I"
 6722 0d5a BB51     		.ascii	"\273Q"
 6723 0d5c BB61     		.ascii	"\273a"
 6724 0d5e BB62     		.ascii	"\273b"
 6725 0d60 BB65     		.ascii	"\273e"
 6726 0d62 BB69     		.ascii	"\273i"
 6727 0d64 BB71     		.ascii	"\273q"
 6728 0d66 BB73     		.ascii	"\273s"
 6729 0d68 BB75     		.ascii	"\273u"
 6730 0d6a BB77     		.ascii	"\273w"
 6731 0d6c BBA1     		.ascii	"\273\241"
 6732 0d6e BBA2     		.ascii	"\273\242"
 6733 0d70 BBA5     		.ascii	"\273\245"
 6734 0d72 BBA8     		.ascii	"\273\250"
 6735 0d74 BBA9     		.ascii	"\273\251"
 6736 0d76 BBAB     		.ascii	"\273\253"
 6737 0d78 BBB1     		.ascii	"\273\261"
 6738 0d7a BBB3     		.ascii	"\273\263"
 6739 0d7c BBB5     		.ascii	"\273\265"
 6740 0d7e 2020     		.ascii	"  "
 6741 0d80 2020     		.ascii	"  "
 6742 0d82 BBB7     		.ascii	"\273\267"
 6743 0d84 BBB8     		.ascii	"\273\270"
 6744 0d86 BBBB     		.ascii	"\273\273"
 6745 0d88 BBBC     		.ascii	"\273\274"
 6746 0d8a BC61     		.ascii	"\274a"
 6747 0d8c BC62     		.ascii	"\274b"
 6748 0d8e BC65     		.ascii	"\274e"
 6749 0d90 BC67     		.ascii	"\274g"
 6750 0d92 BC69     		.ascii	"\274i"
 6751 0d94 BC6C     		.ascii	"\274l"
 6752 0d96 BC71     		.ascii	"\274q"
 6753 0d98 BC73     		.ascii	"\274s"
 6754 0d9a BC75     		.ascii	"\274u"
 6755 0d9c BC76     		.ascii	"\274v"
 6756 0d9e BC77     		.ascii	"\274w"
 6757 0da0 BC81     		.ascii	"\274\201"
 6758 0da2 BC82     		.ascii	"\274\202"
 6759 0da4 BC85     		.ascii	"\274\205"
 6760 0da6 BC89     		.ascii	"\274\211"
 6761 0da8 BC91     		.ascii	"\274\221"
 6762 0daa BC93     		.ascii	"\274\223"
 6763 0dac BC95     		.ascii	"\274\225"
 6764 0dae BC96     		.ascii	"\274\226"
 6765 0db0 BC97     		.ascii	"\274\227"
 6766 0db2 BCA1     		.ascii	"\274\241"
 6767 0db4 BCA5     		.ascii	"\274\245"
 6768 0db6 BCB7     		.ascii	"\274\267"
 6769 0db8 BCE1     		.ascii	"\274\341"
 6770 0dba BCE2     		.ascii	"\274\342"
 6771 0dbc BCE5     		.ascii	"\274\345"
 6772 0dbe BCE9     		.ascii	"\274\351"
 6773 0dc0 BCF1     		.ascii	"\274\361"
 6774 0dc2 BCF3     		.ascii	"\274\363"
 6775 0dc4 BCF5     		.ascii	"\274\365"
 6776 0dc6 BCF6     		.ascii	"\274\366"
 6777 0dc8 BCF7     		.ascii	"\274\367"
 6778 0dca BD41     		.ascii	"\275A"
 6779 0dcc BD57     		.ascii	"\275W"
 6780 0dce BD61     		.ascii	"\275a"
 6781 0dd0 BD76     		.ascii	"\275v"
 6782 0dd2 BDA1     		.ascii	"\275\241"
 6783 0dd4 BDA2     		.ascii	"\275\242"
 6784 0dd6 BDA5     		.ascii	"\275\245"
 6785 0dd8 BDA9     		.ascii	"\275\251"
 6786 0dda BDB1     		.ascii	"\275\261"
 6787 0ddc BDB3     		.ascii	"\275\263"
 6788 0dde BDB5     		.ascii	"\275\265"
 6789 0de0 BDB7     		.ascii	"\275\267"
 6790 0de2 BDB9     		.ascii	"\275\271"
 6791 0de4 BDC1     		.ascii	"\275\301"
 6792 0de6 BDC2     		.ascii	"\275\302"
 6793 0de8 BDC9     		.ascii	"\275\311"
 6794 0dea BDD6     		.ascii	"\275\326"
 6795 0dec BDE1     		.ascii	"\275\341"
 6796 0dee BDF6     		.ascii	"\275\366"
 6797 0df0 BE41     		.ascii	"\276A"
 6798 0df2 BE45     		.ascii	"\276E"
 6799 0df4 BE49     		.ascii	"\276I"
 6800 0df6 BE51     		.ascii	"\276Q"
 6801 0df8 BE53     		.ascii	"\276S"
 6802 0dfa BE77     		.ascii	"\276w"
 6803 0dfc BE81     		.ascii	"\276\201"
 6804 0dfe BE82     		.ascii	"\276\202"
 6805 0e00 BE85     		.ascii	"\276\205"
 6806 0e02 BE89     		.ascii	"\276\211"
 6807 0e04 BE91     		.ascii	"\276\221"
 6808 0e06 BE93     		.ascii	"\276\223"
 6809 0e08 BE97     		.ascii	"\276\227"
 6810 0e0a BEA1     		.ascii	"\276\241"
 6811 0e0c BEB6     		.ascii	"\276\266"
 6812 0e0e BEB7     		.ascii	"\276\267"
 6813 0e10 BEE1     		.ascii	"\276\341"
 6814 0e12 BF41     		.ascii	"\277A"
 6815 0e14 BF61     		.ascii	"\277a"
 6816 0e16 BF71     		.ascii	"\277q"
 6817 0e18 BF75     		.ascii	"\277u"
 6818 0e1a BF77     		.ascii	"\277w"
 6819 0e1c BFA1     		.ascii	"\277\241"
 6820 0e1e BFA2     		.ascii	"\277\242"
 6821 0e20 BFA5     		.ascii	"\277\245"
 6822 0e22 BFA9     		.ascii	"\277\251"
 6823 0e24 BFB1     		.ascii	"\277\261"
 6824 0e26 BFB3     		.ascii	"\277\263"
 6825 0e28 BFB7     		.ascii	"\277\267"
 6826 0e2a BFB8     		.ascii	"\277\270"
 6827 0e2c BFBD     		.ascii	"\277\275"
 6828 0e2e C061     		.ascii	"\300a"
 6829 0e30 C062     		.ascii	"\300b"
 6830 0e32 C065     		.ascii	"\300e"
 6831 0e34 C067     		.ascii	"\300g"
 6832 0e36 C069     		.ascii	"\300i"
 6833 0e38 C071     		.ascii	"\300q"
 6834 0e3a C073     		.ascii	"\300s"
 6835 0e3c C075     		.ascii	"\300u"
 6836 0e3e 2020     		.ascii	"  "
 6837 0e40 2020     		.ascii	"  "
 6838 0e42 C076     		.ascii	"\300v"
 6839 0e44 C077     		.ascii	"\300w"
 6840 0e46 C078     		.ascii	"\300x"
 6841 0e48 C081     		.ascii	"\300\201"
 6842 0e4a C082     		.ascii	"\300\202"
 6843 0e4c C085     		.ascii	"\300\205"
 6844 0e4e C089     		.ascii	"\300\211"
 6845 0e50 C091     		.ascii	"\300\221"
 6846 0e52 C093     		.ascii	"\300\223"
 6847 0e54 C095     		.ascii	"\300\225"
 6848 0e56 C096     		.ascii	"\300\226"
 6849 0e58 C097     		.ascii	"\300\227"
 6850 0e5a C0A1     		.ascii	"\300\241"
 6851 0e5c C0A5     		.ascii	"\300\245"
 6852 0e5e C0A7     		.ascii	"\300\247"
 6853 0e60 C0A9     		.ascii	"\300\251"
 6854 0e62 C0B1     		.ascii	"\300\261"
 6855 0e64 C0B7     		.ascii	"\300\267"
 6856 0e66 C0E1     		.ascii	"\300\341"
 6857 0e68 C0E2     		.ascii	"\300\342"
 6858 0e6a C0E5     		.ascii	"\300\345"
 6859 0e6c C0E9     		.ascii	"\300\351"
 6860 0e6e C0F1     		.ascii	"\300\361"
 6861 0e70 C0F3     		.ascii	"\300\363"
 6862 0e72 C0F5     		.ascii	"\300\365"
 6863 0e74 C0F6     		.ascii	"\300\366"
 6864 0e76 C0F7     		.ascii	"\300\367"
 6865 0e78 C141     		.ascii	"\301A"
 6866 0e7a C142     		.ascii	"\301B"
 6867 0e7c C145     		.ascii	"\301E"
 6868 0e7e C149     		.ascii	"\301I"
 6869 0e80 C151     		.ascii	"\301Q"
 6870 0e82 C153     		.ascii	"\301S"
 6871 0e84 C155     		.ascii	"\301U"
 6872 0e86 C157     		.ascii	"\301W"
 6873 0e88 C161     		.ascii	"\301a"
 6874 0e8a C165     		.ascii	"\301e"
 6875 0e8c C176     		.ascii	"\301v"
 6876 0e8e C181     		.ascii	"\301\201"
 6877 0e90 C185     		.ascii	"\301\205"
 6878 0e92 C197     		.ascii	"\301\227"
 6879 0e94 C1A1     		.ascii	"\301\241"
 6880 0e96 C1A2     		.ascii	"\301\242"
 6881 0e98 C1A5     		.ascii	"\301\245"
 6882 0e9a C1A9     		.ascii	"\301\251"
 6883 0e9c C1B1     		.ascii	"\301\261"
 6884 0e9e C1B3     		.ascii	"\301\263"
 6885 0ea0 C1B5     		.ascii	"\301\265"
 6886 0ea2 C1B7     		.ascii	"\301\267"
 6887 0ea4 C1C1     		.ascii	"\301\301"
 6888 0ea6 C1C5     		.ascii	"\301\305"
 6889 0ea8 C1C9     		.ascii	"\301\311"
 6890 0eaa C1D7     		.ascii	"\301\327"
 6891 0eac C241     		.ascii	"\302A"
 6892 0eae C245     		.ascii	"\302E"
 6893 0eb0 C249     		.ascii	"\302I"
 6894 0eb2 C251     		.ascii	"\302Q"
 6895 0eb4 C253     		.ascii	"\302S"
 6896 0eb6 C255     		.ascii	"\302U"
 6897 0eb8 C257     		.ascii	"\302W"
 6898 0eba C261     		.ascii	"\302a"
 6899 0ebc C271     		.ascii	"\302q"
 6900 0ebe C281     		.ascii	"\302\201"
 6901 0ec0 C282     		.ascii	"\302\202"
 6902 0ec2 C285     		.ascii	"\302\205"
 6903 0ec4 C289     		.ascii	"\302\211"
 6904 0ec6 C291     		.ascii	"\302\221"
 6905 0ec8 C293     		.ascii	"\302\223"
 6906 0eca C295     		.ascii	"\302\225"
 6907 0ecc C297     		.ascii	"\302\227"
 6908 0ece C2A1     		.ascii	"\302\241"
 6909 0ed0 C2B6     		.ascii	"\302\266"
 6910 0ed2 C2C1     		.ascii	"\302\301"
 6911 0ed4 C2C5     		.ascii	"\302\305"
 6912 0ed6 C2E1     		.ascii	"\302\341"
 6913 0ed8 C2E5     		.ascii	"\302\345"
 6914 0eda C2E9     		.ascii	"\302\351"
 6915 0edc C2F1     		.ascii	"\302\361"
 6916 0ede C2F3     		.ascii	"\302\363"
 6917 0ee0 C2F5     		.ascii	"\302\365"
 6918 0ee2 C2F7     		.ascii	"\302\367"
 6919 0ee4 C341     		.ascii	"\303A"
 6920 0ee6 C345     		.ascii	"\303E"
 6921 0ee8 C349     		.ascii	"\303I"
 6922 0eea C351     		.ascii	"\303Q"
 6923 0eec C357     		.ascii	"\303W"
 6924 0eee C361     		.ascii	"\303a"
 6925 0ef0 C362     		.ascii	"\303b"
 6926 0ef2 C365     		.ascii	"\303e"
 6927 0ef4 C369     		.ascii	"\303i"
 6928 0ef6 C371     		.ascii	"\303q"
 6929 0ef8 C373     		.ascii	"\303s"
 6930 0efa C375     		.ascii	"\303u"
 6931 0efc C377     		.ascii	"\303w"
 6932 0efe 2020     		.ascii	"  "
 6933 0f00 2020     		.ascii	"  "
 6934 0f02 C3A1     		.ascii	"\303\241"
 6935 0f04 C3A2     		.ascii	"\303\242"
 6936 0f06 C3A5     		.ascii	"\303\245"
 6937 0f08 C3A8     		.ascii	"\303\250"
 6938 0f0a C3A9     		.ascii	"\303\251"
 6939 0f0c C3AA     		.ascii	"\303\252"
 6940 0f0e C3B1     		.ascii	"\303\261"
 6941 0f10 C3B3     		.ascii	"\303\263"
 6942 0f12 C3B5     		.ascii	"\303\265"
 6943 0f14 C3B7     		.ascii	"\303\267"
 6944 0f16 C461     		.ascii	"\304a"
 6945 0f18 C462     		.ascii	"\304b"
 6946 0f1a C465     		.ascii	"\304e"
 6947 0f1c C469     		.ascii	"\304i"
 6948 0f1e C471     		.ascii	"\304q"
 6949 0f20 C473     		.ascii	"\304s"
 6950 0f22 C475     		.ascii	"\304u"
 6951 0f24 C477     		.ascii	"\304w"
 6952 0f26 C481     		.ascii	"\304\201"
 6953 0f28 C482     		.ascii	"\304\202"
 6954 0f2a C485     		.ascii	"\304\205"
 6955 0f2c C489     		.ascii	"\304\211"
 6956 0f2e C491     		.ascii	"\304\221"
 6957 0f30 C493     		.ascii	"\304\223"
 6958 0f32 C495     		.ascii	"\304\225"
 6959 0f34 C496     		.ascii	"\304\226"
 6960 0f36 C497     		.ascii	"\304\227"
 6961 0f38 C4A1     		.ascii	"\304\241"
 6962 0f3a C4A2     		.ascii	"\304\242"
 6963 0f3c C4B7     		.ascii	"\304\267"
 6964 0f3e C4E1     		.ascii	"\304\341"
 6965 0f40 C4E2     		.ascii	"\304\342"
 6966 0f42 C4E5     		.ascii	"\304\345"
 6967 0f44 C4E8     		.ascii	"\304\350"
 6968 0f46 C4E9     		.ascii	"\304\351"
 6969 0f48 C4F1     		.ascii	"\304\361"
 6970 0f4a C4F3     		.ascii	"\304\363"
 6971 0f4c C4F5     		.ascii	"\304\365"
 6972 0f4e C4F6     		.ascii	"\304\366"
 6973 0f50 C4F7     		.ascii	"\304\367"
 6974 0f52 C541     		.ascii	"\305A"
 6975 0f54 C542     		.ascii	"\305B"
 6976 0f56 C545     		.ascii	"\305E"
 6977 0f58 C549     		.ascii	"\305I"
 6978 0f5a C551     		.ascii	"\305Q"
 6979 0f5c C553     		.ascii	"\305S"
 6980 0f5e C555     		.ascii	"\305U"
 6981 0f60 C557     		.ascii	"\305W"
 6982 0f62 C561     		.ascii	"\305a"
 6983 0f64 C565     		.ascii	"\305e"
 6984 0f66 C569     		.ascii	"\305i"
 6985 0f68 C571     		.ascii	"\305q"
 6986 0f6a C573     		.ascii	"\305s"
 6987 0f6c C575     		.ascii	"\305u"
 6988 0f6e C576     		.ascii	"\305v"
 6989 0f70 C577     		.ascii	"\305w"
 6990 0f72 C581     		.ascii	"\305\201"
 6991 0f74 C5A1     		.ascii	"\305\241"
 6992 0f76 C5A2     		.ascii	"\305\242"
 6993 0f78 C5A5     		.ascii	"\305\245"
 6994 0f7a C5A9     		.ascii	"\305\251"
 6995 0f7c C5B1     		.ascii	"\305\261"
 6996 0f7e C5B3     		.ascii	"\305\263"
 6997 0f80 C5B5     		.ascii	"\305\265"
 6998 0f82 C5B7     		.ascii	"\305\267"
 6999 0f84 C5C1     		.ascii	"\305\301"
 7000 0f86 C5C2     		.ascii	"\305\302"
 7001 0f88 C5C5     		.ascii	"\305\305"
 7002 0f8a C5C9     		.ascii	"\305\311"
 7003 0f8c C5D1     		.ascii	"\305\321"
 7004 0f8e C5D7     		.ascii	"\305\327"
 7005 0f90 C5E1     		.ascii	"\305\341"
 7006 0f92 C5F7     		.ascii	"\305\367"
 7007 0f94 C641     		.ascii	"\306A"
 7008 0f96 C649     		.ascii	"\306I"
 7009 0f98 C661     		.ascii	"\306a"
 7010 0f9a C681     		.ascii	"\306\201"
 7011 0f9c C682     		.ascii	"\306\202"
 7012 0f9e C685     		.ascii	"\306\205"
 7013 0fa0 C689     		.ascii	"\306\211"
 7014 0fa2 C691     		.ascii	"\306\221"
 7015 0fa4 C693     		.ascii	"\306\223"
 7016 0fa6 C695     		.ascii	"\306\225"
 7017 0fa8 C697     		.ascii	"\306\227"
 7018 0faa C6A1     		.ascii	"\306\241"
 7019 0fac C6A5     		.ascii	"\306\245"
 7020 0fae C6A9     		.ascii	"\306\251"
 7021 0fb0 C6B7     		.ascii	"\306\267"
 7022 0fb2 C6C1     		.ascii	"\306\301"
 7023 0fb4 C6D7     		.ascii	"\306\327"
 7024 0fb6 C6E1     		.ascii	"\306\341"
 7025 0fb8 C6E2     		.ascii	"\306\342"
 7026 0fba C6E5     		.ascii	"\306\345"
 7027 0fbc C6E9     		.ascii	"\306\351"
 7028 0fbe 2020     		.ascii	"  "
 7029 0fc0 2020     		.ascii	"  "
 7030 0fc2 C6F1     		.ascii	"\306\361"
 7031 0fc4 C6F3     		.ascii	"\306\363"
 7032 0fc6 C6F5     		.ascii	"\306\365"
 7033 0fc8 C6F7     		.ascii	"\306\367"
 7034 0fca C741     		.ascii	"\307A"
 7035 0fcc C745     		.ascii	"\307E"
 7036 0fce C749     		.ascii	"\307I"
 7037 0fd0 C751     		.ascii	"\307Q"
 7038 0fd2 C761     		.ascii	"\307a"
 7039 0fd4 C762     		.ascii	"\307b"
 7040 0fd6 C765     		.ascii	"\307e"
 7041 0fd8 C769     		.ascii	"\307i"
 7042 0fda C771     		.ascii	"\307q"
 7043 0fdc C773     		.ascii	"\307s"
 7044 0fde C777     		.ascii	"\307w"
 7045 0fe0 C7A1     		.ascii	"\307\241"
 7046 0fe2 C7A2     		.ascii	"\307\242"
 7047 0fe4 C7A5     		.ascii	"\307\245"
 7048 0fe6 C7A9     		.ascii	"\307\251"
 7049 0fe8 C7B1     		.ascii	"\307\261"
 7050 0fea C7B3     		.ascii	"\307\263"
 7051 0fec C7B5     		.ascii	"\307\265"
 7052 0fee C7B7     		.ascii	"\307\267"
 7053 0ff0 C861     		.ascii	"\310a"
 7054 0ff2 C862     		.ascii	"\310b"
 7055 0ff4 C865     		.ascii	"\310e"
 7056 0ff6 C869     		.ascii	"\310i"
 7057 0ff8 C86A     		.ascii	"\310j"
 7058 0ffa C871     		.ascii	"\310q"
 7059 0ffc C873     		.ascii	"\310s"
 7060 0ffe C875     		.ascii	"\310u"
 7061 1000 C876     		.ascii	"\310v"
 7062 1002 C877     		.ascii	"\310w"
 7063 1004 C881     		.ascii	"\310\201"
 7064 1006 C882     		.ascii	"\310\202"
 7065 1008 C885     		.ascii	"\310\205"
 7066 100a C889     		.ascii	"\310\211"
 7067 100c C891     		.ascii	"\310\221"
 7068 100e C893     		.ascii	"\310\223"
 7069 1010 C895     		.ascii	"\310\225"
 7070 1012 C896     		.ascii	"\310\226"
 7071 1014 C897     		.ascii	"\310\227"
 7072 1016 C8A1     		.ascii	"\310\241"
 7073 1018 C8B7     		.ascii	"\310\267"
 7074 101a C8E1     		.ascii	"\310\341"
 7075 101c C8E2     		.ascii	"\310\342"
 7076 101e C8E5     		.ascii	"\310\345"
 7077 1020 C8E9     		.ascii	"\310\351"
 7078 1022 C8EB     		.ascii	"\310\353"
 7079 1024 C8F1     		.ascii	"\310\361"
 7080 1026 C8F3     		.ascii	"\310\363"
 7081 1028 C8F5     		.ascii	"\310\365"
 7082 102a C8F6     		.ascii	"\310\366"
 7083 102c C8F7     		.ascii	"\310\367"
 7084 102e C941     		.ascii	"\311A"
 7085 1030 C942     		.ascii	"\311B"
 7086 1032 C945     		.ascii	"\311E"
 7087 1034 C949     		.ascii	"\311I"
 7088 1036 C951     		.ascii	"\311Q"
 7089 1038 C953     		.ascii	"\311S"
 7090 103a C955     		.ascii	"\311U"
 7091 103c C957     		.ascii	"\311W"
 7092 103e C961     		.ascii	"\311a"
 7093 1040 C965     		.ascii	"\311e"
 7094 1042 C976     		.ascii	"\311v"
 7095 1044 C981     		.ascii	"\311\201"
 7096 1046 C985     		.ascii	"\311\205"
 7097 1048 C9A1     		.ascii	"\311\241"
 7098 104a C9A2     		.ascii	"\311\242"
 7099 104c C9A5     		.ascii	"\311\245"
 7100 104e C9A9     		.ascii	"\311\251"
 7101 1050 C9B1     		.ascii	"\311\261"
 7102 1052 C9B3     		.ascii	"\311\263"
 7103 1054 C9B5     		.ascii	"\311\265"
 7104 1056 C9B7     		.ascii	"\311\267"
 7105 1058 C9BC     		.ascii	"\311\274"
 7106 105a C9C1     		.ascii	"\311\301"
 7107 105c C9C5     		.ascii	"\311\305"
 7108 105e C9E1     		.ascii	"\311\341"
 7109 1060 CA41     		.ascii	"\312A"
 7110 1062 CA45     		.ascii	"\312E"
 7111 1064 CA55     		.ascii	"\312U"
 7112 1066 CA57     		.ascii	"\312W"
 7113 1068 CA61     		.ascii	"\312a"
 7114 106a CA81     		.ascii	"\312\201"
 7115 106c CA82     		.ascii	"\312\202"
 7116 106e CA85     		.ascii	"\312\205"
 7117 1070 CA89     		.ascii	"\312\211"
 7118 1072 CA91     		.ascii	"\312\221"
 7119 1074 CA93     		.ascii	"\312\223"
 7120 1076 CA95     		.ascii	"\312\225"
 7121 1078 CA97     		.ascii	"\312\227"
 7122 107a CAA1     		.ascii	"\312\241"
 7123 107c CAB6     		.ascii	"\312\266"
 7124 107e 2020     		.ascii	"  "
 7125 1080 2020     		.ascii	"  "
 7126 1082 CAC1     		.ascii	"\312\301"
 7127 1084 CAE1     		.ascii	"\312\341"
 7128 1086 CAE2     		.ascii	"\312\342"
 7129 1088 CAE5     		.ascii	"\312\345"
 7130 108a CAE9     		.ascii	"\312\351"
 7131 108c CAF1     		.ascii	"\312\361"
 7132 108e CAF3     		.ascii	"\312\363"
 7133 1090 CAF7     		.ascii	"\312\367"
 7134 1092 CB41     		.ascii	"\313A"
 7135 1094 CB45     		.ascii	"\313E"
 7136 1096 CB49     		.ascii	"\313I"
 7137 1098 CB51     		.ascii	"\313Q"
 7138 109a CB57     		.ascii	"\313W"
 7139 109c CB61     		.ascii	"\313a"
 7140 109e CB62     		.ascii	"\313b"
 7141 10a0 CB65     		.ascii	"\313e"
 7142 10a2 CB68     		.ascii	"\313h"
 7143 10a4 CB69     		.ascii	"\313i"
 7144 10a6 CB6B     		.ascii	"\313k"
 7145 10a8 CB71     		.ascii	"\313q"
 7146 10aa CB73     		.ascii	"\313s"
 7147 10ac CB75     		.ascii	"\313u"
 7148 10ae CB81     		.ascii	"\313\201"
 7149 10b0 CB85     		.ascii	"\313\205"
 7150 10b2 CB89     		.ascii	"\313\211"
 7151 10b4 CB91     		.ascii	"\313\221"
 7152 10b6 CB93     		.ascii	"\313\223"
 7153 10b8 CBA1     		.ascii	"\313\241"
 7154 10ba CBA2     		.ascii	"\313\242"
 7155 10bc CBA5     		.ascii	"\313\245"
 7156 10be CBA9     		.ascii	"\313\251"
 7157 10c0 CBB1     		.ascii	"\313\261"
 7158 10c2 CBB3     		.ascii	"\313\263"
 7159 10c4 CBB5     		.ascii	"\313\265"
 7160 10c6 CBB7     		.ascii	"\313\267"
 7161 10c8 CC61     		.ascii	"\314a"
 7162 10ca CC62     		.ascii	"\314b"
 7163 10cc CC63     		.ascii	"\314c"
 7164 10ce CC65     		.ascii	"\314e"
 7165 10d0 CC69     		.ascii	"\314i"
 7166 10d2 CC6B     		.ascii	"\314k"
 7167 10d4 CC71     		.ascii	"\314q"
 7168 10d6 CC73     		.ascii	"\314s"
 7169 10d8 CC75     		.ascii	"\314u"
 7170 10da CC76     		.ascii	"\314v"
 7171 10dc CC77     		.ascii	"\314w"
 7172 10de CC7B     		.ascii	"\314{"
 7173 10e0 CC81     		.ascii	"\314\201"
 7174 10e2 CC82     		.ascii	"\314\202"
 7175 10e4 CC85     		.ascii	"\314\205"
 7176 10e6 CC89     		.ascii	"\314\211"
 7177 10e8 CC91     		.ascii	"\314\221"
 7178 10ea CC93     		.ascii	"\314\223"
 7179 10ec CC95     		.ascii	"\314\225"
 7180 10ee CC96     		.ascii	"\314\226"
 7181 10f0 CC97     		.ascii	"\314\227"
 7182 10f2 CCA1     		.ascii	"\314\241"
 7183 10f4 CCA2     		.ascii	"\314\242"
 7184 10f6 CCE1     		.ascii	"\314\341"
 7185 10f8 CCE2     		.ascii	"\314\342"
 7186 10fa CCE5     		.ascii	"\314\345"
 7187 10fc CCE9     		.ascii	"\314\351"
 7188 10fe CCF1     		.ascii	"\314\361"
 7189 1100 CCF3     		.ascii	"\314\363"
 7190 1102 CCF5     		.ascii	"\314\365"
 7191 1104 CCF6     		.ascii	"\314\366"
 7192 1106 CCF7     		.ascii	"\314\367"
 7193 1108 CD41     		.ascii	"\315A"
 7194 110a CD42     		.ascii	"\315B"
 7195 110c CD45     		.ascii	"\315E"
 7196 110e CD49     		.ascii	"\315I"
 7197 1110 CD51     		.ascii	"\315Q"
 7198 1112 CD53     		.ascii	"\315S"
 7199 1114 CD55     		.ascii	"\315U"
 7200 1116 CD57     		.ascii	"\315W"
 7201 1118 CD61     		.ascii	"\315a"
 7202 111a CD65     		.ascii	"\315e"
 7203 111c CD69     		.ascii	"\315i"
 7204 111e CD71     		.ascii	"\315q"
 7205 1120 CD73     		.ascii	"\315s"
 7206 1122 CD76     		.ascii	"\315v"
 7207 1124 CD77     		.ascii	"\315w"
 7208 1126 CD81     		.ascii	"\315\201"
 7209 1128 CD89     		.ascii	"\315\211"
 7210 112a CD93     		.ascii	"\315\223"
 7211 112c CD95     		.ascii	"\315\225"
 7212 112e CDA1     		.ascii	"\315\241"
 7213 1130 CDA2     		.ascii	"\315\242"
 7214 1132 CDA5     		.ascii	"\315\245"
 7215 1134 CDA9     		.ascii	"\315\251"
 7216 1136 CDB1     		.ascii	"\315\261"
 7217 1138 CDB3     		.ascii	"\315\263"
 7218 113a CDB5     		.ascii	"\315\265"
 7219 113c CDB7     		.ascii	"\315\267"
 7220 113e 2020     		.ascii	"  "
 7221 1140 2020     		.ascii	"  "
 7222 1142 CDC1     		.ascii	"\315\301"
 7223 1144 CDD7     		.ascii	"\315\327"
 7224 1146 CE41     		.ascii	"\316A"
 7225 1148 CE45     		.ascii	"\316E"
 7226 114a CE61     		.ascii	"\316a"
 7227 114c CE65     		.ascii	"\316e"
 7228 114e CE69     		.ascii	"\316i"
 7229 1150 CE73     		.ascii	"\316s"
 7230 1152 CE75     		.ascii	"\316u"
 7231 1154 CE81     		.ascii	"\316\201"
 7232 1156 CE82     		.ascii	"\316\202"
 7233 1158 CE85     		.ascii	"\316\205"
 7234 115a CE88     		.ascii	"\316\210"
 7235 115c CE89     		.ascii	"\316\211"
 7236 115e CE8B     		.ascii	"\316\213"
 7237 1160 CE91     		.ascii	"\316\221"
 7238 1162 CE93     		.ascii	"\316\223"
 7239 1164 CE95     		.ascii	"\316\225"
 7240 1166 CE97     		.ascii	"\316\227"
 7241 1168 CEA1     		.ascii	"\316\241"
 7242 116a CEB7     		.ascii	"\316\267"
 7243 116c CEE1     		.ascii	"\316\341"
 7244 116e CEE5     		.ascii	"\316\345"
 7245 1170 CEE9     		.ascii	"\316\351"
 7246 1172 CEF1     		.ascii	"\316\361"
 7247 1174 CEF5     		.ascii	"\316\365"
 7248 1176 CF41     		.ascii	"\317A"
 7249 1178 CF45     		.ascii	"\317E"
 7250 117a CF49     		.ascii	"\317I"
 7251 117c CF51     		.ascii	"\317Q"
 7252 117e CF55     		.ascii	"\317U"
 7253 1180 CF57     		.ascii	"\317W"
 7254 1182 CF61     		.ascii	"\317a"
 7255 1184 CF65     		.ascii	"\317e"
 7256 1186 CF69     		.ascii	"\317i"
 7257 1188 CF71     		.ascii	"\317q"
 7258 118a CF73     		.ascii	"\317s"
 7259 118c CF75     		.ascii	"\317u"
 7260 118e CFA1     		.ascii	"\317\241"
 7261 1190 CFA2     		.ascii	"\317\242"
 7262 1192 CFA5     		.ascii	"\317\245"
 7263 1194 CFA9     		.ascii	"\317\251"
 7264 1196 CFB1     		.ascii	"\317\261"
 7265 1198 CFB3     		.ascii	"\317\263"
 7266 119a CFB5     		.ascii	"\317\265"
 7267 119c CFB7     		.ascii	"\317\267"
 7268 119e D061     		.ascii	"\320a"
 7269 11a0 D062     		.ascii	"\320b"
 7270 11a2 D065     		.ascii	"\320e"
 7271 11a4 D069     		.ascii	"\320i"
 7272 11a6 D06E     		.ascii	"\320n"
 7273 11a8 D071     		.ascii	"\320q"
 7274 11aa D073     		.ascii	"\320s"
 7275 11ac D075     		.ascii	"\320u"
 7276 11ae D077     		.ascii	"\320w"
 7277 11b0 D081     		.ascii	"\320\201"
 7278 11b2 D082     		.ascii	"\320\202"
 7279 11b4 D085     		.ascii	"\320\205"
 7280 11b6 D089     		.ascii	"\320\211"
 7281 11b8 D091     		.ascii	"\320\221"
 7282 11ba D093     		.ascii	"\320\223"
 7283 11bc D095     		.ascii	"\320\225"
 7284 11be D096     		.ascii	"\320\226"
 7285 11c0 D097     		.ascii	"\320\227"
 7286 11c2 D0A1     		.ascii	"\320\241"
 7287 11c4 D0B7     		.ascii	"\320\267"
 7288 11c6 D0E1     		.ascii	"\320\341"
 7289 11c8 D0E2     		.ascii	"\320\342"
 7290 11ca D0E5     		.ascii	"\320\345"
 7291 11cc D0E9     		.ascii	"\320\351"
 7292 11ce D0EB     		.ascii	"\320\353"
 7293 11d0 D0F1     		.ascii	"\320\361"
 7294 11d2 D0F3     		.ascii	"\320\363"
 7295 11d4 D0F5     		.ascii	"\320\365"
 7296 11d6 D0F7     		.ascii	"\320\367"
 7297 11d8 D141     		.ascii	"\321A"
 7298 11da D142     		.ascii	"\321B"
 7299 11dc D145     		.ascii	"\321E"
 7300 11de D149     		.ascii	"\321I"
 7301 11e0 D151     		.ascii	"\321Q"
 7302 11e2 D153     		.ascii	"\321S"
 7303 11e4 D155     		.ascii	"\321U"
 7304 11e6 D157     		.ascii	"\321W"
 7305 11e8 D161     		.ascii	"\321a"
 7306 11ea D162     		.ascii	"\321b"
 7307 11ec D165     		.ascii	"\321e"
 7308 11ee D169     		.ascii	"\321i"
 7309 11f0 D171     		.ascii	"\321q"
 7310 11f2 D173     		.ascii	"\321s"
 7311 11f4 D175     		.ascii	"\321u"
 7312 11f6 D176     		.ascii	"\321v"
 7313 11f8 D177     		.ascii	"\321w"
 7314 11fa D181     		.ascii	"\321\201"
 7315 11fc D185     		.ascii	"\321\205"
 7316 11fe 2020     		.ascii	"  "
 7317 1200 2020     		.ascii	"  "
 7318 1202 D189     		.ascii	"\321\211"
 7319 1204 D193     		.ascii	"\321\223"
 7320 1206 D1A1     		.ascii	"\321\241"
 7321 1208 D1A2     		.ascii	"\321\242"
 7322 120a D1A5     		.ascii	"\321\245"
 7323 120c D1A9     		.ascii	"\321\251"
 7324 120e D1AE     		.ascii	"\321\256"
 7325 1210 D1B1     		.ascii	"\321\261"
 7326 1212 D1B3     		.ascii	"\321\263"
 7327 1214 D1B5     		.ascii	"\321\265"
 7328 1216 D1B7     		.ascii	"\321\267"
 7329 1218 D1BB     		.ascii	"\321\273"
 7330 121a D1C1     		.ascii	"\321\301"
 7331 121c D1C2     		.ascii	"\321\302"
 7332 121e D1C5     		.ascii	"\321\305"
 7333 1220 D1C9     		.ascii	"\321\311"
 7334 1222 D1D5     		.ascii	"\321\325"
 7335 1224 D1D7     		.ascii	"\321\327"
 7336 1226 D1E1     		.ascii	"\321\341"
 7337 1228 D1E2     		.ascii	"\321\342"
 7338 122a D1E5     		.ascii	"\321\345"
 7339 122c D1F5     		.ascii	"\321\365"
 7340 122e D1F7     		.ascii	"\321\367"
 7341 1230 D241     		.ascii	"\322A"
 7342 1232 D242     		.ascii	"\322B"
 7343 1234 D245     		.ascii	"\322E"
 7344 1236 D249     		.ascii	"\322I"
 7345 1238 D253     		.ascii	"\322S"
 7346 123a D255     		.ascii	"\322U"
 7347 123c D257     		.ascii	"\322W"
 7348 123e D261     		.ascii	"\322a"
 7349 1240 D265     		.ascii	"\322e"
 7350 1242 D269     		.ascii	"\322i"
 7351 1244 D273     		.ascii	"\322s"
 7352 1246 D275     		.ascii	"\322u"
 7353 1248 D281     		.ascii	"\322\201"
 7354 124a D282     		.ascii	"\322\202"
 7355 124c D285     		.ascii	"\322\205"
 7356 124e D289     		.ascii	"\322\211"
 7357 1250 D28E     		.ascii	"\322\216"
 7358 1252 D291     		.ascii	"\322\221"
 7359 1254 D295     		.ascii	"\322\225"
 7360 1256 D297     		.ascii	"\322\227"
 7361 1258 D2A1     		.ascii	"\322\241"
 7362 125a D2A5     		.ascii	"\322\245"
 7363 125c D2A9     		.ascii	"\322\251"
 7364 125e D2B1     		.ascii	"\322\261"
 7365 1260 D2B7     		.ascii	"\322\267"
 7366 1262 D2C1     		.ascii	"\322\301"
 7367 1264 D2C2     		.ascii	"\322\302"
 7368 1266 D2C5     		.ascii	"\322\305"
 7369 1268 D2C9     		.ascii	"\322\311"
 7370 126a D2D7     		.ascii	"\322\327"
 7371 126c D2E1     		.ascii	"\322\341"
 7372 126e D2E2     		.ascii	"\322\342"
 7373 1270 D2E5     		.ascii	"\322\345"
 7374 1272 D2E9     		.ascii	"\322\351"
 7375 1274 D2F1     		.ascii	"\322\361"
 7376 1276 D2F3     		.ascii	"\322\363"
 7377 1278 D2F5     		.ascii	"\322\365"
 7378 127a D2F7     		.ascii	"\322\367"
 7379 127c D341     		.ascii	"\323A"
 7380 127e D342     		.ascii	"\323B"
 7381 1280 D345     		.ascii	"\323E"
 7382 1282 D349     		.ascii	"\323I"
 7383 1284 D351     		.ascii	"\323Q"
 7384 1286 D355     		.ascii	"\323U"
 7385 1288 D357     		.ascii	"\323W"
 7386 128a D361     		.ascii	"\323a"
 7387 128c D362     		.ascii	"\323b"
 7388 128e D365     		.ascii	"\323e"
 7389 1290 D367     		.ascii	"\323g"
 7390 1292 D368     		.ascii	"\323h"
 7391 1294 D369     		.ascii	"\323i"
 7392 1296 D36A     		.ascii	"\323j"
 7393 1298 D371     		.ascii	"\323q"
 7394 129a D373     		.ascii	"\323s"
 7395 129c D375     		.ascii	"\323u"
 7396 129e D377     		.ascii	"\323w"
 7397 12a0 D37B     		.ascii	"\323{"
 7398 12a2 D381     		.ascii	"\323\201"
 7399 12a4 D385     		.ascii	"\323\205"
 7400 12a6 D389     		.ascii	"\323\211"
 7401 12a8 D391     		.ascii	"\323\221"
 7402 12aa D393     		.ascii	"\323\223"
 7403 12ac D397     		.ascii	"\323\227"
 7404 12ae D3A1     		.ascii	"\323\241"
 7405 12b0 D3A2     		.ascii	"\323\242"
 7406 12b2 D3A5     		.ascii	"\323\245"
 7407 12b4 D3A9     		.ascii	"\323\251"
 7408 12b6 D3B1     		.ascii	"\323\261"
 7409 12b8 D3B3     		.ascii	"\323\263"
 7410 12ba D3B5     		.ascii	"\323\265"
 7411 12bc D3B7     		.ascii	"\323\267"
 7412 12be 2020     		.ascii	"  "
 7413              		.section	.rodata.eng_font,"a"
 7414              		.set	.LANCHOR4,. + 0
 7417              	eng_font:
 7418 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7418      00000000 
 7418      00000000 
 7418      00
 7419 000d 000000   		.ascii	"\000\000\000"
 7420 0010 000010BA 		.ascii	"\000\000\020\272T\202\252\202\326\376\252D8\000\000"
 7420      5482AA82 
 7420      D6FEAA44 
 7420      380000
 7421 001f 00       		.ascii	"\000"
 7422 0020 000000AA 		.ascii	"\000\000\000\252|\376\326\376|(T|8\000\000\000"
 7422      7CFED6FE 
 7422      7C28547C 
 7422      38000000 
 7423 0030 00000000 		.ascii	"\000\000\000\000l\376\376\376\376|8\020\000\000\000"
 7423      6CFEFEFE 
 7423      FE7C3810 
 7423      000000
 7424 003f 00       		.ascii	"\000"
 7425 0040 00000000 		.ascii	"\000\000\000\000\0208|\376\376|8\020\000\000\000\000"
 7425      10387CFE 
 7425      FE7C3810 
 7425      00000000 
 7426 0050 00000038 		.ascii	"\000\000\000888\356\356\356\376\0208|\000\000\000"
 7426      3838EEEE 
 7426      EEFE1038 
 7426      7C000000 
 7427 0060 00000010 		.ascii	"\000\000\000\020\0208|\376\376\376l\020|\000\000\000"
 7427      10387CFE 
 7427      FEFE6C10 
 7427      7C000000 
 7428 0070 00000000 		.ascii	"\000\000\000\000\000\0008|||8\000\000\000\000\000"
 7428      0000387C 
 7428      7C7C3800 
 7428      00000000 
 7429 0080 0000FEFE 		.ascii	"\000\000\376\376\376\376\356\306\202\306\356\376\376"
 7429      FEFEEEC6 
 7429      82C6EEFE 
 7429      FE
 7430 008d FEFE00   		.ascii	"\376\376\000"
 7431 0090 00000000 		.ascii	"\000\000\000\000\000<fffff<\000\000\000\000"
 7431      003C6666 
 7431      6666663C 
 7431      00000000 
 7432 00a0 0000FEFE 		.ascii	"\000\000\376\376\376\376\306\272\272\272\306\376\376"
 7432      FEFEC6BA 
 7432      BABAC6FE 
 7432      FE
 7433 00ad FEFE00   		.ascii	"\376\376\000"
 7434 00b0 0000007E 		.ascii	"\000\000\000~\016\0322x\314\314\314\314x\000\000\000"
 7434      0E1A3278 
 7434      CCCCCCCC 
 7434      78000000 
 7435 00c0 0000003C 		.ascii	"\000\000\000<ffff<\030~\030\030\000\000\000"
 7435      66666666 
 7435      3C187E18 
 7435      18000000 
 7436 00d0 00000030 		.ascii	"\000\000\00008<6666t\360\360\340\000\000"
 7436      383C3636 
 7436      363674F0 
 7436      F0E00000 
 7437 00e0 0000007E 		.ascii	"\000\000\000~f~fffn\356\354\300\000\000\000"
 7437      667E6666 
 7437      666EEEEC 
 7437      C0000000 
 7438 00f0 00000000 		.ascii	"\000\000\000\000\020\222|l\326l|\222\020\000\000\000"
 7438      10927C6C 
 7438      D66C7C92 
 7438      10000000 
 7439 0100 00000040 		.ascii	"\000\000\000@@`px~xp`@@\000\000"
 7439      40607078 
 7439      7E787060 
 7439      40400000 
 7440 0110 00000002 		.ascii	"\000\000\000\002\002\006\016\036~\036\016\006\002\002"
 7440      02060E1E 
 7440      7E1E0E06 
 7440      0202
 7441 011e 0000     		.ascii	"\000\000"
 7442 0120 00000018 		.ascii	"\000\000\000\030<~\030\030\030\030\030~<\030\000\000"
 7442      3C7E1818 
 7442      1818187E 
 7442      3C180000 
 7443 0130 0000006C 		.ascii	"\000\000\000llllllll\000ll\000\000"
 7443      6C6C6C6C 
 7443      6C6C6C00 
 7443      6C6C0000 
 7444 0140 0000007E 		.ascii	"\000\000\000~\366\366\366\366v66666\000\000"
 7444      F6F6F6F6 
 7444      76363636 
 7444      36360000 
 7445 0150 0000003C 		.ascii	"\000\000\000<ff8lf6\034ff<\000\000"
 7445      6666386C 
 7445      66361C66 
 7445      663C0000 
 7446 0160 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000~~~~\000\000"
 7446      00000000 
 7446      00007E7E 
 7446      7E7E0000 
 7447 0170 00000018 		.ascii	"\000\000\000\030<~\030\030\030\030~<\030~\000\000"
 7447      3C7E1818 
 7447      18187E3C 
 7447      187E0000 
 7448 0180 00000018 		.ascii	"\000\000\000\030<~\030\030\030\030\030\030\030\030\000"
 7448      3C7E1818 
 7448      18181818 
 7448      181800
 7449 018f 00       		.ascii	"\000"
 7450 0190 00000018 		.ascii	"\000\000\000\030\030\030\030\030\030\030\030~<\030\000"
 7450      18181818 
 7450      1818187E 
 7450      3C1800
 7451 019f 00       		.ascii	"\000"
 7452 01a0 00000000 		.ascii	"\000\000\000\000\000\000\010\014\376\014\010\000\000"
 7452      0000080C 
 7452      FE0C0800 
 7452      00
 7453 01ad 000000   		.ascii	"\000\000\000"
 7454 01b0 00000000 		.ascii	"\000\000\000\000\000\000 `\376` \000\000\000\000\000"
 7454      00002060 
 7454      FE602000 
 7454      00000000 
 7455 01c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000```~\000\000\000"
 7455      00000000 
 7455      00606060 
 7455      7E000000 
 7456 01d0 00000000 		.ascii	"\000\000\000\000\000\000$f\377f$\000\000\000\000\000"
 7456      00002466 
 7456      FF662400 
 7456      00000000 
 7457 01e0 00000000 		.ascii	"\000\000\000\000\020\02088||\376\376\376\000\000\000"
 7457      10103838 
 7457      7C7CFEFE 
 7457      FE000000 
 7458 01f0 00000000 		.ascii	"\000\000\000\000\376\376\376||88\020\020\000\000\000"
 7458      FEFEFE7C 
 7458      7C383810 
 7458      10000000 
 7459 0200 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7459      00000000 
 7459      00000000 
 7459      00
 7460 020d 000000   		.ascii	"\000\000\000"
 7461 0210 00000018 		.ascii	"\000\000\000\030\030\030\030\030\030\030\030\000\030"
 7461      18181818 
 7461      18181800 
 7461      18
 7462 021d 180000   		.ascii	"\030\000\000"
 7463 0220 006C6C6C 		.ascii	"\000lllH\000\000\000\000\000\000\000\000\000\000\000"
 7463      48000000 
 7463      00000000 
 7463      00000000 
 7464 0230 00000036 		.ascii	"\000\000\000666\377lll\376\330\330\330\000\000"
 7464      3636FF6C 
 7464      6C6CFED8 
 7464      D8D80000 
 7465 0240 00001010 		.ascii	"\000\000\020\020|\326\326\320|\026\326\326|\020\020"
 7465      7CD6D6D0 
 7465      7C16D6D6 
 7465      7C1010
 7466 024f 00       		.ascii	"\000"
 7467 0250 00000030 		.ascii	"\000\000\0000Y\323f\014\0300f\313\032\014\000\000"
 7467      59D3660C 
 7467      183066CB 
 7467      1A0C0000 
 7468 0260 00000038 		.ascii	"\000\000\0008lll8p\332\316\314\356z\000\000"
 7468      6C6C6C38 
 7468      70DACECC 
 7468      EE7A0000 
 7469 0270 00181818 		.ascii	"\000\030\030\0300\000\000\000\000\000\000\000\000\000"
 7469      30000000 
 7469      00000000 
 7469      0000
 7470 027e 0000     		.ascii	"\000\000"
 7471 0280 00000C18 		.ascii	"\000\000\014\0300```````0\030\014\000"
 7471      30606060 
 7471      60606060 
 7471      30180C00 
 7472 0290 00006030 		.ascii	"\000\000`0\030\014\014\014\014\014\014\014\0300`\000"
 7472      180C0C0C 
 7472      0C0C0C0C 
 7472      18306000 
 7473 02a0 00000000 		.ascii	"\000\000\000\000\000\030\333~<~\333\030\000\000\000"
 7473      0018DB7E 
 7473      3C7EDB18 
 7473      000000
 7474 02af 00       		.ascii	"\000"
 7475 02b0 00000000 		.ascii	"\000\000\000\000\030\030\030\030\377\030\030\030\030"
 7475      18181818 
 7475      FF181818 
 7475      18
 7476 02bd 000000   		.ascii	"\000\000\000"
 7477 02c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\030"
 7477      00000000 
 7477      00000000 
 7477      18
 7478 02cd 183000   		.ascii	"\0300\000"
 7479 02d0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\377\000\000\000\000"
 7479      00000000 
 7479      FF000000 
 7479      00
 7480 02dd 000000   		.ascii	"\000\000\000"
 7481 02e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\030"
 7481      00000000 
 7481      00000000 
 7481      18
 7482 02ed 180000   		.ascii	"\030\000\000"
 7483 02f0 00000006 		.ascii	"\000\000\000\006\006\014\014\030\03000``\300\000\000"
 7483      060C0C18 
 7483      18303060 
 7483      60C00000 
 7484 0300 00000018 		.ascii	"\000\000\000\030<fffffff<\030\000\000"
 7484      3C666666 
 7484      66666666 
 7484      3C180000 
 7485 0310 00000018 		.ascii	"\000\000\000\030\030x\030\030\030\030\030\030\030~\000"
 7485      18781818 
 7485      18181818 
 7485      187E00
 7486 031f 00       		.ascii	"\000"
 7487 0320 0000003C 		.ascii	"\000\000\000<ff\006\014\014\030\03000~\000\000"
 7487      6666060C 
 7487      0C181830 
 7487      307E0000 
 7488 0330 0000007E 		.ascii	"\000\000\000~\014\014\0308\014\006\006\006l8\000\000"
 7488      0C0C1838 
 7488      0C060606 
 7488      6C380000 
 7489 0340 00000018 		.ascii	"\000\000\000\030\03000ll\314\376\014\014\014\000\000"
 7489      1830306C 
 7489      6CCCFE0C 
 7489      0C0C0000 
 7490 0350 0000007C 		.ascii	"\000\000\000|```x\014\006\006\006\314x\000\000"
 7490      60606078 
 7490      0C060606 
 7490      CC780000 
 7491 0360 0000000C 		.ascii	"\000\000\000\014\0300`x\314\306\306\306l8\000\000"
 7491      18306078 
 7491      CCC6C6C6 
 7491      6C380000 
 7492 0370 0000007E 		.ascii	"\000\000\000~\006\006\006\014\014\030\030\030\030\030"
 7492      0606060C 
 7492      0C181818 
 7492      1818
 7493 037e 0000     		.ascii	"\000\000"
 7494 0380 00000038 		.ascii	"\000\000\0008l\306\306l8l\306\306l8\000\000"
 7494      6CC6C66C 
 7494      386CC6C6 
 7494      6C380000 
 7495 0390 00000038 		.ascii	"\000\000\0008l\306\306\306f<\014\0300`\000\000"
 7495      6CC6C6C6 
 7495      663C0C18 
 7495      30600000 
 7496 03a0 00000000 		.ascii	"\000\000\000\000\030\030\000\000\000\000\000\030\030"
 7496      18180000 
 7496      00000018 
 7496      18
 7497 03ad 000000   		.ascii	"\000\000\000"
 7498 03b0 00000000 		.ascii	"\000\000\000\000\030\030\000\000\000\000\000\030\030"
 7498      18180000 
 7498      00000018 
 7498      18
 7499 03bd 300000   		.ascii	"0\000\000"
 7500 03c0 00000006 		.ascii	"\000\000\000\006\014\0300`\300`0\030\014\006\000\000"
 7500      0C183060 
 7500      C0603018 
 7500      0C060000 
 7501 03d0 00000000 		.ascii	"\000\000\000\000\000\000\000\376\000\376\000\000\000"
 7501      000000FE 
 7501      00FE0000 
 7501      00
 7502 03dd 000000   		.ascii	"\000\000\000"
 7503 03e0 000000C0 		.ascii	"\000\000\000\300`0\030\014\006\014\0300`\300\000\000"
 7503      6030180C 
 7503      060C1830 
 7503      60C00000 
 7504 03f0 00000018 		.ascii	"\000\000\000\030<f\006\014\030\030\030\000\030\030\000"
 7504      3C66060C 
 7504      18181800 
 7504      181800
 7505 03ff 00       		.ascii	"\000"
 7506 0400 0000003C 		.ascii	"\000\000\000<f\306\336\366\366\366\336\300`>\000\000"
 7506      66C6DEF6 
 7506      F6F6DEC0 
 7506      603E0000 
 7507 0410 00000018 		.ascii	"\000\000\000\030<fff~fffff\000\000"
 7507      3C666666 
 7507      7E666666 
 7507      66660000 
 7508 0420 000000F8 		.ascii	"\000\000\000\370lfff|ffff|\000\000"
 7508      6C666666 
 7508      7C666666 
 7508      667C0000 
 7509 0430 0000003C 		.ascii	"\000\000\000<ff`````ff<\000\000"
 7509      66666060 
 7509      60606066 
 7509      663C0000 
 7510 0440 000000F8 		.ascii	"\000\000\000\370lffffffflx\000\000"
 7510      6C666666 
 7510      66666666 
 7510      6C780000 
 7511 0450 000000FE 		.ascii	"\000\000\000\376f```|```f~\000\000"
 7511      66606060 
 7511      7C606060 
 7511      667E0000 
 7512 0460 000000FE 		.ascii	"\000\000\000\376f```|````p\000\000"
 7512      66606060 
 7512      7C606060 
 7512      60700000 
 7513 0470 0000003C 		.ascii	"\000\000\000<ff```nfff<\000\000"
 7513      66666060 
 7513      606E6666 
 7513      663C0000 
 7514 0480 000000E6 		.ascii	"\000\000\000\346ffff~ffffg\000\000"
 7514      66666666 
 7514      7E666666 
 7514      66670000 
 7515 0490 0000003C 		.ascii	"\000\000\000<\030\030\030\030\030\030\030\030\030<\000"
 7515      18181818 
 7515      18181818 
 7515      183C00
 7516 049f 00       		.ascii	"\000"
 7517 04a0 0000003C 		.ascii	"\000\000\000<\030\030\030\030\030\030\030\030\030\030"
 7517      18181818 
 7517      18181818 
 7517      1818
 7518 04ae 30E0     		.ascii	"0\340"
 7519 04b0 000000E6 		.ascii	"\000\000\000\346fllxxllffg\000\000"
 7519      666C6C78 
 7519      786C6C66 
 7519      66670000 
 7520 04c0 000000E0 		.ascii	"\000\000\000\340````````f~\000\000"
 7520      60606060 
 7520      60606060 
 7520      667E0000 
 7521 04d0 000000C6 		.ascii	"\000\000\000\306\306\356\376\326\326\306\306\306\306"
 7521      C6EEFED6 
 7521      D6C6C6C6 
 7521      C6
 7522 04dd C60000   		.ascii	"\306\000\000"
 7523 04e0 000000E6 		.ascii	"\000\000\000\346ffvv~nnffg\000\000"
 7523      66667676 
 7523      7E6E6E66 
 7523      66670000 
 7524 04f0 00000038 		.ascii	"\000\000\0008l\306\306\306\306\306\306\306l8\000\000"
 7524      6CC6C6C6 
 7524      C6C6C6C6 
 7524      6C380000 
 7525 0500 000000FC 		.ascii	"\000\000\000\374ffflx````p\000\000"
 7525      6666666C 
 7525      78606060 
 7525      60700000 
 7526 0510 00000038 		.ascii	"\000\000\0008l\306\306\306\306\306\306l8n\004\000"
 7526      6CC6C6C6 
 7526      C6C6C66C 
 7526      386E0400 
 7527 0520 000000F8 		.ascii	"\000\000\000\370lfflxlfffg\000\000"
 7527      6C66666C 
 7527      786C6666 
 7527      66670000 
 7528 0530 0000003C 		.ascii	"\000\000\000<ff`0\030\014\006ff<\000\000"
 7528      66666030 
 7528      180C0666 
 7528      663C0000 
 7529 0540 000000FF 		.ascii	"\000\000\000\377\333\030\030\030\030\030\030\030\030"
 7529      DB181818 
 7529      18181818 
 7529      18
 7530 054d 3C0000   		.ascii	"<\000\000"
 7531 0550 000000E6 		.ascii	"\000\000\000\346ffffffffn;\000\000"
 7531      66666666 
 7531      66666666 
 7531      6E3B0000 
 7532 0560 000000CE 		.ascii	"\000\000\000\316\306\306\306\306\306\306\306\306l8\000"
 7532      C6C6C6C6 
 7532      C6C6C6C6 
 7532      6C3800
 7533 056f 00       		.ascii	"\000"
 7534 0570 000000CE 		.ascii	"\000\000\000\316\306\306\306\326\326\376\356\306\306"
 7534      C6C6C6D6 
 7534      D6FEEEC6 
 7534      C6
 7535 057d C60000   		.ascii	"\306\000\000"
 7536 0580 000000C3 		.ascii	"\000\000\000\303ff$<\030<$ff\303\000\000"
 7536      6666243C 
 7536      183C2466 
 7536      66C30000 
 7537 0590 000000C7 		.ascii	"\000\000\000\307\303ff<<\030\030\030\030<\000\000"
 7537      C366663C 
 7537      3C181818 
 7537      183C0000 
 7538 05a0 0000007F 		.ascii	"\000\000\000\177c\003\006\014\0300`\300\306\376\000"
 7538      6303060C 
 7538      183060C0 
 7538      C6FE00
 7539 05af 00       		.ascii	"\000"
 7540 05b0 0000003C 		.ascii	"\000\000\000<000000000<\000\000"
 7540      30303030 
 7540      30303030 
 7540      303C0000 
 7541 05c0 000000C0 		.ascii	"\000\000\000\300\300``00\030\030\014\014\006\000\000"
 7541      C0606030 
 7541      3018180C 
 7541      0C060000 
 7542 05d0 0000003C 		.ascii	"\000\000\000<\014\014\014\014\014\014\014\014\014<\000"
 7542      0C0C0C0C 
 7542      0C0C0C0C 
 7542      0C3C00
 7543 05df 00       		.ascii	"\000"
 7544 05e0 00000018 		.ascii	"\000\000\000\030<f\000\000\000\000\000\000\000\000\000"
 7544      3C660000 
 7544      00000000 
 7544      000000
 7545 05ef 00       		.ascii	"\000"
 7546 05f0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7546      00000000 
 7546      00000000 
 7546      00
 7547 05fd FF0000   		.ascii	"\377\000\000"
 7548 0600 00001818 		.ascii	"\000\000\030\030\030\014\000\000\000\000\000\000\000"
 7548      180C0000 
 7548      00000000 
 7548      00
 7549 060d 000000   		.ascii	"\000\000\000"
 7550 0610 00000000 		.ascii	"\000\000\000\000\000\000x\314\014|\314\314\314v\000"
 7550      000078CC 
 7550      0C7CCCCC 
 7550      CC7600
 7551 061f 00       		.ascii	"\000"
 7552 0620 000000E0 		.ascii	"\000\000\000\340``|ffffff<\000\000"
 7552      60607C66 
 7552      66666666 
 7552      663C0000 
 7553 0630 00000000 		.ascii	"\000\000\000\000\000\000|\306\300\300\300\300\306|\000"
 7553      00007CC6 
 7553      C0C0C0C0 
 7553      C67C00
 7554 063f 00       		.ascii	"\000"
 7555 0640 0000001C 		.ascii	"\000\000\000\034\014\014|\314\314\314\314\314\314~\000"
 7555      0C0C7CCC 
 7555      CCCCCCCC 
 7555      CC7E00
 7556 064f 00       		.ascii	"\000"
 7557 0650 00000000 		.ascii	"\000\000\000\000\000\000|\306\306\376\300\300\306|\000"
 7557      00007CC6 
 7557      C6FEC0C0 
 7557      C67C00
 7558 065f 00       		.ascii	"\000"
 7559 0660 0000001E 		.ascii	"\000\000\000\03620\376000000x\000\000"
 7559      3230FE30 
 7559      30303030 
 7559      30780000 
 7560 0670 00000000 		.ascii	"\000\000\000\000\000\006x\314\314\314x\300|\306\306"
 7560      000678CC 
 7560      CCCC78C0 
 7560      7CC6C6
 7561 067f 7C       		.ascii	"|"
 7562 0680 000000E0 		.ascii	"\000\000\000\340``|ffffffg\000\000"
 7562      60607C66 
 7562      66666666 
 7562      66670000 
 7563 0690 00000018 		.ascii	"\000\000\000\030\030\0008\030\030\030\030\030\030<\000"
 7563      18003818 
 7563      18181818 
 7563      183C00
 7564 069f 00       		.ascii	"\000"
 7565 06a0 00000018 		.ascii	"\000\000\000\030\030\0008\030\030\030\030\030\030\030"
 7565      18003818 
 7565      18181818 
 7565      1818
 7566 06ae 30E0     		.ascii	"0\340"
 7567 06b0 000000E0 		.ascii	"\000\000\000\340``llxxlfff\000\000"
 7567      60606C6C 
 7567      78786C66 
 7567      66660000 
 7568 06c0 00000038 		.ascii	"\000\000\0008\030\030\030\030\030\030\030\030\030<\000"
 7568      18181818 
 7568      18181818 
 7568      183C00
 7569 06cf 00       		.ascii	"\000"
 7570 06d0 00000000 		.ascii	"\000\000\000\000\000\000\356\333\333\333\333\333\333"
 7570      0000EEDB 
 7570      DBDBDBDB 
 7570      DB
 7571 06dd DB0000   		.ascii	"\333\000\000"
 7572 06e0 00000000 		.ascii	"\000\000\000\000\000\000\334ffffffg\000\000"
 7572      0000DC66 
 7572      66666666 
 7572      66670000 
 7573 06f0 00000000 		.ascii	"\000\000\000\000\000\000|\306\306\306\306\306\306|\000"
 7573      00007CC6 
 7573      C6C6C6C6 
 7573      C67C00
 7574 06ff 00       		.ascii	"\000"
 7575 0700 00000000 		.ascii	"\000\000\000\000\000\000\334ffffff|`p"
 7575      0000DC66 
 7575      66666666 
 7575      667C6070 
 7576 0710 00000000 		.ascii	"\000\000\000\000\000\000v\314\314\314\314\314\314|\014"
 7576      000076CC 
 7576      CCCCCCCC 
 7576      CC7C0C
 7577 071f 1C       		.ascii	"\034"
 7578 0720 00000000 		.ascii	"\000\000\000\000\000\000\334\366f````\360\000\000"
 7578      0000DCF6 
 7578      66606060 
 7578      60F00000 
 7579 0730 00000000 		.ascii	"\000\000\000\000\000\000|\306\300p\034\006\306|\000"
 7579      00007CC6 
 7579      C0701C06 
 7579      C67C00
 7580 073f 00       		.ascii	"\000"
 7581 0740 00000000 		.ascii	"\000\000\000\00000\376000002\036\000\000"
 7581      3030FE30 
 7581      30303030 
 7581      321E0000 
 7582 0750 00000000 		.ascii	"\000\000\000\000\000\000\346ffffff;\000\000"
 7582      0000E666 
 7582      66666666 
 7582      663B0000 
 7583 0760 00000000 		.ascii	"\000\000\000\000\000\000\316\306\306\306\306\306|8\000"
 7583      0000CEC6 
 7583      C6C6C6C6 
 7583      7C3800
 7584 076f 00       		.ascii	"\000"
 7585 0770 00000000 		.ascii	"\000\000\000\000\000\000\316\306\306\326\376\356\306"
 7585      0000CEC6 
 7585      C6D6FEEE 
 7585      C6
 7586 077d C60000   		.ascii	"\306\000\000"
 7587 0780 00000000 		.ascii	"\000\000\000\000\000\000\303f<\030\030<f\303\000\000"
 7587      0000C366 
 7587      3C18183C 
 7587      66C30000 
 7588 0790 00000000 		.ascii	"\000\000\000\000\000\000\307cc66<\030\0300\340"
 7588      0000C763 
 7588      6336363C 
 7588      181830E0 
 7589 07a0 00000000 		.ascii	"\000\000\000\000\000\000~f\006\014\0300f~\000\000"
 7589      00007E66 
 7589      060C1830 
 7589      667E0000 
 7590 07b0 00000C18 		.ascii	"\000\000\014\030\030\030\030\0300\030\030\030\030\030"
 7590      18181818 
 7590      30181818 
 7590      1818
 7591 07be 0C00     		.ascii	"\014\000"
 7592 07c0 00000018 		.ascii	"\000\000\000\030\030\030\030\000\000\000\030\030\030"
 7592      18181800 
 7592      00001818 
 7592      18
 7593 07cd 180000   		.ascii	"\030\000\000"
 7594 07d0 00003018 		.ascii	"\000\0000\030\030\030\030\030\014\030\030\030\030\030"
 7594      18181818 
 7594      0C181818 
 7594      1818
 7595 07de 3000     		.ascii	"0\000"
 7596 07e0 00000000 		.ascii	"\000\000\000\000\000\000\000p\333\016\000\000\000\000"
 7596      00000070 
 7596      DB0E0000 
 7596      0000
 7597 07ee 0000     		.ascii	"\000\000"
 7598 07f0 00000000 		.ascii	"\000\000\000\000\020\02088ll\306\306\376\000\000\000"
 7598      10103838 
 7598      6C6CC6C6 
 7598      FE000000 
 7599              		.section	.rodata.han_tbl,"a"
 7600              		.set	.LANCHOR5,. + 0
 7603              	han_tbl:
 7604 0000 00000102 		.ascii	"\000\000\001\002\003\004\005\006\007\010\011\012\013"
 7604      03040506 
 7604      0708090A 
 7604      0B
 7605 000d 0C0D0E0F 		.ascii	"\014\015\016\017\020\021\022\023\000\000\000\000\000"
 7605      10111213 
 7605      00000000 
 7605      00
 7606 001a 00000000 		.ascii	"\000\000\000\000\000\000"
 7606      0000
 7607 0020 00000001 		.ascii	"\000\000\000\001\002\003\004\005\000\000\006\007\010"
 7607      02030405 
 7607      00000607 
 7607      08
 7608 002d 090A0B00 		.ascii	"\011\012\013\000\000\014\015\016\017\020\021\000\000"
 7608      000C0D0E 
 7608      0F101100 
 7608      00
 7609 003a 12131415 		.ascii	"\022\023\024\025\000\000"
 7609      0000
 7610 0040 00000102 		.ascii	"\000\000\001\002\003\004\005\006\007\010\011\012\013"
 7610      03040506 
 7610      0708090A 
 7610      0B
 7611 004d 0C0D0E0F 		.ascii	"\014\015\016\017\020\000\021\022\023\024\025\026\027"
 7611      10001112 
 7611      13141516 
 7611      17
 7612 005a 18191A1B 		.ascii	"\030\031\032\033\000\000"
 7612      0000
 7613              		.section	.rodata.hangul_chosung_tbl,"a"
 7614              		.align	1
 7615              		.set	.LANCHOR3,. + 0
 7618              	hangul_chosung_tbl:
 7619 0000 0088     		.short	-30720
 7620 0002 008C     		.short	-29696
 7621 0004 0090     		.short	-28672
 7622 0006 0094     		.short	-27648
 7623 0008 0098     		.short	-26624
 7624 000a 009C     		.short	-25600
 7625 000c 00A0     		.short	-24576
 7626 000e 00A4     		.short	-23552
 7627 0010 00A8     		.short	-22528
 7628 0012 00AC     		.short	-21504
 7629 0014 00B0     		.short	-20480
 7630 0016 00B4     		.short	-19456
 7631 0018 00B8     		.short	-18432
 7632 001a 00BC     		.short	-17408
 7633 001c 00C0     		.short	-16384
 7634 001e 00C4     		.short	-15360
 7635 0020 00C8     		.short	-14336
 7636 0022 00CC     		.short	-13312
 7637 0024 00D0     		.short	-12288
 7638              		.section	.rodata.hangul_jongsung_tbl,"a"
 7639              		.align	1
 7640              		.set	.LANCHOR2,. + 0
 7643              	hangul_jongsung_tbl:
 7644 0000 0180     		.short	-32767
 7645 0002 0280     		.short	-32766
 7646 0004 0380     		.short	-32765
 7647 0006 0480     		.short	-32764
 7648 0008 0580     		.short	-32763
 7649 000a 0680     		.short	-32762
 7650 000c 0780     		.short	-32761
 7651 000e 0880     		.short	-32760
 7652 0010 0980     		.short	-32759
 7653 0012 0A80     		.short	-32758
 7654 0014 0B80     		.short	-32757
 7655 0016 0C80     		.short	-32756
 7656 0018 0D80     		.short	-32755
 7657 001a 0E80     		.short	-32754
 7658 001c 0F80     		.short	-32753
 7659 001e 1080     		.short	-32752
 7660 0020 1180     		.short	-32751
 7661 0022 1380     		.short	-32749
 7662 0024 1480     		.short	-32748
 7663 0026 1580     		.short	-32747
 7664 0028 1680     		.short	-32746
 7665 002a 1780     		.short	-32745
 7666 002c 1880     		.short	-32744
 7667 002e 1980     		.short	-32743
 7668 0030 1A80     		.short	-32742
 7669 0032 1B80     		.short	-32741
 7670 0034 1C80     		.short	-32740
 7671 0036 1D80     		.short	-32739
 7672              		.section	.rodata.hangul_jungsung_tbl,"a"
 7673              		.align	1
 7674              		.set	.LANCHOR1,. + 0
 7677              	hangul_jungsung_tbl:
 7678 0000 6080     		.short	-32672
 7679 0002 8080     		.short	-32640
 7680 0004 A080     		.short	-32608
 7681 0006 C080     		.short	-32576
 7682 0008 E080     		.short	-32544
 7683 000a 4081     		.short	-32448
 7684 000c 6081     		.short	-32416
 7685 000e 8081     		.short	-32384
 7686 0010 A081     		.short	-32352
 7687 0012 C081     		.short	-32320
 7688 0014 E081     		.short	-32288
 7689 0016 4082     		.short	-32192
 7690 0018 6082     		.short	-32160
 7691 001a 8082     		.short	-32128
 7692 001c A082     		.short	-32096
 7693 001e C082     		.short	-32064
 7694 0020 E082     		.short	-32032
 7695 0022 4083     		.short	-31936
 7696 0024 6083     		.short	-31904
 7697 0026 8083     		.short	-31872
 7698 0028 A083     		.short	-31840
 7699              		.section	.rodata.kor_font,"a"
 7702              	kor_font:
 7703 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7703      00000000 
 7703      00000000 
 7703      00
 7704 000d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7704      00000000 
 7704      00000000 
 7704      00
 7705 001a 00000000 		.ascii	"\000\000\000\000\000\000"
 7705      0000
 7706 0020 00000000 		.ascii	"\000\000\000\000\000\000?\200\001\200\001\200\003\000"
 7706      00003F80 
 7706      01800180 
 7706      0300
 7707 002e 06000C00 		.ascii	"\006\000\014\0000\000\000\000\000\000\000\000\000\000"
 7707      30000000 
 7707      00000000 
 7707      0000
 7708 003c 00000000 		.ascii	"\000\000\000\000"
 7709 0040 00000000 		.ascii	"\000\000\000\000\000\000\177\200\015\200\015\200\033"
 7709      00007F80 
 7709      0D800D80 
 7709      1B
 7710 004d 001B0036 		.ascii	"\000\033\0006\000H\000\000\000\000\000\000\000\000\000"
 7710      00480000 
 7710      00000000 
 7710      000000
 7711 005c 00000000 		.ascii	"\000\000\000\000"
 7712 0060 00000000 		.ascii	"\000\000\000\000\000\000p\0000\0000\0000\0000\0000\000"
 7712      00007000 
 7712      30003000 
 7712      30003000 
 7712      3000
 7713 0072 1FC00000 		.ascii	"\037\300\000\000\000\000\000\000\000\000\000\000\000"
 7713      00000000 
 7713      00000000 
 7713      00
 7714 007f 00       		.ascii	"\000"
 7715 0080 00000000 		.ascii	"\000\000\000\000\000\000\177\0000\0000\0000\0000\000"
 7715      00007F00 
 7715      30003000 
 7715      30003000 
 7716 0090 30001F80 		.ascii	"0\000\037\200\000\000\000\000\000\000\000\000\000\000"
 7716      00000000 
 7716      00000000 
 7716      0000
 7717 009e 0000     		.ascii	"\000\000"
 7718 00a0 00000000 		.ascii	"\000\000\000\000\000\000\177\2006\0006\0006\0006\000"
 7718      00007F80 
 7718      36003600 
 7718      36003600 
 7719 00b0 36001BC0 		.ascii	"6\000\033\300\000\000\000\000\000\000\000\000\000\000"
 7719      00000000 
 7719      00000000 
 7719      0000
 7720 00be 0000     		.ascii	"\000\000"
 7721 00c0 00000000 		.ascii	"\000\000\000\000\000\000?\200\001\200\001\200?\2000"
 7721      00003F80 
 7721      01800180 
 7721      3F8030
 7722 00cf 0030001F 		.ascii	"\0000\000\037\300\000\000\000\000\000\000\000\000\000"
 7722      C0000000 
 7722      00000000 
 7722      0000
 7723 00dd 000000   		.ascii	"\000\000\000"
 7724 00e0 00000000 		.ascii	"\000\000\000\000\000\000\177\2001\2001\2001\2001\200"
 7724      00007F80 
 7724      31803180 
 7724      31803180 
 7725 00f0 31803F80 		.ascii	"1\200?\200\000\000\000\000\000\000\000\000\000\000\000"
 7725      00000000 
 7725      00000000 
 7725      000000
 7726 00ff 00       		.ascii	"\000"
 7727 0100 00000000 		.ascii	"\000\000\000\000\000\000\003\200q\2001\200?\2001\200"
 7727      00000380 
 7727      71803180 
 7727      3F803180 
 7728 0110 31803F80 		.ascii	"1\200?\200\000\000\000\000\000\000\000\000\000\000\000"
 7728      00000000 
 7728      00000000 
 7728      000000
 7729 011f 00       		.ascii	"\000"
 7730 0120 00000000 		.ascii	"\000\000\000\000\000\000\003\200\355\200m\200\177\200"
 7730      00000380 
 7730      ED806D80 
 7730      7F80
 7731 012e 6D806D80 		.ascii	"m\200m\200\177\200\000\000\000\000\000\000\000\000\000"
 7731      7F800000 
 7731      00000000 
 7731      000000
 7732 013d 000000   		.ascii	"\000\000\000"
 7733 0140 00000000 		.ascii	"\000\000\000\000\016\000\006\000\006\000\006\000\016"
 7733      0E000600 
 7733      06000600 
 7733      0E
 7734 014d 000B0019 		.ascii	"\000\013\000\031\200`\300\000\000\000\000\000\000\000"
 7734      8060C000 
 7734      00000000 
 7734      0000
 7735 015b 00000000 		.ascii	"\000\000\000\000\000"
 7735      00
 7736 0160 00000000 		.ascii	"\000\000\000\000\000\0003\0003\0003\0003\000-\000m\200"
 7736      00003300 
 7736      33003300 
 7736      33002D00 
 7736      6D80
 7737 0172 CCC00000 		.ascii	"\314\300\000\000\000\000\000\000\000\000\000\000\000"
 7737      00000000 
 7737      00000000 
 7737      00
 7738 017f 00       		.ascii	"\000"
 7739 0180 00000000 		.ascii	"\000\000\000\000\000\000\036\0003\000a\200a\200a\200"
 7739      00001E00 
 7739      33006180 
 7739      61806180 
 7740 0190 33001E00 		.ascii	"3\000\036\000\000\000\000\000\000\000\000\000\000\000"
 7740      00000000 
 7740      00000000 
 7740      0000
 7741 019e 0000     		.ascii	"\000\000"
 7742 01a0 00000000 		.ascii	"\000\000\000\000\000\000\177\000\003\000\003\000\006"
 7742      00007F00 
 7742      03000300 
 7742      06
 7743 01ad 000C001B 		.ascii	"\000\014\000\033\000a\200\000\000\000\000\000\000\000"
 7743      00618000 
 7743      00000000 
 7743      0000
 7744 01bb 00000000 		.ascii	"\000\000\000\000\000"
 7744      00
 7745 01c0 00000000 		.ascii	"\000\000\000\000\000\000\177\200\015\200\015\200\033"
 7745      00007F80 
 7745      0D800D80 
 7745      1B
 7746 01cd 003F006D 		.ascii	"\000?\000m\200\330\300\000\000\000\000\000\000\000\000"
 7746      80D8C000 
 7746      00000000 
 7746      000000
 7747 01dc 00000000 		.ascii	"\000\000\000\000"
 7748 01e0 00000000 		.ascii	"\000\000\000\000\036\000\000\000\177\000\003\000\006"
 7748      1E000000 
 7748      7F000300 
 7748      06
 7749 01ed 000E001B 		.ascii	"\000\016\000\033\000a\200\000\000\000\000\000\000\000"
 7749      00618000 
 7749      00000000 
 7749      0000
 7750 01fb 00000000 		.ascii	"\000\000\000\000\000"
 7750      00
 7751 0200 00000000 		.ascii	"\000\000\000\000\000\000\177\200\001\200\177\200\003"
 7751      00007F80 
 7751      01807F80 
 7751      03
 7752 020d 0006000C 		.ascii	"\000\006\000\014\000p\000\000\000\000\000\000\000\000"
 7752      00700000 
 7752      00000000 
 7752      0000
 7753 021b 00000000 		.ascii	"\000\000\000\000\000"
 7753      00
 7754 0220 00000000 		.ascii	"\000\000\000\000\000\000\177\2000\0000\000?\2000\000"
 7754      00007F80 
 7754      30003000 
 7754      3F803000 
 7755 0230 30001FC0 		.ascii	"0\000\037\300\000\000\000\000\000\000\000\000\000\000"
 7755      00000000 
 7755      00000000 
 7755      0000
 7756 023e 0000     		.ascii	"\000\000"
 7757 0240 00000000 		.ascii	"\000\000\000\000\000\000\377\3003\0003\0003\0003\000"
 7757      0000FFC0 
 7757      33003300 
 7757      33003300 
 7758 0250 3300FFC0 		.ascii	"3\000\377\300\000\000\000\000\000\000\000\000\000\000"
 7758      00000000 
 7758      00000000 
 7758      0000
 7759 025e 0000     		.ascii	"\000\000"
 7760 0260 00000000 		.ascii	"\000\000\000\000\016\000\177\300\000\000\037\0001\200"
 7760      0E007FC0 
 7760      00001F00 
 7760      3180
 7761 026e 31803180 		.ascii	"1\2001\200\037\000\000\000\000\000\000\000\000\000\000"
 7761      1F000000 
 7761      00000000 
 7761      000000
 7762 027d 000000   		.ascii	"\000\000\000"
 7763 0280 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7763      00000000 
 7763      00000000 
 7763      00
 7764 028d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7764      00000000 
 7764      00000000 
 7764      00
 7765 029a 00000000 		.ascii	"\000\000\000\000\000\000"
 7765      0000
 7766 02a0 00000000 		.ascii	"\000\000\000\000\037\360\0000\0000\0000\0000\000 \000"
 7766      1FF00030 
 7766      00300030 
 7766      00300020 
 7766      00
 7767 02b1 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7767      00000000 
 7767      00000000 
 7767      00
 7768 02be 0000     		.ascii	"\000\000"
 7769 02c0 00000000 		.ascii	"\000\000\000\000\037\370\003\030\003\030\003\030\003"
 7769      1FF80318 
 7769      03180318 
 7769      03
 7770 02cd 18021000 		.ascii	"\030\002\020\000\000\000\000\000\000\000\000\000\000"
 7770      00000000 
 7770      00000000 
 7770      00
 7771 02da 00000000 		.ascii	"\000\000\000\000\000\000"
 7771      0000
 7772 02e0 00000000 		.ascii	"\000\000\000\0008\000\030\000\030\000\030\000\017\370"
 7772      38001800 
 7772      18001800 
 7772      0FF8
 7773 02ee 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7773      00000000 
 7773      00000000 
 7773      00
 7774 02fb 00000000 		.ascii	"\000\000\000\000\000"
 7774      00
 7775 0300 00000000 		.ascii	"\000\000\000\000?\360\030\000\030\000\030\000\017\360"
 7775      3FF01800 
 7775      18001800 
 7775      0FF0
 7776 030e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7776      00000000 
 7776      00000000 
 7776      00
 7777 031b 00000000 		.ascii	"\000\000\000\000\000"
 7777      00
 7778 0320 00000000 		.ascii	"\000\000\000\000?\370\030\300\030\300\030\300\017x\000"
 7778      3FF818C0 
 7778      18C018C0 
 7778      0F7800
 7779 032f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7779      00000000 
 7779      00000000 
 7779      00
 7780 033c 00000000 		.ascii	"\000\000\000\000"
 7781 0340 00000000 		.ascii	"\000\000\000\000\037\370\000\030\037\370\030\000\017"
 7781      1FF80018 
 7781      1FF81800 
 7781      0F
 7782 034d F8000000 		.ascii	"\370\000\000\000\000\000\000\000\000\000\000\000\000"
 7782      00000000 
 7782      00000000 
 7782      00
 7783 035a 00000000 		.ascii	"\000\000\000\000\000\000"
 7783      0000
 7784 0360 00000000 		.ascii	"\000\000\000\000?\360\0300\0300\0300\037\360\000\000"
 7784      3FF01830 
 7784      18301830 
 7784      1FF00000 
 7785 0370 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7785      00000000 
 7785      00000000 
 7785      00
 7786 037d 000000   		.ascii	"\000\000\000"
 7787 0380 00000000 		.ascii	"\000\000\000\0008p\0300\037\360\0300\037\360\000\000"
 7787      38701830 
 7787      1FF01830 
 7787      1FF00000 
 7788 0390 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7788      00000000 
 7788      00000000 
 7788      00
 7789 039d 000000   		.ascii	"\000\000\000"
 7790 03a0 00000000 		.ascii	"\000\000\000\0009\230\031\230\037\370\031\230\037\370"
 7790      39981998 
 7790      1FF81998 
 7790      1FF8
 7791 03ae 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7791      00000000 
 7791      00000000 
 7791      00
 7792 03bb 00000000 		.ascii	"\000\000\000\000\000"
 7792      00
 7793 03c0 00000000 		.ascii	"\000\000\000\000\003\200\001\200\003\300\0060\014\030"
 7793      03800180 
 7793      03C00630 
 7793      0C18
 7794 03ce 300C0000 		.ascii	"0\014\000\000\000\000\000\000\000\000\000\000\000\000"
 7794      00000000 
 7794      00000000 
 7794      0000
 7795 03dc 00000000 		.ascii	"\000\000\000\000"
 7796 03e0 00000000 		.ascii	"\000\000\000\000\014`\014`\016`\032\3601\230c\014\000"
 7796      0C600C60 
 7796      0E601AF0 
 7796      3198630C 
 7796      00
 7797 03f1 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7797      00000000 
 7797      00000000 
 7797      00
 7798 03fe 0000     		.ascii	"\000\000"
 7799 0400 00000000 		.ascii	"\000\000\000\000\017\340\0300\0300\0300\017\340\000"
 7799      0FE01830 
 7799      18301830 
 7799      0FE000
 7800 040f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7800      00000000 
 7800      00000000 
 7800      00
 7801 041c 00000000 		.ascii	"\000\000\000\000"
 7802 0420 00000000 		.ascii	"\000\000\000\000\037\360\000`\000\300\003`\014\0300"
 7802      1FF00060 
 7802      00C00360 
 7802      0C1830
 7803 042f 0C000000 		.ascii	"\014\000\000\000\000\000\000\000\000\000\000\000\000"
 7803      00000000 
 7803      00000000 
 7803      00
 7804 043c 00000000 		.ascii	"\000\000\000\000"
 7805 0440 00000000 		.ascii	"\000\000\000\000?\370\006`\016p\031\2301\214\000\000"
 7805      3FF80660 
 7805      0E701998 
 7805      318C0000 
 7806 0450 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7806      00000000 
 7806      00000000 
 7806      00
 7807 045d 000000   		.ascii	"\000\000\000"
 7808 0460 000003C0 		.ascii	"\000\000\003\300\000\000\037\370\001\300\003`\016\030"
 7808      00001FF8 
 7808      01C00360 
 7808      0E18
 7809 046e 300C0000 		.ascii	"0\014\000\000\000\000\000\000\000\000\000\000\000\000"
 7809      00000000 
 7809      00000000 
 7809      0000
 7810 047c 00000000 		.ascii	"\000\000\000\000"
 7811 0480 00000000 		.ascii	"\000\000\000\000\037\370\000\030\000\030\037\370\000"
 7811      1FF80018 
 7811      00181FF8 
 7811      00
 7812 048d 18001800 		.ascii	"\030\000\030\000\020\000\000\000\000\000\000\000\000"
 7812      10000000 
 7812      00000000 
 7812      00
 7813 049a 00000000 		.ascii	"\000\000\000\000\000\000"
 7813      0000
 7814 04a0 00000000 		.ascii	"\000\000\000\000?\370\030\000\037\370\030\000\017\370"
 7814      3FF81800 
 7814      1FF81800 
 7814      0FF8
 7815 04ae 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7815      00000000 
 7815      00000000 
 7815      00
 7816 04bb 00000000 		.ascii	"\000\000\000\000\000"
 7816      00
 7817 04c0 00000000 		.ascii	"\000\000\000\000\037\370\006`\006`\006`\037\370\000"
 7817      1FF80660 
 7817      06600660 
 7817      1FF800
 7818 04cf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7818      00000000 
 7818      00000000 
 7818      00
 7819 04dc 00000000 		.ascii	"\000\000\000\000"
 7820 04e0 000003C0 		.ascii	"\000\000\003\300\037\370\007\340\0140\0140\007\340\000"
 7820      1FF807E0 
 7820      0C300C30 
 7820      07E000
 7821 04ef 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7821      00000000 
 7821      00000000 
 7821      00
 7822 04fc 00000000 		.ascii	"\000\000\000\000"
 7823 0500 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7823      00000000 
 7823      00000000 
 7823      00
 7824 050d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7824      00000000 
 7824      00000000 
 7824      00
 7825 051a 00000000 		.ascii	"\000\000\000\000\000\000"
 7825      0000
 7826 0520 00000000 		.ascii	"\000\000\000\000\037\360\0000\0000\0000\0000\000 \000"
 7826      1FF00030 
 7826      00300030 
 7826      00300020 
 7826      00
 7827 0531 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7827      00000000 
 7827      00000000 
 7827      00
 7828 053e 0000     		.ascii	"\000\000"
 7829 0540 00000000 		.ascii	"\000\000\000\000\037\370\003\030\003\030\003\030\002"
 7829      1FF80318 
 7829      03180318 
 7829      02
 7830 054d 10000000 		.ascii	"\020\000\000\000\000\000\000\000\000\000\000\000\000"
 7830      00000000 
 7830      00000000 
 7830      00
 7831 055a 00000000 		.ascii	"\000\000\000\000\000\000"
 7831      0000
 7832 0560 00000000 		.ascii	"\000\000\000\0008\000\030\000\030\000\030\000\017\370"
 7832      38001800 
 7832      18001800 
 7832      0FF8
 7833 056e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7833      00000000 
 7833      00000000 
 7833      00
 7834 057b 00000000 		.ascii	"\000\000\000\000\000"
 7834      00
 7835 0580 00000000 		.ascii	"\000\000\000\000?\360\030\000\030\000\030\000\017\360"
 7835      3FF01800 
 7835      18001800 
 7835      0FF0
 7836 058e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7836      00000000 
 7836      00000000 
 7836      00
 7837 059b 00000000 		.ascii	"\000\000\000\000\000"
 7837      00
 7838 05a0 00000000 		.ascii	"\000\000\000\000?\370\030\300\030\300\030\300\017x\000"
 7838      3FF818C0 
 7838      18C018C0 
 7838      0F7800
 7839 05af 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7839      00000000 
 7839      00000000 
 7839      00
 7840 05bc 00000000 		.ascii	"\000\000\000\000"
 7841 05c0 00000000 		.ascii	"\000\000\000\000\037\370\000\030\037\370\030\000\017"
 7841      1FF80018 
 7841      1FF81800 
 7841      0F
 7842 05cd F8000000 		.ascii	"\370\000\000\000\000\000\000\000\000\000\000\000\000"
 7842      00000000 
 7842      00000000 
 7842      00
 7843 05da 00000000 		.ascii	"\000\000\000\000\000\000"
 7843      0000
 7844 05e0 00000000 		.ascii	"\000\000\000\000?\360\0300\0300\0300\037\360\000\000"
 7844      3FF01830 
 7844      18301830 
 7844      1FF00000 
 7845 05f0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7845      00000000 
 7845      00000000 
 7845      00
 7846 05fd 000000   		.ascii	"\000\000\000"
 7847 0600 00000000 		.ascii	"\000\000\000\0008p\0300\037\360\0300\037\360\000\000"
 7847      38701830 
 7847      1FF01830 
 7847      1FF00000 
 7848 0610 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7848      00000000 
 7848      00000000 
 7848      00
 7849 061d 000000   		.ascii	"\000\000\000"
 7850 0620 00000000 		.ascii	"\000\000\000\0009\230\031\230\037\370\031\230\037\370"
 7850      39981998 
 7850      1FF81998 
 7850      1FF8
 7851 062e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7851      00000000 
 7851      00000000 
 7851      00
 7852 063b 00000000 		.ascii	"\000\000\000\000\000"
 7852      00
 7853 0640 00000380 		.ascii	"\000\000\003\200\001\200\003\300\0060\014\0300\014\000"
 7853      018003C0 
 7853      06300C18 
 7853      300C00
 7854 064f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7854      00000000 
 7854      00000000 
 7854      00
 7855 065c 00000000 		.ascii	"\000\000\000\000"
 7856 0660 00000C60 		.ascii	"\000\000\014`\014`\016\340\032\2601\030a\014\000\000"
 7856      0C600EE0 
 7856      1AB03118 
 7856      610C0000 
 7857 0670 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7857      00000000 
 7857      00000000 
 7857      00
 7858 067d 000000   		.ascii	"\000\000\000"
 7859 0680 000007E0 		.ascii	"\000\000\007\340\0140\0140\0140\007\340\000\000\000"
 7859      0C300C30 
 7859      0C3007E0 
 7859      000000
 7860 068f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7860      00000000 
 7860      00000000 
 7860      00
 7861 069c 00000000 		.ascii	"\000\000\000\000"
 7862 06a0 00001FF0 		.ascii	"\000\000\037\360\000`\000\300\003`\014\0300\014\000"
 7862      006000C0 
 7862      03600C18 
 7862      300C00
 7863 06af 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7863      00000000 
 7863      00000000 
 7863      00
 7864 06bc 00000000 		.ascii	"\000\000\000\000"
 7865 06c0 00000000 		.ascii	"\000\000\000\000?\370\006`\016p\031\2301\214\000\000"
 7865      3FF80660 
 7865      0E701998 
 7865      318C0000 
 7866 06d0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7866      00000000 
 7866      00000000 
 7866      00
 7867 06dd 000000   		.ascii	"\000\000\000"
 7868 06e0 000003C0 		.ascii	"\000\000\003\300\037\370\001\300\003`\016\0300\014\000"
 7868      1FF801C0 
 7868      03600E18 
 7868      300C00
 7869 06ef 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7869      00000000 
 7869      00000000 
 7869      00
 7870 06fc 00000000 		.ascii	"\000\000\000\000"
 7871 0700 00000000 		.ascii	"\000\000\000\000\000\000\177\200\001\200\177\200\003"
 7871      00007F80 
 7871      01807F80 
 7871      03
 7872 070d 0006000C 		.ascii	"\000\006\000\014\000p\000\000\000\000\000\000\000\000"
 7872      00700000 
 7872      00000000 
 7872      0000
 7873 071b 00000000 		.ascii	"\000\000\000\000\000"
 7873      00
 7874 0720 00000000 		.ascii	"\000\000\000\000?\370\030\000\037\370\030\000\017\370"
 7874      3FF81800 
 7874      1FF81800 
 7874      0FF8
 7875 072e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7875      00000000 
 7875      00000000 
 7875      00
 7876 073b 00000000 		.ascii	"\000\000\000\000\000"
 7876      00
 7877 0740 00000000 		.ascii	"\000\000\000\000\037\370\006`\006`\006`\037\370\000"
 7877      1FF80660 
 7877      06600660 
 7877      1FF800
 7878 074f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7878      00000000 
 7878      00000000 
 7878      00
 7879 075c 00000000 		.ascii	"\000\000\000\000"
 7880 0760 000003C0 		.ascii	"\000\000\003\300\037\370\007\340\0140\0140\007\340\000"
 7880      1FF807E0 
 7880      0C300C30 
 7880      07E000
 7881 076f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7881      00000000 
 7881      00000000 
 7881      00
 7882 077c 00000000 		.ascii	"\000\000\000\000"
 7883 0780 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7883      00000000 
 7883      00000000 
 7883      00
 7884 078d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7884      00000000 
 7884      00000000 
 7884      00
 7885 079a 00000000 		.ascii	"\000\000\000\000\000\000"
 7885      0000
 7886 07a0 00000000 		.ascii	"\000\000\000\000?\200\001\200\001\200\001\200\001\200"
 7886      3F800180 
 7886      01800180 
 7886      0180
 7887 07ae 01000000 		.ascii	"\001\000\000\000\000\000\000\000\000\000\000\000\000"
 7887      00000000 
 7887      00000000 
 7887      00
 7888 07bb 00000000 		.ascii	"\000\000\000\000\000"
 7888      00
 7889 07c0 00000000 		.ascii	"\000\000\000\000?\300\014\300\014\300\014\300\014\300"
 7889      3FC00CC0 
 7889      0CC00CC0 
 7889      0CC0
 7890 07ce 08800000 		.ascii	"\010\200\000\000\000\000\000\000\000\000\000\000\000"
 7890      00000000 
 7890      00000000 
 7890      00
 7891 07db 00000000 		.ascii	"\000\000\000\000\000"
 7891      00
 7892 07e0 00000000 		.ascii	"\000\000\000\000p\0000\0000\0000\000\037\300\000\000"
 7892      70003000 
 7892      30003000 
 7892      1FC00000 
 7893 07f0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7893      00000000 
 7893      00000000 
 7893      00
 7894 07fd 000000   		.ascii	"\000\000\000"
 7895 0800 00000000 		.ascii	"\000\000\000\000\177\2000\0000\0000\000\037\200\000"
 7895      7F803000 
 7895      30003000 
 7895      1F8000
 7896 080f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7896      00000000 
 7896      00000000 
 7896      00
 7897 081c 00000000 		.ascii	"\000\000\000\000"
 7898 0820 00000000 		.ascii	"\000\000\000\000\177\3003\0003\0003\000\035\300\000"
 7898      7FC03300 
 7898      33003300 
 7898      1DC000
 7899 082f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7899      00000000 
 7899      00000000 
 7899      00
 7900 083c 00000000 		.ascii	"\000\000\000\000"
 7901 0840 00000000 		.ascii	"\000\000\000\000?\200\001\200?\2000\000\037\200\000"
 7901      3F800180 
 7901      3F803000 
 7901      1F8000
 7902 084f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7902      00000000 
 7902      00000000 
 7902      00
 7903 085c 00000000 		.ascii	"\000\000\000\000"
 7904 0860 00000000 		.ascii	"\000\000\000\000\177\2001\2001\2001\200?\200\000\000"
 7904      7F803180 
 7904      31803180 
 7904      3F800000 
 7905 0870 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7905      00000000 
 7905      00000000 
 7905      00
 7906 087d 000000   		.ascii	"\000\000\000"
 7907 0880 00000000 		.ascii	"\000\000\000\000s\2001\200?\2001\200?\200\000\000\000"
 7907      73803180 
 7907      3F803180 
 7907      3F800000 
 7907      00
 7908 0891 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7908      00000000 
 7908      00000000 
 7908      00
 7909 089e 0000     		.ascii	"\000\000"
 7910 08a0 00000000 		.ascii	"\000\000\000\000v\3006\300?\3006\300?\300\000\000\000"
 7910      76C036C0 
 7910      3FC036C0 
 7910      3FC00000 
 7910      00
 7911 08b1 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7911      00000000 
 7911      00000000 
 7911      00
 7912 08be 0000     		.ascii	"\000\000"
 7913 08c0 00000000 		.ascii	"\000\000\000\000\016\000\006\000\016\000\031\2000\300"
 7913      0E000600 
 7913      0E001980 
 7913      30C0
 7914 08ce 40600000 		.ascii	"@`\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7914      00000000 
 7914      00000000 
 7914      000000
 7915 08dd 000000   		.ascii	"\000\000\000"
 7916 08e0 00000000 		.ascii	"\000\000\000\000\031\200\031\200\031\200\037\2006\300"
 7916      19801980 
 7916      19801F80 
 7916      36C0
 7917 08ee 66600000 		.ascii	"f`\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7917      00000000 
 7917      00000000 
 7917      000000
 7918 08fd 000000   		.ascii	"\000\000\000"
 7919 0900 00000000 		.ascii	"\000\000\000\000\037\0001\2001\2001\200\037\000\000"
 7919      1F003180 
 7919      31803180 
 7919      1F0000
 7920 090f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7920      00000000 
 7920      00000000 
 7920      00
 7921 091c 00000000 		.ascii	"\000\000\000\000"
 7922 0920 00000000 		.ascii	"\000\000\000\000?\200\003\000\006\000\015\2000\300\000"
 7922      3F800300 
 7922      06000D80 
 7922      30C000
 7923 092f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7923      00000000 
 7923      00000000 
 7923      00
 7924 093c 00000000 		.ascii	"\000\000\000\000"
 7925 0940 00000000 		.ascii	"\000\000\000\000?\300\015\200\033\000?\200d\300\000"
 7925      3FC00D80 
 7925      1B003F80 
 7925      64C000
 7926 094f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7926      00000000 
 7926      00000000 
 7926      00
 7927 095c 00000000 		.ascii	"\000\000\000\000"
 7928 0960 00000000 		.ascii	"\000\000\000\000\016\000?\200\003\000\006\000\015\200"
 7928      0E003F80 
 7928      03000600 
 7928      0D80
 7929 096e 30C00000 		.ascii	"0\300\000\000\000\000\000\000\000\000\000\000\000\000"
 7929      00000000 
 7929      00000000 
 7929      0000
 7930 097c 00000000 		.ascii	"\000\000\000\000"
 7931 0980 00000000 		.ascii	"\000\000\000\000?\300\000\300?\300\000\300\000\300\000"
 7931      3FC000C0 
 7931      3FC000C0 
 7931      00C000
 7932 098f 80000000 		.ascii	"\200\000\000\000\000\000\000\000\000\000\000\000\000"
 7932      00000000 
 7932      00000000 
 7932      00
 7933 099c 00000000 		.ascii	"\000\000\000\000"
 7934 09a0 00000000 		.ascii	"\000\000\000\000\177\2000\000?\2000\000\037\200\000"
 7934      7F803000 
 7934      3F803000 
 7934      1F8000
 7935 09af 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7935      00000000 
 7935      00000000 
 7935      00
 7936 09bc 00000000 		.ascii	"\000\000\000\000"
 7937 09c0 00000000 		.ascii	"\000\000\000\000?\300\031\200\031\200\031\200?\300\000"
 7937      3FC01980 
 7937      19801980 
 7937      3FC000
 7938 09cf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7938      00000000 
 7938      00000000 
 7938      00
 7939 09dc 00000000 		.ascii	"\000\000\000\000"
 7940 09e0 00000E00 		.ascii	"\000\000\016\000\177\300\037\0001\2001\200\037\000\000"
 7940      7FC01F00 
 7940      31803180 
 7940      1F0000
 7941 09ef 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7941      00000000 
 7941      00000000 
 7941      00
 7942 09fc 00000000 		.ascii	"\000\000\000\000"
 7943 0a00 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7943      00000000 
 7943      00000000 
 7943      00
 7944 0a0d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7944      00000000 
 7944      00000000 
 7944      00
 7945 0a1a 00000000 		.ascii	"\000\000\000\000\000\000"
 7945      0000
 7946 0a20 00000000 		.ascii	"\000\000\000\000?\200\001\200\001\200\001\200\001\200"
 7946      3F800180 
 7946      01800180 
 7946      0180
 7947 0a2e 01000000 		.ascii	"\001\000\000\000\000\000\000\000\000\000\000\000\000"
 7947      00000000 
 7947      00000000 
 7947      00
 7948 0a3b 00000000 		.ascii	"\000\000\000\000\000"
 7948      00
 7949 0a40 00000000 		.ascii	"\000\000\000\000?\300\014\300\014\300\014\300\014\300"
 7949      3FC00CC0 
 7949      0CC00CC0 
 7949      0CC0
 7950 0a4e 08800000 		.ascii	"\010\200\000\000\000\000\000\000\000\000\000\000\000"
 7950      00000000 
 7950      00000000 
 7950      00
 7951 0a5b 00000000 		.ascii	"\000\000\000\000\000"
 7951      00
 7952 0a60 00000000 		.ascii	"\000\000\000\000p\0000\0000\0000\000\037\300\000\000"
 7952      70003000 
 7952      30003000 
 7952      1FC00000 
 7953 0a70 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7953      00000000 
 7953      00000000 
 7953      00
 7954 0a7d 000000   		.ascii	"\000\000\000"
 7955 0a80 00000000 		.ascii	"\000\000\000\000\177\2000\0000\0000\000\037\200\000"
 7955      7F803000 
 7955      30003000 
 7955      1F8000
 7956 0a8f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7956      00000000 
 7956      00000000 
 7956      00
 7957 0a9c 00000000 		.ascii	"\000\000\000\000"
 7958 0aa0 00000000 		.ascii	"\000\000\000\000\177\3003\0003\0003\000\035\300\000"
 7958      7FC03300 
 7958      33003300 
 7958      1DC000
 7959 0aaf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7959      00000000 
 7959      00000000 
 7959      00
 7960 0abc 00000000 		.ascii	"\000\000\000\000"
 7961 0ac0 00000000 		.ascii	"\000\000\000\000?\200\001\200?\2000\000\037\200\000"
 7961      3F800180 
 7961      3F803000 
 7961      1F8000
 7962 0acf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7962      00000000 
 7962      00000000 
 7962      00
 7963 0adc 00000000 		.ascii	"\000\000\000\000"
 7964 0ae0 00000000 		.ascii	"\000\000\000\000\177\2001\2001\2001\200?\200\000\000"
 7964      7F803180 
 7964      31803180 
 7964      3F800000 
 7965 0af0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7965      00000000 
 7965      00000000 
 7965      00
 7966 0afd 000000   		.ascii	"\000\000\000"
 7967 0b00 00000000 		.ascii	"\000\000\000\000s\2001\200?\2001\200?\200\000\000\000"
 7967      73803180 
 7967      3F803180 
 7967      3F800000 
 7967      00
 7968 0b11 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7968      00000000 
 7968      00000000 
 7968      00
 7969 0b1e 0000     		.ascii	"\000\000"
 7970 0b20 00000000 		.ascii	"\000\000\000\000v\3006\300?\3006\300?\300\000\000\000"
 7970      76C036C0 
 7970      3FC036C0 
 7970      3FC00000 
 7970      00
 7971 0b31 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7971      00000000 
 7971      00000000 
 7971      00
 7972 0b3e 0000     		.ascii	"\000\000"
 7973 0b40 00000000 		.ascii	"\000\000\000\000\016\000\006\000\016\000\031\2000\300"
 7973      0E000600 
 7973      0E001980 
 7973      30C0
 7974 0b4e 40600000 		.ascii	"@`\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7974      00000000 
 7974      00000000 
 7974      000000
 7975 0b5d 000000   		.ascii	"\000\000\000"
 7976 0b60 00000000 		.ascii	"\000\000\000\000\031\200\031\200\031\200\037\2006\300"
 7976      19801980 
 7976      19801F80 
 7976      36C0
 7977 0b6e 66600000 		.ascii	"f`\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7977      00000000 
 7977      00000000 
 7977      000000
 7978 0b7d 000000   		.ascii	"\000\000\000"
 7979 0b80 00000000 		.ascii	"\000\000\000\000\037\0001\2001\2001\200\037\000\000"
 7979      1F003180 
 7979      31803180 
 7979      1F0000
 7980 0b8f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7980      00000000 
 7980      00000000 
 7980      00
 7981 0b9c 00000000 		.ascii	"\000\000\000\000"
 7982 0ba0 00000000 		.ascii	"\000\000\000\000?\200\003\000\006\000\015\2000\300\000"
 7982      3F800300 
 7982      06000D80 
 7982      30C000
 7983 0baf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7983      00000000 
 7983      00000000 
 7983      00
 7984 0bbc 00000000 		.ascii	"\000\000\000\000"
 7985 0bc0 00000000 		.ascii	"\000\000\000\000?\300\015\200\033\000?\200d\300\000"
 7985      3FC00D80 
 7985      1B003F80 
 7985      64C000
 7986 0bcf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7986      00000000 
 7986      00000000 
 7986      00
 7987 0bdc 00000000 		.ascii	"\000\000\000\000"
 7988 0be0 00000000 		.ascii	"\000\000\000\000\016\000?\200\003\000\006\000\015\200"
 7988      0E003F80 
 7988      03000600 
 7988      0D80
 7989 0bee 30C00000 		.ascii	"0\300\000\000\000\000\000\000\000\000\000\000\000\000"
 7989      00000000 
 7989      00000000 
 7989      0000
 7990 0bfc 00000000 		.ascii	"\000\000\000\000"
 7991 0c00 00000000 		.ascii	"\000\000\000\000?\300\000\300?\300\000\300\000\300\000"
 7991      3FC000C0 
 7991      3FC000C0 
 7991      00C000
 7992 0c0f 80000000 		.ascii	"\200\000\000\000\000\000\000\000\000\000\000\000\000"
 7992      00000000 
 7992      00000000 
 7992      00
 7993 0c1c 00000000 		.ascii	"\000\000\000\000"
 7994 0c20 00000000 		.ascii	"\000\000\000\000\177\2000\000?\2000\000\037\200\000"
 7994      7F803000 
 7994      3F803000 
 7994      1F8000
 7995 0c2f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7995      00000000 
 7995      00000000 
 7995      00
 7996 0c3c 00000000 		.ascii	"\000\000\000\000"
 7997 0c40 00000000 		.ascii	"\000\000\000\000?\300\031\200\031\200\031\200?\300\000"
 7997      3FC01980 
 7997      19801980 
 7997      3FC000
 7998 0c4f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 7998      00000000 
 7998      00000000 
 7998      00
 7999 0c5c 00000000 		.ascii	"\000\000\000\000"
 8000 0c60 00000E00 		.ascii	"\000\000\016\000\177\300\037\0001\2001\200\037\000\000"
 8000      7FC01F00 
 8000      31803180 
 8000      1F0000
 8001 0c6f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8001      00000000 
 8001      00000000 
 8001      00
 8002 0c7c 00000000 		.ascii	"\000\000\000\000"
 8003 0c80 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8003      00000000 
 8003      00000000 
 8003      00
 8004 0c8d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8004      00000000 
 8004      00000000 
 8004      00
 8005 0c9a 00000000 		.ascii	"\000\000\000\000\000\000"
 8005      0000
 8006 0ca0 00000000 		.ascii	"\000\000\000\000?\200\001\200\001\200\003\000\006\000"
 8006      3F800180 
 8006      01800300 
 8006      0600
 8007 0cae 0C003000 		.ascii	"\014\0000\000\000\000\000\000\000\000\000\000\000\000"
 8007      00000000 
 8007      00000000 
 8007      0000
 8008 0cbc 00000000 		.ascii	"\000\000\000\000"
 8009 0cc0 00000000 		.ascii	"\000\000\000\000\177\200\015\200\015\200\033\000\033"
 8009      7F800D80 
 8009      0D801B00 
 8009      1B
 8010 0ccd 00360048 		.ascii	"\0006\000H\000\000\000\000\000\000\000\000\000\000\000"
 8010      00000000 
 8010      00000000 
 8010      000000
 8011 0cdc 00000000 		.ascii	"\000\000\000\000"
 8012 0ce0 00000000 		.ascii	"\000\000\000\000p\0000\0000\0000\0000\000\037\200\000"
 8012      70003000 
 8012      30003000 
 8012      30001F80 
 8012      00
 8013 0cf1 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8013      00000000 
 8013      00000000 
 8013      00
 8014 0cfe 0000     		.ascii	"\000\000"
 8015 0d00 00000000 		.ascii	"\000\000\000\000\177\0000\0000\0000\0000\000\037\200"
 8015      7F003000 
 8015      30003000 
 8015      30001F80 
 8016 0d10 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8016      00000000 
 8016      00000000 
 8016      00
 8017 0d1d 000000   		.ascii	"\000\000\000"
 8018 0d20 00000000 		.ascii	"\000\000\000\000\177\2006\0006\0006\0006\000\033\300"
 8018      7F803600 
 8018      36003600 
 8018      36001BC0 
 8019 0d30 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8019      00000000 
 8019      00000000 
 8019      00
 8020 0d3d 000000   		.ascii	"\000\000\000"
 8021 0d40 00000000 		.ascii	"\000\000\000\000?\200\001\200\001\200?\2000\0000\000"
 8021      3F800180 
 8021      01803F80 
 8021      30003000 
 8022 0d50 1FC00000 		.ascii	"\037\300\000\000\000\000\000\000\000\000\000\000\000"
 8022      00000000 
 8022      00000000 
 8022      00
 8023 0d5d 000000   		.ascii	"\000\000\000"
 8024 0d60 00000000 		.ascii	"\000\000\000\000\177\2001\2001\2001\2001\200?\200\000"
 8024      7F803180 
 8024      31803180 
 8024      31803F80 
 8024      00
 8025 0d71 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8025      00000000 
 8025      00000000 
 8025      00
 8026 0d7e 0000     		.ascii	"\000\000"
 8027 0d80 00000000 		.ascii	"\000\000\000\000s\2001\200?\2001\2001\200?\200\000\000"
 8027      73803180 
 8027      3F803180 
 8027      31803F80 
 8027      0000
 8028 0d92 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8028      00000000 
 8028      00000000 
 8028      00
 8029 0d9f 00       		.ascii	"\000"
 8030 0da0 00000000 		.ascii	"\000\000\000\000\355\200m\200\177\200m\200m\200\177"
 8030      ED806D80 
 8030      7F806D80 
 8030      6D807F
 8031 0daf 80000000 		.ascii	"\200\000\000\000\000\000\000\000\000\000\000\000\000"
 8031      00000000 
 8031      00000000 
 8031      00
 8032 0dbc 00000000 		.ascii	"\000\000\000\000"
 8033 0dc0 00000000 		.ascii	"\000\000\000\000\016\000\006\000\006\000\016\000\013"
 8033      0E000600 
 8033      06000E00 
 8033      0B
 8034 0dcd 00198060 		.ascii	"\000\031\200`\300\000\000\000\000\000\000\000\000\000"
 8034      C0000000 
 8034      00000000 
 8034      0000
 8035 0ddb 00000000 		.ascii	"\000\000\000\000\000"
 8035      00
 8036 0de0 00000000 		.ascii	"\000\000\000\000\033\000\033\000\033\000\025\0005\200"
 8036      1B001B00 
 8036      1B001500 
 8036      3580
 8037 0dee 64C00000 		.ascii	"d\300\000\000\000\000\000\000\000\000\000\000\000\000"
 8037      00000000 
 8037      00000000 
 8037      0000
 8038 0dfc 00000000 		.ascii	"\000\000\000\000"
 8039 0e00 00000000 		.ascii	"\000\000\000\000\037\0001\2001\2001\2001\200\037\000"
 8039      1F003180 
 8039      31803180 
 8039      31801F00 
 8040 0e10 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8040      00000000 
 8040      00000000 
 8040      00
 8041 0e1d 000000   		.ascii	"\000\000\000"
 8042 0e20 00000000 		.ascii	"\000\000\000\000?\200\001\200\003\000\006\000\015\200"
 8042      3F800180 
 8042      03000600 
 8042      0D80
 8043 0e2e 30C00000 		.ascii	"0\300\000\000\000\000\000\000\000\000\000\000\000\000"
 8043      00000000 
 8043      00000000 
 8043      0000
 8044 0e3c 00000000 		.ascii	"\000\000\000\000"
 8045 0e40 00000000 		.ascii	"\000\000\000\000\177\200\015\200\015\200\033\000?\000"
 8045      7F800D80 
 8045      0D801B00 
 8045      3F00
 8046 0e4e 6D8018C0 		.ascii	"m\200\030\300\000\000\000\000\000\000\000\000\000\000"
 8046      00000000 
 8046      00000000 
 8046      0000
 8047 0e5c 00000000 		.ascii	"\000\000\000\000"
 8048 0e60 00000000 		.ascii	"\000\000\000\000\034\000\177\000\003\000\006\000\016"
 8048      1C007F00 
 8048      03000600 
 8048      0E
 8049 0e6d 001B0061 		.ascii	"\000\033\000a\200\000\000\000\000\000\000\000\000\000"
 8049      80000000 
 8049      00000000 
 8049      0000
 8050 0e7b 00000000 		.ascii	"\000\000\000\000\000"
 8050      00
 8051 0e80 00000000 		.ascii	"\000\000\000\000?\200\001\200?\200\003\000\006\000\014"
 8051      3F800180 
 8051      3F800300 
 8051      06000C
 8052 0e8f 00300000 		.ascii	"\0000\000\000\000\000\000\000\000\000\000\000\000\000"
 8052      00000000 
 8052      00000000 
 8052      0000
 8053 0e9d 000000   		.ascii	"\000\000\000"
 8054 0ea0 00000000 		.ascii	"\000\000\000\000\177\0000\0000\000?\0000\0000\000\037"
 8054      7F003000 
 8054      30003F00 
 8054      30003000 
 8054      1F
 8055 0eb1 80000000 		.ascii	"\200\000\000\000\000\000\000\000\000\000\000\000\000"
 8055      00000000 
 8055      00000000 
 8055      00
 8056 0ebe 0000     		.ascii	"\000\000"
 8057 0ec0 00000000 		.ascii	"\000\000\000\000\177\3003\0003\0003\0003\000\177\300"
 8057      7FC03300 
 8057      33003300 
 8057      33007FC0 
 8058 0ed0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8058      00000000 
 8058      00000000 
 8058      00
 8059 0edd 000000   		.ascii	"\000\000\000"
 8060 0ee0 00000C00 		.ascii	"\000\000\014\000\177\200\036\0003\0003\0003\000\036"
 8060      7F801E00 
 8060      33003300 
 8060      33001E
 8061 0eef 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8061      00000000 
 8061      00000000 
 8061      00
 8062 0efc 00000000 		.ascii	"\000\000\000\000"
 8063 0f00 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8063      00000000 
 8063      00000000 
 8063      00
 8064 0f0d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8064      00000000 
 8064      00000000 
 8064      00
 8065 0f1a 00000000 		.ascii	"\000\000\000\000\000\000"
 8065      0000
 8066 0f20 00000000 		.ascii	"\000\000\000\000\037\370\000\030\000\030\000\030\000"
 8066      1FF80018 
 8066      00180018 
 8066      00
 8067 0f2d 10000000 		.ascii	"\020\000\000\000\000\000\000\000\000\000\000\000\000"
 8067      00000000 
 8067      00000000 
 8067      00
 8068 0f3a 00000000 		.ascii	"\000\000\000\000\000\000"
 8068      0000
 8069 0f40 00000000 		.ascii	"\000\000\000\000?\370\006\030\006\030\006\030\004\020"
 8069      3FF80618 
 8069      06180618 
 8069      0410
 8070 0f4e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8070      00000000 
 8070      00000000 
 8070      00
 8071 0f5b 00000000 		.ascii	"\000\000\000\000\000"
 8071      00
 8072 0f60 00000000 		.ascii	"\000\000\000\0008\000\030\000\030\000\017\370\000\000"
 8072      38001800 
 8072      18000FF8 
 8072      0000
 8073 0f6e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8073      00000000 
 8073      00000000 
 8073      00
 8074 0f7b 00000000 		.ascii	"\000\000\000\000\000"
 8074      00
 8075 0f80 00000000 		.ascii	"\000\000\000\000?\370\030\000\030\000\017\370\000\000"
 8075      3FF81800 
 8075      18000FF8 
 8075      0000
 8076 0f8e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8076      00000000 
 8076      00000000 
 8076      00
 8077 0f9b 00000000 		.ascii	"\000\000\000\000\000"
 8077      00
 8078 0fa0 00000000 		.ascii	"\000\000\000\000?\370\030\300\030\300\017x\000\000\000"
 8078      3FF818C0 
 8078      18C00F78 
 8078      000000
 8079 0faf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8079      00000000 
 8079      00000000 
 8079      00
 8080 0fbc 00000000 		.ascii	"\000\000\000\000"
 8081 0fc0 00000000 		.ascii	"\000\000\000\000\037\370\000\030\037\370\030\000\017"
 8081      1FF80018 
 8081      1FF81800 
 8081      0F
 8082 0fcd F8000000 		.ascii	"\370\000\000\000\000\000\000\000\000\000\000\000\000"
 8082      00000000 
 8082      00000000 
 8082      00
 8083 0fda 00000000 		.ascii	"\000\000\000\000\000\000"
 8083      0000
 8084 0fe0 00000000 		.ascii	"\000\000\000\000\037\370\014\030\014\030\017\370\000"
 8084      1FF80C18 
 8084      0C180FF8 
 8084      00
 8085 0fed 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8085      00000000 
 8085      00000000 
 8085      00
 8086 0ffa 00000000 		.ascii	"\000\000\000\000\000\000"
 8086      0000
 8087 1000 00000000 		.ascii	"\000\000\000\00088\030\030\037\370\030\030\037\370\000"
 8087      38381818 
 8087      1FF81818 
 8087      1FF800
 8088 100f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8088      00000000 
 8088      00000000 
 8088      00
 8089 101c 00000000 		.ascii	"\000\000\000\000"
 8090 1020 00000000 		.ascii	"\000\000\000\0009\230\031\230\037\370\031\230\037\370"
 8090      39981998 
 8090      1FF81998 
 8090      1FF8
 8091 102e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8091      00000000 
 8091      00000000 
 8091      00
 8092 103b 00000000 		.ascii	"\000\000\000\000\000"
 8092      00
 8093 1040 00000380 		.ascii	"\000\000\003\200\001\200\003\300\0060\014\0300\014\000"
 8093      018003C0 
 8093      06300C18 
 8093      300C00
 8094 104f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8094      00000000 
 8094      00000000 
 8094      00
 8095 105c 00000000 		.ascii	"\000\000\000\000"
 8096 1060 00000C60 		.ascii	"\000\000\014`\014`\016`\033\3601\230a\214\000\000\000"
 8096      0C600E60 
 8096      1BF03198 
 8096      618C0000 
 8096      00
 8097 1071 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8097      00000000 
 8097      00000000 
 8097      00
 8098 107e 0000     		.ascii	"\000\000"
 8099 1080 00000000 		.ascii	"\000\000\000\000\007\340\0140\0140\0140\007\340\000"
 8099      07E00C30 
 8099      0C300C30 
 8099      07E000
 8100 108f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8100      00000000 
 8100      00000000 
 8100      00
 8101 109c 00000000 		.ascii	"\000\000\000\000"
 8102 10a0 00000000 		.ascii	"\000\000\000\000\037\360\000`\000\300\003`\034\030\000"
 8102      1FF00060 
 8102      00C00360 
 8102      1C1800
 8103 10af 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8103      00000000 
 8103      00000000 
 8103      00
 8104 10bc 00000000 		.ascii	"\000\000\000\000"
 8105 10c0 00000000 		.ascii	"\000\000\000\000?\370\006`\016p\031\2301\214\000\000"
 8105      3FF80660 
 8105      0E701998 
 8105      318C0000 
 8106 10d0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8106      00000000 
 8106      00000000 
 8106      00
 8107 10dd 000000   		.ascii	"\000\000\000"
 8108 10e0 000001C0 		.ascii	"\000\000\001\300\037\370\001\300\003`\0060\030\014\000"
 8108      1FF801C0 
 8108      03600630 
 8108      180C00
 8109 10ef 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8109      00000000 
 8109      00000000 
 8109      00
 8110 10fc 00000000 		.ascii	"\000\000\000\000"
 8111 1100 00000000 		.ascii	"\000\000\000\000\037\370\000\030\037\370\000\030\000"
 8111      1FF80018 
 8111      1FF80018 
 8111      00
 8112 110d 10000000 		.ascii	"\020\000\000\000\000\000\000\000\000\000\000\000\000"
 8112      00000000 
 8112      00000000 
 8112      00
 8113 111a 00000000 		.ascii	"\000\000\000\000\000\000"
 8113      0000
 8114 1120 00000000 		.ascii	"\000\000\000\000?\370\030\000\037\370\030\000\017\370"
 8114      3FF81800 
 8114      1FF81800 
 8114      0FF8
 8115 112e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8115      00000000 
 8115      00000000 
 8115      00
 8116 113b 00000000 		.ascii	"\000\000\000\000\000"
 8116      00
 8117 1140 00000000 		.ascii	"\000\000\000\000\037\370\006`\006`\006`\037\370\000"
 8117      1FF80660 
 8117      06600660 
 8117      1FF800
 8118 114f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8118      00000000 
 8118      00000000 
 8118      00
 8119 115c 00000000 		.ascii	"\000\000\000\000"
 8120 1160 000003C0 		.ascii	"\000\000\003\300\037\370\007\340\0140\0140\007\340\000"
 8120      1FF807E0 
 8120      0C300C30 
 8120      07E000
 8121 116f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8121      00000000 
 8121      00000000 
 8121      00
 8122 117c 00000000 		.ascii	"\000\000\000\000"
 8123 1180 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8123      00000000 
 8123      00000000 
 8123      00
 8124 118d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8124      00000000 
 8124      00000000 
 8124      00
 8125 119a 00000000 		.ascii	"\000\000\000\000\000\000"
 8125      0000
 8126 11a0 00000000 		.ascii	"\000\000\000\000?\200\001\200\001\200\001\200\001\000"
 8126      3F800180 
 8126      01800180 
 8126      0100
 8127 11ae 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8127      00000000 
 8127      00000000 
 8127      00
 8128 11bb 00000000 		.ascii	"\000\000\000\000\000"
 8128      00
 8129 11c0 00000000 		.ascii	"\000\000\000\000\177\200\031\200\031\200\031\200\021"
 8129      7F801980 
 8129      19801980 
 8129      11
 8130 11cd 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8130      00000000 
 8130      00000000 
 8130      00
 8131 11da 00000000 		.ascii	"\000\000\000\000\000\000"
 8131      0000
 8132 11e0 00000000 		.ascii	"\000\000\000\000p\0000\0000\0000\000\037\200\000\000"
 8132      70003000 
 8132      30003000 
 8132      1F800000 
 8133 11f0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8133      00000000 
 8133      00000000 
 8133      00
 8134 11fd 000000   		.ascii	"\000\000\000"
 8135 1200 00000000 		.ascii	"\000\000\000\000\177\2000\0000\0000\000\037\200\000"
 8135      7F803000 
 8135      30003000 
 8135      1F8000
 8136 120f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8136      00000000 
 8136      00000000 
 8136      00
 8137 121c 00000000 		.ascii	"\000\000\000\000"
 8138 1220 00000000 		.ascii	"\000\000\000\000\177\3003\0003\0003\000\035\300\000"
 8138      7FC03300 
 8138      33003300 
 8138      1DC000
 8139 122f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8139      00000000 
 8139      00000000 
 8139      00
 8140 123c 00000000 		.ascii	"\000\000\000\000"
 8141 1240 00000000 		.ascii	"\000\000\000\000?\200\001\200?\2000\000\037\200\000"
 8141      3F800180 
 8141      3F803000 
 8141      1F8000
 8142 124f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8142      00000000 
 8142      00000000 
 8142      00
 8143 125c 00000000 		.ascii	"\000\000\000\000"
 8144 1260 00000000 		.ascii	"\000\000\000\000\177\2001\2001\2001\200?\200\000\000"
 8144      7F803180 
 8144      31803180 
 8144      3F800000 
 8145 1270 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8145      00000000 
 8145      00000000 
 8145      00
 8146 127d 000000   		.ascii	"\000\000\000"
 8147 1280 00000000 		.ascii	"\000\000\000\000s\2001\200?\2001\200?\200\000\000\000"
 8147      73803180 
 8147      3F803180 
 8147      3F800000 
 8147      00
 8148 1291 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8148      00000000 
 8148      00000000 
 8148      00
 8149 129e 0000     		.ascii	"\000\000"
 8150 12a0 00000000 		.ascii	"\000\000\000\000v\3006\300?\3006\300?\300\000\000\000"
 8150      76C036C0 
 8150      3FC036C0 
 8150      3FC00000 
 8150      00
 8151 12b1 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8151      00000000 
 8151      00000000 
 8151      00
 8152 12be 0000     		.ascii	"\000\000"
 8153 12c0 00000E00 		.ascii	"\000\000\016\000\006\000\016\000\031\2000\300@@\000"
 8153      06000E00 
 8153      198030C0 
 8153      404000
 8154 12cf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8154      00000000 
 8154      00000000 
 8154      00
 8155 12dc 00000000 		.ascii	"\000\000\000\000"
 8156 12e0 00000000 		.ascii	"\000\000\000\000\031\200\031\200\037\2006\300f`\000"
 8156      19801980 
 8156      1F8036C0 
 8156      666000
 8157 12ef 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8157      00000000 
 8157      00000000 
 8157      00
 8158 12fc 00000000 		.ascii	"\000\000\000\000"
 8159 1300 00000000 		.ascii	"\000\000\000\000\037\0001\2001\2001\200\037\000\000"
 8159      1F003180 
 8159      31803180 
 8159      1F0000
 8160 130f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8160      00000000 
 8160      00000000 
 8160      00
 8161 131c 00000000 		.ascii	"\000\000\000\000"
 8162 1320 00000000 		.ascii	"\000\000\000\000?\200\003\000\006\000\031\200`\300\000"
 8162      3F800300 
 8162      06001980 
 8162      60C000
 8163 132f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8163      00000000 
 8163      00000000 
 8163      00
 8164 133c 00000000 		.ascii	"\000\000\000\000"
 8165 1340 00000000 		.ascii	"\000\000\000\000\177\300\015\200\033\000?\200d\300\000"
 8165      7FC00D80 
 8165      1B003F80 
 8165      64C000
 8166 134f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8166      00000000 
 8166      00000000 
 8166      00
 8167 135c 00000000 		.ascii	"\000\000\000\000"
 8168 1360 00000E00 		.ascii	"\000\000\016\000\177\200\003\000\006\000\031\200`\300"
 8168      7F800300 
 8168      06001980 
 8168      60C0
 8169 136e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8169      00000000 
 8169      00000000 
 8169      00
 8170 137b 00000000 		.ascii	"\000\000\000\000\000"
 8170      00
 8171 1380 00000000 		.ascii	"\000\000\000\000?\200\001\200?\200\001\200\001\200\001"
 8171      3F800180 
 8171      3F800180 
 8171      018001
 8172 138f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8172      00000000 
 8172      00000000 
 8172      00
 8173 139c 00000000 		.ascii	"\000\000\000\000"
 8174 13a0 00000000 		.ascii	"\000\000\000\000\177\2000\000?\2000\000\037\200\000"
 8174      7F803000 
 8174      3F803000 
 8174      1F8000
 8175 13af 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8175      00000000 
 8175      00000000 
 8175      00
 8176 13bc 00000000 		.ascii	"\000\000\000\000"
 8177 13c0 00000000 		.ascii	"\000\000\000\000\177\2003\0003\0003\000\177\200\000"
 8177      7F803300 
 8177      33003300 
 8177      7F8000
 8178 13cf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8178      00000000 
 8178      00000000 
 8178      00
 8179 13dc 00000000 		.ascii	"\000\000\000\000"
 8180 13e0 00000E00 		.ascii	"\000\000\016\000\177\300\037\0001\2001\200\037\000\000"
 8180      7FC01F00 
 8180      31803180 
 8180      1F0000
 8181 13ef 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8181      00000000 
 8181      00000000 
 8181      00
 8182 13fc 00000000 		.ascii	"\000\000\000\000"
 8183 1400 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8183      00000000 
 8183      00000000 
 8183      00
 8184 140d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8184      00000000 
 8184      00000000 
 8184      00
 8185 141a 00000000 		.ascii	"\000\000\000\000\000\000"
 8185      0000
 8186 1420 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\030\000\030\000\037"
 8186      00180018 
 8186      00180018 
 8186      001F
 8187 142e 00180018 		.ascii	"\000\030\000\030\000\030\000\030\000\030\000\030\000"
 8187      00180018 
 8187      00180018 
 8187      00
 8188 143b 18001000 		.ascii	"\030\000\020\000\000"
 8188      00
 8189 1440 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\0006\000>\0006\0006"
 8189      00760036 
 8189      00360036 
 8189      003E0036 
 8189      0036
 8190 1452 00360036 		.ascii	"\0006\0006\0006\0006\000&\000\004\000\000"
 8190      00360036 
 8190      00260004 
 8190      0000
 8191 1460 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\030\000\037\000\030"
 8191      00180018 
 8191      0018001F 
 8191      0018
 8192 146e 0018001F 		.ascii	"\000\030\000\037\000\030\000\030\000\030\000\030\000"
 8192      00180018 
 8192      00180018 
 8192      00
 8193 147b 18001000 		.ascii	"\030\000\020\000\000"
 8193      00
 8194 1480 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\000>\0006\0006\000>"
 8194      00760036 
 8194      0036003E 
 8194      00360036 
 8194      003E
 8195 1492 00360036 		.ascii	"\0006\0006\0006\0006\000&\000\004\000\000"
 8195      00360036 
 8195      00260004 
 8195      0000
 8196 14a0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8196      000C000C 
 8196      000C000C 
 8196      00
 8197 14ad 7C000C00 		.ascii	"|\000\014\000\014\000\014\000\014\000\014\000\014\000"
 8197      0C000C00 
 8197      0C000C00 
 8197      0C00
 8198 14bb 0C000800 		.ascii	"\014\000\010\000\000"
 8198      00
 8199 14c0 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\0006\000\366\0006\000"
 8199      00760036 
 8199      00360036 
 8199      00F60036 
 8199      00
 8200 14d1 36003600 		.ascii	"6\0006\0006\0006\0006\000&\000\004\000\000"
 8200      36003600 
 8200      36002600 
 8200      040000
 8201 14e0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000|\000\014"
 8201      000C000C 
 8201      000C007C 
 8201      000C
 8202 14ee 007C000C 		.ascii	"\000|\000\014\000\014\000\014\000\014\000\014\000\014"
 8202      000C000C 
 8202      000C000C 
 8202      000C
 8203 14fc 00080000 		.ascii	"\000\010\000\000"
 8204 1500 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\001\366\0006\001\366"
 8204      00760036 
 8204      003601F6 
 8204      003601F6 
 8205 1510 00360036 		.ascii	"\0006\0006\0006\0006\0006\000&\000\004\000\000"
 8205      00360036 
 8205      00360026 
 8205      00040000 
 8206 1520 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8206      00000000 
 8206      00000000 
 8206      00
 8207 152d 00000001 		.ascii	"\000\000\000\001\200\001\200\001\200\177\376\000\000"
 8207      80018001 
 8207      807FFE00 
 8207      00
 8208 153a 00000000 		.ascii	"\000\000\000\000\000\000"
 8208      0000
 8209 1540 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\030\000\030\000\030"
 8209      00180018 
 8209      00180018 
 8209      0018
 8210 154e 001F0C18 		.ascii	"\000\037\014\030\014\030\177\330\000\030\000\030\000"
 8210      0C187FD8 
 8210      00180018 
 8210      00
 8211 155b 18001000 		.ascii	"\030\000\020\000\000"
 8211      00
 8212 1560 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\0006\000>\0006\0306"
 8212      00760036 
 8212      00360036 
 8212      003E0036 
 8212      1836
 8213 1572 18367FB6 		.ascii	"\0306\177\266\0006\0006\000&\000\004\000\000"
 8213      00360036 
 8213      00260004 
 8213      0000
 8214 1580 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8214      000C000C 
 8214      000C000C 
 8214      00
 8215 158d 0C000C0C 		.ascii	"\014\000\014\014\014\014\014\177\354\000\014\000\014"
 8215      0C0C0C7F 
 8215      EC000C00 
 8215      0C
 8216 159a 000C0008 		.ascii	"\000\014\000\010\000\000"
 8216      0000
 8217 15a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8217      00000000 
 8217      00000000 
 8217      00
 8218 15ad 0000000C 		.ascii	"\000\000\000\014\340\014`\014`\177\376\000\000\000\000"
 8218      E00C600C 
 8218      607FFE00 
 8218      000000
 8219 15bc 00000000 		.ascii	"\000\000\000\000"
 8220 15c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8220      00000000 
 8220      00000000 
 8220      00
 8221 15cd 0000007F 		.ascii	"\000\000\000\177\376\001\200\001\200\001\200\001\200"
 8221      FE018001 
 8221      80018001 
 8221      80
 8222 15da 01800100 		.ascii	"\001\200\001\000\000\000"
 8222      0000
 8223 15e0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8223      000C000C 
 8223      000C000C 
 8223      00
 8224 15ed 0C000C7F 		.ascii	"\014\000\014\177\354\006\014\006|\006\014\006\014\004"
 8224      EC060C06 
 8224      7C060C06 
 8224      0C04
 8225 15fb 0C000800 		.ascii	"\014\000\010\000\000"
 8225      00
 8226 1600 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\0006\0006\0006\177\266"
 8226      00760036 
 8226      00360036 
 8226      00360036 
 8226      7FB6
 8227 1612 0C360DF6 		.ascii	"\0146\015\366\0146\0146\010&\000\004\000\000"
 8227      0C360C36 
 8227      08260004 
 8227      0000
 8228 1620 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8228      000C000C 
 8228      000C000C 
 8228      00
 8229 162d 0C000C7F 		.ascii	"\014\000\014\177\354\006\014\006\014\006\014\006\014"
 8229      EC060C06 
 8229      0C060C06 
 8229      0C
 8230 163a 040C0008 		.ascii	"\004\014\000\010\000\000"
 8230      0000
 8231 1640 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8231      00000000 
 8231      00000000 
 8231      00
 8232 164d 0000007F 		.ascii	"\000\000\000\177\376\006`\006`\006`\006`\006`\004@\000"
 8232      FE066006 
 8232      60066006 
 8232      60066004 
 8232      4000
 8233 165f 00       		.ascii	"\000"
 8234 1660 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8234      00000000 
 8234      00000000 
 8234      00
 8235 166d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\177\376\000\000"
 8235      00000000 
 8235      007FFE00 
 8235      00
 8236 167a 00000000 		.ascii	"\000\000\000\000\000\000"
 8236      0000
 8237 1680 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8237      000C000C 
 8237      000C000C 
 8237      00
 8238 168d 0C000C00 		.ascii	"\014\000\014\000\014\000\354\177\014\000\014\000\014"
 8238      0C00EC7F 
 8238      0C000C00 
 8238      0C
 8239 169a 000C0008 		.ascii	"\000\014\000\010\000\000"
 8239      0000
 8240 16a0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8240      000C000C 
 8240      000C000C 
 8240      00
 8241 16ad 0C000C00 		.ascii	"\014\000\014\000\014\000\014\000\014\000\014\000\014"
 8241      0C000C00 
 8241      0C000C00 
 8241      0C
 8242 16ba 000C0008 		.ascii	"\000\014\000\010\000\000"
 8242      0000
 8243 16c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8243      00000000 
 8243      00000000 
 8243      00
 8244 16cd 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8244      00000000 
 8244      00000000 
 8244      00
 8245 16da 00000000 		.ascii	"\000\000\000\000\000\000"
 8245      0000
 8246 16e0 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\030\000\030\000\037"
 8246      00180018 
 8246      00180018 
 8246      001F
 8247 16ee 00180018 		.ascii	"\000\030\000\030\000\030\000\030\000\030\000\030\000"
 8247      00180018 
 8247      00180018 
 8247      00
 8248 16fb 18001000 		.ascii	"\030\000\020\000\000"
 8248      00
 8249 1700 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\0006\000>\0006\0006"
 8249      00760036 
 8249      00360036 
 8249      003E0036 
 8249      0036
 8250 1712 00360036 		.ascii	"\0006\0006\0006\0006\000&\000\004\000\000"
 8250      00360036 
 8250      00260004 
 8250      0000
 8251 1720 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\030\000\037\000\030"
 8251      00180018 
 8251      0018001F 
 8251      0018
 8252 172e 0018001F 		.ascii	"\000\030\000\037\000\030\000\030\000\030\000\030\000"
 8252      00180018 
 8252      00180018 
 8252      00
 8253 173b 18001000 		.ascii	"\030\000\020\000\000"
 8253      00
 8254 1740 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\000>\0006\0006\000>"
 8254      00760036 
 8254      0036003E 
 8254      00360036 
 8254      003E
 8255 1752 00360036 		.ascii	"\0006\0006\0006\0006\000&\000\004\000\000"
 8255      00360036 
 8255      00260004 
 8255      0000
 8256 1760 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8256      000C000C 
 8256      000C000C 
 8256      00
 8257 176d 7C000C00 		.ascii	"|\000\014\000\014\000\014\000\014\000\014\000\014\000"
 8257      0C000C00 
 8257      0C000C00 
 8257      0C00
 8258 177b 0C000800 		.ascii	"\014\000\010\000\000"
 8258      00
 8259 1780 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\0006\000v\0006\0006"
 8259      00760036 
 8259      00360036 
 8259      00760036 
 8259      0036
 8260 1792 00360036 		.ascii	"\0006\0006\0006\0006\000&\000\004\000\000"
 8260      00360036 
 8260      00260004 
 8260      0000
 8261 17a0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000|\000\014"
 8261      000C000C 
 8261      000C007C 
 8261      000C
 8262 17ae 007C000C 		.ascii	"\000|\000\014\000\014\000\014\000\014\000\014\000\014"
 8262      000C000C 
 8262      000C000C 
 8262      000C
 8263 17bc 00080000 		.ascii	"\000\010\000\000"
 8264 17c0 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\000v\0006\000v\0006"
 8264      00760036 
 8264      00360076 
 8264      00360076 
 8264      0036
 8265 17d2 00360036 		.ascii	"\0006\0006\0006\0006\000&\000\004\000\000"
 8265      00360036 
 8265      00260004 
 8265      0000
 8266 17e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8266      00000000 
 8266      00000000 
 8266      00
 8267 17ed 00000001 		.ascii	"\000\000\000\001\200\001\200\001\200\177\376\000\000"
 8267      80018001 
 8267      807FFE00 
 8267      00
 8268 17fa 00000000 		.ascii	"\000\000\000\000\000\000"
 8268      0000
 8269 1800 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\030\000\030\000\030"
 8269      00180018 
 8269      00180018 
 8269      0018
 8270 180e 001F0C18 		.ascii	"\000\037\014\030\014\030\177\330\000\030\000\030\000"
 8270      0C187FD8 
 8270      00180018 
 8270      00
 8271 181b 18001000 		.ascii	"\030\000\020\000\000"
 8271      00
 8272 1820 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\0006\000>\0006\0146"
 8272      00760036 
 8272      00360036 
 8272      003E0036 
 8272      0C36
 8273 1832 0C367FB6 		.ascii	"\0146\177\266\0006\0006\000&\000\004\000\000"
 8273      00360036 
 8273      00260004 
 8273      0000
 8274 1840 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8274      000C000C 
 8274      000C000C 
 8274      00
 8275 184d 0C000C0C 		.ascii	"\014\000\014\014\014\014\014\177\354\000\014\000\014"
 8275      0C0C0C7F 
 8275      EC000C00 
 8275      0C
 8276 185a 000C0008 		.ascii	"\000\014\000\010\000\000"
 8276      0000
 8277 1860 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8277      00000000 
 8277      00000000 
 8277      00
 8278 186d 00000006 		.ascii	"\000\000\000\006`\006`\006`\177\376\000\000\000\000"
 8278      60066006 
 8278      607FFE00 
 8278      000000
 8279 187c 00000000 		.ascii	"\000\000\000\000"
 8280 1880 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8280      00000000 
 8280      00000000 
 8280      00
 8281 188d 0000007F 		.ascii	"\000\000\000\177\376\001\200\001\200\001\200\001\200"
 8281      FE018001 
 8281      80018001 
 8281      80
 8282 189a 01800100 		.ascii	"\001\200\001\000\000\000"
 8282      0000
 8283 18a0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8283      000C000C 
 8283      000C000C 
 8283      00
 8284 18ad 0C000C7F 		.ascii	"\014\000\014\177\354\006\014\006|\006\014\006\014\004"
 8284      EC060C06 
 8284      7C060C06 
 8284      0C04
 8285 18bb 0C000800 		.ascii	"\014\000\010\000\000"
 8285      00
 8286 18c0 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\0006\0006\0006\177\266"
 8286      00760036 
 8286      00360036 
 8286      00360036 
 8286      7FB6
 8287 18d2 0C360DF6 		.ascii	"\0146\015\366\0146\0306\000&\000\004\000\000"
 8287      0C361836 
 8287      00260004 
 8287      0000
 8288 18e0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8288      000C000C 
 8288      000C000C 
 8288      00
 8289 18ed 0C000C7F 		.ascii	"\014\000\014\177\354\006\014\006\014\006\014\006\014"
 8289      EC060C06 
 8289      0C060C06 
 8289      0C
 8290 18fa 040C0008 		.ascii	"\004\014\000\010\000\000"
 8290      0000
 8291 1900 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8291      00000000 
 8291      00000000 
 8291      00
 8292 190d 0000007F 		.ascii	"\000\000\000\177\376\006`\006`\006`\006`\006`\004@\000"
 8292      FE066006 
 8292      60066006 
 8292      60066004 
 8292      4000
 8293 191f 00       		.ascii	"\000"
 8294 1920 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8294      00000000 
 8294      00000000 
 8294      00
 8295 192d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\177\376\000\000"
 8295      00000000 
 8295      007FFE00 
 8295      00
 8296 193a 00000000 		.ascii	"\000\000\000\000\000\000"
 8296      0000
 8297 1940 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8297      000C000C 
 8297      000C000C 
 8297      00
 8298 194d 0C000C00 		.ascii	"\014\000\014\000\014\000\354\177\014\000\014\000\014"
 8298      0C00EC7F 
 8298      0C000C00 
 8298      0C
 8299 195a 000C0008 		.ascii	"\000\014\000\010\000\000"
 8299      0000
 8300 1960 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8300      000C000C 
 8300      000C000C 
 8300      00
 8301 196d 0C000C00 		.ascii	"\014\000\014\000\014\000\014\000\014\000\014\000\014"
 8301      0C000C00 
 8301      0C000C00 
 8301      0C
 8302 197a 000C0008 		.ascii	"\000\014\000\010\000\000"
 8302      0000
 8303 1980 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8303      00000000 
 8303      00000000 
 8303      00
 8304 198d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8304      00000000 
 8304      00000000 
 8304      00
 8305 199a 00000000 		.ascii	"\000\000\000\000\000\000"
 8305      0000
 8306 19a0 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\030\000\037\000\030"
 8306      00180018 
 8306      0018001F 
 8306      0018
 8307 19ae 00180018 		.ascii	"\000\030\000\030\000\020\000\000\000\000\000\000\000"
 8307      00100000 
 8307      00000000 
 8307      00
 8308 19bb 00000000 		.ascii	"\000\000\000\000\000"
 8308      00
 8309 19c0 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\000>\0006\0006\0006"
 8309      00760036 
 8309      0036003E 
 8309      00360036 
 8309      0036
 8310 19d2 00240000 		.ascii	"\000$\000\000\000\000\000\000\000\000\000\000\000\000"
 8310      00000000 
 8310      00000000 
 8310      0000
 8311 19e0 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\037\000\030\000\037"
 8311      00180018 
 8311      001F0018 
 8311      001F
 8312 19ee 00180018 		.ascii	"\000\030\000\030\000\020\000\000\000\000\000\000\000"
 8312      00100000 
 8312      00000000 
 8312      00
 8313 19fb 00000000 		.ascii	"\000\000\000\000\000"
 8313      00
 8314 1a00 0000000E 		.ascii	"\000\000\000\016\000v\0006\000>\0006\000>\0006\0006"
 8314      00760036 
 8314      003E0036 
 8314      003E0036 
 8314      0036
 8315 1a12 00240000 		.ascii	"\000$\000\000\000\000\000\000\000\000\000\000\000\000"
 8315      00000000 
 8315      00000000 
 8315      0000
 8316 1a20 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\374\000"
 8316      000C000C 
 8316      000C00FC 
 8316      00
 8317 1a2d 0C000C00 		.ascii	"\014\000\014\000\014\000\010\000\000\000\000\000\000"
 8317      0C000800 
 8317      00000000 
 8317      00
 8318 1a3a 00000000 		.ascii	"\000\000\000\000\000\000"
 8318      0000
 8319 1a40 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\000\366\0006\0006\000"
 8319      00760036 
 8319      003600F6 
 8319      00360036 
 8319      00
 8320 1a51 36002400 		.ascii	"6\000$\000\000\000\000\000\000\000\000\000\000\000\000"
 8320      00000000 
 8320      00000000 
 8320      000000
 8321 1a60 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000|\000\014\000|\000"
 8321      000C000C 
 8321      007C000C 
 8321      007C00
 8322 1a6f 0C000C00 		.ascii	"\014\000\014\000\010\000\000\000\000\000\000\000\000"
 8322      08000000 
 8322      00000000 
 8322      00
 8323 1a7c 00000000 		.ascii	"\000\000\000\000"
 8324 1a80 0000000E 		.ascii	"\000\000\000\016\000v\0006\000\366\0006\000\366\000"
 8324      00760036 
 8324      00F60036 
 8324      00F600
 8325 1a8f 36003600 		.ascii	"6\0006\000$\000\000\000\000\000\000\000\000\000\000"
 8325      24000000 
 8325      00000000 
 8325      000000
 8326 1a9e 0000     		.ascii	"\000\000"
 8327 1aa0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\001"
 8327      00000000 
 8327      00000000 
 8327      01
 8328 1aad 8001807F 		.ascii	"\200\001\200\177\376\000\000\000\000\000\000\000\000"
 8328      FE000000 
 8328      00000000 
 8328      00
 8329 1aba 00000000 		.ascii	"\000\000\000\000\000\000"
 8329      0000
 8330 1ac0 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\030\000\037\014\030"
 8330      00180018 
 8330      0018001F 
 8330      0C18
 8331 1ace 0C187FD8 		.ascii	"\014\030\177\330\000\020\000\000\000\000\000\000\000"
 8331      00100000 
 8331      00000000 
 8331      00
 8332 1adb 00000000 		.ascii	"\000\000\000\000\000"
 8332      00
 8333 1ae0 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\000>\0306\0306\177\246"
 8333      00760036 
 8333      0036003E 
 8333      18361836 
 8333      7FA6
 8334 1af2 00040000 		.ascii	"\000\004\000\000\000\000\000\000\000\000\000\000\000"
 8334      00000000 
 8334      00000000 
 8334      00
 8335 1aff 00       		.ascii	"\000"
 8336 1b00 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\014"
 8336      000C000C 
 8336      000C000C 
 8336      0C
 8337 1b0d 0C0C0C7F 		.ascii	"\014\014\014\177\354\000\010\000\000\000\000\000\000"
 8337      EC000800 
 8337      00000000 
 8337      00
 8338 1b1a 00000000 		.ascii	"\000\000\000\000\000\000"
 8338      0000
 8339 1b20 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\014"
 8339      00000000 
 8339      00000000 
 8339      0C
 8340 1b2d 600C607F 		.ascii	"`\014`\177\376\000\000\000\000\000\000\000\000\000\000"
 8340      FE000000 
 8340      00000000 
 8340      000000
 8341 1b3c 00000000 		.ascii	"\000\000\000\000"
 8342 1b40 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8342      00000000 
 8342      00000000 
 8342      00
 8343 1b4d 007FFE01 		.ascii	"\000\177\376\001\200\001\000\000\000\000\000\000\000"
 8343      80010000 
 8343      00000000 
 8343      00
 8344 1b5a 00000000 		.ascii	"\000\000\000\000\000\000"
 8344      0000
 8345 1b60 00000000 		.ascii	"\000\000\000\000\000\034\000\014\000\014\000\014\177"
 8345      001C000C 
 8345      000C000C 
 8345      7F
 8346 1b6d EC060C06 		.ascii	"\354\006\014\006|\006\014\004\010\000\000\000\000\000"
 8346      7C060C04 
 8346      08000000 
 8346      0000
 8347 1b7b 00000000 		.ascii	"\000\000\000\000\000"
 8347      00
 8348 1b80 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\0006\000\366\0006\177"
 8348      00760036 
 8348      00360036 
 8348      00F60036 
 8348      7F
 8349 1b91 B60C3608 		.ascii	"\266\0146\010$\000\000\000\000\000\000\000\000\000\000"
 8349      24000000 
 8349      00000000 
 8349      000000
 8350 1ba0 0000000E 		.ascii	"\000\000\000\016\000\006\000\006\000\006\000\006\000"
 8350      00060006 
 8350      00060006 
 8350      00
 8351 1bad 063FE606 		.ascii	"\006?\346\006\006\006\004\000\000\000\000\000\000\000"
 8351      06060400 
 8351      00000000 
 8351      0000
 8352 1bbb 00000000 		.ascii	"\000\000\000\000\000"
 8352      00
 8353 1bc0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8353      00000000 
 8353      00000000 
 8353      00
 8354 1bcd 0000007F 		.ascii	"\000\000\000\177\376\006`\000\000\000\000\000\000\000"
 8354      FE066000 
 8354      00000000 
 8354      0000
 8355 1bdb 00000000 		.ascii	"\000\000\000\000\000"
 8355      00
 8356 1be0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8356      00000000 
 8356      00000000 
 8356      00
 8357 1bed 0000007F 		.ascii	"\000\000\000\177\376\000\000\000\000\000\000\000\000"
 8357      FE000000 
 8357      00000000 
 8357      00
 8358 1bfa 00000000 		.ascii	"\000\000\000\000\000\000"
 8358      0000
 8359 1c00 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8359      000C000C 
 8359      000C000C 
 8359      00
 8360 1c0d 0C000C7F 		.ascii	"\014\000\014\177\354\000\010\000\000\000\000\000\000"
 8360      EC000800 
 8360      00000000 
 8360      00
 8361 1c1a 00000000 		.ascii	"\000\000\000\000\000\000"
 8361      0000
 8362 1c20 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8362      000C000C 
 8362      000C000C 
 8362      00
 8363 1c2d 0C000C00 		.ascii	"\014\000\014\000\014\000\010\000\000\000\000\000\000"
 8363      0C000800 
 8363      00000000 
 8363      00
 8364 1c3a 00000000 		.ascii	"\000\000\000\000\000\000"
 8364      0000
 8365 1c40 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8365      00000000 
 8365      00000000 
 8365      00
 8366 1c4d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8366      00000000 
 8366      00000000 
 8366      00
 8367 1c5a 00000000 		.ascii	"\000\000\000\000\000\000"
 8367      0000
 8368 1c60 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\030\000\037\000\030"
 8368      00180018 
 8368      0018001F 
 8368      0018
 8369 1c6e 00180018 		.ascii	"\000\030\000\030\000\020\000\000\000\000\000\000\000"
 8369      00100000 
 8369      00000000 
 8369      00
 8370 1c7b 00000000 		.ascii	"\000\000\000\000\000"
 8370      00
 8371 1c80 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\000>\0006\0006\0006"
 8371      00760036 
 8371      0036003E 
 8371      00360036 
 8371      0036
 8372 1c92 00240000 		.ascii	"\000$\000\000\000\000\000\000\000\000\000\000\000\000"
 8372      00000000 
 8372      00000000 
 8372      0000
 8373 1ca0 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\037\000\030\000\037"
 8373      00180018 
 8373      001F0018 
 8373      001F
 8374 1cae 00180018 		.ascii	"\000\030\000\030\000\020\000\000\000\000\000\000\000"
 8374      00100000 
 8374      00000000 
 8374      00
 8375 1cbb 00000000 		.ascii	"\000\000\000\000\000"
 8375      00
 8376 1cc0 0000000E 		.ascii	"\000\000\000\016\000v\0006\000>\0006\000>\0006\0006"
 8376      00760036 
 8376      003E0036 
 8376      003E0036 
 8376      0036
 8377 1cd2 00240000 		.ascii	"\000$\000\000\000\000\000\000\000\000\000\000\000\000"
 8377      00000000 
 8377      00000000 
 8377      0000
 8378 1ce0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000|\000\014"
 8378      000C000C 
 8378      000C007C 
 8378      000C
 8379 1cee 000C000C 		.ascii	"\000\014\000\014\000\010\000\000\000\000\000\000\000"
 8379      00080000 
 8379      00000000 
 8379      00
 8380 1cfb 00000000 		.ascii	"\000\000\000\000\000"
 8380      00
 8381 1d00 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\000v\0006\0006\0006"
 8381      00760036 
 8381      00360076 
 8381      00360036 
 8381      0036
 8382 1d12 00240000 		.ascii	"\000$\000\000\000\000\000\000\000\000\000\000\000\000"
 8382      00000000 
 8382      00000000 
 8382      0000
 8383 1d20 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000|\000\014\000|\000"
 8383      000C000C 
 8383      007C000C 
 8383      007C00
 8384 1d2f 0C000C00 		.ascii	"\014\000\014\000\010\000\000\000\000\000\000\000\000"
 8384      08000000 
 8384      00000000 
 8384      00
 8385 1d3c 00000000 		.ascii	"\000\000\000\000"
 8386 1d40 0000000E 		.ascii	"\000\000\000\016\000v\0006\000v\0006\000v\0006\0006"
 8386      00760036 
 8386      00760036 
 8386      00760036 
 8386      0036
 8387 1d52 00240000 		.ascii	"\000$\000\000\000\000\000\000\000\000\000\000\000\000"
 8387      00000000 
 8387      00000000 
 8387      0000
 8388 1d60 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\001"
 8388      00000000 
 8388      00000000 
 8388      01
 8389 1d6d 8001807F 		.ascii	"\200\001\200\177\376\000\000\000\000\000\000\000\000"
 8389      FE000000 
 8389      00000000 
 8389      00
 8390 1d7a 00000000 		.ascii	"\000\000\000\000\000\000"
 8390      0000
 8391 1d80 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\030\000\037\014\030"
 8391      00180018 
 8391      0018001F 
 8391      0C18
 8392 1d8e 0C187FD8 		.ascii	"\014\030\177\330\000\020\000\000\000\000\000\000\000"
 8392      00100000 
 8392      00000000 
 8392      00
 8393 1d9b 00000000 		.ascii	"\000\000\000\000\000"
 8393      00
 8394 1da0 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\000>\0146\0146\177\246"
 8394      00760036 
 8394      0036003E 
 8394      0C360C36 
 8394      7FA6
 8395 1db2 00040000 		.ascii	"\000\004\000\000\000\000\000\000\000\000\000\000\000"
 8395      00000000 
 8395      00000000 
 8395      00
 8396 1dbf 00       		.ascii	"\000"
 8397 1dc0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\014"
 8397      000C000C 
 8397      000C000C 
 8397      0C
 8398 1dcd 0C0C0C7F 		.ascii	"\014\014\014\177\354\000\010\000\000\000\000\000\000"
 8398      EC000800 
 8398      00000000 
 8398      00
 8399 1dda 00000000 		.ascii	"\000\000\000\000\000\000"
 8399      0000
 8400 1de0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\006"
 8400      00000000 
 8400      00000000 
 8400      06
 8401 1ded 6006607F 		.ascii	"`\006`\177\376\000\000\000\000\000\000\000\000\000\000"
 8401      FE000000 
 8401      00000000 
 8401      000000
 8402 1dfc 00000000 		.ascii	"\000\000\000\000"
 8403 1e00 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8403      00000000 
 8403      00000000 
 8403      00
 8404 1e0d 0000007F 		.ascii	"\000\000\000\177\376\001\200\000\000\000\000\000\000"
 8404      FE018000 
 8404      00000000 
 8404      00
 8405 1e1a 00000000 		.ascii	"\000\000\000\000\000\000"
 8405      0000
 8406 1e20 0000000E 		.ascii	"\000\000\000\016\000\006\000\006\000\006\000\006\000"
 8406      00060006 
 8406      00060006 
 8406      00
 8407 1e2d 063FE606 		.ascii	"\006?\346\006\036\006\006\000\000\000\000\000\000\000"
 8407      1E060600 
 8407      00000000 
 8407      0000
 8408 1e3b 00000000 		.ascii	"\000\000\000\000\000"
 8408      00
 8409 1e40 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\000\366\0006\177\266"
 8409      00760036 
 8409      003600F6 
 8409      00367FB6 
 8410 1e50 0C360824 		.ascii	"\0146\010$\000\000\000\000\000\000\000\000\000\000\000"
 8410      00000000 
 8410      00000000 
 8410      000000
 8411 1e5f 00       		.ascii	"\000"
 8412 1e60 0000000E 		.ascii	"\000\000\000\016\000\006\000\006\000\006\000\006\000"
 8412      00060006 
 8412      00060006 
 8412      00
 8413 1e6d 063FE606 		.ascii	"\006?\346\006\006\006\004\000\000\000\000\000\000\000"
 8413      06060400 
 8413      00000000 
 8413      0000
 8414 1e7b 00000000 		.ascii	"\000\000\000\000\000"
 8414      00
 8415 1e80 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8415      00000000 
 8415      00000000 
 8415      00
 8416 1e8d 0000007F 		.ascii	"\000\000\000\177\376\006`\000\000\000\000\000\000\000"
 8416      FE066000 
 8416      00000000 
 8416      0000
 8417 1e9b 00000000 		.ascii	"\000\000\000\000\000"
 8417      00
 8418 1ea0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8418      00000000 
 8418      00000000 
 8418      00
 8419 1ead 0000007F 		.ascii	"\000\000\000\177\376\000\000\000\000\000\000\000\000"
 8419      FE000000 
 8419      00000000 
 8419      00
 8420 1eba 00000000 		.ascii	"\000\000\000\000\000\000"
 8420      0000
 8421 1ec0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8421      000C000C 
 8421      000C000C 
 8421      00
 8422 1ecd 0C000C7F 		.ascii	"\014\000\014\177\354\000\010\000\000\000\000\000\000"
 8422      EC000800 
 8422      00000000 
 8422      00
 8423 1eda 00000000 		.ascii	"\000\000\000\000\000\000"
 8423      0000
 8424 1ee0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8424      000C000C 
 8424      000C000C 
 8424      00
 8425 1eed 0C000C00 		.ascii	"\014\000\014\000\014\000\010\000\000\000\000\000\000"
 8425      0C000800 
 8425      00000000 
 8425      00
 8426 1efa 00000000 		.ascii	"\000\000\000\000\000\000"
 8426      0000
 8427 1f00 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8427      00000000 
 8427      00000000 
 8427      00
 8428 1f0d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8428      00000000 
 8428      00000000 
 8428      00
 8429 1f1a 00000000 		.ascii	"\000\000\000\000\000\000"
 8429      0000
 8430 1f20 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8430      00000000 
 8430      00000000 
 8430      00
 8431 1f2d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\370\000\030\000\030"
 8431      0000000F 
 8431      F8001800 
 8431      18
 8432 1f3a 00180010 		.ascii	"\000\030\000\020\000\000"
 8432      0000
 8433 1f40 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8433      00000000 
 8433      00000000 
 8433      00
 8434 1f4d 00000000 		.ascii	"\000\000\000\000\000\000\000\037\370\003\030\003\030"
 8434      0000001F 
 8434      F8031803 
 8434      18
 8435 1f5a 03180210 		.ascii	"\003\030\002\020\000\000"
 8435      0000
 8436 1f60 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8436      00000000 
 8436      00000000 
 8436      00
 8437 1f6d 00000000 		.ascii	"\000\000\000\000\000\000\000\0370\0030\0038\003l\002"
 8437      0000001F 
 8437      30033003 
 8437      38036C02 
 8438 1f7d CC0000   		.ascii	"\314\000\000"
 8439 1f80 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8439      00000000 
 8439      00000000 
 8439      00
 8440 1f8d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\000\003\000\003\000"
 8440      00000007 
 8440      00030003 
 8440      00
 8441 1f9a 030001FC 		.ascii	"\003\000\001\374\000\000"
 8441      0000
 8442 1fa0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8442      00000000 
 8442      00000000 
 8442      00
 8443 1fad 00000000 		.ascii	"\000\000\000\000\000\000\000\034\374\0140\0140\014x"
 8443      0000001C 
 8443      FC0C300C 
 8443      300C78
 8444 1fbc 07CC0000 		.ascii	"\007\314\000\000"
 8445 1fc0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8445      00000000 
 8445      00000000 
 8445      00
 8446 1fcd 00000000 		.ascii	"\000\000\000\000\000\000\000\0340\014\374\014x\014\314"
 8446      0000001C 
 8446      300CFC0C 
 8446      780CCC
 8447 1fdc 07780000 		.ascii	"\007x\000\000"
 8448 1fe0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8448      00000000 
 8448      00000000 
 8448      00
 8449 1fed 00000000 		.ascii	"\000\000\000\000\000\000\000\017\370\006\000\006\000"
 8449      0000000F 
 8449      F8060006 
 8449      00
 8450 1ffa 060003F8 		.ascii	"\006\000\003\370\000\000"
 8450      0000
 8451 2000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8451      00000000 
 8451      00000000 
 8451      00
 8452 200d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\370\000\030\017\370"
 8452      0000000F 
 8452      F800180F 
 8452      F8
 8453 201a 0C0007F8 		.ascii	"\014\000\007\370\000\000"
 8453      0000
 8454 2020 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8454      00000000 
 8454      00000000 
 8454      00
 8455 202d 00000000 		.ascii	"\000\000\000\000\000\000\000\037x\003\030\037\030\030"
 8455      0000001F 
 8455      7803181F 
 8455      1818
 8456 203b 180F1000 		.ascii	"\030\017\020\000\000"
 8456      00
 8457 2040 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8457      00000000 
 8457      00000000 
 8457      00
 8458 204d 00000000 		.ascii	"\000\000\000\000\000\000\000\037|\003l\037l\030l\017"
 8458      0000001F 
 8458      7C036C1F 
 8458      6C186C0F 
 8459 205d 7C0000   		.ascii	"|\000\000"
 8460 2060 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8460      00000000 
 8460      00000000 
 8460      00
 8461 206d 00000000 		.ascii	"\000\000\000\000\000\000\000\037l\003l\037|\030l\017"
 8461      0000001F 
 8461      6C036C1F 
 8461      7C186C0F 
 8462 207d 7C0000   		.ascii	"|\000\000"
 8463 2080 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8463      00000000 
 8463      00000000 
 8463      00
 8464 208d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\230\001\230\017\230"
 8464      0000000F 
 8464      9801980F 
 8464      98
 8465 209a 0C3C07A6 		.ascii	"\014<\007\246\000\000"
 8465      0000
 8466 20a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8466      00000000 
 8466      00000000 
 8466      00
 8467 20ad 00000000 		.ascii	"\000\000\000\000\000\000\000\037|\003`\037|\030`\017"
 8467      0000001F 
 8467      7C03601F 
 8467      7C18600F 
 8468 20bd 7C0000   		.ascii	"|\000\000"
 8469 20c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8469      00000000 
 8469      00000000 
 8469      00
 8470 20cd 00000000 		.ascii	"\000\000\000\000\000\000\000\036\376\003l\037l\030l"
 8470      0000001E 
 8470      FE036C1F 
 8470      6C186C
 8471 20dc 0EFE0000 		.ascii	"\016\376\000\000"
 8472 20e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8472      00000000 
 8472      00000000 
 8472      00
 8473 20ed 00000000 		.ascii	"\000\000\000\000\000\000\000\037\030\003~\037<\030f"
 8473      0000001F 
 8473      18037E1F 
 8473      3C1866
 8474 20fc 0F3C0000 		.ascii	"\017<\000\000"
 8475 2100 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8475      00000000 
 8475      00000000 
 8475      00
 8476 210d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\370\006\030\006\030"
 8476      0000000F 
 8476      F8061806 
 8476      18
 8477 211a 061807F8 		.ascii	"\006\030\007\370\000\000"
 8477      0000
 8478 2120 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8478      00000000 
 8478      00000000 
 8478      00
 8479 212d 00000000 		.ascii	"\000\000\000\000\000\000\000\0168\006\030\007\370\006"
 8479      0000000E 
 8479      38061807 
 8479      F806
 8480 213b 1807F800 		.ascii	"\030\007\370\000\000"
 8480      00
 8481 2140 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8481      00000000 
 8481      00000000 
 8481      00
 8482 214d 00000000 		.ascii	"\000\000\000\000\000\000\000\015\230\015\230\017\230"
 8482      0000000D 
 8482      980D980F 
 8482      98
 8483 215a 0DBE0FE6 		.ascii	"\015\276\017\346\000\000"
 8483      0000
 8484 2160 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8484      00000000 
 8484      00000000 
 8484      00
 8485 216d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\300\000\300\001\260"
 8485      00000000 
 8485      C000C001 
 8485      B0
 8486 217a 03180C0C 		.ascii	"\003\030\014\014\000\000"
 8486      0000
 8487 2180 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8487      00000000 
 8487      00000000 
 8487      00
 8488 218d 00000000 		.ascii	"\000\000\000\000\000\000\000\0030\0030\007\370\014\314"
 8488      00000003 
 8488      30033007 
 8488      F80CCC
 8489 219c 19860000 		.ascii	"\031\206\000\000"
 8490 21a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8490      00000000 
 8490      00000000 
 8490      00
 8491 21ad 00000000 		.ascii	"\000\000\000\000\000\000\000\003\360\006\030\006\030"
 8491      00000003 
 8491      F0061806 
 8491      18
 8492 21ba 061803F0 		.ascii	"\006\030\003\360\000\000"
 8492      0000
 8493 21c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8493      00000000 
 8493      00000000 
 8493      00
 8494 21cd 00000000 		.ascii	"\000\000\000\000\000\000\000\017\374\000\300\001\340"
 8494      0000000F 
 8494      FC00C001 
 8494      E0
 8495 21da 03300C0C 		.ascii	"\0030\014\014\000\000"
 8495      0000
 8496 21e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8496      00000000 
 8496      00000000 
 8496      00
 8497 21ed 00000000 		.ascii	"\000\000\000\000\000\000\000\000\300\017\374\001\340"
 8497      00000000 
 8497      C00FFC01 
 8497      E0
 8498 21fa 03300C0C 		.ascii	"\0030\014\014\000\000"
 8498      0000
 8499 2200 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8499      00000000 
 8499      00000000 
 8499      00
 8500 220d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\370\000\030\007\370"
 8500      00000007 
 8500      F8001807 
 8500      F8
 8501 221a 00180010 		.ascii	"\000\030\000\020\000\000"
 8501      0000
 8502 2220 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8502      00000000 
 8502      00000000 
 8502      00
 8503 222d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\370\006\000\007\370"
 8503      0000000F 
 8503      F8060007 
 8503      F8
 8504 223a 060003F8 		.ascii	"\006\000\003\370\000\000"
 8504      0000
 8505 2240 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8505      00000000 
 8505      00000000 
 8505      00
 8506 224d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\374\0030\0030\0030"
 8506      0000000F 
 8506      FC033003 
 8506      300330
 8507 225c 0FFC0000 		.ascii	"\017\374\000\000"
 8508 2260 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8508      00000000 
 8508      00000000 
 8508      00
 8509 226d 00000000 		.ascii	"\000\000\000\000\000\000\000\001\340\017\374\003\360"
 8509      00000001 
 8509      E00FFC03 
 8509      F0
 8510 227a 061803F0 		.ascii	"\006\030\003\360\000\000"
 8510      0000
 8511 2280 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8511      00000000 
 8511      00000000 
 8511      00
 8512 228d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8512      00000000 
 8512      00000000 
 8512      00
 8513 229a 00000000 		.ascii	"\000\000\000\000\000\000"
 8513      0000
 8514 22a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8514      00000000 
 8514      00000000 
 8514      00
 8515 22ad 00000000 		.ascii	"\000\000\000\000\000\000\000\007\374\000\014\000\014"
 8515      00000007 
 8515      FC000C00 
 8515      0C
 8516 22ba 000C0008 		.ascii	"\000\014\000\010\000\000"
 8516      0000
 8517 22c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8517      00000000 
 8517      00000000 
 8517      00
 8518 22cd 00000000 		.ascii	"\000\000\000\000\000\000\000\017\374\001\214\001\214"
 8518      0000000F 
 8518      FC018C01 
 8518      8C
 8519 22da 018C0108 		.ascii	"\001\214\001\010\000\000"
 8519      0000
 8520 22e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8520      00000000 
 8520      00000000 
 8520      00
 8521 22ed 00000000 		.ascii	"\000\000\000\000\000\000\000\0370\0030\0038\003l\002"
 8521      0000001F 
 8521      30033003 
 8521      38036C02 
 8522 22fd CC0000   		.ascii	"\314\000\000"
 8523 2300 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8523      00000000 
 8523      00000000 
 8523      00
 8524 230d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\000\003\000\003\000"
 8524      00000007 
 8524      00030003 
 8524      00
 8525 231a 030001FC 		.ascii	"\003\000\001\374\000\000"
 8525      0000
 8526 2320 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8526      00000000 
 8526      00000000 
 8526      00
 8527 232d 00000000 		.ascii	"\000\000\000\000\000\000\000\016~\006\030\006\030\006"
 8527      0000000E 
 8527      7E061806 
 8527      1806
 8528 233b 3C03E600 		.ascii	"<\003\346\000\000"
 8528      00
 8529 2340 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8529      00000000 
 8529      00000000 
 8529      00
 8530 234d 00000000 		.ascii	"\000\000\000\000\000\000\000\016\030\006~\006<\006f"
 8530      0000000E 
 8530      18067E06 
 8530      3C0666
 8531 235c 03BC0000 		.ascii	"\003\274\000\000"
 8532 2360 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8532      00000000 
 8532      00000000 
 8532      00
 8533 236d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\374\003\000\003\000"
 8533      00000007 
 8533      FC030003 
 8533      00
 8534 237a 030001FC 		.ascii	"\003\000\001\374\000\000"
 8534      0000
 8535 2380 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8535      00000000 
 8535      00000000 
 8535      00
 8536 238d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\374\000\014\007\374"
 8536      00000007 
 8536      FC000C07 
 8536      FC
 8537 239a 060003FC 		.ascii	"\006\000\003\374\000\000"
 8537      0000
 8538 23a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8538      00000000 
 8538      00000000 
 8538      00
 8539 23ad 00000000 		.ascii	"\000\000\000\000\000\000\000\017\274\001\214\017\214"
 8539      0000000F 
 8539      BC018C0F 
 8539      8C
 8540 23ba 0C0C0788 		.ascii	"\014\014\007\210\000\000"
 8540      0000
 8541 23c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8541      00000000 
 8541      00000000 
 8541      00
 8542 23cd 00000000 		.ascii	"\000\000\000\000\000\000\000\037|\003l\037l\030l\017"
 8542      0000001F 
 8542      7C036C1F 
 8542      6C186C0F 
 8543 23dd 7C0000   		.ascii	"|\000\000"
 8544 23e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8544      00000000 
 8544      00000000 
 8544      00
 8545 23ed 00000000 		.ascii	"\000\000\000\000\000\000\000\037l\003l\037|\030l\017"
 8545      0000001F 
 8545      6C036C1F 
 8545      7C186C0F 
 8546 23fd 7C0000   		.ascii	"|\000\000"
 8547 2400 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8547      00000000 
 8547      00000000 
 8547      00
 8548 240d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\230\001\230\017\230"
 8548      0000000F 
 8548      9801980F 
 8548      98
 8549 241a 0C3C07A6 		.ascii	"\014<\007\246\000\000"
 8549      0000
 8550 2420 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8550      00000000 
 8550      00000000 
 8550      00
 8551 242d 00000000 		.ascii	"\000\000\000\000\000\000\000\037|\003`\037|\030`\017"
 8551      0000001F 
 8551      7C03601F 
 8551      7C18600F 
 8552 243d 7C0000   		.ascii	"|\000\000"
 8553 2440 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8553      00000000 
 8553      00000000 
 8553      00
 8554 244d 00000000 		.ascii	"\000\000\000\000\000\000\000\036\376\003l\037l\030l"
 8554      0000001E 
 8554      FE036C1F 
 8554      6C186C
 8555 245c 0EFE0000 		.ascii	"\016\376\000\000"
 8556 2460 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8556      00000000 
 8556      00000000 
 8556      00
 8557 246d 00000000 		.ascii	"\000\000\000\000\000\000\000\037\030\003~\037<\030f"
 8557      0000001F 
 8557      18037E1F 
 8557      3C1866
 8558 247c 0F3C0000 		.ascii	"\017<\000\000"
 8559 2480 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8559      00000000 
 8559      00000000 
 8559      00
 8560 248d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\374\003\014\003\014"
 8560      00000007 
 8560      FC030C03 
 8560      0C
 8561 249a 030C03FC 		.ascii	"\003\014\003\374\000\000"
 8561      0000
 8562 24a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8562      00000000 
 8562      00000000 
 8562      00
 8563 24ad 00000000 		.ascii	"\000\000\000\000\000\000\000\007\034\003\014\003\374"
 8563      00000007 
 8563      1C030C03 
 8563      FC
 8564 24ba 030C03FC 		.ascii	"\003\014\003\374\000\000"
 8564      0000
 8565 24c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8565      00000000 
 8565      00000000 
 8565      00
 8566 24cd 00000000 		.ascii	"\000\000\000\000\000\000\000\015\230\015\230\017\230"
 8566      0000000D 
 8566      980D980F 
 8566      98
 8567 24da 0DBE0FE6 		.ascii	"\015\276\017\346\000\000"
 8567      0000
 8568 24e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8568      00000000 
 8568      00000000 
 8568      00
 8569 24ed 00000000 		.ascii	"\000\000\000\000\000\000\000\000\300\000\300\001\260"
 8569      00000000 
 8569      C000C001 
 8569      B0
 8570 24fa 03180C0C 		.ascii	"\003\030\014\014\000\000"
 8570      0000
 8571 2500 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8571      00000000 
 8571      00000000 
 8571      00
 8572 250d 00000000 		.ascii	"\000\000\000\000\000\000\000\001\230\001\230\003\374"
 8572      00000001 
 8572      98019803 
 8572      FC
 8573 251a 06660CC3 		.ascii	"\006f\014\303\000\000"
 8573      0000
 8574 2520 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8574      00000000 
 8574      00000000 
 8574      00
 8575 252d 00000000 		.ascii	"\000\000\000\000\000\000\000\001\370\003\014\003\014"
 8575      00000001 
 8575      F8030C03 
 8575      0C
 8576 253a 030C01F8 		.ascii	"\003\014\001\370\000\000"
 8576      0000
 8577 2540 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8577      00000000 
 8577      00000000 
 8577      00
 8578 254d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\374\000\300\001\340"
 8578      0000000F 
 8578      FC00C001 
 8578      E0
 8579 255a 03300C0C 		.ascii	"\0030\014\014\000\000"
 8579      0000
 8580 2560 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8580      00000000 
 8580      00000000 
 8580      00
 8581 256d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\300\017\374\001\340"
 8581      00000000 
 8581      C00FFC01 
 8581      E0
 8582 257a 03300C0C 		.ascii	"\0030\014\014\000\000"
 8582      0000
 8583 2580 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8583      00000000 
 8583      00000000 
 8583      00
 8584 258d 00000000 		.ascii	"\000\000\000\000\000\000\000\003\374\000\014\003\374"
 8584      00000003 
 8584      FC000C03 
 8584      FC
 8585 259a 000C0008 		.ascii	"\000\014\000\010\000\000"
 8585      0000
 8586 25a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8586      00000000 
 8586      00000000 
 8586      00
 8587 25ad 00000000 		.ascii	"\000\000\000\000\000\000\000\007\374\003\000\003\374"
 8587      00000007 
 8587      FC030003 
 8587      FC
 8588 25ba 030001FC 		.ascii	"\003\000\001\374\000\000"
 8588      0000
 8589 25c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8589      00000000 
 8589      00000000 
 8589      00
 8590 25cd 00000000 		.ascii	"\000\000\000\000\000\000\000\017\374\0030\0030\0030"
 8590      0000000F 
 8590      FC033003 
 8590      300330
 8591 25dc 0FFC0000 		.ascii	"\017\374\000\000"
 8592 25e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8592      00000000 
 8592      00000000 
 8592      00
 8593 25ed 00000000 		.ascii	"\000\000\000\000\000\000\000\000\360\007\376\001\370"
 8593      00000000 
 8593      F007FE01 
 8593      F8
 8594 25fa 030C01F8 		.ascii	"\003\014\001\370\000\000"
 8594      0000
 8595 2600 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8595      00000000 
 8595      00000000 
 8595      00
 8596 260d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8596      00000000 
 8596      00000000 
 8596      00
 8597 261a 00000000 		.ascii	"\000\000\000\000\000\000"
 8597      0000
 8598 2620 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8598      00000000 
 8598      00000000 
 8598      00
 8599 262d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\376\000\006\000\006"
 8599      00000007 
 8599      FE000600 
 8599      06
 8600 263a 00060004 		.ascii	"\000\006\000\004\000\000"
 8600      0000
 8601 2640 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8601      00000000 
 8601      00000000 
 8601      00
 8602 264d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\376\000\306\000\306"
 8602      0000000F 
 8602      FE00C600 
 8602      C6
 8603 265a 00C60084 		.ascii	"\000\306\000\204\000\000"
 8603      0000
 8604 2660 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8604      00000000 
 8604      00000000 
 8604      00
 8605 266d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\230\001\230\001\234"
 8605      0000000F 
 8605      98019801 
 8605      9C
 8606 267a 01B60166 		.ascii	"\001\266\001f\000\000"
 8606      0000
 8607 2680 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8607      00000000 
 8607      00000000 
 8607      00
 8608 268d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\000\003\000\003\000"
 8608      00000007 
 8608      00030003 
 8608      00
 8609 269a 030001FE 		.ascii	"\003\000\001\376\000\000"
 8609      0000
 8610 26a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8610      00000000 
 8610      00000000 
 8610      00
 8611 26ad 00000000 		.ascii	"\000\000\000\000\000\000\000\034~\014\030\014\030\014"
 8611      0000001C 
 8611      7E0C180C 
 8611      180C
 8612 26bb 3C076600 		.ascii	"<\007f\000\000"
 8612      00
 8613 26c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8613      00000000 
 8613      00000000 
 8613      00
 8614 26cd 00000000 		.ascii	"\000\000\000\000\000\000\000\034\030\014~\014<\014f"
 8614      0000001C 
 8614      180C7E0C 
 8614      3C0C66
 8615 26dc 07BC0000 		.ascii	"\007\274\000\000"
 8616 26e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8616      00000000 
 8616      00000000 
 8616      00
 8617 26ed 00000000 		.ascii	"\000\000\000\000\000\000\000\007\374\003\000\003\000"
 8617      00000007 
 8617      FC030003 
 8617      00
 8618 26fa 030001FC 		.ascii	"\003\000\001\374\000\000"
 8618      0000
 8619 2700 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8619      00000000 
 8619      00000000 
 8619      00
 8620 270d 00000000 		.ascii	"\000\000\000\000\000\000\000\003\376\000\006\003\376"
 8620      00000003 
 8620      FE000603 
 8620      FE
 8621 271a 030001FE 		.ascii	"\003\000\001\376\000\000"
 8621      0000
 8622 2720 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8622      00000000 
 8622      00000000 
 8622      00
 8623 272d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\336\000\306\007\306"
 8623      00000007 
 8623      DE00C607 
 8623      C6
 8624 273a 060603C4 		.ascii	"\006\006\003\304\000\000"
 8624      0000
 8625 2740 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8625      00000000 
 8625      00000000 
 8625      00
 8626 274d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\276\001\266\017\266"
 8626      0000000F 
 8626      BE01B60F 
 8626      B6
 8627 275a 0C3607BE 		.ascii	"\0146\007\276\000\000"
 8627      0000
 8628 2760 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8628      00000000 
 8628      00000000 
 8628      00
 8629 276d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\266\001\266\017\276"
 8629      0000000F 
 8629      B601B60F 
 8629      BE
 8630 277a 0C3607BE 		.ascii	"\0146\007\276\000\000"
 8630      0000
 8631 2780 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8631      00000000 
 8631      00000000 
 8631      00
 8632 278d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\314\000\314\007\314"
 8632      00000007 
 8632      CC00CC07 
 8632      CC
 8633 279a 061E03D3 		.ascii	"\006\036\003\323\000\000"
 8633      0000
 8634 27a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8634      00000000 
 8634      00000000 
 8634      00
 8635 27ad 00000000 		.ascii	"\000\000\000\000\000\000\000\017\276\001\260\017\276"
 8635      0000000F 
 8635      BE01B00F 
 8635      BE
 8636 27ba 0C3007BE 		.ascii	"\0140\007\276\000\000"
 8636      0000
 8637 27c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8637      00000000 
 8637      00000000 
 8637      00
 8638 27cd 00000000 		.ascii	"\000\000\000\000\000\000\000\036\376\003l\037l\030l"
 8638      0000001E 
 8638      FE036C1F 
 8638      6C186C
 8639 27dc 0EFE0000 		.ascii	"\016\376\000\000"
 8640 27e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8640      00000000 
 8640      00000000 
 8640      00
 8641 27ed 00000000 		.ascii	"\000\000\000\000\000\000\000\037\030\003~\037<\030f"
 8641      0000001F 
 8641      18037E1F 
 8641      3C1866
 8642 27fc 0F3C0000 		.ascii	"\017<\000\000"
 8643 2800 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8643      00000000 
 8643      00000000 
 8643      00
 8644 280d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\376\003\006\003\006"
 8644      00000007 
 8644      FE030603 
 8644      06
 8645 281a 030603FE 		.ascii	"\003\006\003\376\000\000"
 8645      0000
 8646 2820 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8646      00000000 
 8646      00000000 
 8646      00
 8647 282d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\016\003\006\003\376"
 8647      00000007 
 8647      0E030603 
 8647      FE
 8648 283a 030603FE 		.ascii	"\003\006\003\376\000\000"
 8648      0000
 8649 2840 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8649      00000000 
 8649      00000000 
 8649      00
 8650 284d 00000000 		.ascii	"\000\000\000\000\000\000\000\015\230\015\230\017\230"
 8650      0000000D 
 8650      980D980F 
 8650      98
 8651 285a 0DBE0FE6 		.ascii	"\015\276\017\346\000\000"
 8651      0000
 8652 2860 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8652      00000000 
 8652      00000000 
 8652      00
 8653 286d 00000000 		.ascii	"\000\000\000\000\000\000\000\000`\000`\000\330\001\214"
 8653      00000000 
 8653      60006000 
 8653      D8018C
 8654 287c 06060000 		.ascii	"\006\006\000\000"
 8655 2880 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8655      00000000 
 8655      00000000 
 8655      00
 8656 288d 00000000 		.ascii	"\000\000\000\000\000\000\000\001\230\001\230\003\374"
 8656      00000001 
 8656      98019803 
 8656      FC
 8657 289a 06660CC3 		.ascii	"\006f\014\303\000\000"
 8657      0000
 8658 28a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8658      00000000 
 8658      00000000 
 8658      00
 8659 28ad 00000000 		.ascii	"\000\000\000\000\000\000\000\000\374\001\206\001\206"
 8659      00000000 
 8659      FC018601 
 8659      86
 8660 28ba 018600FC 		.ascii	"\001\206\000\374\000\000"
 8660      0000
 8661 28c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8661      00000000 
 8661      00000000 
 8661      00
 8662 28cd 00000000 		.ascii	"\000\000\000\000\000\000\000\007\376\000`\000\360\001"
 8662      00000007 
 8662      FE006000 
 8662      F001
 8663 28db 98060600 		.ascii	"\230\006\006\000\000"
 8663      00
 8664 28e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8664      00000000 
 8664      00000000 
 8664      00
 8665 28ed 00000000 		.ascii	"\000\000\000\000\000\000\000\000`\007\376\000\360\001"
 8665      00000000 
 8665      6007FE00 
 8665      F001
 8666 28fb 98060600 		.ascii	"\230\006\006\000\000"
 8666      00
 8667 2900 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8667      00000000 
 8667      00000000 
 8667      00
 8668 290d 00000000 		.ascii	"\000\000\000\000\000\000\000\003\376\000\006\003\376"
 8668      00000003 
 8668      FE000603 
 8668      FE
 8669 291a 00060004 		.ascii	"\000\006\000\004\000\000"
 8669      0000
 8670 2920 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8670      00000000 
 8670      00000000 
 8670      00
 8671 292d 00000000 		.ascii	"\000\000\000\000\000\000\000\003\376\001\200\001\376"
 8671      00000003 
 8671      FE018001 
 8671      FE
 8672 293a 018000FE 		.ascii	"\001\200\000\376\000\000"
 8672      0000
 8673 2940 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8673      00000000 
 8673      00000000 
 8673      00
 8674 294d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\376\001\230\001\230"
 8674      00000007 
 8674      FE019801 
 8674      98
 8675 295a 019807FE 		.ascii	"\001\230\007\376\000\000"
 8675      0000
 8676 2960 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8676      00000000 
 8676      00000000 
 8676      00
 8677 296d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\360\007\376\001\370"
 8677      00000000 
 8677      F007FE01 
 8677      F8
 8678 297a 030C01F8 		.ascii	"\003\014\001\370\000\000"
 8678      0000
 8679 2980 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8679      00000000 
 8679      00000000 
 8679      00
 8680 298d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8680      00000000 
 8680      00000000 
 8680      00
 8681 299a 00000000 		.ascii	"\000\000\000\000\000\000"
 8681      0000
 8682 29a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8682      00000000 
 8682      00000000 
 8682      00
 8683 29ad 00000000 		.ascii	"\000\000\000\000\000\000\000\037\370\000\030\000\030"
 8683      0000001F 
 8683      F8001800 
 8683      18
 8684 29ba 00180010 		.ascii	"\000\030\000\020\000\000"
 8684      0000
 8685 29c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8685      00000000 
 8685      00000000 
 8685      00
 8686 29cd 00000000 		.ascii	"\000\000\000\000\000\000\000>\370\006\030\006\030\006"
 8686      0000003E 
 8686      F8061806 
 8686      1806
 8687 29db 18041000 		.ascii	"\030\004\020\000\000"
 8687      00
 8688 29e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8688      00000000 
 8688      00000000 
 8688      00
 8689 29ed 00000000 		.ascii	"\000\000\000\000\000\000\000\017\314\000\314\000\316"
 8689      0000000F 
 8689      CC00CC00 
 8689      CE
 8690 29fa 00DB00B3 		.ascii	"\000\333\000\263\000\000"
 8690      0000
 8691 2a00 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8691      00000000 
 8691      00000000 
 8691      00
 8692 2a0d 00000000 		.ascii	"\000\000\000\000\000\000\0008\000\030\000\030\000\030"
 8692      00000038 
 8692      00180018 
 8692      0018
 8693 2a1b 000FF800 		.ascii	"\000\017\370\000\000"
 8693      00
 8694 2a20 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8694      00000000 
 8694      00000000 
 8694      00
 8695 2a2d 00000000 		.ascii	"\000\000\000\000\000\000\0008\374\0300\0300\030x\016"
 8695      00000038 
 8695      FC183018 
 8695      3018780E 
 8696 2a3d CC0000   		.ascii	"\314\000\000"
 8697 2a40 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8697      00000000 
 8697      00000000 
 8697      00
 8698 2a4d 00000000 		.ascii	"\000\000\000\000\000\000\00080\030\374\030x\030\314"
 8698      00000038 
 8698      3018FC18 
 8698      7818CC
 8699 2a5c 0F780000 		.ascii	"\017x\000\000"
 8700 2a60 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8700      00000000 
 8700      00000000 
 8700      00
 8701 2a6d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000?\370\030\000\030"
 8701      00000000 
 8701      003FF818 
 8701      0018
 8702 2a7b 000FF800 		.ascii	"\000\017\370\000\000"
 8702      00
 8703 2a80 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8703      00000000 
 8703      00000000 
 8703      00
 8704 2a8d 00000000 		.ascii	"\000\000\000\000\000\000\000\037\370\000\030\037\370"
 8704      0000001F 
 8704      F800181F 
 8704      F8
 8705 2a9a 18000FF8 		.ascii	"\030\000\017\370\000\000"
 8705      0000
 8706 2aa0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8706      00000000 
 8706      00000000 
 8706      00
 8707 2aad 00000000 		.ascii	"\000\000\000\000\000\000\000\037|\003\014\037\014\030"
 8707      0000001F 
 8707      7C030C1F 
 8707      0C18
 8708 2abb 0C0F0800 		.ascii	"\014\017\010\000\000"
 8708      00
 8709 2ac0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8709      00000000 
 8709      00000000 
 8709      00
 8710 2acd 00000000 		.ascii	"\000\000\000\000\000\000\000>\374\006\314>\3140\314"
 8710      0000003E 
 8710      FC06CC3E 
 8710      CC30CC
 8711 2adc 1EFC0000 		.ascii	"\036\374\000\000"
 8712 2ae0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8712      00000000 
 8712      00000000 
 8712      00
 8713 2aed 00000000 		.ascii	"\000\000\000\000\000\000\000\037l\003l\037|\030l\017"
 8713      0000001F 
 8713      6C036C1F 
 8713      7C186C0F 
 8714 2afd 7C0000   		.ascii	"|\000\000"
 8715 2b00 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8715      00000000 
 8715      00000000 
 8715      00
 8716 2b0d 00000000 		.ascii	"\000\000\000\000\000\000\000\037\030\003\030\037\030"
 8716      0000001F 
 8716      1803181F 
 8716      18
 8717 2b1a 183C0F66 		.ascii	"\030<\017f\000\000"
 8717      0000
 8718 2b20 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8718      00000000 
 8718      00000000 
 8718      00
 8719 2b2d 00000000 		.ascii	"\000\000\000\000\000\000\000\037|\003`\037|\030`\017"
 8719      0000001F 
 8719      7C03601F 
 8719      7C18600F 
 8720 2b3d 7C0000   		.ascii	"|\000\000"
 8721 2b40 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8721      00000000 
 8721      00000000 
 8721      00
 8722 2b4d 00000000 		.ascii	"\000\000\000\000\000\000\000\036\376\003l\037l\030l"
 8722      0000001E 
 8722      FE036C1F 
 8722      6C186C
 8723 2b5c 0EFE0000 		.ascii	"\016\376\000\000"
 8724 2b60 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8724      00000000 
 8724      00000000 
 8724      00
 8725 2b6d 00000000 		.ascii	"\000\000\000\000\000\000\000>0\006\374>x0\314\036x\000"
 8725      0000003E 
 8725      3006FC3E 
 8725      7830CC1E 
 8725      7800
 8726 2b7f 00       		.ascii	"\000"
 8727 2b80 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8727      00000000 
 8727      00000000 
 8727      00
 8728 2b8d 00000000 		.ascii	"\000\000\000\000\000\000\000\037\370\014\030\014\030"
 8728      0000001F 
 8728      F80C180C 
 8728      18
 8729 2b9a 0C180FF8 		.ascii	"\014\030\017\370\000\000"
 8729      0000
 8730 2ba0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8730      00000000 
 8730      00000000 
 8730      00
 8731 2bad 00000000 		.ascii	"\000\000\000\000\000\000\00088\030\030\037\370\030\030"
 8731      00000038 
 8731      3818181F 
 8731      F81818
 8732 2bbc 1FF80000 		.ascii	"\037\370\000\000"
 8733 2bc0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8733      00000000 
 8733      00000000 
 8733      00
 8734 2bcd 00000000 		.ascii	"\000\000\000\000\000\000\000\0330\0330\0370\033|\037"
 8734      0000001B 
 8734      301B301F 
 8734      301B7C1F 
 8735 2bdd CC0000   		.ascii	"\314\000\000"
 8736 2be0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8736      00000000 
 8736      00000000 
 8736      00
 8737 2bed 00000000 		.ascii	"\000\000\000\000\000\000\000\001\200\001\200\003`\006"
 8737      00000001 
 8737      80018003 
 8737      6006
 8738 2bfb 30181800 		.ascii	"0\030\030\000\000"
 8738      00
 8739 2c00 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8739      00000000 
 8739      00000000 
 8739      00
 8740 2c0d 00000000 		.ascii	"\000\000\000\000\000\000\000\0140\0140\036x3\314a\206"
 8740      0000000C 
 8740      300C301E 
 8740      7833CC61 
 8740      86
 8741 2c1e 0000     		.ascii	"\000\000"
 8742 2c20 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8742      00000000 
 8742      00000000 
 8742      00
 8743 2c2d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\340\0140\0140\0140"
 8743      00000007 
 8743      E00C300C 
 8743      300C30
 8744 2c3c 07E00000 		.ascii	"\007\340\000\000"
 8745 2c40 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8745      00000000 
 8745      00000000 
 8745      00
 8746 2c4d 00000000 		.ascii	"\000\000\000\000\000\000\000\037\370\001\200\003\300"
 8746      0000001F 
 8746      F8018003 
 8746      C0
 8747 2c5a 06601818 		.ascii	"\006`\030\030\000\000"
 8747      0000
 8748 2c60 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8748      00000000 
 8748      00000000 
 8748      00
 8749 2c6d 00000000 		.ascii	"\000\000\000\000\000\000\000\001\200\037\370\003\300"
 8749      00000001 
 8749      801FF803 
 8749      C0
 8750 2c7a 06601818 		.ascii	"\006`\030\030\000\000"
 8750      0000
 8751 2c80 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8751      00000000 
 8751      00000000 
 8751      00
 8752 2c8d 00000000 		.ascii	"\000\000\000\000\000\000\000\037\370\000\030\037\370"
 8752      0000001F 
 8752      F800181F 
 8752      F8
 8753 2c9a 00180010 		.ascii	"\000\030\000\020\000\000"
 8753      0000
 8754 2ca0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8754      00000000 
 8754      00000000 
 8754      00
 8755 2cad 00000000 		.ascii	"\000\000\000\000\000\000\000\037\370\014\000\017\370"
 8755      0000001F 
 8755      F80C000F 
 8755      F8
 8756 2cba 0C0007F8 		.ascii	"\014\000\007\370\000\000"
 8756      0000
 8757 2cc0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8757      00000000 
 8757      00000000 
 8757      00
 8758 2ccd 00000000 		.ascii	"\000\000\000\000\000\000\000\037\370\006`\006`\006`"
 8758      0000001F 
 8758      F8066006 
 8758      600660
 8759 2cdc 1FF80000 		.ascii	"\037\370\000\000"
 8760 2ce0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8760      00000000 
 8760      00000000 
 8760      00
 8761 2ced 00000000 		.ascii	"\000\000\000\000\000\000\000\003\300\037\370\007\340"
 8761      00000003 
 8761      C01FF807 
 8761      E0
 8762 2cfa 0C3007E0 		.ascii	"\0140\007\340\000\000"
 8762      0000
 8763              		.section	.rodata.loc1,"a"
 8764              		.align	1
 8765              		.set	.LANCHOR6,. + 0
 8768              	loc1:
 8769 0000 0000     		.short	0
 8770 0002 1400     		.short	20
 8771 0004 2800     		.short	40
 8772 0006 3C00     		.short	60
 8773 0008 5000     		.short	80
 8774 000a 6400     		.short	100
 8775 000c 7800     		.short	120
 8776 000e 8C00     		.short	140
 8777              		.section	.rodata.loc2,"a"
 8778              		.align	1
 8779              		.set	.LANCHOR7,. + 0
 8782              	loc2:
 8783 0000 A000     		.short	160
 8784 0002 B600     		.short	182
 8785 0004 CC00     		.short	204
 8786 0006 E200     		.short	226
 8787              		.section	.rodata.loc3,"a"
 8788              		.align	1
 8789              		.set	.LANCHOR8,. + 0
 8792              	loc3:
 8793 0000 F800     		.short	248
 8794 0002 1401     		.short	276
 8795 0004 3001     		.short	304
 8796 0006 4C01     		.short	332
 8797              		.section	.rodata.s_bit,"a"
 8798              		.set	.LANCHOR0,. + 0
 8801              	s_bit:
 8802 0000 80402010 		.ascii	"\200@ \020\010\004\002\001"
 8802      08040201 
 8803              		.text
 8804              	.Letext0:
 8805              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eabi
 8806              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 8807              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 8808              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 8809              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eabi
 8810              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 8811              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 8812              		.file 9 "c:\\project\\stm32fx_lib\\stm32f1x_iolib\\include\\core.h"
 8813              		.file 10 "/project/stm32fx_lib/stm32f1x_iolib/include/cmsis/stm32f1xx.h"
 8814              		.file 11 "/project/stm32fx_lib/stm32f1x_iolib/include/gpio.h"
 8815              		.file 12 "font.h"
 8816              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 8817              		.file 14 "userdefs.h"
 8818              		.file 15 "/project/stm32fx_lib/stm32f1x_iolib/include/fundefs.h"
 8819              		.file 16 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 lcd.c
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:16     .text.lcd_data_port_input:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:24     .text.lcd_data_port_input:00000000 lcd_data_port_input
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:49     .text.lcd_data_port_input:00000014 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:54     .text.lcd_data_port_output:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:61     .text.lcd_data_port_output:00000000 lcd_data_port_output
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:85     .text.lcd_data_port_output:00000014 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:90     .text.lcd_data_write:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:97     .text.lcd_data_write:00000000 lcd_data_write
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:114    .text.lcd_data_write:00000008 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:119    .text.lcd_data_read:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:126    .text.lcd_data_read:00000000 lcd_data_read
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:143    .text.lcd_data_read:00000008 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:148    .text.lcd_cs_hi:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:155    .text.lcd_cs_hi:00000000 lcd_cs_hi
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:170    .text.lcd_cs_hi:0000000c $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:175    .text.lcd_cs_lo:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:182    .text.lcd_cs_lo:00000000 lcd_cs_lo
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:197    .text.lcd_cs_lo:0000000c $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:202    .text.lcd_rs_hi:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:209    .text.lcd_rs_hi:00000000 lcd_rs_hi
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:224    .text.lcd_rs_hi:0000000c $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:229    .text.lcd_rs_lo:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:236    .text.lcd_rs_lo:00000000 lcd_rs_lo
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:251    .text.lcd_rs_lo:0000000c $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:256    .text.lcd_wr_hi:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:263    .text.lcd_wr_hi:00000000 lcd_wr_hi
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:278    .text.lcd_wr_hi:0000000c $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:283    .text.lcd_wr_lo:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:290    .text.lcd_wr_lo:00000000 lcd_wr_lo
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:305    .text.lcd_wr_lo:0000000c $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:310    .text.lcd_rd_hi:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:317    .text.lcd_rd_hi:00000000 lcd_rd_hi
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:332    .text.lcd_rd_hi:0000000c $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:337    .text.lcd_rd_lo:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:344    .text.lcd_rd_lo:00000000 lcd_rd_lo
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:359    .text.lcd_rd_lo:0000000c $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:364    .text.lcd_wr_data:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:371    .text.lcd_wr_data:00000000 lcd_wr_data
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:423    .text.lcd_wr_data:00000020 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:428    .text.lcd_wr_register:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:435    .text.lcd_wr_register:00000000 lcd_wr_register
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:487    .text.lcd_wr_register:00000020 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:492    .text.lcd_write_register:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:499    .text.lcd_write_register:00000000 lcd_write_register
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:531    .text.lcd_read_register:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:538    .text.lcd_read_register:00000000 lcd_read_register
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:598    .text.lcd_read_register:0000002c $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:603    .text.lcd_read_data:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:610    .text.lcd_read_data:00000000 lcd_read_data
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:666    .text.lcd_read_data:00000028 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:671    .text.lcd_write_ram_prepare:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:678    .text.lcd_write_ram_prepare:00000000 lcd_write_ram_prepare
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:693    .text.lcd_write_ram:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:700    .text.lcd_write_ram:00000000 lcd_write_ram
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:716    .text.lcd_bgr_to_rgb:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:723    .text.lcd_bgr_to_rgb:00000000 lcd_bgr_to_rgb
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:753    .text.lcd_get_pixel:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:760    .text.lcd_get_pixel:00000000 lcd_get_pixel
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:840    .text.lcd_get_pixel:00000040 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:845    .text.lcd_display_on:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:852    .text.lcd_display_on:00000000 lcd_display_on
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:868    .text.lcd_display_off:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:875    .text.lcd_display_off:00000000 lcd_display_off
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:891    .text.lcd_delay:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:898    .text.lcd_delay:00000000 lcd_delay
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:914    .text.lcd_window_max:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:921    .text.lcd_window_max:00000000 lcd_window_max
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:1011   .text.lcd_window_max:0000005c $d
                            *COM*:00000002 device_code
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:1016   .text.lcd_set_pixel:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:1023   .text.lcd_set_pixel:00000000 lcd_set_pixel
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:1057   .text.lcd_set_pixel:00000018 $d
                            *COM*:00000002 foreground_color
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:1062   .text.lcd_clear:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:1069   .text.lcd_clear:00000000 lcd_clear
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:1119   .text.lcd_init:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:1126   .text.lcd_init:00000000 lcd_init
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:1746   .text.lcd_init:00000380 $d
                            *COM*:00000002 maxx
                            *COM*:00000002 maxy
                            *COM*:00000002 ax
                            *COM*:00000002 ay
                            *COM*:00000002 page
                            *COM*:00000002 eng_mode
                            *COM*:00000001 hangul_mode
                            *COM*:00000002 max_col
                            *COM*:00000002 max_row
                            *COM*:00000002 background_color
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:1763   .text.lcd_init:000003b8 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:2766   .text.lcd_fill:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:2773   .text.lcd_fill:00000000 lcd_fill
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:2890   .text.lcd_draw_line:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:2897   .text.lcd_draw_line:00000000 lcd_draw_line
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3097   .text.lcd_draw_rectangle:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3104   .text.lcd_draw_rectangle:00000000 lcd_draw_rectangle
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3167   .text.lcd_draw_circle:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3174   .text.lcd_draw_circle:00000000 lcd_draw_circle
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3345   .text.set_color:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3352   .text.set_color:00000000 set_color
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3369   .text.set_color:00000008 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3374   .text.set_background_color:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3381   .text.set_background_color:00000000 set_background_color
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3398   .text.set_background_color:00000008 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3403   .text.set_pixel:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3410   .text.set_pixel:00000000 set_pixel
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3449   .text.set_pixel:00000014 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3454   .text.out_lcd:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3461   .text.out_lcd:00000000 out_lcd
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3531   .text.out_lcd:00000040 $d
                            *COM*:00000002 tx
                            *COM*:00000002 ty
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3540   .text.uni_to_kssm2:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3547   .text.uni_to_kssm2:00000000 uni_to_kssm2
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3616   .text.uni_to_kssm2:00000044 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3623   .text.uni_to_kssm:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3630   .text.uni_to_kssm:00000000 uni_to_kssm
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3753   .text.ks5601_to_kssm:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3760   .text.ks5601_to_kssm:00000000 ks5601_to_kssm
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3826   .text.ks5601_to_kssm:00000038 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:5012   .rodata.KS_CODE:00000000 KS_CODE
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3831   .text.put_eng:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:3838   .text.put_eng:00000000 put_eng
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4045   .text.put_eng:000000d0 $d
                            *COM*:00000020 dumy_data
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4062   .text.put_han:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4069   .text.put_han:00000000 put_han
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4137   .text.put_han:00000034 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4158   .text.put_han:00000048 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4192   .text.put_han:00000070 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4214   .text.put_han:0000009a $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4539   .text.put_han:0000020c $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4561   .text.put_han:00000260 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4574   .text.put_han:0000026c $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:7702   .rodata.kor_font:00000000 kor_font
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4592   .text.put_engxy:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4599   .text.put_engxy:00000000 put_engxy
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4626   .text.put_engxy:00000010 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4632   .text.put_hanxy:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4639   .text.put_hanxy:00000000 put_hanxy
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4700   .text.put_hanxy:00000030 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4706   .text.lput_char:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4713   .text.lput_char:00000000 lput_char
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4796   .text.lput_char_xy:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4803   .text.lput_char_xy:00000000 lput_char_xy
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4898   .text.lput_char_xy:00000044 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4904   .text.lcd_printf:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4911   .text.lcd_printf:00000000 lcd_printf
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:4976   .text.lcd_printf:00000030 $d
                            *COM*:00000100 buff
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:7643   .rodata.hangul_jongsung_tbl:00000000 hangul_jongsung_tbl
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:7677   .rodata.hangul_jungsung_tbl:00000000 hangul_jungsung_tbl
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:7618   .rodata.hangul_chosung_tbl:00000000 hangul_chosung_tbl
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:8792   .rodata.loc3:00000000 loc3
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:8782   .rodata.loc2:00000000 loc2
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:8768   .rodata.loc1:00000000 loc1
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:7603   .rodata.han_tbl:00000000 han_tbl
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:8801   .rodata.s_bit:00000000 s_bit
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:7417   .rodata.eng_font:00000000 eng_font
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:7614   .rodata.hangul_chosung_tbl:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:7639   .rodata.hangul_jongsung_tbl:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:7673   .rodata.hangul_jungsung_tbl:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:8764   .rodata.loc1:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:8778   .rodata.loc2:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccHfpFxY.s:8788   .rodata.loc3:00000000 $d

UNDEFINED SYMBOLS
GPIO_SetBits
GPIO_ResetBits
lcd_set_cursor
wait_ms
GPIO_Init_Pin
strlen
vsprintf
