   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"lcd.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.lcd_data_port_input,"ax",%progbits
  16              		.align	1
  17              		.global	lcd_data_port_input
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	lcd_data_port_input:
  25              	.LFB32:
  26              		.file 1 "lcd.c"
   1:lcd.c         **** /********************************************************************************/
   2:lcd.c         **** /* lcd.c                                                                        */
   3:lcd.c         **** /* STM32F103VET6                                                                */
   4:lcd.c         **** /* (Lee ChangWoo HL2IRW  hl2irw@kpu.ac.kr 011-726-6860)                 	*/
   5:lcd.c         **** /* stm32f103ve_mp3								*/
   6:lcd.c         **** /********************************************************************************/
   7:lcd.c         **** #include <stdint.h>
   8:lcd.c         **** #include <stdio.h>
   9:lcd.c         **** #include <stdarg.h>
  10:lcd.c         **** #include <stdlib.h>
  11:lcd.c         **** #include <string.h>
  12:lcd.c         **** #include "hwdefs.h"
  13:lcd.c         **** #include "color.h"
  14:lcd.c         **** #include "font.h"
  15:lcd.c         **** 
  16:lcd.c         **** 
  17:lcd.c         **** //#define  ILI9320    0  /* 0x9320 */
  18:lcd.c         **** //#define  ILI9325    1  /* 0x9325 */
  19:lcd.c         **** //#define  ILI9328    2  /* 0x9328 */
  20:lcd.c         **** //#define  ILI9331    3  /* 0x9331 */
  21:lcd.c         **** //#define  SSD1298    4  /* 0x8999 */
  22:lcd.c         **** //#define  SSD1289    5  /* 0x8989 */
  23:lcd.c         **** //#define  ST7781     6  /* 0x7783 */
  24:lcd.c         **** //#define  LGDP4531   7  /* 0x4531 */
  25:lcd.c         **** //#define  SPFD5408B  8  /* 0x5408 */
  26:lcd.c         **** //#define  R61505U    9  /* 0x1505 0x0505 */
  27:lcd.c         **** //#define  HX8347D    10 /* 0x0047 */
  28:lcd.c         **** //#define  HX8347A    11 /* 0x0047 */
  29:lcd.c         **** //#define  LGDP4535   12 /* 0x4535 */
  30:lcd.c         **** //#define  SSD2119    13 /* 3.5 LCD 0x9919 */
  31:lcd.c         **** 
  32:lcd.c         **** 
  33:lcd.c         **** #define LCD_DATA_PORT		GPIOE
  34:lcd.c         **** #define LCD_CTL_PORT		GPIOD
  35:lcd.c         **** 
  36:lcd.c         **** #define LCD_DATA0		GPIO_Pin_0
  37:lcd.c         **** #define LCD_DATA1		GPIO_Pin_1
  38:lcd.c         **** #define LCD_DATA2		GPIO_Pin_2
  39:lcd.c         **** #define LCD_DATA3		GPIO_Pin_3
  40:lcd.c         **** #define LCD_DATA4		GPIO_Pin_4
  41:lcd.c         **** #define LCD_DATA5		GPIO_Pin_5
  42:lcd.c         **** #define LCD_DATA6		GPIO_Pin_6
  43:lcd.c         **** #define LCD_DATA7		GPIO_Pin_7
  44:lcd.c         **** #define LCD_DATA8		GPIO_Pin_8
  45:lcd.c         **** #define LCD_DATA9		GPIO_Pin_9
  46:lcd.c         **** #define LCD_DATA10		GPIO_Pin_10
  47:lcd.c         **** #define LCD_DATA11		GPIO_Pin_11
  48:lcd.c         **** #define LCD_DATA12		GPIO_Pin_12
  49:lcd.c         **** #define LCD_DATA13		GPIO_Pin_13
  50:lcd.c         **** #define LCD_DATA14		GPIO_Pin_14
  51:lcd.c         **** #define LCD_DATA15		GPIO_Pin_15
  52:lcd.c         **** 
  53:lcd.c         **** #define LCD_CS			GPIO_Pin_12
  54:lcd.c         **** #define LCD_RS			GPIO_Pin_13
  55:lcd.c         **** #define LCD_WR			GPIO_Pin_14
  56:lcd.c         **** #define LCD_RD			GPIO_Pin_15
  57:lcd.c         **** 
  58:lcd.c         **** #define R0			0x00
  59:lcd.c         **** #define R1			0x01
  60:lcd.c         **** #define R2			0x02
  61:lcd.c         **** #define R3			0x03
  62:lcd.c         **** #define R4			0x04
  63:lcd.c         **** #define R5			0x05
  64:lcd.c         **** #define R6			0x06
  65:lcd.c         **** #define R7			0x07
  66:lcd.c         **** #define R8			0x08
  67:lcd.c         **** #define R9			0x09
  68:lcd.c         **** #define R10			0x0A
  69:lcd.c         **** #define R12			0x0C
  70:lcd.c         **** #define R13			0x0D
  71:lcd.c         **** #define R14			0x0E
  72:lcd.c         **** #define R15			0x0F
  73:lcd.c         **** #define R16			0x10
  74:lcd.c         **** #define R17			0x11
  75:lcd.c         **** #define R18			0x12
  76:lcd.c         **** #define R19			0x13
  77:lcd.c         **** #define R20			0x14
  78:lcd.c         **** #define R21			0x15
  79:lcd.c         **** #define R22			0x16
  80:lcd.c         **** #define R23			0x17
  81:lcd.c         **** #define R24			0x18
  82:lcd.c         **** #define R25			0x19
  83:lcd.c         **** #define R26			0x1A
  84:lcd.c         **** #define R27			0x1B
  85:lcd.c         **** #define R28			0x1C
  86:lcd.c         **** #define R29			0x1D
  87:lcd.c         **** #define R30			0x1E
  88:lcd.c         **** #define R31			0x1F
  89:lcd.c         **** #define R32			0x20
  90:lcd.c         **** #define R33			0x21
  91:lcd.c         **** #define R34			0x22
  92:lcd.c         **** #define R36			0x24
  93:lcd.c         **** #define R37			0x25
  94:lcd.c         **** #define R40			0x28
  95:lcd.c         **** #define R41			0x29
  96:lcd.c         **** #define R43			0x2B
  97:lcd.c         **** #define R45			0x2D
  98:lcd.c         **** #define R48			0x30
  99:lcd.c         **** #define R49			0x31
 100:lcd.c         **** #define R50			0x32
 101:lcd.c         **** #define R51			0x33
 102:lcd.c         **** #define R52			0x34
 103:lcd.c         **** #define R53			0x35
 104:lcd.c         **** #define R54			0x36
 105:lcd.c         **** #define R55			0x37
 106:lcd.c         **** #define R56			0x38
 107:lcd.c         **** #define R57			0x39
 108:lcd.c         **** #define R59			0x3B
 109:lcd.c         **** #define R60			0x3C
 110:lcd.c         **** #define R61			0x3D
 111:lcd.c         **** #define R62			0x3E
 112:lcd.c         **** #define R63			0x3F
 113:lcd.c         **** #define R64			0x40
 114:lcd.c         **** #define R65			0x41
 115:lcd.c         **** #define R66			0x42
 116:lcd.c         **** #define R67			0x43
 117:lcd.c         **** #define R68			0x44
 118:lcd.c         **** #define R69			0x45
 119:lcd.c         **** #define R70			0x46
 120:lcd.c         **** #define R71			0x47
 121:lcd.c         **** #define R72			0x48
 122:lcd.c         **** #define R73			0x49
 123:lcd.c         **** #define R74			0x4A
 124:lcd.c         **** #define R75			0x4B
 125:lcd.c         **** #define R76			0x4C
 126:lcd.c         **** #define R77			0x4D
 127:lcd.c         **** #define R78			0x4E
 128:lcd.c         **** #define R79			0x4F
 129:lcd.c         **** #define R80			0x50
 130:lcd.c         **** #define R81			0x51
 131:lcd.c         **** #define R82			0x52
 132:lcd.c         **** #define R83			0x53
 133:lcd.c         **** #define R96			0x60
 134:lcd.c         **** #define R97			0x61
 135:lcd.c         **** #define R106			0x6A
 136:lcd.c         **** #define R118			0x76
 137:lcd.c         **** #define R128			0x80
 138:lcd.c         **** #define R129			0x81
 139:lcd.c         **** #define R130			0x82
 140:lcd.c         **** #define R131			0x83
 141:lcd.c         **** #define R132			0x84
 142:lcd.c         **** #define R133			0x85
 143:lcd.c         **** #define R134			0x86
 144:lcd.c         **** #define R135			0x87
 145:lcd.c         **** #define R136			0x88
 146:lcd.c         **** #define R137			0x89
 147:lcd.c         **** #define R139			0x8B
 148:lcd.c         **** #define R140			0x8C
 149:lcd.c         **** #define R141			0x8D
 150:lcd.c         **** #define R143			0x8F
 151:lcd.c         **** #define R144			0x90
 152:lcd.c         **** #define R145			0x91
 153:lcd.c         **** #define R146			0x92
 154:lcd.c         **** #define R147			0x93
 155:lcd.c         **** #define R148			0x94
 156:lcd.c         **** #define R149			0x95
 157:lcd.c         **** #define R150			0x96
 158:lcd.c         **** #define R151			0x97
 159:lcd.c         **** #define R152			0x98
 160:lcd.c         **** #define R153			0x99
 161:lcd.c         **** #define R154			0x9A
 162:lcd.c         **** #define R157			0x9D
 163:lcd.c         **** #define R192			0xC0
 164:lcd.c         **** #define R193			0xC1
 165:lcd.c         **** #define R229			0xE5
 166:lcd.c         **** 
 167:lcd.c         **** unsigned short foreground_color,background_color,device_code,maxx,maxy,ax,ay,max_col,max_row,tx,ty,
 168:lcd.c         **** char buff[256],dumy_data[32];
 169:lcd.c         **** const unsigned char s_bit[8] = {0x80,0x40,0x20,0x10,8,4,2,1};
 170:lcd.c         **** volatile unsigned char hangul_mode;
 171:lcd.c         **** 
 172:lcd.c         **** 
 173:lcd.c         **** const unsigned char han_tbl [3][32] = {  // 3 * 32
 174:lcd.c         ****         {0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17,18,19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 175:lcd.c         ****         {0, 0, 0, 1, 2, 3, 4, 5, 0, 0, 6, 7, 8, 9,10,11, 0, 0,12,13,14,15,16,17, 0, 0,18,19,20,21, 
 176:lcd.c         ****         {0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16, 0,17,18,19,20,21,22,23,24,25,26,27, 
 177:lcd.c         **** const unsigned short loc1[8] = {0,20,40,60,80,100,120,140};
 178:lcd.c         **** const unsigned short loc2[4] = {160,182,204,226};
 179:lcd.c         **** const unsigned short loc3[4] = {248,276,304,332};
 180:lcd.c         **** 
 181:lcd.c         **** const unsigned short hangul_chosung_tbl [19] = {
 182:lcd.c         ****       0x8800, 0x8C00, 0X9000, 0x9400, 0x9800, 0x9C00, 0xA000, 0xA400,
 183:lcd.c         ****       0xA800, 0xAC00, 0xB000, 0xB400, 0xB800, 0xBC00, 0xC000, 0xC400,
 184:lcd.c         ****       0xC800, 0xCC00, 0xD000};
 185:lcd.c         **** 
 186:lcd.c         **** const unsigned short hangul_jungsung_tbl [21] = {
 187:lcd.c         ****       0x8060, 0x8080, 0X80A0, 0x80C0, 0x80E0, 0x8140, 0x8160, 0x8180,
 188:lcd.c         ****       0x81A0, 0x81C0, 0x81E0, 0x8240, 0x8260, 0x8280, 0x82A0, 0x82C0,
 189:lcd.c         ****       0x82E0, 0x8340, 0x8360, 0x8380, 0x83A0};
 190:lcd.c         **** 
 191:lcd.c         **** const unsigned short hangul_jongsung_tbl[28] = {
 192:lcd.c         ****       0x8001, 0x8002, 0x8003, 0x8004, 0x8005, 0x8006, 0x8007, 0x8008,
 193:lcd.c         ****       0x8009, 0x800A, 0x800B, 0x800C, 0x800D, 0x800E, 0x800F, 0x8010,
 194:lcd.c         ****       0x8011, 0x8013, 0x8014, 0x8015, 0x8016, 0x8017, 0x8018, 0x8019,
 195:lcd.c         ****       0x801A, 0x801B, 0x801C, 0x801D};
 196:lcd.c         **** 
 197:lcd.c         **** 
 198:lcd.c         **** 
 199:lcd.c         **** void lcd_data_port_input (void)
 200:lcd.c         **** {
  27              		.loc 1 200 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 201:lcd.c         ****       LCD_DATA_PORT->CRL = 0X88888888;
  32              		.loc 1 201 7 view .LVU1
  33              		.loc 1 201 26 is_stmt 0 view .LVU2
  34 0000 4FF08832 		mov	r2, #-2004318072
  35 0004 034B     		ldr	r3, .L2
  36 0006 1A60     		str	r2, [r3]
 202:lcd.c         ****       LCD_DATA_PORT->CRH = 0X88888888;
  37              		.loc 1 202 7 is_stmt 1 view .LVU3
  38              		.loc 1 202 26 is_stmt 0 view .LVU4
  39 0008 5A60     		str	r2, [r3, #4]
 203:lcd.c         ****       LCD_DATA_PORT->ODR = 0XFFFF;
  40              		.loc 1 203 7 is_stmt 1 view .LVU5
  41              		.loc 1 203 26 is_stmt 0 view .LVU6
  42 000a 4FF6FF72 		movw	r2, #65535
  43 000e DA60     		str	r2, [r3, #12]
 204:lcd.c         **** }
  44              		.loc 1 204 1 view .LVU7
  45 0010 7047     		bx	lr
  46              	.L3:
  47 0012 00BF     		.align	2
  48              	.L2:
  49 0014 00180140 		.word	1073813504
  50              		.cfi_endproc
  51              	.LFE32:
  53              		.section	.text.lcd_data_port_output,"ax",%progbits
  54              		.align	1
  55              		.global	lcd_data_port_output
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu softvfp
  61              	lcd_data_port_output:
  62              	.LFB33:
 205:lcd.c         **** 
 206:lcd.c         **** 
 207:lcd.c         **** void lcd_data_port_output (void)
 208:lcd.c         **** {
  63              		.loc 1 208 1 is_stmt 1 view -0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
 209:lcd.c         ****       LCD_DATA_PORT->CRL = 0X33333333;
  68              		.loc 1 209 7 view .LVU9
  69              		.loc 1 209 26 is_stmt 0 view .LVU10
  70 0000 4FF03332 		mov	r2, #858993459
  71 0004 034B     		ldr	r3, .L5
  72 0006 1A60     		str	r2, [r3]
 210:lcd.c         ****       LCD_DATA_PORT->CRH = 0X33333333;
  73              		.loc 1 210 7 is_stmt 1 view .LVU11
  74              		.loc 1 210 26 is_stmt 0 view .LVU12
  75 0008 5A60     		str	r2, [r3, #4]
 211:lcd.c         ****       LCD_DATA_PORT->ODR = 0XFFFF;
  76              		.loc 1 211 7 is_stmt 1 view .LVU13
  77              		.loc 1 211 26 is_stmt 0 view .LVU14
  78 000a 4FF6FF72 		movw	r2, #65535
  79 000e DA60     		str	r2, [r3, #12]
 212:lcd.c         **** }
  80              		.loc 1 212 1 view .LVU15
  81 0010 7047     		bx	lr
  82              	.L6:
  83 0012 00BF     		.align	2
  84              	.L5:
  85 0014 00180140 		.word	1073813504
  86              		.cfi_endproc
  87              	.LFE33:
  89              		.section	.text.lcd_data_write,"ax",%progbits
  90              		.align	1
  91              		.global	lcd_data_write
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu softvfp
  97              	lcd_data_write:
  98              	.LVL0:
  99              	.LFB34:
 213:lcd.c         **** 
 214:lcd.c         **** 
 215:lcd.c         **** void lcd_data_write (unsigned short value)
 216:lcd.c         **** {
 100              		.loc 1 216 1 is_stmt 1 view -0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 217:lcd.c         ****       LCD_DATA_PORT->ODR = value;
 105              		.loc 1 217 7 view .LVU17
 106              		.loc 1 217 26 is_stmt 0 view .LVU18
 107 0000 014B     		ldr	r3, .L8
 108 0002 D860     		str	r0, [r3, #12]
 218:lcd.c         **** }
 109              		.loc 1 218 1 view .LVU19
 110 0004 7047     		bx	lr
 111              	.L9:
 112 0006 00BF     		.align	2
 113              	.L8:
 114 0008 00180140 		.word	1073813504
 115              		.cfi_endproc
 116              	.LFE34:
 118              		.section	.text.lcd_data_read,"ax",%progbits
 119              		.align	1
 120              		.global	lcd_data_read
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu softvfp
 126              	lcd_data_read:
 127              	.LFB35:
 219:lcd.c         **** 
 220:lcd.c         **** 
 221:lcd.c         **** unsigned short lcd_data_read (void)
 222:lcd.c         **** {
 128              		.loc 1 222 1 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 223:lcd.c         ****       return (LCD_DATA_PORT->IDR);
 133              		.loc 1 223 7 view .LVU21
 134              		.loc 1 223 28 is_stmt 0 view .LVU22
 135 0000 014B     		ldr	r3, .L11
 136 0002 9868     		ldr	r0, [r3, #8]
 224:lcd.c         **** }
 137              		.loc 1 224 1 view .LVU23
 138 0004 80B2     		uxth	r0, r0
 139 0006 7047     		bx	lr
 140              	.L12:
 141              		.align	2
 142              	.L11:
 143 0008 00180140 		.word	1073813504
 144              		.cfi_endproc
 145              	.LFE35:
 147              		.section	.text.lcd_cs_hi,"ax",%progbits
 148              		.align	1
 149              		.global	lcd_cs_hi
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 153              		.fpu softvfp
 155              	lcd_cs_hi:
 156              	.LFB36:
 225:lcd.c         **** 
 226:lcd.c         **** 
 227:lcd.c         **** void lcd_cs_hi (void)
 228:lcd.c         **** {
 157              		.loc 1 228 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 229:lcd.c         ****       GPIO_SetBits(LCD_CTL_PORT,LCD_CS);
 162              		.loc 1 229 7 view .LVU25
 163 0000 4FF48051 		mov	r1, #4096
 164 0004 0148     		ldr	r0, .L14
 165 0006 FFF7FEBF 		b	GPIO_SetBits
 166              	.LVL1:
 167              	.L15:
 168 000a 00BF     		.align	2
 169              	.L14:
 170 000c 00140140 		.word	1073812480
 171              		.cfi_endproc
 172              	.LFE36:
 174              		.section	.text.lcd_cs_lo,"ax",%progbits
 175              		.align	1
 176              		.global	lcd_cs_lo
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu softvfp
 182              	lcd_cs_lo:
 183              	.LFB37:
 230:lcd.c         **** }
 231:lcd.c         **** 
 232:lcd.c         **** 
 233:lcd.c         **** void lcd_cs_lo (void)
 234:lcd.c         **** {
 184              		.loc 1 234 1 view -0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 235:lcd.c         ****       GPIO_ResetBits(LCD_CTL_PORT,LCD_CS);
 189              		.loc 1 235 7 view .LVU27
 190 0000 4FF48051 		mov	r1, #4096
 191 0004 0148     		ldr	r0, .L17
 192 0006 FFF7FEBF 		b	GPIO_ResetBits
 193              	.LVL2:
 194              	.L18:
 195 000a 00BF     		.align	2
 196              	.L17:
 197 000c 00140140 		.word	1073812480
 198              		.cfi_endproc
 199              	.LFE37:
 201              		.section	.text.lcd_rs_hi,"ax",%progbits
 202              		.align	1
 203              		.global	lcd_rs_hi
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu softvfp
 209              	lcd_rs_hi:
 210              	.LFB38:
 236:lcd.c         **** }
 237:lcd.c         **** 
 238:lcd.c         **** 
 239:lcd.c         **** void lcd_rs_hi (void)
 240:lcd.c         **** {
 211              		.loc 1 240 1 view -0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              		@ link register save eliminated.
 241:lcd.c         ****       GPIO_SetBits(LCD_CTL_PORT,LCD_RS);
 216              		.loc 1 241 7 view .LVU29
 217 0000 4FF40051 		mov	r1, #8192
 218 0004 0148     		ldr	r0, .L20
 219 0006 FFF7FEBF 		b	GPIO_SetBits
 220              	.LVL3:
 221              	.L21:
 222 000a 00BF     		.align	2
 223              	.L20:
 224 000c 00140140 		.word	1073812480
 225              		.cfi_endproc
 226              	.LFE38:
 228              		.section	.text.lcd_rs_lo,"ax",%progbits
 229              		.align	1
 230              		.global	lcd_rs_lo
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 234              		.fpu softvfp
 236              	lcd_rs_lo:
 237              	.LFB39:
 242:lcd.c         **** }
 243:lcd.c         **** 
 244:lcd.c         **** 
 245:lcd.c         **** void lcd_rs_lo (void)
 246:lcd.c         **** {
 238              		.loc 1 246 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 247:lcd.c         ****       GPIO_ResetBits(LCD_CTL_PORT,LCD_RS);
 243              		.loc 1 247 7 view .LVU31
 244 0000 4FF40051 		mov	r1, #8192
 245 0004 0148     		ldr	r0, .L23
 246 0006 FFF7FEBF 		b	GPIO_ResetBits
 247              	.LVL4:
 248              	.L24:
 249 000a 00BF     		.align	2
 250              	.L23:
 251 000c 00140140 		.word	1073812480
 252              		.cfi_endproc
 253              	.LFE39:
 255              		.section	.text.lcd_wr_hi,"ax",%progbits
 256              		.align	1
 257              		.global	lcd_wr_hi
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 261              		.fpu softvfp
 263              	lcd_wr_hi:
 264              	.LFB40:
 248:lcd.c         **** }
 249:lcd.c         **** 
 250:lcd.c         **** 
 251:lcd.c         **** void lcd_wr_hi (void)
 252:lcd.c         **** {
 265              		.loc 1 252 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 253:lcd.c         ****       GPIO_SetBits(LCD_CTL_PORT,LCD_WR);
 270              		.loc 1 253 7 view .LVU33
 271 0000 4FF48041 		mov	r1, #16384
 272 0004 0148     		ldr	r0, .L26
 273 0006 FFF7FEBF 		b	GPIO_SetBits
 274              	.LVL5:
 275              	.L27:
 276 000a 00BF     		.align	2
 277              	.L26:
 278 000c 00140140 		.word	1073812480
 279              		.cfi_endproc
 280              	.LFE40:
 282              		.section	.text.lcd_wr_lo,"ax",%progbits
 283              		.align	1
 284              		.global	lcd_wr_lo
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu softvfp
 290              	lcd_wr_lo:
 291              	.LFB41:
 254:lcd.c         **** }
 255:lcd.c         **** 
 256:lcd.c         **** 
 257:lcd.c         **** void lcd_wr_lo (void)
 258:lcd.c         **** {
 292              		.loc 1 258 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 259:lcd.c         ****       GPIO_ResetBits(LCD_CTL_PORT,LCD_WR);
 297              		.loc 1 259 7 view .LVU35
 298 0000 4FF48041 		mov	r1, #16384
 299 0004 0148     		ldr	r0, .L29
 300 0006 FFF7FEBF 		b	GPIO_ResetBits
 301              	.LVL6:
 302              	.L30:
 303 000a 00BF     		.align	2
 304              	.L29:
 305 000c 00140140 		.word	1073812480
 306              		.cfi_endproc
 307              	.LFE41:
 309              		.section	.text.lcd_rd_hi,"ax",%progbits
 310              		.align	1
 311              		.global	lcd_rd_hi
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu softvfp
 317              	lcd_rd_hi:
 318              	.LFB42:
 260:lcd.c         **** }
 261:lcd.c         **** 
 262:lcd.c         **** 
 263:lcd.c         **** void lcd_rd_hi (void)
 264:lcd.c         **** {
 319              		.loc 1 264 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              		@ link register save eliminated.
 265:lcd.c         ****       GPIO_SetBits(LCD_CTL_PORT,LCD_RD);
 324              		.loc 1 265 7 view .LVU37
 325 0000 4FF40041 		mov	r1, #32768
 326 0004 0148     		ldr	r0, .L32
 327 0006 FFF7FEBF 		b	GPIO_SetBits
 328              	.LVL7:
 329              	.L33:
 330 000a 00BF     		.align	2
 331              	.L32:
 332 000c 00140140 		.word	1073812480
 333              		.cfi_endproc
 334              	.LFE42:
 336              		.section	.text.lcd_rd_lo,"ax",%progbits
 337              		.align	1
 338              		.global	lcd_rd_lo
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 342              		.fpu softvfp
 344              	lcd_rd_lo:
 345              	.LFB43:
 266:lcd.c         **** }
 267:lcd.c         **** 
 268:lcd.c         **** 
 269:lcd.c         **** void lcd_rd_lo (void)
 270:lcd.c         **** {
 346              		.loc 1 270 1 view -0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              		@ link register save eliminated.
 271:lcd.c         ****       GPIO_ResetBits(LCD_CTL_PORT,LCD_RD);
 351              		.loc 1 271 7 view .LVU39
 352 0000 4FF40041 		mov	r1, #32768
 353 0004 0148     		ldr	r0, .L35
 354 0006 FFF7FEBF 		b	GPIO_ResetBits
 355              	.LVL8:
 356              	.L36:
 357 000a 00BF     		.align	2
 358              	.L35:
 359 000c 00140140 		.word	1073812480
 360              		.cfi_endproc
 361              	.LFE43:
 363              		.section	.text.lcd_wr_data,"ax",%progbits
 364              		.align	1
 365              		.global	lcd_wr_data
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu softvfp
 371              	lcd_wr_data:
 372              	.LVL9:
 373              	.LFB44:
 272:lcd.c         **** }
 273:lcd.c         **** 
 274:lcd.c         **** 
 275:lcd.c         **** void lcd_wr_data (unsigned short data)
 276:lcd.c         **** {
 374              		.loc 1 276 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 277:lcd.c         ****       lcd_rs_hi();
 378              		.loc 1 277 7 view .LVU41
 276:lcd.c         ****       lcd_rs_hi();
 379              		.loc 1 276 1 is_stmt 0 view .LVU42
 380 0000 10B5     		push	{r4, lr}
 381              		.cfi_def_cfa_offset 8
 382              		.cfi_offset 4, -8
 383              		.cfi_offset 14, -4
 276:lcd.c         ****       lcd_rs_hi();
 384              		.loc 1 276 1 view .LVU43
 385 0002 0446     		mov	r4, r0
 386              		.loc 1 277 7 view .LVU44
 387 0004 FFF7FEFF 		bl	lcd_rs_hi
 388              	.LVL10:
 278:lcd.c         ****       lcd_cs_lo();
 389              		.loc 1 278 7 is_stmt 1 view .LVU45
 390 0008 FFF7FEFF 		bl	lcd_cs_lo
 391              	.LVL11:
 279:lcd.c         ****       lcd_data_write(data);
 392              		.loc 1 279 7 view .LVU46
 393              	.LBB48:
 394              	.LBI48:
 215:lcd.c         **** {
 395              		.loc 1 215 6 view .LVU47
 396              	.LBB49:
 217:lcd.c         **** }
 397              		.loc 1 217 7 view .LVU48
 217:lcd.c         **** }
 398              		.loc 1 217 26 is_stmt 0 view .LVU49
 399 000c 044B     		ldr	r3, .L38
 400 000e DC60     		str	r4, [r3, #12]
 401              	.LVL12:
 217:lcd.c         **** }
 402              		.loc 1 217 26 view .LVU50
 403              	.LBE49:
 404              	.LBE48:
 280:lcd.c         ****       lcd_wr_lo();
 405              		.loc 1 280 7 is_stmt 1 view .LVU51
 406 0010 FFF7FEFF 		bl	lcd_wr_lo
 407              	.LVL13:
 281:lcd.c         ****       lcd_wr_hi();
 408              		.loc 1 281 7 view .LVU52
 409 0014 FFF7FEFF 		bl	lcd_wr_hi
 410              	.LVL14:
 282:lcd.c         ****       lcd_cs_hi();
 411              		.loc 1 282 7 view .LVU53
 283:lcd.c         **** }
 412              		.loc 1 283 1 is_stmt 0 view .LVU54
 413 0018 BDE81040 		pop	{r4, lr}
 414              		.cfi_restore 14
 415              		.cfi_restore 4
 416              		.cfi_def_cfa_offset 0
 282:lcd.c         ****       lcd_cs_hi();
 417              		.loc 1 282 7 view .LVU55
 418 001c FFF7FEBF 		b	lcd_cs_hi
 419              	.LVL15:
 420              	.L39:
 421              		.align	2
 422              	.L38:
 423 0020 00180140 		.word	1073813504
 424              		.cfi_endproc
 425              	.LFE44:
 427              		.section	.text.lcd_wr_register,"ax",%progbits
 428              		.align	1
 429              		.global	lcd_wr_register
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu softvfp
 435              	lcd_wr_register:
 436              	.LVL16:
 437              	.LFB45:
 284:lcd.c         **** 
 285:lcd.c         **** 
 286:lcd.c         **** void lcd_wr_register (unsigned char data)
 287:lcd.c         **** {
 438              		.loc 1 287 1 is_stmt 1 view -0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 288:lcd.c         ****       lcd_rs_lo();
 442              		.loc 1 288 7 view .LVU57
 287:lcd.c         ****       lcd_rs_lo();
 443              		.loc 1 287 1 is_stmt 0 view .LVU58
 444 0000 10B5     		push	{r4, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 4, -8
 447              		.cfi_offset 14, -4
 287:lcd.c         ****       lcd_rs_lo();
 448              		.loc 1 287 1 view .LVU59
 449 0002 0446     		mov	r4, r0
 450              		.loc 1 288 7 view .LVU60
 451 0004 FFF7FEFF 		bl	lcd_rs_lo
 452              	.LVL17:
 289:lcd.c         ****       lcd_cs_lo();
 453              		.loc 1 289 7 is_stmt 1 view .LVU61
 454 0008 FFF7FEFF 		bl	lcd_cs_lo
 455              	.LVL18:
 290:lcd.c         ****       lcd_data_write(data);
 456              		.loc 1 290 7 view .LVU62
 457              	.LBB50:
 458              	.LBI50:
 215:lcd.c         **** {
 459              		.loc 1 215 6 view .LVU63
 460              	.LBB51:
 217:lcd.c         **** }
 461              		.loc 1 217 7 view .LVU64
 217:lcd.c         **** }
 462              		.loc 1 217 26 is_stmt 0 view .LVU65
 463 000c 044B     		ldr	r3, .L41
 464 000e DC60     		str	r4, [r3, #12]
 465              	.LVL19:
 217:lcd.c         **** }
 466              		.loc 1 217 26 view .LVU66
 467              	.LBE51:
 468              	.LBE50:
 291:lcd.c         ****       lcd_wr_lo();
 469              		.loc 1 291 7 is_stmt 1 view .LVU67
 470 0010 FFF7FEFF 		bl	lcd_wr_lo
 471              	.LVL20:
 292:lcd.c         ****       lcd_wr_hi();
 472              		.loc 1 292 7 view .LVU68
 473 0014 FFF7FEFF 		bl	lcd_wr_hi
 474              	.LVL21:
 293:lcd.c         ****       lcd_cs_hi();
 475              		.loc 1 293 7 view .LVU69
 294:lcd.c         **** }
 476              		.loc 1 294 1 is_stmt 0 view .LVU70
 477 0018 BDE81040 		pop	{r4, lr}
 478              		.cfi_restore 14
 479              		.cfi_restore 4
 480              		.cfi_def_cfa_offset 0
 293:lcd.c         ****       lcd_cs_hi();
 481              		.loc 1 293 7 view .LVU71
 482 001c FFF7FEBF 		b	lcd_cs_hi
 483              	.LVL22:
 484              	.L42:
 485              		.align	2
 486              	.L41:
 487 0020 00180140 		.word	1073813504
 488              		.cfi_endproc
 489              	.LFE45:
 491              		.section	.text.lcd_write_register,"ax",%progbits
 492              		.align	1
 493              		.global	lcd_write_register
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 497              		.fpu softvfp
 499              	lcd_write_register:
 500              	.LVL23:
 501              	.LFB46:
 295:lcd.c         **** 
 296:lcd.c         **** 
 297:lcd.c         **** void lcd_write_register (unsigned char reg, unsigned short value)
 298:lcd.c         **** {
 502              		.loc 1 298 1 is_stmt 1 view -0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 299:lcd.c         ****       lcd_wr_register(reg);
 506              		.loc 1 299 7 view .LVU73
 298:lcd.c         ****       lcd_wr_register(reg);
 507              		.loc 1 298 1 is_stmt 0 view .LVU74
 508 0000 10B5     		push	{r4, lr}
 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 4, -8
 511              		.cfi_offset 14, -4
 298:lcd.c         ****       lcd_wr_register(reg);
 512              		.loc 1 298 1 view .LVU75
 513 0002 0C46     		mov	r4, r1
 514              		.loc 1 299 7 view .LVU76
 515 0004 FFF7FEFF 		bl	lcd_wr_register
 516              	.LVL24:
 300:lcd.c         ****       lcd_wr_data(value);
 517              		.loc 1 300 7 is_stmt 1 view .LVU77
 518 0008 2046     		mov	r0, r4
 301:lcd.c         **** }
 519              		.loc 1 301 1 is_stmt 0 view .LVU78
 520 000a BDE81040 		pop	{r4, lr}
 521              		.cfi_restore 14
 522              		.cfi_restore 4
 523              		.cfi_def_cfa_offset 0
 300:lcd.c         ****       lcd_wr_data(value);
 524              		.loc 1 300 7 view .LVU79
 525 000e FFF7FEBF 		b	lcd_wr_data
 526              	.LVL25:
 527              		.cfi_endproc
 528              	.LFE46:
 530              		.section	.text.lcd_read_register,"ax",%progbits
 531              		.align	1
 532              		.global	lcd_read_register
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 536              		.fpu softvfp
 538              	lcd_read_register:
 539              	.LVL26:
 540              	.LFB47:
 302:lcd.c         **** 
 303:lcd.c         **** 
 304:lcd.c         **** unsigned short lcd_read_register (unsigned char reg)
 305:lcd.c         **** {
 541              		.loc 1 305 1 is_stmt 1 view -0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 306:lcd.c         ****       unsigned short value;
 545              		.loc 1 306 7 view .LVU81
 307:lcd.c         ****       lcd_wr_register(reg);
 546              		.loc 1 307 7 view .LVU82
 305:lcd.c         ****       unsigned short value;
 547              		.loc 1 305 1 is_stmt 0 view .LVU83
 548 0000 10B5     		push	{r4, lr}
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 4, -8
 551              		.cfi_offset 14, -4
 552              		.loc 1 307 7 view .LVU84
 553 0002 FFF7FEFF 		bl	lcd_wr_register
 554              	.LVL27:
 308:lcd.c         ****       lcd_data_port_input();
 555              		.loc 1 308 7 is_stmt 1 view .LVU85
 556 0006 FFF7FEFF 		bl	lcd_data_port_input
 557              	.LVL28:
 309:lcd.c         ****       lcd_rs_hi();
 558              		.loc 1 309 7 view .LVU86
 559 000a FFF7FEFF 		bl	lcd_rs_hi
 560              	.LVL29:
 310:lcd.c         ****       lcd_cs_lo();
 561              		.loc 1 310 7 view .LVU87
 562 000e FFF7FEFF 		bl	lcd_cs_lo
 563              	.LVL30:
 311:lcd.c         ****       lcd_rd_lo();
 564              		.loc 1 311 7 view .LVU88
 565 0012 FFF7FEFF 		bl	lcd_rd_lo
 566              	.LVL31:
 312:lcd.c         ****       lcd_rd_hi();
 567              		.loc 1 312 7 view .LVU89
 568 0016 FFF7FEFF 		bl	lcd_rd_hi
 569              	.LVL32:
 313:lcd.c         ****       value = lcd_data_read();
 570              		.loc 1 313 7 view .LVU90
 571              	.LBB52:
 572              	.LBI52:
 221:lcd.c         **** {
 573              		.loc 1 221 16 view .LVU91
 574              	.LBB53:
 223:lcd.c         **** }
 575              		.loc 1 223 7 view .LVU92
 223:lcd.c         **** }
 576              		.loc 1 223 28 is_stmt 0 view .LVU93
 577 001a 044B     		ldr	r3, .L45
 578 001c 9C68     		ldr	r4, [r3, #8]
 579              	.LVL33:
 223:lcd.c         **** }
 580              		.loc 1 223 28 view .LVU94
 581              	.LBE53:
 582              	.LBE52:
 314:lcd.c         ****       lcd_cs_hi();
 583              		.loc 1 314 7 is_stmt 1 view .LVU95
 584 001e FFF7FEFF 		bl	lcd_cs_hi
 585              	.LVL34:
 315:lcd.c         ****       lcd_data_port_output();
 586              		.loc 1 315 7 view .LVU96
 587 0022 FFF7FEFF 		bl	lcd_data_port_output
 588              	.LVL35:
 316:lcd.c         ****       return value;
 589              		.loc 1 316 7 view .LVU97
 317:lcd.c         **** }
 590              		.loc 1 317 1 is_stmt 0 view .LVU98
 591 0026 A0B2     		uxth	r0, r4
 592 0028 10BD     		pop	{r4, pc}
 593              	.LVL36:
 594              	.L46:
 595              		.loc 1 317 1 view .LVU99
 596 002a 00BF     		.align	2
 597              	.L45:
 598 002c 00180140 		.word	1073813504
 599              		.cfi_endproc
 600              	.LFE47:
 602              		.section	.text.lcd_read_data,"ax",%progbits
 603              		.align	1
 604              		.global	lcd_read_data
 605              		.syntax unified
 606              		.thumb
 607              		.thumb_func
 608              		.fpu softvfp
 610              	lcd_read_data:
 611              	.LFB48:
 318:lcd.c         **** 
 319:lcd.c         **** 
 320:lcd.c         **** unsigned short lcd_read_data(void)
 321:lcd.c         **** {
 612              		.loc 1 321 1 is_stmt 1 view -0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 322:lcd.c         ****       unsigned short value;
 616              		.loc 1 322 7 view .LVU101
 323:lcd.c         ****       lcd_data_port_input();
 617              		.loc 1 323 7 view .LVU102
 321:lcd.c         ****       unsigned short value;
 618              		.loc 1 321 1 is_stmt 0 view .LVU103
 619 0000 10B5     		push	{r4, lr}
 620              		.cfi_def_cfa_offset 8
 621              		.cfi_offset 4, -8
 622              		.cfi_offset 14, -4
 623              		.loc 1 323 7 view .LVU104
 624 0002 FFF7FEFF 		bl	lcd_data_port_input
 625              	.LVL37:
 324:lcd.c         ****       lcd_rs_hi();
 626              		.loc 1 324 7 is_stmt 1 view .LVU105
 627 0006 FFF7FEFF 		bl	lcd_rs_hi
 628              	.LVL38:
 325:lcd.c         ****       lcd_cs_lo();
 629              		.loc 1 325 7 view .LVU106
 630 000a FFF7FEFF 		bl	lcd_cs_lo
 631              	.LVL39:
 326:lcd.c         ****       lcd_rd_lo();
 632              		.loc 1 326 7 view .LVU107
 633 000e FFF7FEFF 		bl	lcd_rd_lo
 634              	.LVL40:
 327:lcd.c         ****       lcd_rd_hi();
 635              		.loc 1 327 7 view .LVU108
 636 0012 FFF7FEFF 		bl	lcd_rd_hi
 637              	.LVL41:
 328:lcd.c         ****       value = lcd_data_read();
 638              		.loc 1 328 7 view .LVU109
 639              	.LBB54:
 640              	.LBI54:
 221:lcd.c         **** {
 641              		.loc 1 221 16 view .LVU110
 642              	.LBB55:
 223:lcd.c         **** }
 643              		.loc 1 223 7 view .LVU111
 223:lcd.c         **** }
 644              		.loc 1 223 28 is_stmt 0 view .LVU112
 645 0016 044B     		ldr	r3, .L48
 646 0018 9C68     		ldr	r4, [r3, #8]
 647              	.LVL42:
 223:lcd.c         **** }
 648              		.loc 1 223 28 view .LVU113
 649              	.LBE55:
 650              	.LBE54:
 329:lcd.c         ****       lcd_cs_hi();
 651              		.loc 1 329 7 is_stmt 1 view .LVU114
 652 001a FFF7FEFF 		bl	lcd_cs_hi
 653              	.LVL43:
 330:lcd.c         ****       lcd_data_port_output();
 654              		.loc 1 330 7 view .LVU115
 655 001e FFF7FEFF 		bl	lcd_data_port_output
 656              	.LVL44:
 331:lcd.c         ****       return value;
 657              		.loc 1 331 7 view .LVU116
 332:lcd.c         **** }
 658              		.loc 1 332 1 is_stmt 0 view .LVU117
 659 0022 A0B2     		uxth	r0, r4
 660 0024 10BD     		pop	{r4, pc}
 661              	.LVL45:
 662              	.L49:
 663              		.loc 1 332 1 view .LVU118
 664 0026 00BF     		.align	2
 665              	.L48:
 666 0028 00180140 		.word	1073813504
 667              		.cfi_endproc
 668              	.LFE48:
 670              		.section	.text.lcd_write_ram_prepare,"ax",%progbits
 671              		.align	1
 672              		.global	lcd_write_ram_prepare
 673              		.syntax unified
 674              		.thumb
 675              		.thumb_func
 676              		.fpu softvfp
 678              	lcd_write_ram_prepare:
 679              	.LFB50:
 333:lcd.c         **** void draw_apple_logo(unsigned short x,unsigned short y){
 334:lcd.c         **** 	lcd_draw_line(x+32,y,x+34,y);
 335:lcd.c         **** 	lcd_draw_line(x+30,y+1,x+34,y+1);
 336:lcd.c         **** 	lcd_draw_line(x+28,y+2,x+34,y+2);
 337:lcd.c         **** 	lcd_draw_line(x+27,y+3,x+33,y+3);
 338:lcd.c         **** 	lcd_draw_line(x+26,y+4,x+33,y+4);
 339:lcd.c         **** 	lcd_draw_line(x+26,y+5,x+33,y+5);
 340:lcd.c         **** 	lcd_draw_line(x+25,y+6,x+32,y+6);
 341:lcd.c         **** 	lcd_draw_line(x+25,y+7,x+32,y+7);
 342:lcd.c         **** 	lcd_draw_line(x+24,y+8,x+31,y+8);
 343:lcd.c         **** 	lcd_draw_line(x+24,y+9,x+30,y+9);
 344:lcd.c         **** 	lcd_draw_line(x+24,y+10,x+29,y+10);
 345:lcd.c         **** 	lcd_draw_line(x+24,y+11,x+28,y+11);
 346:lcd.c         **** 	lcd_draw_line(x+24,y+12,x+27,y+12);
 347:lcd.c         **** 	lcd_draw_line(x+13,y+13,x+15,y+13);lcd_draw_line(x+31,y+13,x+37,y+13);
 348:lcd.c         **** 	lcd_draw_line(x+9,y+14,x+19,y+14);lcd_draw_line(x+29,y+14,x+39,y+14);
 349:lcd.c         **** 	lcd_draw_line(x+8,y+15,x+22,y+15);lcd_draw_line(x+26,y+15,x+41,y+15);
 350:lcd.c         **** 	lcd_draw_line(x+6,y+16,x+42,y+16);
 351:lcd.c         **** 	lcd_draw_line(x+5,y+17,x+43,y+17);
 352:lcd.c         **** 	lcd_draw_line(x+5,y+18,x+43,y+18);
 353:lcd.c         **** 	lcd_draw_line(x+4,y+19,x+43,y+19);
 354:lcd.c         **** 	lcd_draw_line(x+3,y+20,x+41,y+20);
 355:lcd.c         **** 	lcd_draw_line(x+3,y+21,x+40,y+21);
 356:lcd.c         **** 	lcd_draw_line(x+2,y+22,x+40,y+22);
 357:lcd.c         **** 	lcd_draw_line(x+2,y+23,x+39,y+23);
 358:lcd.c         **** 	lcd_draw_line(x+2,y+24,x+39,y+24);
 359:lcd.c         **** 	lcd_draw_line(x+1,y+25,x+38,y+25);
 360:lcd.c         **** 	lcd_draw_line(x+1,y+26,x+38,y+26);
 361:lcd.c         **** 	lcd_draw_line(x+1,y+27,x+38,y+27);	
 362:lcd.c         **** 	lcd_draw_line(x+1,y+28,x+38,y+28);
 363:lcd.c         **** 	lcd_draw_line(x+1,y+29,x+38,y+29);
 364:lcd.c         **** 	lcd_draw_line(x+1,y+30,x+38,y+30);
 365:lcd.c         **** 	lcd_draw_line(x+1,y+31,x+38,y+31);
 366:lcd.c         **** 	lcd_draw_line(x+1,y+32,x+38,y+32);
 367:lcd.c         **** 	lcd_draw_line(x+1,y+33,x+39,y+33);
 368:lcd.c         **** 	lcd_draw_line(x+2,y+34,x+39,y+34);
 369:lcd.c         **** 	lcd_draw_line(x+2,y+35,x+40,y+35);
 370:lcd.c         **** 	lcd_draw_line(x+2,y+36,x+40,y+36);
 371:lcd.c         **** 	lcd_draw_line(x+2,y+37,x+41,y+37);
 372:lcd.c         **** 	lcd_draw_line(x+3,y+38,x+42,y+38);
 373:lcd.c         **** 	lcd_draw_line(x+3,y+39,x+44,y+39);
 374:lcd.c         **** 	lcd_draw_line(x+3,y+40,x+45,y+40);
 375:lcd.c         **** 	lcd_draw_line(x+3,y+41,x+45,y+41);
 376:lcd.c         **** 	lcd_draw_line(x+4,y+42,x+45,y+42);
 377:lcd.c         **** 	lcd_draw_line(x+4,y+43,x+44,y+43);
 378:lcd.c         **** 	lcd_draw_line(x+5,y+44,x+44,y+44);
 379:lcd.c         **** 	lcd_draw_line(x+5,y+45,x+43,y+45);
 380:lcd.c         **** 	lcd_draw_line(x+6,y+46,x+43,y+46);
 381:lcd.c         **** 	lcd_draw_line(x+6,y+47,x+42,y+47);
 382:lcd.c         **** 	lcd_draw_line(x+7,y+48,x+42,y+48);
 383:lcd.c         **** 	lcd_draw_line(x+8,y+49,x+41,y+49);
 384:lcd.c         **** 	lcd_draw_line(x+9,y+50,x+40,y+50);
 385:lcd.c         **** 	lcd_draw_line(x+10,y+51,x+39,y+51);
 386:lcd.c         **** 	lcd_draw_line(x+11,y+52,x+38,y+52);
 387:lcd.c         **** 	lcd_draw_line(x+12,y+53,x+19,y+53);lcd_draw_line(x+30,y+53,x+37,y+53);
 388:lcd.c         **** 	lcd_draw_line(x+13,y+54,x+18,y+54);lcd_draw_line(x+32,y+54,x+36,y+54);
 389:lcd.c         **** }
 390:lcd.c         **** 
 391:lcd.c         **** void lcd_write_ram_prepare (void)
 392:lcd.c         **** {
 680              		.loc 1 392 1 is_stmt 1 view -0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684              		@ link register save eliminated.
 393:lcd.c         ****       lcd_wr_register(R34);
 685              		.loc 1 393 7 view .LVU120
 686 0000 2220     		movs	r0, #34
 687 0002 FFF7FEBF 		b	lcd_wr_register
 688              	.LVL46:
 689              		.cfi_endproc
 690              	.LFE50:
 692              		.section	.text.lcd_write_ram,"ax",%progbits
 693              		.align	1
 694              		.global	lcd_write_ram
 695              		.syntax unified
 696              		.thumb
 697              		.thumb_func
 698              		.fpu softvfp
 700              	lcd_write_ram:
 701              	.LVL47:
 702              	.LFB51:
 394:lcd.c         **** }
 395:lcd.c         **** 
 396:lcd.c         **** 
 397:lcd.c         **** void lcd_write_ram (unsigned short rgb_code)
 398:lcd.c         **** {
 703              		.loc 1 398 1 view -0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707              		@ link register save eliminated.
 399:lcd.c         ****       lcd_wr_data(rgb_code);
 708              		.loc 1 399 7 view .LVU122
 709 0000 FFF7FEBF 		b	lcd_wr_data
 710              	.LVL48:
 711              		.loc 1 399 7 is_stmt 0 view .LVU123
 712              		.cfi_endproc
 713              	.LFE51:
 715              		.section	.text.lcd_bgr_to_rgb,"ax",%progbits
 716              		.align	1
 717              		.global	lcd_bgr_to_rgb
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 721              		.fpu softvfp
 723              	lcd_bgr_to_rgb:
 724              	.LVL49:
 725              	.LFB52:
 400:lcd.c         **** }
 401:lcd.c         **** 
 402:lcd.c         **** 
 403:lcd.c         **** unsigned short lcd_bgr_to_rgb (unsigned short c)
 404:lcd.c         **** {
 726              		.loc 1 404 1 is_stmt 1 view -0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 0, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 405:lcd.c         ****       unsigned short r,g,b,rgb;
 731              		.loc 1 405 7 view .LVU125
 406:lcd.c         ****       b = (c >> 0) & 0x1f;
 732              		.loc 1 406 7 view .LVU126
 407:lcd.c         ****       g = (c >> 5) & 0x3f;
 733              		.loc 1 407 7 view .LVU127
 408:lcd.c         ****       r = (c >> 11) & 0x1f;
 734              		.loc 1 408 7 view .LVU128
 409:lcd.c         ****       rgb = (b << 11) + (g << 5) + (r << 0);
 735              		.loc 1 409 7 view .LVU129
 410:lcd.c         ****       return (rgb);
 736              		.loc 1 410 7 view .LVU130
 409:lcd.c         ****       rgb = (b << 11) + (g << 5) + (r << 0);
 737              		.loc 1 409 11 is_stmt 0 view .LVU131
 738 0000 C202     		lsls	r2, r0, #11
 409:lcd.c         ****       rgb = (b << 11) + (g << 5) + (r << 0);
 739              		.loc 1 409 28 view .LVU132
 740 0002 00F4FC63 		and	r3, r0, #2016
 409:lcd.c         ****       rgb = (b << 11) + (g << 5) + (r << 0);
 741              		.loc 1 409 11 view .LVU133
 742 0006 02EBD020 		add	r0, r2, r0, lsr #11
 743              	.LVL50:
 409:lcd.c         ****       rgb = (b << 11) + (g << 5) + (r << 0);
 744              		.loc 1 409 11 view .LVU134
 745 000a 1844     		add	r0, r0, r3
 411:lcd.c         **** }
 746              		.loc 1 411 1 view .LVU135
 747 000c 80B2     		uxth	r0, r0
 748 000e 7047     		bx	lr
 749              		.cfi_endproc
 750              	.LFE52:
 752              		.section	.text.lcd_set_cursor,"ax",%progbits
 753              		.align	1
 754              		.global	lcd_set_cursor
 755              		.syntax unified
 756              		.thumb
 757              		.thumb_func
 758              		.fpu softvfp
 760              	lcd_set_cursor:
 761              	.LVL51:
 762              	.LFB53:
 412:lcd.c         **** 
 413:lcd.c         **** 
 414:lcd.c         **** void lcd_set_cursor (unsigned char xpos, unsigned short ypos)
 415:lcd.c         **** {
 763              		.loc 1 415 1 is_stmt 1 view -0
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 0
 766              		@ frame_needed = 0, uses_anonymous_args = 0
 416:lcd.c         ****       if ((device_code == 0x8999) || (device_code == 0x8989) || (device_code == 0x9919)) {
 767              		.loc 1 416 7 view .LVU137
 768              		.loc 1 416 35 is_stmt 0 view .LVU138
 769 0000 48F68912 		movw	r2, #35209
 770              		.loc 1 416 24 view .LVU139
 771 0004 0D4B     		ldr	r3, .L57
 415:lcd.c         ****       if ((device_code == 0x8999) || (device_code == 0x8989) || (device_code == 0x9919)) {
 772              		.loc 1 415 1 view .LVU140
 773 0006 10B5     		push	{r4, lr}
 774              		.cfi_def_cfa_offset 8
 775              		.cfi_offset 4, -8
 776              		.cfi_offset 14, -4
 777              		.loc 1 416 24 view .LVU141
 778 0008 1B88     		ldrh	r3, [r3]
 415:lcd.c         ****       if ((device_code == 0x8999) || (device_code == 0x8989) || (device_code == 0x9919)) {
 779              		.loc 1 415 1 view .LVU142
 780 000a 0C46     		mov	r4, r1
 781 000c 0146     		mov	r1, r0
 782              	.LVL52:
 783              		.loc 1 416 35 view .LVU143
 784 000e 23F01000 		bic	r0, r3, #16
 785              	.LVL53:
 786              		.loc 1 416 35 view .LVU144
 787 0012 9042     		cmp	r0, r2
 788 0014 03D0     		beq	.L54
 789              		.loc 1 416 62 discriminator 2 view .LVU145
 790 0016 49F61912 		movw	r2, #39193
 791 001a 9342     		cmp	r3, r2
 792 001c 08D1     		bne	.L55
 793              	.L54:
 417:lcd.c         **** 	 lcd_write_register(0x004E,xpos);
 794              		.loc 1 417 3 is_stmt 1 view .LVU146
 795 001e 4E20     		movs	r0, #78
 796 0020 FFF7FEFF 		bl	lcd_write_register
 797              	.LVL54:
 418:lcd.c         **** 	 lcd_write_register(0X004F,ypos);
 798              		.loc 1 418 3 view .LVU147
 799 0024 2146     		mov	r1, r4
 800 0026 4F20     		movs	r0, #79
 801              	.L56:
 419:lcd.c         ****       } else {
 420:lcd.c         **** 	 lcd_write_register(0x0020,xpos);
 421:lcd.c         **** 	 lcd_write_register(0X0021,ypos);
 422:lcd.c         ****       }
 423:lcd.c         **** }
 802              		.loc 1 423 1 is_stmt 0 view .LVU148
 803 0028 BDE81040 		pop	{r4, lr}
 804              		.cfi_remember_state
 805              		.cfi_restore 14
 806              		.cfi_restore 4
 807              		.cfi_def_cfa_offset 0
 808              	.LBB58:
 809              	.LBB59:
 421:lcd.c         ****       }
 810              		.loc 1 421 3 view .LVU149
 811 002c FFF7FEBF 		b	lcd_write_register
 812              	.LVL55:
 813              	.L55:
 814              		.cfi_restore_state
 421:lcd.c         ****       }
 815              		.loc 1 421 3 view .LVU150
 816              	.LBE59:
 817              	.LBI58:
 414:lcd.c         **** {
 818              		.loc 1 414 6 is_stmt 1 view .LVU151
 819              	.LBB60:
 420:lcd.c         **** 	 lcd_write_register(0X0021,ypos);
 820              		.loc 1 420 3 view .LVU152
 821 0030 2020     		movs	r0, #32
 822 0032 FFF7FEFF 		bl	lcd_write_register
 823              	.LVL56:
 421:lcd.c         ****       }
 824              		.loc 1 421 3 view .LVU153
 825 0036 2146     		mov	r1, r4
 826 0038 2120     		movs	r0, #33
 827 003a F5E7     		b	.L56
 828              	.L58:
 829              		.align	2
 830              	.L57:
 831 003c 00000000 		.word	device_code
 832              	.LBE60:
 833              	.LBE58:
 834              		.cfi_endproc
 835              	.LFE53:
 837              		.section	.text.lcd_get_pixel,"ax",%progbits
 838              		.align	1
 839              		.global	lcd_get_pixel
 840              		.syntax unified
 841              		.thumb
 842              		.thumb_func
 843              		.fpu softvfp
 845              	lcd_get_pixel:
 846              	.LVL57:
 847              	.LFB54:
 424:lcd.c         **** 
 425:lcd.c         **** 
 426:lcd.c         **** unsigned short lcd_get_pixel (unsigned char x,unsigned short y)
 427:lcd.c         **** {
 848              		.loc 1 427 1 view -0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 0
 851              		@ frame_needed = 0, uses_anonymous_args = 0
 428:lcd.c         ****       unsigned short value;
 852              		.loc 1 428 7 view .LVU155
 429:lcd.c         ****       lcd_set_cursor(x,y);
 853              		.loc 1 429 7 view .LVU156
 427:lcd.c         ****       unsigned short value;
 854              		.loc 1 427 1 is_stmt 0 view .LVU157
 855 0000 10B5     		push	{r4, lr}
 856              		.cfi_def_cfa_offset 8
 857              		.cfi_offset 4, -8
 858              		.cfi_offset 14, -4
 859              		.loc 1 429 7 view .LVU158
 860 0002 FFF7FEFF 		bl	lcd_set_cursor
 861              	.LVL58:
 430:lcd.c         ****       lcd_wr_register(R34);
 862              		.loc 1 430 7 is_stmt 1 view .LVU159
 863 0006 2220     		movs	r0, #34
 864 0008 FFF7FEFF 		bl	lcd_wr_register
 865              	.LVL59:
 431:lcd.c         ****       lcd_data_port_input();
 866              		.loc 1 431 7 view .LVU160
 867 000c FFF7FEFF 		bl	lcd_data_port_input
 868              	.LVL60:
 432:lcd.c         ****       lcd_rs_hi();
 869              		.loc 1 432 7 view .LVU161
 870 0010 FFF7FEFF 		bl	lcd_rs_hi
 871              	.LVL61:
 433:lcd.c         ****       lcd_cs_lo();;
 872              		.loc 1 433 7 view .LVU162
 873 0014 FFF7FEFF 		bl	lcd_cs_lo
 874              	.LVL62:
 875              		.loc 1 433 19 view .LVU163
 434:lcd.c         ****       lcd_rd_lo();;
 876              		.loc 1 434 7 view .LVU164
 877 0018 FFF7FEFF 		bl	lcd_rd_lo
 878              	.LVL63:
 879              		.loc 1 434 19 view .LVU165
 435:lcd.c         ****       lcd_rd_hi();
 880              		.loc 1 435 7 view .LVU166
 881 001c FFF7FEFF 		bl	lcd_rd_hi
 882              	.LVL64:
 436:lcd.c         ****       //dummy READ
 437:lcd.c         ****       lcd_rd_lo();;
 883              		.loc 1 437 7 view .LVU167
 884 0020 FFF7FEFF 		bl	lcd_rd_lo
 885              	.LVL65:
 886              		.loc 1 437 19 view .LVU168
 438:lcd.c         ****       lcd_rd_hi();
 887              		.loc 1 438 7 view .LVU169
 888 0024 FFF7FEFF 		bl	lcd_rd_hi
 889              	.LVL66:
 439:lcd.c         ****       value = lcd_data_read();
 890              		.loc 1 439 7 view .LVU170
 891              	.LBB61:
 892              	.LBI61:
 221:lcd.c         **** {
 893              		.loc 1 221 16 view .LVU171
 894              	.LBB62:
 223:lcd.c         **** }
 895              		.loc 1 223 7 view .LVU172
 223:lcd.c         **** }
 896              		.loc 1 223 28 is_stmt 0 view .LVU173
 897 0028 054B     		ldr	r3, .L60
 898 002a 9C68     		ldr	r4, [r3, #8]
 899              	.LVL67:
 223:lcd.c         **** }
 900              		.loc 1 223 28 view .LVU174
 901              	.LBE62:
 902              	.LBE61:
 440:lcd.c         ****       lcd_cs_hi();
 903              		.loc 1 440 7 is_stmt 1 view .LVU175
 904 002c FFF7FEFF 		bl	lcd_cs_hi
 905              	.LVL68:
 441:lcd.c         ****       lcd_data_port_output();
 906              		.loc 1 441 7 view .LVU176
 907 0030 FFF7FEFF 		bl	lcd_data_port_output
 908              	.LVL69:
 442:lcd.c         ****       return lcd_bgr_to_rgb(value);
 909              		.loc 1 442 7 view .LVU177
 910              		.loc 1 442 14 is_stmt 0 view .LVU178
 911 0034 A0B2     		uxth	r0, r4
 443:lcd.c         **** }
 912              		.loc 1 443 1 view .LVU179
 913 0036 BDE81040 		pop	{r4, lr}
 914              		.cfi_restore 14
 915              		.cfi_restore 4
 916              		.cfi_def_cfa_offset 0
 917              	.LVL70:
 442:lcd.c         ****       return lcd_bgr_to_rgb(value);
 918              		.loc 1 442 14 view .LVU180
 919 003a FFF7FEBF 		b	lcd_bgr_to_rgb
 920              	.LVL71:
 921              	.L61:
 442:lcd.c         ****       return lcd_bgr_to_rgb(value);
 922              		.loc 1 442 14 view .LVU181
 923 003e 00BF     		.align	2
 924              	.L60:
 925 0040 00180140 		.word	1073813504
 926              		.cfi_endproc
 927              	.LFE54:
 929              		.section	.text.lcd_display_on,"ax",%progbits
 930              		.align	1
 931              		.global	lcd_display_on
 932              		.syntax unified
 933              		.thumb
 934              		.thumb_func
 935              		.fpu softvfp
 937              	lcd_display_on:
 938              	.LFB55:
 444:lcd.c         **** 
 445:lcd.c         **** 
 446:lcd.c         **** void lcd_display_on (void)
 447:lcd.c         **** {
 939              		.loc 1 447 1 is_stmt 1 view -0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943              		@ link register save eliminated.
 448:lcd.c         ****       lcd_write_register(R7,0x0173);
 944              		.loc 1 448 7 view .LVU183
 945 0000 40F27311 		movw	r1, #371
 946 0004 0720     		movs	r0, #7
 947 0006 FFF7FEBF 		b	lcd_write_register
 948              	.LVL72:
 949              		.cfi_endproc
 950              	.LFE55:
 952              		.section	.text.lcd_display_off,"ax",%progbits
 953              		.align	1
 954              		.global	lcd_display_off
 955              		.syntax unified
 956              		.thumb
 957              		.thumb_func
 958              		.fpu softvfp
 960              	lcd_display_off:
 961              	.LFB56:
 449:lcd.c         **** }
 450:lcd.c         **** 
 451:lcd.c         **** 
 452:lcd.c         **** void lcd_display_off (void)
 453:lcd.c         **** {
 962              		.loc 1 453 1 view -0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 0
 965              		@ frame_needed = 0, uses_anonymous_args = 0
 966              		@ link register save eliminated.
 454:lcd.c         ****       lcd_write_register(R7,0x0);
 967              		.loc 1 454 7 view .LVU185
 968 0000 0021     		movs	r1, #0
 969 0002 0720     		movs	r0, #7
 970 0004 FFF7FEBF 		b	lcd_write_register
 971              	.LVL73:
 972              		.cfi_endproc
 973              	.LFE56:
 975              		.section	.text.lcd_delay,"ax",%progbits
 976              		.align	1
 977              		.global	lcd_delay
 978              		.syntax unified
 979              		.thumb
 980              		.thumb_func
 981              		.fpu softvfp
 983              	lcd_delay:
 984              	.LVL74:
 985              	.LFB57:
 455:lcd.c         **** }
 456:lcd.c         **** 
 457:lcd.c         **** 
 458:lcd.c         **** void lcd_delay (unsigned short count)
 459:lcd.c         **** {
 986              		.loc 1 459 1 view -0
 987              		.cfi_startproc
 988              		@ args = 0, pretend = 0, frame = 0
 989              		@ frame_needed = 0, uses_anonymous_args = 0
 990              		@ link register save eliminated.
 460:lcd.c         ****       wait_ms(count);
 991              		.loc 1 460 7 view .LVU187
 992 0000 FFF7FEBF 		b	wait_ms
 993              	.LVL75:
 994              		.loc 1 460 7 is_stmt 0 view .LVU188
 995              		.cfi_endproc
 996              	.LFE57:
 998              		.section	.text.lcd_window_max,"ax",%progbits
 999              		.align	1
 1000              		.global	lcd_window_max
 1001              		.syntax unified
 1002              		.thumb
 1003              		.thumb_func
 1004              		.fpu softvfp
 1006              	lcd_window_max:
 1007              	.LVL76:
 1008              	.LFB58:
 461:lcd.c         **** }
 462:lcd.c         **** 
 463:lcd.c         **** 
 464:lcd.c         **** void lcd_window_max (unsigned short x,unsigned short y,unsigned short x_end,unsigned short y_end)
 465:lcd.c         **** {
 1009              		.loc 1 465 1 is_stmt 1 view -0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 0
 1012              		@ frame_needed = 0, uses_anonymous_args = 0
 466:lcd.c         **** 
 467:lcd.c         ****       if ((device_code == 0x8999) || (device_code == 0x8989)) {
 1013              		.loc 1 467 7 view .LVU190
 465:lcd.c         **** 
 1014              		.loc 1 465 1 is_stmt 0 view .LVU191
 1015 0000 70B5     		push	{r4, r5, r6, lr}
 1016              		.cfi_def_cfa_offset 16
 1017              		.cfi_offset 4, -16
 1018              		.cfi_offset 5, -12
 1019              		.cfi_offset 6, -8
 1020              		.cfi_offset 14, -4
 465:lcd.c         **** 
 1021              		.loc 1 465 1 view .LVU192
 1022 0002 0E46     		mov	r6, r1
 1023              		.loc 1 467 35 view .LVU193
 1024 0004 48F68911 		movw	r1, #35209
 1025              	.LVL77:
 1026              		.loc 1 467 35 view .LVU194
 1027 0008 5C1E     		subs	r4, r3, #1
 1028              		.loc 1 467 24 view .LVU195
 1029 000a 144B     		ldr	r3, .L68
 1030              	.LVL78:
 1031              		.loc 1 467 24 view .LVU196
 1032 000c A4B2     		uxth	r4, r4
 1033              		.loc 1 467 35 view .LVU197
 1034 000e 1B88     		ldrh	r3, [r3]
 1035 0010 551E     		subs	r5, r2, #1
 1036 0012 23F01003 		bic	r3, r3, #16
 1037 0016 9BB2     		uxth	r3, r3
 1038 0018 8B42     		cmp	r3, r1
 1039 001a 0FD1     		bne	.L66
 468:lcd.c         **** 	 lcd_write_register(0x44,x | ((x_end - 1) << 8));
 1040              		.loc 1 468 3 is_stmt 1 view .LVU198
 1041              		.loc 1 468 29 is_stmt 0 view .LVU199
 1042 001c 40EA0525 		orr	r5, r0, r5, lsl #8
 1043              		.loc 1 468 3 view .LVU200
 1044 0020 A9B2     		uxth	r1, r5
 1045 0022 4420     		movs	r0, #68
 1046              	.LVL79:
 1047              		.loc 1 468 3 view .LVU201
 1048 0024 FFF7FEFF 		bl	lcd_write_register
 1049              	.LVL80:
 469:lcd.c         **** 	 lcd_write_register(0x45,y);
 1050              		.loc 1 469 3 is_stmt 1 view .LVU202
 1051 0028 3146     		mov	r1, r6
 1052 002a 4520     		movs	r0, #69
 1053 002c FFF7FEFF 		bl	lcd_write_register
 1054              	.LVL81:
 470:lcd.c         **** 	 lcd_write_register(0x46,y_end - 1);
 1055              		.loc 1 470 3 view .LVU203
 1056 0030 2146     		mov	r1, r4
 1057 0032 4620     		movs	r0, #70
 1058              	.L67:
 471:lcd.c         ****       } else {
 472:lcd.c         **** 	 lcd_write_register(0x50,x);		/* Horizontal GRAM Start Address      */
 473:lcd.c         **** 	 lcd_write_register(0x51,x_end - 1);	/* Horizontal GRAM End   Address (-1) */
 474:lcd.c         **** 	 lcd_write_register(0x52,y);		/* Vertical   GRAM Start Address      */
 475:lcd.c         **** 	 lcd_write_register(0x53,y_end - 1);	/* Vertical   GRAM End   Address (-1) */
 476:lcd.c         ****       }
 477:lcd.c         **** }
 1059              		.loc 1 477 1 is_stmt 0 view .LVU204
 1060 0034 BDE87040 		pop	{r4, r5, r6, lr}
 1061              		.cfi_remember_state
 1062              		.cfi_restore 14
 1063              		.cfi_restore 6
 1064              		.cfi_restore 5
 1065              		.cfi_restore 4
 1066              		.cfi_def_cfa_offset 0
 475:lcd.c         ****       }
 1067              		.loc 1 475 3 view .LVU205
 1068 0038 FFF7FEBF 		b	lcd_write_register
 1069              	.LVL82:
 1070              	.L66:
 1071              		.cfi_restore_state
 472:lcd.c         **** 	 lcd_write_register(0x51,x_end - 1);	/* Horizontal GRAM End   Address (-1) */
 1072              		.loc 1 472 3 is_stmt 1 view .LVU206
 1073 003c 0146     		mov	r1, r0
 1074 003e 5020     		movs	r0, #80
 1075              	.LVL83:
 472:lcd.c         **** 	 lcd_write_register(0x51,x_end - 1);	/* Horizontal GRAM End   Address (-1) */
 1076              		.loc 1 472 3 is_stmt 0 view .LVU207
 1077 0040 FFF7FEFF 		bl	lcd_write_register
 1078              	.LVL84:
 473:lcd.c         **** 	 lcd_write_register(0x52,y);		/* Vertical   GRAM Start Address      */
 1079              		.loc 1 473 3 is_stmt 1 view .LVU208
 1080 0044 5120     		movs	r0, #81
 1081 0046 A9B2     		uxth	r1, r5
 1082 0048 FFF7FEFF 		bl	lcd_write_register
 1083              	.LVL85:
 474:lcd.c         **** 	 lcd_write_register(0x53,y_end - 1);	/* Vertical   GRAM End   Address (-1) */
 1084              		.loc 1 474 3 view .LVU209
 1085 004c 3146     		mov	r1, r6
 1086 004e 5220     		movs	r0, #82
 1087 0050 FFF7FEFF 		bl	lcd_write_register
 1088              	.LVL86:
 475:lcd.c         ****       }
 1089              		.loc 1 475 3 view .LVU210
 1090 0054 2146     		mov	r1, r4
 1091 0056 5320     		movs	r0, #83
 1092 0058 ECE7     		b	.L67
 1093              	.L69:
 1094 005a 00BF     		.align	2
 1095              	.L68:
 1096 005c 00000000 		.word	device_code
 1097              		.cfi_endproc
 1098              	.LFE58:
 1100              		.section	.text.lcd_set_pixel,"ax",%progbits
 1101              		.align	1
 1102              		.global	lcd_set_pixel
 1103              		.syntax unified
 1104              		.thumb
 1105              		.thumb_func
 1106              		.fpu softvfp
 1108              	lcd_set_pixel:
 1109              	.LVL87:
 1110              	.LFB59:
 478:lcd.c         **** 
 479:lcd.c         **** 
 480:lcd.c         **** void lcd_set_pixel (unsigned char x,unsigned short y)
 481:lcd.c         **** {
 1111              		.loc 1 481 1 view -0
 1112              		.cfi_startproc
 1113              		@ args = 0, pretend = 0, frame = 0
 1114              		@ frame_needed = 0, uses_anonymous_args = 0
 482:lcd.c         ****       lcd_set_cursor(x,y);
 1115              		.loc 1 482 7 view .LVU212
 481:lcd.c         ****       lcd_set_cursor(x,y);
 1116              		.loc 1 481 1 is_stmt 0 view .LVU213
 1117 0000 08B5     		push	{r3, lr}
 1118              		.cfi_def_cfa_offset 8
 1119              		.cfi_offset 3, -8
 1120              		.cfi_offset 14, -4
 1121              		.loc 1 482 7 view .LVU214
 1122 0002 FFF7FEFF 		bl	lcd_set_cursor
 1123              	.LVL88:
 483:lcd.c         ****       lcd_wr_register(R34);
 1124              		.loc 1 483 7 is_stmt 1 view .LVU215
 1125 0006 2220     		movs	r0, #34
 1126 0008 FFF7FEFF 		bl	lcd_wr_register
 1127              	.LVL89:
 484:lcd.c         ****       lcd_wr_data(foreground_color);
 1128              		.loc 1 484 7 view .LVU216
 1129 000c 024B     		ldr	r3, .L71
 1130 000e 1888     		ldrh	r0, [r3]
 485:lcd.c         **** }
 1131              		.loc 1 485 1 is_stmt 0 view .LVU217
 1132 0010 BDE80840 		pop	{r3, lr}
 1133              		.cfi_restore 14
 1134              		.cfi_restore 3
 1135              		.cfi_def_cfa_offset 0
 484:lcd.c         ****       lcd_wr_data(foreground_color);
 1136              		.loc 1 484 7 view .LVU218
 1137 0014 FFF7FEBF 		b	lcd_wr_data
 1138              	.LVL90:
 1139              	.L72:
 1140              		.align	2
 1141              	.L71:
 1142 0018 00000000 		.word	foreground_color
 1143              		.cfi_endproc
 1144              	.LFE59:
 1146              		.section	.text.lcd_clear,"ax",%progbits
 1147              		.align	1
 1148              		.global	lcd_clear
 1149              		.syntax unified
 1150              		.thumb
 1151              		.thumb_func
 1152              		.fpu softvfp
 1154              	lcd_clear:
 1155              	.LVL91:
 1156              	.LFB60:
 486:lcd.c         **** 
 487:lcd.c         **** 
 488:lcd.c         **** void lcd_clear (unsigned short color)
 489:lcd.c         **** {
 1157              		.loc 1 489 1 is_stmt 1 view -0
 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 0
 1160              		@ frame_needed = 0, uses_anonymous_args = 0
 490:lcd.c         ****        unsigned int idx = 0;
 1161              		.loc 1 490 8 view .LVU220
 491:lcd.c         ****        lcd_set_cursor(0x00,0x0000);
 1162              		.loc 1 491 8 view .LVU221
 1163 0000 0021     		movs	r1, #0
 489:lcd.c         ****        unsigned int idx = 0;
 1164              		.loc 1 489 1 is_stmt 0 view .LVU222
 1165 0002 38B5     		push	{r3, r4, r5, lr}
 1166              		.cfi_def_cfa_offset 16
 1167              		.cfi_offset 3, -16
 1168              		.cfi_offset 4, -12
 1169              		.cfi_offset 5, -8
 1170              		.cfi_offset 14, -4
 489:lcd.c         ****        unsigned int idx = 0;
 1171              		.loc 1 489 1 view .LVU223
 1172 0004 0546     		mov	r5, r0
 1173              		.loc 1 491 8 view .LVU224
 1174 0006 0846     		mov	r0, r1
 1175              	.LVL92:
 1176              		.loc 1 491 8 view .LVU225
 1177 0008 FFF7FEFF 		bl	lcd_set_cursor
 1178              	.LVL93:
 492:lcd.c         ****        lcd_write_ram_prepare();
 1179              		.loc 1 492 8 is_stmt 1 view .LVU226
 1180 000c 4FF49634 		mov	r4, #76800
 1181 0010 FFF7FEFF 		bl	lcd_write_ram_prepare
 1182              	.LVL94:
 493:lcd.c         ****        for (idx=0;idx<76800;idx++) {
 1183              		.loc 1 493 8 view .LVU227
 1184              		.loc 1 493 19 view .LVU228
 1185              	.L74:
 494:lcd.c         **** 	   lcd_wr_data(color);
 1186              		.loc 1 494 5 discriminator 3 view .LVU229
 1187 0014 2846     		mov	r0, r5
 1188 0016 FFF7FEFF 		bl	lcd_wr_data
 1189              	.LVL95:
 493:lcd.c         ****        for (idx=0;idx<76800;idx++) {
 1190              		.loc 1 493 29 discriminator 3 view .LVU230
 493:lcd.c         ****        for (idx=0;idx<76800;idx++) {
 1191              		.loc 1 493 19 discriminator 3 view .LVU231
 493:lcd.c         ****        for (idx=0;idx<76800;idx++) {
 1192              		.loc 1 493 8 is_stmt 0 discriminator 3 view .LVU232
 1193 001a 013C     		subs	r4, r4, #1
 1194              	.LVL96:
 493:lcd.c         ****        for (idx=0;idx<76800;idx++) {
 1195              		.loc 1 493 8 discriminator 3 view .LVU233
 1196 001c FAD1     		bne	.L74
 495:lcd.c         ****        }
 496:lcd.c         **** }
 1197              		.loc 1 496 1 view .LVU234
 1198 001e 38BD     		pop	{r3, r4, r5, pc}
 1199              		.loc 1 496 1 view .LVU235
 1200              		.cfi_endproc
 1201              	.LFE60:
 1203              		.section	.text.lcd_init,"ax",%progbits
 1204              		.align	1
 1205              		.global	lcd_init
 1206              		.syntax unified
 1207              		.thumb
 1208              		.thumb_func
 1209              		.fpu softvfp
 1211              	lcd_init:
 1212              	.LFB61:
 497:lcd.c         **** 
 498:lcd.c         **** 
 499:lcd.c         **** void lcd_init (void)
 500:lcd.c         **** {
 1213              		.loc 1 500 1 is_stmt 1 view -0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 501:lcd.c         ****       maxx = 240;
 1217              		.loc 1 501 7 view .LVU237
 1218              		.loc 1 501 12 is_stmt 0 view .LVU238
 1219 0000 F022     		movs	r2, #240
 500:lcd.c         ****       maxx = 240;
 1220              		.loc 1 500 1 view .LVU239
 1221 0002 38B5     		push	{r3, r4, r5, lr}
 1222              		.cfi_def_cfa_offset 16
 1223              		.cfi_offset 3, -16
 1224              		.cfi_offset 4, -12
 1225              		.cfi_offset 5, -8
 1226              		.cfi_offset 14, -4
 1227              		.loc 1 501 12 view .LVU240
 1228 0004 DE4B     		ldr	r3, .L85
 502:lcd.c         ****       maxy = 320;
 503:lcd.c         ****       ax = 0;
 1229              		.loc 1 503 10 view .LVU241
 1230 0006 0024     		movs	r4, #0
 501:lcd.c         ****       maxy = 320;
 1231              		.loc 1 501 12 view .LVU242
 1232 0008 1A80     		strh	r2, [r3]	@ movhi
 502:lcd.c         ****       maxy = 320;
 1233              		.loc 1 502 7 is_stmt 1 view .LVU243
 502:lcd.c         ****       maxy = 320;
 1234              		.loc 1 502 12 is_stmt 0 view .LVU244
 1235 000a 4FF4A072 		mov	r2, #320
 1236 000e DD4B     		ldr	r3, .L85+4
 504:lcd.c         ****       ay = 0;
 505:lcd.c         ****       page = 0;
 506:lcd.c         ****       eng_mode = 0;
 507:lcd.c         ****       hangul_mode = 0;
 508:lcd.c         ****       max_col = (maxx / 8);
 1237              		.loc 1 508 15 view .LVU245
 1238 0010 1E25     		movs	r5, #30
 502:lcd.c         ****       ax = 0;
 1239              		.loc 1 502 12 view .LVU246
 1240 0012 1A80     		strh	r2, [r3]	@ movhi
 503:lcd.c         ****       ay = 0;
 1241              		.loc 1 503 7 is_stmt 1 view .LVU247
 509:lcd.c         ****       max_row = (maxy / 16);
 1242              		.loc 1 509 15 is_stmt 0 view .LVU248
 1243 0014 1422     		movs	r2, #20
 503:lcd.c         ****       ay = 0;
 1244              		.loc 1 503 10 view .LVU249
 1245 0016 DC4B     		ldr	r3, .L85+8
 510:lcd.c         ****       foreground_color = WHITE;
 511:lcd.c         ****       background_color = BLACK;
 512:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA0,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1246              		.loc 1 512 7 view .LVU250
 1247 0018 0121     		movs	r1, #1
 503:lcd.c         ****       ay = 0;
 1248              		.loc 1 503 10 view .LVU251
 1249 001a 1C80     		strh	r4, [r3]	@ movhi
 504:lcd.c         ****       page = 0;
 1250              		.loc 1 504 7 is_stmt 1 view .LVU252
 504:lcd.c         ****       page = 0;
 1251              		.loc 1 504 10 is_stmt 0 view .LVU253
 1252 001c DB4B     		ldr	r3, .L85+12
 1253              		.loc 1 512 7 view .LVU254
 1254 001e DC48     		ldr	r0, .L85+16
 504:lcd.c         ****       page = 0;
 1255              		.loc 1 504 10 view .LVU255
 1256 0020 1C80     		strh	r4, [r3]	@ movhi
 505:lcd.c         ****       eng_mode = 0;
 1257              		.loc 1 505 7 is_stmt 1 view .LVU256
 505:lcd.c         ****       eng_mode = 0;
 1258              		.loc 1 505 12 is_stmt 0 view .LVU257
 1259 0022 DC4B     		ldr	r3, .L85+20
 1260 0024 1C80     		strh	r4, [r3]	@ movhi
 506:lcd.c         ****       hangul_mode = 0;
 1261              		.loc 1 506 7 is_stmt 1 view .LVU258
 506:lcd.c         ****       hangul_mode = 0;
 1262              		.loc 1 506 16 is_stmt 0 view .LVU259
 1263 0026 DC4B     		ldr	r3, .L85+24
 1264 0028 1C80     		strh	r4, [r3]	@ movhi
 507:lcd.c         ****       max_col = (maxx / 8);
 1265              		.loc 1 507 7 is_stmt 1 view .LVU260
 507:lcd.c         ****       max_col = (maxx / 8);
 1266              		.loc 1 507 19 is_stmt 0 view .LVU261
 1267 002a DC4B     		ldr	r3, .L85+28
 1268 002c 1C70     		strb	r4, [r3]
 508:lcd.c         ****       max_row = (maxy / 16);
 1269              		.loc 1 508 7 is_stmt 1 view .LVU262
 508:lcd.c         ****       max_row = (maxy / 16);
 1270              		.loc 1 508 15 is_stmt 0 view .LVU263
 1271 002e DC4B     		ldr	r3, .L85+32
 1272 0030 1D80     		strh	r5, [r3]	@ movhi
 509:lcd.c         ****       foreground_color = WHITE;
 1273              		.loc 1 509 7 is_stmt 1 view .LVU264
 509:lcd.c         ****       foreground_color = WHITE;
 1274              		.loc 1 509 15 is_stmt 0 view .LVU265
 1275 0032 DC4B     		ldr	r3, .L85+36
 1276 0034 1A80     		strh	r2, [r3]	@ movhi
 510:lcd.c         ****       background_color = BLACK;
 1277              		.loc 1 510 7 is_stmt 1 view .LVU266
 510:lcd.c         ****       background_color = BLACK;
 1278              		.loc 1 510 24 is_stmt 0 view .LVU267
 1279 0036 4FF6FF72 		movw	r2, #65535
 1280 003a DB4B     		ldr	r3, .L85+40
 1281 003c 1A80     		strh	r2, [r3]	@ movhi
 511:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA0,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1282              		.loc 1 511 7 is_stmt 1 view .LVU268
 511:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA0,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1283              		.loc 1 511 24 is_stmt 0 view .LVU269
 1284 003e DB4B     		ldr	r3, .L85+44
 1285              		.loc 1 512 7 view .LVU270
 1286 0040 0322     		movs	r2, #3
 511:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA0,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1287              		.loc 1 511 24 view .LVU271
 1288 0042 1C80     		strh	r4, [r3]	@ movhi
 1289              		.loc 1 512 7 is_stmt 1 view .LVU272
 1290 0044 1023     		movs	r3, #16
 1291 0046 FFF7FEFF 		bl	GPIO_Init_Pin
 1292              	.LVL97:
 513:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA1,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1293              		.loc 1 513 7 view .LVU273
 1294 004a 1023     		movs	r3, #16
 1295 004c 0322     		movs	r2, #3
 1296 004e 0221     		movs	r1, #2
 1297 0050 CF48     		ldr	r0, .L85+16
 1298 0052 FFF7FEFF 		bl	GPIO_Init_Pin
 1299              	.LVL98:
 514:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA2,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1300              		.loc 1 514 7 view .LVU274
 1301 0056 1023     		movs	r3, #16
 1302 0058 0322     		movs	r2, #3
 1303 005a 0421     		movs	r1, #4
 1304 005c CC48     		ldr	r0, .L85+16
 1305 005e FFF7FEFF 		bl	GPIO_Init_Pin
 1306              	.LVL99:
 515:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA3,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1307              		.loc 1 515 7 view .LVU275
 1308 0062 1023     		movs	r3, #16
 1309 0064 0322     		movs	r2, #3
 1310 0066 0821     		movs	r1, #8
 1311 0068 C948     		ldr	r0, .L85+16
 1312 006a FFF7FEFF 		bl	GPIO_Init_Pin
 1313              	.LVL100:
 516:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA4,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1314              		.loc 1 516 7 view .LVU276
 1315 006e 1023     		movs	r3, #16
 1316 0070 0322     		movs	r2, #3
 1317 0072 1946     		mov	r1, r3
 1318 0074 C648     		ldr	r0, .L85+16
 1319 0076 FFF7FEFF 		bl	GPIO_Init_Pin
 1320              	.LVL101:
 517:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA5,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1321              		.loc 1 517 7 view .LVU277
 1322 007a 1023     		movs	r3, #16
 1323 007c 0322     		movs	r2, #3
 1324 007e 2021     		movs	r1, #32
 1325 0080 C348     		ldr	r0, .L85+16
 1326 0082 FFF7FEFF 		bl	GPIO_Init_Pin
 1327              	.LVL102:
 518:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA6,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1328              		.loc 1 518 7 view .LVU278
 1329 0086 1023     		movs	r3, #16
 1330 0088 0322     		movs	r2, #3
 1331 008a 4021     		movs	r1, #64
 1332 008c C048     		ldr	r0, .L85+16
 1333 008e FFF7FEFF 		bl	GPIO_Init_Pin
 1334              	.LVL103:
 519:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA7,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1335              		.loc 1 519 7 view .LVU279
 1336 0092 1023     		movs	r3, #16
 1337 0094 0322     		movs	r2, #3
 1338 0096 8021     		movs	r1, #128
 1339 0098 BD48     		ldr	r0, .L85+16
 1340 009a FFF7FEFF 		bl	GPIO_Init_Pin
 1341              	.LVL104:
 520:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA8,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1342              		.loc 1 520 7 view .LVU280
 1343 009e 1023     		movs	r3, #16
 1344 00a0 0322     		movs	r2, #3
 1345 00a2 4FF48071 		mov	r1, #256
 1346 00a6 BA48     		ldr	r0, .L85+16
 1347 00a8 FFF7FEFF 		bl	GPIO_Init_Pin
 1348              	.LVL105:
 521:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA9,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1349              		.loc 1 521 7 view .LVU281
 1350 00ac 1023     		movs	r3, #16
 1351 00ae 0322     		movs	r2, #3
 1352 00b0 4FF40071 		mov	r1, #512
 1353 00b4 B648     		ldr	r0, .L85+16
 1354 00b6 FFF7FEFF 		bl	GPIO_Init_Pin
 1355              	.LVL106:
 522:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA10,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1356              		.loc 1 522 7 view .LVU282
 1357 00ba 1023     		movs	r3, #16
 1358 00bc 0322     		movs	r2, #3
 1359 00be 4FF48061 		mov	r1, #1024
 1360 00c2 B348     		ldr	r0, .L85+16
 1361 00c4 FFF7FEFF 		bl	GPIO_Init_Pin
 1362              	.LVL107:
 523:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA11,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1363              		.loc 1 523 7 view .LVU283
 1364 00c8 1023     		movs	r3, #16
 1365 00ca 0322     		movs	r2, #3
 1366 00cc 4FF40061 		mov	r1, #2048
 1367 00d0 AF48     		ldr	r0, .L85+16
 1368 00d2 FFF7FEFF 		bl	GPIO_Init_Pin
 1369              	.LVL108:
 524:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA12,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1370              		.loc 1 524 7 view .LVU284
 1371 00d6 1023     		movs	r3, #16
 1372 00d8 0322     		movs	r2, #3
 1373 00da 4FF48051 		mov	r1, #4096
 1374 00de AC48     		ldr	r0, .L85+16
 1375 00e0 FFF7FEFF 		bl	GPIO_Init_Pin
 1376              	.LVL109:
 525:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA13,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1377              		.loc 1 525 7 view .LVU285
 1378 00e4 1023     		movs	r3, #16
 1379 00e6 0322     		movs	r2, #3
 1380 00e8 4FF40051 		mov	r1, #8192
 1381 00ec A848     		ldr	r0, .L85+16
 1382 00ee FFF7FEFF 		bl	GPIO_Init_Pin
 1383              	.LVL110:
 526:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA14,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1384              		.loc 1 526 7 view .LVU286
 1385 00f2 1023     		movs	r3, #16
 1386 00f4 0322     		movs	r2, #3
 1387 00f6 4FF48041 		mov	r1, #16384
 1388 00fa A548     		ldr	r0, .L85+16
 1389 00fc FFF7FEFF 		bl	GPIO_Init_Pin
 1390              	.LVL111:
 527:lcd.c         ****       GPIO_Init_Pin(LCD_DATA_PORT,LCD_DATA15,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1391              		.loc 1 527 7 view .LVU287
 1392 0100 1023     		movs	r3, #16
 1393 0102 0322     		movs	r2, #3
 1394 0104 4FF40041 		mov	r1, #32768
 1395 0108 A148     		ldr	r0, .L85+16
 1396 010a FFF7FEFF 		bl	GPIO_Init_Pin
 1397              	.LVL112:
 528:lcd.c         ****       GPIO_Init_Pin(LCD_CTL_PORT,LCD_CS,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1398              		.loc 1 528 7 view .LVU288
 1399 010e 1023     		movs	r3, #16
 1400 0110 0322     		movs	r2, #3
 1401 0112 4FF48051 		mov	r1, #4096
 1402 0116 A648     		ldr	r0, .L85+48
 1403 0118 FFF7FEFF 		bl	GPIO_Init_Pin
 1404              	.LVL113:
 529:lcd.c         ****       GPIO_Init_Pin(LCD_CTL_PORT,LCD_RS,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1405              		.loc 1 529 7 view .LVU289
 1406 011c 1023     		movs	r3, #16
 1407 011e 0322     		movs	r2, #3
 1408 0120 4FF40051 		mov	r1, #8192
 1409 0124 A248     		ldr	r0, .L85+48
 1410 0126 FFF7FEFF 		bl	GPIO_Init_Pin
 1411              	.LVL114:
 530:lcd.c         ****       GPIO_Init_Pin(LCD_CTL_PORT,LCD_RD,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1412              		.loc 1 530 7 view .LVU290
 1413 012a 1023     		movs	r3, #16
 1414 012c 0322     		movs	r2, #3
 1415 012e 4FF40041 		mov	r1, #32768
 1416 0132 9F48     		ldr	r0, .L85+48
 1417 0134 FFF7FEFF 		bl	GPIO_Init_Pin
 1418              	.LVL115:
 531:lcd.c         ****       GPIO_Init_Pin(LCD_CTL_PORT,LCD_WR,GPIO_Speed_50MHz,GPIO_Mode_Out_PP);
 1419              		.loc 1 531 7 view .LVU291
 1420 0138 1023     		movs	r3, #16
 1421 013a 0322     		movs	r2, #3
 1422 013c 4FF48041 		mov	r1, #16384
 1423 0140 9B48     		ldr	r0, .L85+48
 1424 0142 FFF7FEFF 		bl	GPIO_Init_Pin
 1425              	.LVL116:
 532:lcd.c         ****       lcd_delay(50);
 1426              		.loc 1 532 7 view .LVU292
 1427              	.LBB63:
 1428              	.LBI63:
 458:lcd.c         **** {
 1429              		.loc 1 458 6 view .LVU293
 1430              	.LBB64:
 460:lcd.c         **** }
 1431              		.loc 1 460 7 view .LVU294
 1432 0146 3220     		movs	r0, #50
 1433 0148 FFF7FEFF 		bl	wait_ms
 1434              	.LVL117:
 460:lcd.c         **** }
 1435              		.loc 1 460 7 is_stmt 0 view .LVU295
 1436              	.LBE64:
 1437              	.LBE63:
 533:lcd.c         ****       lcd_write_register(0x0000,0x0001);
 1438              		.loc 1 533 7 is_stmt 1 view .LVU296
 1439 014c 0121     		movs	r1, #1
 1440 014e 2046     		mov	r0, r4
 1441 0150 FFF7FEFF 		bl	lcd_write_register
 1442              	.LVL118:
 534:lcd.c         ****       lcd_delay(50);
 1443              		.loc 1 534 7 view .LVU297
 1444              	.LBB65:
 1445              	.LBI65:
 458:lcd.c         **** {
 1446              		.loc 1 458 6 view .LVU298
 1447              	.LBB66:
 460:lcd.c         **** }
 1448              		.loc 1 460 7 view .LVU299
 1449 0154 3220     		movs	r0, #50
 1450 0156 FFF7FEFF 		bl	wait_ms
 1451              	.LVL119:
 460:lcd.c         **** }
 1452              		.loc 1 460 7 is_stmt 0 view .LVU300
 1453              	.LBE66:
 1454              	.LBE65:
 535:lcd.c         ****       device_code = lcd_read_register(0x0000);
 1455              		.loc 1 535 7 is_stmt 1 view .LVU301
 1456              		.loc 1 535 21 is_stmt 0 view .LVU302
 1457 015a 2046     		mov	r0, r4
 1458 015c FFF7FEFF 		bl	lcd_read_register
 1459              	.LVL120:
 1460              		.loc 1 535 19 view .LVU303
 1461 0160 944B     		ldr	r3, .L85+52
 1462 0162 1880     		strh	r0, [r3]	@ movhi
 536:lcd.c         ****       //s_printf(" Lcd Init -> DeviceCode %4X \r\n",device_code);
 537:lcd.c         ****       if ((device_code == 0x9325) || (device_code == 0x9328)) {
 1463              		.loc 1 537 7 is_stmt 1 view .LVU304
 1464              		.loc 1 537 10 is_stmt 0 view .LVU305
 1465 0164 49F22533 		movw	r3, #37669
 1466 0168 9842     		cmp	r0, r3
 1467 016a 04D0     		beq	.L77
 1468              		.loc 1 537 35 discriminator 1 view .LVU306
 1469 016c 49F22833 		movw	r3, #37672
 1470 0170 9842     		cmp	r0, r3
 1471 0172 40F02181 		bne	.L78
 1472              	.L77:
 538:lcd.c         ****   	 lcd_write_register(0x00e7,0x0010);
 1473              		.loc 1 538 5 is_stmt 1 view .LVU307
 1474 0176 1021     		movs	r1, #16
 1475 0178 E720     		movs	r0, #231
 1476 017a FFF7FEFF 		bl	lcd_write_register
 1477              	.LVL121:
 539:lcd.c         ****          lcd_write_register(0x0000,0x0001);
 1478              		.loc 1 539 10 view .LVU308
 1479 017e 0121     		movs	r1, #1
 1480 0180 0020     		movs	r0, #0
 1481 0182 FFF7FEFF 		bl	lcd_write_register
 1482              	.LVL122:
 540:lcd.c         ****          lcd_write_register(0x0001,0x0100);
 1483              		.loc 1 540 10 view .LVU309
 1484 0186 4FF48071 		mov	r1, #256
 1485 018a 0120     		movs	r0, #1
 1486 018c FFF7FEFF 		bl	lcd_write_register
 1487              	.LVL123:
 541:lcd.c         ****          lcd_write_register(0x0002,0x0700);
 1488              		.loc 1 541 10 view .LVU310
 1489 0190 4FF4E061 		mov	r1, #1792
 1490 0194 0220     		movs	r0, #2
 1491 0196 FFF7FEFF 		bl	lcd_write_register
 1492              	.LVL124:
 542:lcd.c         ****          lcd_write_register(0x0003,0x1030);
 1493              		.loc 1 542 10 view .LVU311
 1494 019a 41F23001 		movw	r1, #4144
 1495 019e 0320     		movs	r0, #3
 1496 01a0 FFF7FEFF 		bl	lcd_write_register
 1497              	.LVL125:
 543:lcd.c         ****          lcd_write_register(0x0004,0x0000);
 1498              		.loc 1 543 10 view .LVU312
 1499 01a4 0021     		movs	r1, #0
 1500 01a6 0420     		movs	r0, #4
 1501 01a8 FFF7FEFF 		bl	lcd_write_register
 1502              	.LVL126:
 544:lcd.c         ****          lcd_write_register(0x0008,0x0207);
 1503              		.loc 1 544 10 view .LVU313
 1504 01ac 40F20721 		movw	r1, #519
 1505 01b0 0820     		movs	r0, #8
 1506 01b2 FFF7FEFF 		bl	lcd_write_register
 1507              	.LVL127:
 545:lcd.c         ****          lcd_write_register(0x0009,0x0000);
 1508              		.loc 1 545 10 view .LVU314
 1509 01b6 0021     		movs	r1, #0
 1510 01b8 0920     		movs	r0, #9
 1511 01ba FFF7FEFF 		bl	lcd_write_register
 1512              	.LVL128:
 546:lcd.c         ****          lcd_write_register(0x000a,0x0000);
 1513              		.loc 1 546 10 view .LVU315
 1514 01be 0021     		movs	r1, #0
 1515 01c0 0A20     		movs	r0, #10
 1516 01c2 FFF7FEFF 		bl	lcd_write_register
 1517              	.LVL129:
 547:lcd.c         ****          lcd_write_register(0x000c,0x0001);
 1518              		.loc 1 547 10 view .LVU316
 1519 01c6 0121     		movs	r1, #1
 1520 01c8 0C20     		movs	r0, #12
 1521 01ca FFF7FEFF 		bl	lcd_write_register
 1522              	.LVL130:
 548:lcd.c         ****          lcd_write_register(0x000d,0x0000);
 1523              		.loc 1 548 10 view .LVU317
 1524 01ce 0021     		movs	r1, #0
 1525 01d0 0D20     		movs	r0, #13
 1526 01d2 FFF7FEFF 		bl	lcd_write_register
 1527              	.LVL131:
 549:lcd.c         ****          lcd_write_register(0x000f,0x0000);
 1528              		.loc 1 549 10 view .LVU318
 1529 01d6 0021     		movs	r1, #0
 1530 01d8 0F20     		movs	r0, #15
 1531 01da FFF7FEFF 		bl	lcd_write_register
 1532              	.LVL132:
 550:lcd.c         ****          lcd_write_register(0x0010,0x0000);
 1533              		.loc 1 550 10 view .LVU319
 1534 01de 0021     		movs	r1, #0
 1535 01e0 1020     		movs	r0, #16
 1536 01e2 FFF7FEFF 		bl	lcd_write_register
 1537              	.LVL133:
 551:lcd.c         ****          lcd_write_register(0x0011,0x0007);
 1538              		.loc 1 551 10 view .LVU320
 1539 01e6 0721     		movs	r1, #7
 1540 01e8 1120     		movs	r0, #17
 1541 01ea FFF7FEFF 		bl	lcd_write_register
 1542              	.LVL134:
 552:lcd.c         ****          lcd_write_register(0x0012,0x0000);
 1543              		.loc 1 552 10 view .LVU321
 1544 01ee 0021     		movs	r1, #0
 1545 01f0 1220     		movs	r0, #18
 1546 01f2 FFF7FEFF 		bl	lcd_write_register
 1547              	.LVL135:
 553:lcd.c         ****          lcd_write_register(0x0013,0x0000);
 1548              		.loc 1 553 10 view .LVU322
 1549 01f6 0021     		movs	r1, #0
 1550 01f8 1320     		movs	r0, #19
 1551 01fa FFF7FEFF 		bl	lcd_write_register
 1552              	.LVL136:
 554:lcd.c         ****          lcd_delay(50);
 1553              		.loc 1 554 10 view .LVU323
 1554              	.LBB67:
 1555              	.LBI67:
 458:lcd.c         **** {
 1556              		.loc 1 458 6 view .LVU324
 1557              	.LBB68:
 460:lcd.c         **** }
 1558              		.loc 1 460 7 view .LVU325
 1559 01fe 3220     		movs	r0, #50
 1560 0200 FFF7FEFF 		bl	wait_ms
 1561              	.LVL137:
 460:lcd.c         **** }
 1562              		.loc 1 460 7 is_stmt 0 view .LVU326
 1563              	.LBE68:
 1564              	.LBE67:
 555:lcd.c         ****          lcd_write_register(0x0010,0x1590);
 1565              		.loc 1 555 10 is_stmt 1 view .LVU327
 1566 0204 41F29051 		movw	r1, #5520
 1567 0208 1020     		movs	r0, #16
 1568 020a FFF7FEFF 		bl	lcd_write_register
 1569              	.LVL138:
 556:lcd.c         ****          lcd_write_register(0x0011,0x0227);
 1570              		.loc 1 556 10 view .LVU328
 1571 020e 40F22721 		movw	r1, #551
 1572 0212 1120     		movs	r0, #17
 1573 0214 FFF7FEFF 		bl	lcd_write_register
 1574              	.LVL139:
 557:lcd.c         ****          lcd_delay(50);
 1575              		.loc 1 557 10 view .LVU329
 1576              	.LBB69:
 1577              	.LBI69:
 458:lcd.c         **** {
 1578              		.loc 1 458 6 view .LVU330
 1579              	.LBB70:
 460:lcd.c         **** }
 1580              		.loc 1 460 7 view .LVU331
 1581 0218 3220     		movs	r0, #50
 1582 021a FFF7FEFF 		bl	wait_ms
 1583              	.LVL140:
 460:lcd.c         **** }
 1584              		.loc 1 460 7 is_stmt 0 view .LVU332
 1585              	.LBE70:
 1586              	.LBE69:
 558:lcd.c         ****          lcd_write_register(0x0012,0x009c);
 1587              		.loc 1 558 10 is_stmt 1 view .LVU333
 1588 021e 9C21     		movs	r1, #156
 1589 0220 1220     		movs	r0, #18
 1590 0222 FFF7FEFF 		bl	lcd_write_register
 1591              	.LVL141:
 559:lcd.c         ****          lcd_delay(50);
 1592              		.loc 1 559 10 view .LVU334
 1593              	.LBB71:
 1594              	.LBI71:
 458:lcd.c         **** {
 1595              		.loc 1 458 6 view .LVU335
 1596              	.LBB72:
 460:lcd.c         **** }
 1597              		.loc 1 460 7 view .LVU336
 1598 0226 3220     		movs	r0, #50
 1599 0228 FFF7FEFF 		bl	wait_ms
 1600              	.LVL142:
 460:lcd.c         **** }
 1601              		.loc 1 460 7 is_stmt 0 view .LVU337
 1602              	.LBE72:
 1603              	.LBE71:
 560:lcd.c         ****          lcd_write_register(0x0013,0x1900);
 1604              		.loc 1 560 10 is_stmt 1 view .LVU338
 1605 022c 4FF4C851 		mov	r1, #6400
 1606 0230 1320     		movs	r0, #19
 1607 0232 FFF7FEFF 		bl	lcd_write_register
 1608              	.LVL143:
 561:lcd.c         ****          lcd_write_register(0x0029,0x0023);
 1609              		.loc 1 561 10 view .LVU339
 1610 0236 2321     		movs	r1, #35
 1611 0238 2920     		movs	r0, #41
 1612 023a FFF7FEFF 		bl	lcd_write_register
 1613              	.LVL144:
 562:lcd.c         ****          lcd_write_register(0x002b,0x000e);
 1614              		.loc 1 562 10 view .LVU340
 1615 023e 0E21     		movs	r1, #14
 1616 0240 2B20     		movs	r0, #43
 1617 0242 FFF7FEFF 		bl	lcd_write_register
 1618              	.LVL145:
 563:lcd.c         ****          lcd_delay(50);
 1619              		.loc 1 563 10 view .LVU341
 1620              	.LBB73:
 1621              	.LBI73:
 458:lcd.c         **** {
 1622              		.loc 1 458 6 view .LVU342
 1623              	.LBB74:
 460:lcd.c         **** }
 1624              		.loc 1 460 7 view .LVU343
 1625 0246 3220     		movs	r0, #50
 1626 0248 FFF7FEFF 		bl	wait_ms
 1627              	.LVL146:
 460:lcd.c         **** }
 1628              		.loc 1 460 7 is_stmt 0 view .LVU344
 1629              	.LBE74:
 1630              	.LBE73:
 564:lcd.c         ****          lcd_write_register(0x0020,0x0000);
 1631              		.loc 1 564 10 is_stmt 1 view .LVU345
 1632 024c 0021     		movs	r1, #0
 1633 024e 2020     		movs	r0, #32
 1634 0250 FFF7FEFF 		bl	lcd_write_register
 1635              	.LVL147:
 565:lcd.c         ****          lcd_write_register(0x0021,0x013f);
 1636              		.loc 1 565 10 view .LVU346
 1637 0254 40F23F11 		movw	r1, #319
 1638 0258 2120     		movs	r0, #33
 1639 025a FFF7FEFF 		bl	lcd_write_register
 1640              	.LVL148:
 566:lcd.c         **** 	 lcd_delay(50);
 1641              		.loc 1 566 3 view .LVU347
 1642              	.LBB75:
 1643              	.LBI75:
 458:lcd.c         **** {
 1644              		.loc 1 458 6 view .LVU348
 1645              	.LBB76:
 460:lcd.c         **** }
 1646              		.loc 1 460 7 view .LVU349
 1647 025e 3220     		movs	r0, #50
 1648 0260 FFF7FEFF 		bl	wait_ms
 1649              	.LVL149:
 460:lcd.c         **** }
 1650              		.loc 1 460 7 is_stmt 0 view .LVU350
 1651              	.LBE76:
 1652              	.LBE75:
 567:lcd.c         ****          lcd_write_register(0x0030,0x0007);
 1653              		.loc 1 567 10 is_stmt 1 view .LVU351
 1654 0264 0721     		movs	r1, #7
 1655 0266 3020     		movs	r0, #48
 1656 0268 FFF7FEFF 		bl	lcd_write_register
 1657              	.LVL150:
 568:lcd.c         ****          lcd_write_register(0x0031,0x0707);
 1658              		.loc 1 568 10 view .LVU352
 1659 026c 40F20771 		movw	r1, #1799
 1660 0270 3120     		movs	r0, #49
 1661 0272 FFF7FEFF 		bl	lcd_write_register
 1662              	.LVL151:
 569:lcd.c         ****          lcd_write_register(0x0032,0x0006);
 1663              		.loc 1 569 10 view .LVU353
 1664 0276 0621     		movs	r1, #6
 1665 0278 3220     		movs	r0, #50
 1666 027a FFF7FEFF 		bl	lcd_write_register
 1667              	.LVL152:
 570:lcd.c         ****          lcd_write_register(0x0035,0x0704);
 1668              		.loc 1 570 10 view .LVU354
 1669 027e 40F20471 		movw	r1, #1796
 1670 0282 3520     		movs	r0, #53
 1671 0284 FFF7FEFF 		bl	lcd_write_register
 1672              	.LVL153:
 571:lcd.c         ****          lcd_write_register(0x0036,0x1f04);
 1673              		.loc 1 571 10 view .LVU355
 1674 0288 41F60471 		movw	r1, #7940
 1675 028c 3620     		movs	r0, #54
 1676 028e FFF7FEFF 		bl	lcd_write_register
 1677              	.LVL154:
 572:lcd.c         ****          lcd_write_register(0x0037,0x0004);
 1678              		.loc 1 572 10 view .LVU356
 1679 0292 0421     		movs	r1, #4
 1680 0294 3720     		movs	r0, #55
 1681 0296 FFF7FEFF 		bl	lcd_write_register
 1682              	.LVL155:
 573:lcd.c         ****          lcd_write_register(0x0038,0x0000);
 1683              		.loc 1 573 10 view .LVU357
 1684 029a 0021     		movs	r1, #0
 1685 029c 3820     		movs	r0, #56
 1686 029e FFF7FEFF 		bl	lcd_write_register
 1687              	.LVL156:
 574:lcd.c         ****          lcd_write_register(0x0039,0x0706);
 1688              		.loc 1 574 10 view .LVU358
 1689 02a2 40F20671 		movw	r1, #1798
 1690 02a6 3920     		movs	r0, #57
 1691 02a8 FFF7FEFF 		bl	lcd_write_register
 1692              	.LVL157:
 575:lcd.c         ****          lcd_write_register(0x003c,0x0701);
 1693              		.loc 1 575 10 view .LVU359
 1694 02ac 40F20171 		movw	r1, #1793
 1695 02b0 3C20     		movs	r0, #60
 1696 02b2 FFF7FEFF 		bl	lcd_write_register
 1697              	.LVL158:
 576:lcd.c         ****          lcd_write_register(0x003d,0x000f);
 1698              		.loc 1 576 10 view .LVU360
 1699 02b6 0F21     		movs	r1, #15
 1700 02b8 3D20     		movs	r0, #61
 1701 02ba FFF7FEFF 		bl	lcd_write_register
 1702              	.LVL159:
 577:lcd.c         ****          lcd_delay(50);
 1703              		.loc 1 577 10 view .LVU361
 1704              	.LBB77:
 1705              	.LBI77:
 458:lcd.c         **** {
 1706              		.loc 1 458 6 view .LVU362
 1707              	.LBB78:
 460:lcd.c         **** }
 1708              		.loc 1 460 7 view .LVU363
 1709 02be 3220     		movs	r0, #50
 1710 02c0 FFF7FEFF 		bl	wait_ms
 1711              	.LVL160:
 460:lcd.c         **** }
 1712              		.loc 1 460 7 is_stmt 0 view .LVU364
 1713              	.LBE78:
 1714              	.LBE77:
 578:lcd.c         ****          lcd_write_register(0x0050,0x0000);
 1715              		.loc 1 578 10 is_stmt 1 view .LVU365
 1716 02c4 0021     		movs	r1, #0
 1717 02c6 5020     		movs	r0, #80
 1718 02c8 FFF7FEFF 		bl	lcd_write_register
 1719              	.LVL161:
 579:lcd.c         ****          lcd_write_register(0x0051,0x00ef);
 1720              		.loc 1 579 10 view .LVU366
 1721 02cc EF21     		movs	r1, #239
 1722 02ce 5120     		movs	r0, #81
 1723 02d0 FFF7FEFF 		bl	lcd_write_register
 1724              	.LVL162:
 580:lcd.c         ****          lcd_write_register(0x0052,0x0000);
 1725              		.loc 1 580 10 view .LVU367
 1726 02d4 0021     		movs	r1, #0
 1727 02d6 5220     		movs	r0, #82
 1728 02d8 FFF7FEFF 		bl	lcd_write_register
 1729              	.LVL163:
 581:lcd.c         ****          lcd_write_register(0x0053,0x013f);
 1730              		.loc 1 581 10 view .LVU368
 1731 02dc 40F23F11 		movw	r1, #319
 1732 02e0 5320     		movs	r0, #83
 1733 02e2 FFF7FEFF 		bl	lcd_write_register
 1734              	.LVL164:
 582:lcd.c         ****          lcd_write_register(0x0060,0xa700);
 1735              		.loc 1 582 10 view .LVU369
 1736 02e6 4FF42741 		mov	r1, #42752
 1737 02ea 6020     		movs	r0, #96
 1738 02ec FFF7FEFF 		bl	lcd_write_register
 1739              	.LVL165:
 583:lcd.c         ****          lcd_write_register(0x0061,0x0001);
 1740              		.loc 1 583 10 view .LVU370
 1741 02f0 0121     		movs	r1, #1
 1742 02f2 6120     		movs	r0, #97
 1743 02f4 FFF7FEFF 		bl	lcd_write_register
 1744              	.LVL166:
 584:lcd.c         ****          lcd_write_register(0x006a,0x0000);
 1745              		.loc 1 584 10 view .LVU371
 1746 02f8 0021     		movs	r1, #0
 1747 02fa 6A20     		movs	r0, #106
 1748 02fc FFF7FEFF 		bl	lcd_write_register
 1749              	.LVL167:
 585:lcd.c         ****          lcd_write_register(0x0080,0x0000);
 1750              		.loc 1 585 10 view .LVU372
 1751 0300 0021     		movs	r1, #0
 1752 0302 8020     		movs	r0, #128
 1753 0304 FFF7FEFF 		bl	lcd_write_register
 1754              	.LVL168:
 586:lcd.c         ****          lcd_write_register(0x0081,0x0000);
 1755              		.loc 1 586 10 view .LVU373
 1756 0308 0021     		movs	r1, #0
 1757 030a 8120     		movs	r0, #129
 1758 030c FFF7FEFF 		bl	lcd_write_register
 1759              	.LVL169:
 587:lcd.c         ****          lcd_write_register(0x0082,0x0000);
 1760              		.loc 1 587 10 view .LVU374
 1761 0310 0021     		movs	r1, #0
 1762 0312 8220     		movs	r0, #130
 1763 0314 FFF7FEFF 		bl	lcd_write_register
 1764              	.LVL170:
 588:lcd.c         ****          lcd_write_register(0x0083,0x0000);
 1765              		.loc 1 588 10 view .LVU375
 1766 0318 0021     		movs	r1, #0
 1767 031a 8320     		movs	r0, #131
 1768 031c FFF7FEFF 		bl	lcd_write_register
 1769              	.LVL171:
 589:lcd.c         ****          lcd_write_register(0x0084,0x0000);
 1770              		.loc 1 589 10 view .LVU376
 1771 0320 0021     		movs	r1, #0
 1772 0322 8420     		movs	r0, #132
 1773 0324 FFF7FEFF 		bl	lcd_write_register
 1774              	.LVL172:
 590:lcd.c         ****          lcd_write_register(0x0085,0x0000);
 1775              		.loc 1 590 10 view .LVU377
 1776 0328 0021     		movs	r1, #0
 1777 032a 8520     		movs	r0, #133
 1778 032c FFF7FEFF 		bl	lcd_write_register
 1779              	.LVL173:
 591:lcd.c         ****          lcd_write_register(0x0090,0x0010);
 1780              		.loc 1 591 10 view .LVU378
 1781 0330 1021     		movs	r1, #16
 1782 0332 9020     		movs	r0, #144
 1783 0334 FFF7FEFF 		bl	lcd_write_register
 1784              	.LVL174:
 592:lcd.c         ****          lcd_write_register(0x0092,0x0000);
 1785              		.loc 1 592 10 view .LVU379
 1786 0338 0021     		movs	r1, #0
 1787 033a 9220     		movs	r0, #146
 1788 033c FFF7FEFF 		bl	lcd_write_register
 1789              	.LVL175:
 593:lcd.c         ****          lcd_write_register(0x0093,0x0003);
 1790              		.loc 1 593 10 view .LVU380
 1791 0340 0321     		movs	r1, #3
 1792 0342 9320     		movs	r0, #147
 1793 0344 FFF7FEFF 		bl	lcd_write_register
 1794              	.LVL176:
 594:lcd.c         ****          lcd_write_register(0x0095,0x0110);
 1795              		.loc 1 594 10 view .LVU381
 1796 0348 4FF48871 		mov	r1, #272
 1797 034c 9520     		movs	r0, #149
 1798 034e FFF7FEFF 		bl	lcd_write_register
 1799              	.LVL177:
 595:lcd.c         ****          lcd_write_register(0x0097,0x0000);
 1800              		.loc 1 595 10 view .LVU382
 1801 0352 0021     		movs	r1, #0
 1802 0354 9720     		movs	r0, #151
 1803 0356 FFF7FEFF 		bl	lcd_write_register
 1804              	.LVL178:
 596:lcd.c         ****          lcd_write_register(0x0098,0x0000);
 1805              		.loc 1 596 10 view .LVU383
 1806 035a 0021     		movs	r1, #0
 1807 035c 9820     		movs	r0, #152
 1808 035e FFF7FEFF 		bl	lcd_write_register
 1809              	.LVL179:
 597:lcd.c         ****          lcd_write_register(0x0007,0x0133);
 1810              		.loc 1 597 10 view .LVU384
 1811 0362 40F23311 		movw	r1, #307
 1812 0366 0720     		movs	r0, #7
 1813 0368 FFF7FEFF 		bl	lcd_write_register
 1814              	.LVL180:
 598:lcd.c         ****          lcd_write_register(0x0020,0x0000);
 1815              		.loc 1 598 10 view .LVU385
 1816 036c 0021     		movs	r1, #0
 1817 036e 2020     		movs	r0, #32
 1818 0370 FFF7FEFF 		bl	lcd_write_register
 1819              	.LVL181:
 599:lcd.c         ****          lcd_write_register(0x0021,0x013f);
 1820              		.loc 1 599 10 view .LVU386
 1821 0374 40F23F11 		movw	r1, #319
 1822 0378 2120     		movs	r0, #33
 1823              	.L83:
 600:lcd.c         ****       }	else if ((device_code == 0x9320) || (device_code == 0x9300)) {
 601:lcd.c         **** 	 lcd_write_register(0x00,0x0000);
 602:lcd.c         **** 	 lcd_write_register(0x01,0x0100);
 603:lcd.c         **** 	 lcd_write_register(0x02,0x0700);
 604:lcd.c         **** 	 lcd_write_register(0x03,0x1030);
 605:lcd.c         **** 	 lcd_write_register(0x04,0x0000);
 606:lcd.c         **** 	 lcd_write_register(0x08,0x0202);
 607:lcd.c         **** 	 lcd_write_register(0x09,0x0000);
 608:lcd.c         **** 	 lcd_write_register(0x0a,0x0000);
 609:lcd.c         **** 	 lcd_write_register(0x0c,(1 << 0));
 610:lcd.c         **** 	 lcd_write_register(0x0d,0x0000);
 611:lcd.c         **** 	 lcd_write_register(0x0f,0x0000);
 612:lcd.c         **** 	 lcd_delay(50);
 613:lcd.c         **** 	 lcd_write_register(0x07,0x0101);
 614:lcd.c         **** 	 lcd_delay(50);
 615:lcd.c         **** 	 lcd_write_register(0x10,(1 << 12) | (0 << 8) | (1 << 7) | (1 << 6) | (0 << 4));
 616:lcd.c         **** 	 lcd_write_register(0x11,0x0007);
 617:lcd.c         **** 	 lcd_write_register(0x12,(1 << 8) | (1 << 4) | (0 << 0));
 618:lcd.c         **** 	 lcd_write_register(0x13,0x0b00);
 619:lcd.c         **** 	 lcd_write_register(0x29,0x0000);
 620:lcd.c         **** 	 lcd_write_register(0x2b,(1 << 14) | (1 << 4));
 621:lcd.c         **** 	 lcd_write_register(0x50,0);
 622:lcd.c         **** 	 lcd_write_register(0x51,239);
 623:lcd.c         **** 	 lcd_write_register(0x52,0);
 624:lcd.c         **** 	 lcd_write_register(0x53,319);
 625:lcd.c         **** 	 lcd_write_register(0x60,0x2700);
 626:lcd.c         **** 	 lcd_write_register(0x61,0x0001);
 627:lcd.c         **** 	 lcd_write_register(0x6a,0x0000);
 628:lcd.c         **** 	 lcd_write_register(0x80,0x0000);
 629:lcd.c         **** 	 lcd_write_register(0x81,0x0000);
 630:lcd.c         **** 	 lcd_write_register(0x82,0x0000);
 631:lcd.c         **** 	 lcd_write_register(0x83,0x0000);
 632:lcd.c         **** 	 lcd_write_register(0x84,0x0000);
 633:lcd.c         **** 	 lcd_write_register(0x85,0x0000);
 634:lcd.c         **** 	 lcd_write_register(0x90,(0 << 7) | (16 << 0));
 635:lcd.c         **** 	 lcd_write_register(0x92,0x0000);
 636:lcd.c         **** 	 lcd_write_register(0x93,0x0001);
 637:lcd.c         **** 	 lcd_write_register(0x95,0x0110);
 638:lcd.c         **** 	 lcd_write_register(0x97,(0 << 8));
 639:lcd.c         **** 	 lcd_write_register(0x98,0x0000);
 640:lcd.c         **** 	 lcd_write_register(0x07,0x0173);
 641:lcd.c         ****       }	else if (device_code == 0x1505)	{
 642:lcd.c         ****          lcd_write_register(0x0007,0x0000);
 643:lcd.c         ****          lcd_delay(50);
 644:lcd.c         ****          lcd_write_register(0x0012,0x011C);
 645:lcd.c         ****          lcd_write_register(0x00A4,0x0001);
 646:lcd.c         ****          lcd_write_register(0x0008,0x000F);
 647:lcd.c         ****          lcd_write_register(0x000A,0x0008);
 648:lcd.c         ****          lcd_write_register(0x000D,0x0008);
 649:lcd.c         ****          lcd_write_register(0x0030,0x0707);
 650:lcd.c         ****          lcd_write_register(0x0031,0x0007);
 651:lcd.c         ****          lcd_write_register(0x0032,0x0603);
 652:lcd.c         ****          lcd_write_register(0x0033,0x0700);
 653:lcd.c         ****          lcd_write_register(0x0034,0x0202);
 654:lcd.c         ****          lcd_write_register(0x0035,0x0002);
 655:lcd.c         ****          lcd_write_register(0x0036,0x1F0F);
 656:lcd.c         ****          lcd_write_register(0x0037,0x0707);
 657:lcd.c         ****          lcd_write_register(0x0038,0x0000);
 658:lcd.c         ****          lcd_write_register(0x0039,0x0000);
 659:lcd.c         ****          lcd_write_register(0x003A,0x0707);
 660:lcd.c         ****          lcd_write_register(0x003B,0x0000);
 661:lcd.c         ****          lcd_write_register(0x003C,0x0007);
 662:lcd.c         ****          lcd_write_register(0x003D,0x0000);
 663:lcd.c         ****          lcd_delay(50);
 664:lcd.c         ****          lcd_write_register(0x0007,0x0001);
 665:lcd.c         ****          lcd_write_register(0x0017,0x0001);
 666:lcd.c         ****          lcd_delay(50);
 667:lcd.c         ****          lcd_write_register(0x0010,0x17A0);
 668:lcd.c         ****          lcd_write_register(0x0011,0x0217);
 669:lcd.c         ****          lcd_write_register(0x0012,0x011E);
 670:lcd.c         ****          lcd_write_register(0x0013,0x0F00);
 671:lcd.c         ****          lcd_write_register(0x002A,0x0000);
 672:lcd.c         ****          lcd_write_register(0x0029,0x000A);
 673:lcd.c         ****          lcd_write_register(0x0012,0x013E);
 674:lcd.c         ****          lcd_write_register(0x0050,0x0000);
 675:lcd.c         ****          lcd_write_register(0x0051,0x00EF);
 676:lcd.c         ****          lcd_write_register(0x0052,0x0000);
 677:lcd.c         ****          lcd_write_register(0x0053,0x013F);
 678:lcd.c         ****          lcd_write_register(0x0060,0x2700);
 679:lcd.c         ****          lcd_write_register(0x0061,0x0001);
 680:lcd.c         ****          lcd_write_register(0x006A,0x0000);
 681:lcd.c         ****          lcd_write_register(0x0080,0x0000);
 682:lcd.c         ****          lcd_write_register(0x0081,0x0000);
 683:lcd.c         ****          lcd_write_register(0x0082,0x0000);
 684:lcd.c         ****          lcd_write_register(0x0083,0x0000);
 685:lcd.c         ****          lcd_write_register(0x0084,0x0000);
 686:lcd.c         ****          lcd_write_register(0x0085,0x0000);
 687:lcd.c         ****          lcd_write_register(0x0090,0x0013);
 688:lcd.c         ****          lcd_write_register(0x0092,0x0300);
 689:lcd.c         ****          lcd_write_register(0x0093,0x0005);
 690:lcd.c         ****          lcd_write_register(0x0095,0x0000);
 691:lcd.c         ****          lcd_write_register(0x0097,0x0000);
 692:lcd.c         ****          lcd_write_register(0x0098,0x0000);
 693:lcd.c         ****          lcd_write_register(0x0001,0x0100);
 694:lcd.c         ****          lcd_write_register(0x0002,0x0700);
 695:lcd.c         ****          lcd_write_register(0x0003,0x1030);
 696:lcd.c         ****          lcd_write_register(0x0004,0x0000);
 697:lcd.c         ****          lcd_write_register(0x000C,0x0000);
 698:lcd.c         ****          lcd_write_register(0x000F,0x0000);
 699:lcd.c         ****          lcd_write_register(0x0020,0x0000);
 700:lcd.c         ****          lcd_write_register(0x0021,0x0000);
 701:lcd.c         ****          lcd_write_register(0x0007,0x0021);
 702:lcd.c         ****          lcd_delay(200);
 703:lcd.c         ****          lcd_write_register(0x0007,0x0061);
 704:lcd.c         ****          lcd_delay(200);
 705:lcd.c         ****          lcd_write_register(0x0007,0x0173);
 706:lcd.c         ****          lcd_delay(200);
 707:lcd.c         ****       }	else if (device_code == 0x8989) {
 708:lcd.c         **** 	 lcd_write_register(0x0000,0x0001);
 709:lcd.c         ****     	 lcd_write_register(0x0003,0xA8A4);
 710:lcd.c         ****     	 lcd_write_register(0x000C,0x0000);
 711:lcd.c         ****     	 lcd_write_register(0x000D,0x080C);
 712:lcd.c         ****     	 lcd_write_register(0x000E,0x2B00);
 713:lcd.c         ****     	 lcd_write_register(0x001E,0x00B0);
 714:lcd.c         ****     	 lcd_write_register(0x0001,0x2B3F);
 715:lcd.c         ****     	 lcd_write_register(0x0002,0x0600);
 716:lcd.c         ****     	 lcd_write_register(0x0010,0x0000);
 717:lcd.c         ****     	 lcd_write_register(0x0011,0x6070);
 718:lcd.c         ****     	 lcd_write_register(0x0005,0x0000);
 719:lcd.c         ****     	 lcd_write_register(0x0006,0x0000);
 720:lcd.c         ****     	 lcd_write_register(0x0016,0xEF1C);
 721:lcd.c         ****     	 lcd_write_register(0x0017,0x0003);
 722:lcd.c         ****     	 lcd_write_register(0x0007,0x0233);
 723:lcd.c         ****     	 lcd_write_register(0x000B,0x0000);
 724:lcd.c         ****     	 lcd_write_register(0x000F,0x0000);
 725:lcd.c         ****     	 lcd_write_register(0x0041,0x0000);
 726:lcd.c         ****     	 lcd_write_register(0x0042,0x0000);
 727:lcd.c         ****     	 lcd_write_register(0x0048,0x0000);
 728:lcd.c         ****     	 lcd_write_register(0x0049,0x013F);
 729:lcd.c         ****     	 lcd_write_register(0x004A,0x0000);
 730:lcd.c         ****     	 lcd_write_register(0x004B,0x0000);
 731:lcd.c         ****     	 lcd_write_register(0x0044,0xEF00);
 732:lcd.c         ****     	 lcd_write_register(0x0045,0x0000);
 733:lcd.c         ****     	 lcd_write_register(0x0046,0x013F);
 734:lcd.c         ****     	 lcd_write_register(0x0030,0x0707);
 735:lcd.c         ****     	 lcd_write_register(0x0031,0x0204);
 736:lcd.c         ****     	 lcd_write_register(0x0032,0x0204);
 737:lcd.c         ****     	 lcd_write_register(0x0033,0x0502);
 738:lcd.c         ****     	 lcd_write_register(0x0034,0x0507);
 739:lcd.c         ****     	 lcd_write_register(0x0035,0x0204);
 740:lcd.c         ****     	 lcd_write_register(0x0036,0x0204);
 741:lcd.c         ****     	 lcd_write_register(0x0037,0x0502);
 742:lcd.c         ****     	 lcd_write_register(0x003A,0x0302);
 743:lcd.c         ****     	 lcd_write_register(0x003B,0x0302);
 744:lcd.c         ****     	 lcd_write_register(0x0023,0x0000);
 745:lcd.c         ****     	 lcd_write_register(0x0024,0x0000);
 746:lcd.c         ****     	 lcd_write_register(0x0025,0x8000);
 747:lcd.c         ****     	 lcd_write_register(0x004f,0);
 748:lcd.c         ****     	 lcd_write_register(0x004e,0);
 749:lcd.c         ****       }	else if (device_code == 0x8999) {
 750:lcd.c         **** 	 /************* Start Initial Sequence **********/
 751:lcd.c         **** 	 lcd_write_register(0x00,0x0001);
 752:lcd.c         **** 	 lcd_write_register(0x01,0x3B3F);
 753:lcd.c         **** 	 lcd_write_register(0x02,0x0600);
 754:lcd.c         **** 	 /************* Power control setup ***********/
 755:lcd.c         **** 	 lcd_write_register(0x0C,0x0007);
 756:lcd.c         **** 	 lcd_write_register(0x0D,0x0006);
 757:lcd.c         **** 	 lcd_write_register(0x0E,0x3200);
 758:lcd.c         **** 	 lcd_write_register(0x1E,0x00BB);
 759:lcd.c         **** 	 lcd_write_register(0x03,0x6A64);
 760:lcd.c         **** 	 //************ RAM position control **********/
 761:lcd.c         **** 	 lcd_write_register(0x0F,0x0000);
 762:lcd.c         **** 	 lcd_write_register(0x44,0xEF00);
 763:lcd.c         **** 	 lcd_write_register(0x45,0x0000);
 764:lcd.c         **** 	 lcd_write_register(0x46,0x013F);
 765:lcd.c         **** 	 /************* Adjust the Gamma Curve ********/
 766:lcd.c         **** 	 lcd_write_register(0x30,0x0000);
 767:lcd.c         **** 	 lcd_write_register(0x31,0x0706);
 768:lcd.c         **** 	 lcd_write_register(0x32,0x0206);
 769:lcd.c         **** 	 lcd_write_register(0x33,0x0300);
 770:lcd.c         **** 	 lcd_write_register(0x34,0x0002);
 771:lcd.c         **** 	 lcd_write_register(0x35,0x0000);
 772:lcd.c         **** 	 lcd_write_register(0x36,0x0707);
 773:lcd.c         **** 	 lcd_write_register(0x37,0x0200);
 774:lcd.c         **** 	 lcd_write_register(0x3A,0x0908);
 775:lcd.c         **** 	 lcd_write_register(0x3B,0x0F0D);
 776:lcd.c         **** 	 /************* Special command **************/
 777:lcd.c         **** 	 lcd_write_register(0x28,0x0006);
 778:lcd.c         **** 	 lcd_write_register(0x2F,0x12EB);
 779:lcd.c         **** 	 lcd_write_register(0x26,0x7000);
 780:lcd.c         **** 	 lcd_write_register(0x20,0xB0E3);
 781:lcd.c         **** 	 lcd_write_register(0x27,0x0044);
 782:lcd.c         **** 	 lcd_write_register(0x2E,0x7E45);
 783:lcd.c         **** 	 /************* Turn On display **************/
 784:lcd.c         **** 	 lcd_write_register(0x10,0x0000);
 785:lcd.c         **** 	 lcd_delay(30);
 786:lcd.c         **** 	 lcd_write_register(0x11,0x6870);
 787:lcd.c         **** 	 lcd_write_register(0x07,0x0033);
 1824              		.loc 1 787 3 is_stmt 0 view .LVU387
 1825 037a FFF7FEFF 		bl	lcd_write_register
 1826              	.LVL182:
 1827 037e E2E1     		b	.L79
 1828              	.L86:
 1829              		.align	2
 1830              	.L85:
 1831 0380 00000000 		.word	maxx
 1832 0384 00000000 		.word	maxy
 1833 0388 00000000 		.word	ax
 1834 038c 00000000 		.word	ay
 1835 0390 00180140 		.word	1073813504
 1836 0394 00000000 		.word	page
 1837 0398 00000000 		.word	eng_mode
 1838 039c 00000000 		.word	hangul_mode
 1839 03a0 00000000 		.word	max_col
 1840 03a4 00000000 		.word	max_row
 1841 03a8 00000000 		.word	foreground_color
 1842 03ac 00000000 		.word	background_color
 1843 03b0 00140140 		.word	1073812480
 1844 03b4 00000000 		.word	device_code
 1845              	.L78:
 600:lcd.c         ****       }	else if ((device_code == 0x9320) || (device_code == 0x9300)) {
 1846              		.loc 1 600 14 is_stmt 1 discriminator 1 view .LVU388
 600:lcd.c         ****       }	else if ((device_code == 0x9320) || (device_code == 0x9300)) {
 1847              		.loc 1 600 42 is_stmt 0 discriminator 1 view .LVU389
 1848 03b8 20F02003 		bic	r3, r0, #32
 1849 03bc B3F5134F 		cmp	r3, #37632
 1850 03c0 40F0AA80 		bne	.L80
 601:lcd.c         **** 	 lcd_write_register(0x01,0x0100);
 1851              		.loc 1 601 3 is_stmt 1 view .LVU390
 1852 03c4 2146     		mov	r1, r4
 1853 03c6 2046     		mov	r0, r4
 1854 03c8 FFF7FEFF 		bl	lcd_write_register
 1855              	.LVL183:
 602:lcd.c         **** 	 lcd_write_register(0x02,0x0700);
 1856              		.loc 1 602 3 view .LVU391
 1857 03cc 4FF48071 		mov	r1, #256
 1858 03d0 0120     		movs	r0, #1
 1859 03d2 FFF7FEFF 		bl	lcd_write_register
 1860              	.LVL184:
 603:lcd.c         **** 	 lcd_write_register(0x03,0x1030);
 1861              		.loc 1 603 3 view .LVU392
 1862 03d6 4FF4E061 		mov	r1, #1792
 1863 03da 0220     		movs	r0, #2
 1864 03dc FFF7FEFF 		bl	lcd_write_register
 1865              	.LVL185:
 604:lcd.c         **** 	 lcd_write_register(0x04,0x0000);
 1866              		.loc 1 604 3 view .LVU393
 1867 03e0 41F23001 		movw	r1, #4144
 1868 03e4 0320     		movs	r0, #3
 1869 03e6 FFF7FEFF 		bl	lcd_write_register
 1870              	.LVL186:
 605:lcd.c         **** 	 lcd_write_register(0x08,0x0202);
 1871              		.loc 1 605 3 view .LVU394
 1872 03ea 2146     		mov	r1, r4
 1873 03ec 0420     		movs	r0, #4
 1874 03ee FFF7FEFF 		bl	lcd_write_register
 1875              	.LVL187:
 606:lcd.c         **** 	 lcd_write_register(0x09,0x0000);
 1876              		.loc 1 606 3 view .LVU395
 1877 03f2 40F20221 		movw	r1, #514
 1878 03f6 0820     		movs	r0, #8
 1879 03f8 FFF7FEFF 		bl	lcd_write_register
 1880              	.LVL188:
 607:lcd.c         **** 	 lcd_write_register(0x0a,0x0000);
 1881              		.loc 1 607 3 view .LVU396
 1882 03fc 2146     		mov	r1, r4
 1883 03fe 0920     		movs	r0, #9
 1884 0400 FFF7FEFF 		bl	lcd_write_register
 1885              	.LVL189:
 608:lcd.c         **** 	 lcd_write_register(0x0c,(1 << 0));
 1886              		.loc 1 608 3 view .LVU397
 1887 0404 2146     		mov	r1, r4
 1888 0406 0A20     		movs	r0, #10
 1889 0408 FFF7FEFF 		bl	lcd_write_register
 1890              	.LVL190:
 609:lcd.c         **** 	 lcd_write_register(0x0d,0x0000);
 1891              		.loc 1 609 3 view .LVU398
 1892 040c 0121     		movs	r1, #1
 1893 040e 0C20     		movs	r0, #12
 1894 0410 FFF7FEFF 		bl	lcd_write_register
 1895              	.LVL191:
 610:lcd.c         **** 	 lcd_write_register(0x0f,0x0000);
 1896              		.loc 1 610 3 view .LVU399
 1897 0414 2146     		mov	r1, r4
 1898 0416 0D20     		movs	r0, #13
 1899 0418 FFF7FEFF 		bl	lcd_write_register
 1900              	.LVL192:
 611:lcd.c         **** 	 lcd_delay(50);
 1901              		.loc 1 611 3 view .LVU400
 1902 041c 2146     		mov	r1, r4
 1903 041e 0F20     		movs	r0, #15
 1904 0420 FFF7FEFF 		bl	lcd_write_register
 1905              	.LVL193:
 612:lcd.c         **** 	 lcd_write_register(0x07,0x0101);
 1906              		.loc 1 612 3 view .LVU401
 1907              	.LBB79:
 1908              	.LBI79:
 458:lcd.c         **** {
 1909              		.loc 1 458 6 view .LVU402
 1910              	.LBB80:
 460:lcd.c         **** }
 1911              		.loc 1 460 7 view .LVU403
 1912 0424 3220     		movs	r0, #50
 1913 0426 FFF7FEFF 		bl	wait_ms
 1914              	.LVL194:
 460:lcd.c         **** }
 1915              		.loc 1 460 7 is_stmt 0 view .LVU404
 1916              	.LBE80:
 1917              	.LBE79:
 613:lcd.c         **** 	 lcd_delay(50);
 1918              		.loc 1 613 3 is_stmt 1 view .LVU405
 1919 042a 40F20111 		movw	r1, #257
 1920 042e 0720     		movs	r0, #7
 1921 0430 FFF7FEFF 		bl	lcd_write_register
 1922              	.LVL195:
 614:lcd.c         **** 	 lcd_write_register(0x10,(1 << 12) | (0 << 8) | (1 << 7) | (1 << 6) | (0 << 4));
 1923              		.loc 1 614 3 view .LVU406
 1924              	.LBB81:
 1925              	.LBI81:
 458:lcd.c         **** {
 1926              		.loc 1 458 6 view .LVU407
 1927              	.LBB82:
 460:lcd.c         **** }
 1928              		.loc 1 460 7 view .LVU408
 1929 0434 3220     		movs	r0, #50
 1930 0436 FFF7FEFF 		bl	wait_ms
 1931              	.LVL196:
 460:lcd.c         **** }
 1932              		.loc 1 460 7 is_stmt 0 view .LVU409
 1933              	.LBE82:
 1934              	.LBE81:
 615:lcd.c         **** 	 lcd_write_register(0x11,0x0007);
 1935              		.loc 1 615 3 is_stmt 1 view .LVU410
 1936 043a 4FF48651 		mov	r1, #4288
 1937 043e 1020     		movs	r0, #16
 1938 0440 FFF7FEFF 		bl	lcd_write_register
 1939              	.LVL197:
 616:lcd.c         **** 	 lcd_write_register(0x12,(1 << 8) | (1 << 4) | (0 << 0));
 1940              		.loc 1 616 3 view .LVU411
 1941 0444 0721     		movs	r1, #7
 1942 0446 1120     		movs	r0, #17
 1943 0448 FFF7FEFF 		bl	lcd_write_register
 1944              	.LVL198:
 617:lcd.c         **** 	 lcd_write_register(0x13,0x0b00);
 1945              		.loc 1 617 3 view .LVU412
 1946 044c 4FF48871 		mov	r1, #272
 1947 0450 1220     		movs	r0, #18
 1948 0452 FFF7FEFF 		bl	lcd_write_register
 1949              	.LVL199:
 618:lcd.c         **** 	 lcd_write_register(0x29,0x0000);
 1950              		.loc 1 618 3 view .LVU413
 1951 0456 4FF43061 		mov	r1, #2816
 1952 045a 1320     		movs	r0, #19
 1953 045c FFF7FEFF 		bl	lcd_write_register
 1954              	.LVL200:
 619:lcd.c         **** 	 lcd_write_register(0x2b,(1 << 14) | (1 << 4));
 1955              		.loc 1 619 3 view .LVU414
 1956 0460 2146     		mov	r1, r4
 1957 0462 2920     		movs	r0, #41
 1958 0464 FFF7FEFF 		bl	lcd_write_register
 1959              	.LVL201:
 620:lcd.c         **** 	 lcd_write_register(0x50,0);
 1960              		.loc 1 620 3 view .LVU415
 1961 0468 44F21001 		movw	r1, #16400
 1962 046c 2B20     		movs	r0, #43
 1963 046e FFF7FEFF 		bl	lcd_write_register
 1964              	.LVL202:
 621:lcd.c         **** 	 lcd_write_register(0x51,239);
 1965              		.loc 1 621 3 view .LVU416
 1966 0472 2146     		mov	r1, r4
 1967 0474 5020     		movs	r0, #80
 1968 0476 FFF7FEFF 		bl	lcd_write_register
 1969              	.LVL203:
 622:lcd.c         **** 	 lcd_write_register(0x52,0);
 1970              		.loc 1 622 3 view .LVU417
 1971 047a EF21     		movs	r1, #239
 1972 047c 5120     		movs	r0, #81
 1973 047e FFF7FEFF 		bl	lcd_write_register
 1974              	.LVL204:
 623:lcd.c         **** 	 lcd_write_register(0x53,319);
 1975              		.loc 1 623 3 view .LVU418
 1976 0482 2146     		mov	r1, r4
 1977 0484 5220     		movs	r0, #82
 1978 0486 FFF7FEFF 		bl	lcd_write_register
 1979              	.LVL205:
 624:lcd.c         **** 	 lcd_write_register(0x60,0x2700);
 1980              		.loc 1 624 3 view .LVU419
 1981 048a 40F23F11 		movw	r1, #319
 1982 048e 5320     		movs	r0, #83
 1983 0490 FFF7FEFF 		bl	lcd_write_register
 1984              	.LVL206:
 625:lcd.c         **** 	 lcd_write_register(0x61,0x0001);
 1985              		.loc 1 625 3 view .LVU420
 1986 0494 4FF41C51 		mov	r1, #9984
 1987 0498 6020     		movs	r0, #96
 1988 049a FFF7FEFF 		bl	lcd_write_register
 1989              	.LVL207:
 626:lcd.c         **** 	 lcd_write_register(0x6a,0x0000);
 1990              		.loc 1 626 3 view .LVU421
 1991 049e 0121     		movs	r1, #1
 1992 04a0 6120     		movs	r0, #97
 1993 04a2 FFF7FEFF 		bl	lcd_write_register
 1994              	.LVL208:
 627:lcd.c         **** 	 lcd_write_register(0x80,0x0000);
 1995              		.loc 1 627 3 view .LVU422
 1996 04a6 2146     		mov	r1, r4
 1997 04a8 6A20     		movs	r0, #106
 1998 04aa FFF7FEFF 		bl	lcd_write_register
 1999              	.LVL209:
 628:lcd.c         **** 	 lcd_write_register(0x81,0x0000);
 2000              		.loc 1 628 3 view .LVU423
 2001 04ae 2146     		mov	r1, r4
 2002 04b0 8020     		movs	r0, #128
 2003 04b2 FFF7FEFF 		bl	lcd_write_register
 2004              	.LVL210:
 629:lcd.c         **** 	 lcd_write_register(0x82,0x0000);
 2005              		.loc 1 629 3 view .LVU424
 2006 04b6 2146     		mov	r1, r4
 2007 04b8 8120     		movs	r0, #129
 2008 04ba FFF7FEFF 		bl	lcd_write_register
 2009              	.LVL211:
 630:lcd.c         **** 	 lcd_write_register(0x83,0x0000);
 2010              		.loc 1 630 3 view .LVU425
 2011 04be 2146     		mov	r1, r4
 2012 04c0 8220     		movs	r0, #130
 2013 04c2 FFF7FEFF 		bl	lcd_write_register
 2014              	.LVL212:
 631:lcd.c         **** 	 lcd_write_register(0x84,0x0000);
 2015              		.loc 1 631 3 view .LVU426
 2016 04c6 2146     		mov	r1, r4
 2017 04c8 8320     		movs	r0, #131
 2018 04ca FFF7FEFF 		bl	lcd_write_register
 2019              	.LVL213:
 632:lcd.c         **** 	 lcd_write_register(0x85,0x0000);
 2020              		.loc 1 632 3 view .LVU427
 2021 04ce 2146     		mov	r1, r4
 2022 04d0 8420     		movs	r0, #132
 2023 04d2 FFF7FEFF 		bl	lcd_write_register
 2024              	.LVL214:
 633:lcd.c         **** 	 lcd_write_register(0x90,(0 << 7) | (16 << 0));
 2025              		.loc 1 633 3 view .LVU428
 2026 04d6 2146     		mov	r1, r4
 2027 04d8 8520     		movs	r0, #133
 2028 04da FFF7FEFF 		bl	lcd_write_register
 2029              	.LVL215:
 634:lcd.c         **** 	 lcd_write_register(0x92,0x0000);
 2030              		.loc 1 634 3 view .LVU429
 2031 04de 1021     		movs	r1, #16
 2032 04e0 9020     		movs	r0, #144
 2033 04e2 FFF7FEFF 		bl	lcd_write_register
 2034              	.LVL216:
 635:lcd.c         **** 	 lcd_write_register(0x93,0x0001);
 2035              		.loc 1 635 3 view .LVU430
 2036 04e6 2146     		mov	r1, r4
 2037 04e8 9220     		movs	r0, #146
 2038 04ea FFF7FEFF 		bl	lcd_write_register
 2039              	.LVL217:
 636:lcd.c         **** 	 lcd_write_register(0x95,0x0110);
 2040              		.loc 1 636 3 view .LVU431
 2041 04ee 0121     		movs	r1, #1
 2042 04f0 9320     		movs	r0, #147
 2043 04f2 FFF7FEFF 		bl	lcd_write_register
 2044              	.LVL218:
 637:lcd.c         **** 	 lcd_write_register(0x97,(0 << 8));
 2045              		.loc 1 637 3 view .LVU432
 2046 04f6 4FF48871 		mov	r1, #272
 2047 04fa 9520     		movs	r0, #149
 2048 04fc FFF7FEFF 		bl	lcd_write_register
 2049              	.LVL219:
 638:lcd.c         **** 	 lcd_write_register(0x98,0x0000);
 2050              		.loc 1 638 3 view .LVU433
 2051 0500 2146     		mov	r1, r4
 2052 0502 9720     		movs	r0, #151
 2053 0504 FFF7FEFF 		bl	lcd_write_register
 2054              	.LVL220:
 639:lcd.c         **** 	 lcd_write_register(0x07,0x0173);
 2055              		.loc 1 639 3 view .LVU434
 2056 0508 2146     		mov	r1, r4
 2057 050a 9820     		movs	r0, #152
 2058 050c FFF7FEFF 		bl	lcd_write_register
 2059              	.LVL221:
 640:lcd.c         ****       }	else if (device_code == 0x1505)	{
 2060              		.loc 1 640 3 view .LVU435
 2061 0510 40F27311 		movw	r1, #371
 2062              	.L84:
 2063              		.loc 1 787 3 is_stmt 0 view .LVU436
 2064 0514 0720     		movs	r0, #7
 2065 0516 30E7     		b	.L83
 2066              	.L80:
 641:lcd.c         ****          lcd_write_register(0x0007,0x0000);
 2067              		.loc 1 641 14 is_stmt 1 view .LVU437
 641:lcd.c         ****          lcd_write_register(0x0007,0x0000);
 2068              		.loc 1 641 17 is_stmt 0 view .LVU438
 2069 0518 41F20553 		movw	r3, #5381
 2070 051c 9842     		cmp	r0, r3
 2071 051e 40F01B81 		bne	.L81
 642:lcd.c         ****          lcd_delay(50);
 2072              		.loc 1 642 10 is_stmt 1 view .LVU439
 2073 0522 2146     		mov	r1, r4
 2074 0524 0720     		movs	r0, #7
 2075 0526 FFF7FEFF 		bl	lcd_write_register
 2076              	.LVL222:
 643:lcd.c         ****          lcd_write_register(0x0012,0x011C);
 2077              		.loc 1 643 10 view .LVU440
 2078              	.LBB83:
 2079              	.LBI83:
 458:lcd.c         **** {
 2080              		.loc 1 458 6 view .LVU441
 2081              	.LBB84:
 460:lcd.c         **** }
 2082              		.loc 1 460 7 view .LVU442
 2083 052a 3220     		movs	r0, #50
 2084 052c FFF7FEFF 		bl	wait_ms
 2085              	.LVL223:
 460:lcd.c         **** }
 2086              		.loc 1 460 7 is_stmt 0 view .LVU443
 2087              	.LBE84:
 2088              	.LBE83:
 644:lcd.c         ****          lcd_write_register(0x00A4,0x0001);
 2089              		.loc 1 644 10 is_stmt 1 view .LVU444
 2090 0530 4FF48E71 		mov	r1, #284
 2091 0534 1220     		movs	r0, #18
 2092 0536 FFF7FEFF 		bl	lcd_write_register
 2093              	.LVL224:
 645:lcd.c         ****          lcd_write_register(0x0008,0x000F);
 2094              		.loc 1 645 10 view .LVU445
 2095 053a 0121     		movs	r1, #1
 2096 053c A420     		movs	r0, #164
 2097 053e FFF7FEFF 		bl	lcd_write_register
 2098              	.LVL225:
 646:lcd.c         ****          lcd_write_register(0x000A,0x0008);
 2099              		.loc 1 646 10 view .LVU446
 2100 0542 0F21     		movs	r1, #15
 2101 0544 0820     		movs	r0, #8
 2102 0546 FFF7FEFF 		bl	lcd_write_register
 2103              	.LVL226:
 647:lcd.c         ****          lcd_write_register(0x000D,0x0008);
 2104              		.loc 1 647 10 view .LVU447
 2105 054a 0821     		movs	r1, #8
 2106 054c 0A20     		movs	r0, #10
 2107 054e FFF7FEFF 		bl	lcd_write_register
 2108              	.LVL227:
 648:lcd.c         ****          lcd_write_register(0x0030,0x0707);
 2109              		.loc 1 648 10 view .LVU448
 2110 0552 0821     		movs	r1, #8
 2111 0554 0D20     		movs	r0, #13
 2112 0556 FFF7FEFF 		bl	lcd_write_register
 2113              	.LVL228:
 649:lcd.c         ****          lcd_write_register(0x0031,0x0007);
 2114              		.loc 1 649 10 view .LVU449
 2115 055a 40F20771 		movw	r1, #1799
 2116 055e 3020     		movs	r0, #48
 2117 0560 FFF7FEFF 		bl	lcd_write_register
 2118              	.LVL229:
 650:lcd.c         ****          lcd_write_register(0x0032,0x0603);
 2119              		.loc 1 650 10 view .LVU450
 2120 0564 0721     		movs	r1, #7
 2121 0566 3120     		movs	r0, #49
 2122 0568 FFF7FEFF 		bl	lcd_write_register
 2123              	.LVL230:
 651:lcd.c         ****          lcd_write_register(0x0033,0x0700);
 2124              		.loc 1 651 10 view .LVU451
 2125 056c 40F20361 		movw	r1, #1539
 2126 0570 3220     		movs	r0, #50
 2127 0572 FFF7FEFF 		bl	lcd_write_register
 2128              	.LVL231:
 652:lcd.c         ****          lcd_write_register(0x0034,0x0202);
 2129              		.loc 1 652 10 view .LVU452
 2130 0576 4FF4E061 		mov	r1, #1792
 2131 057a 3320     		movs	r0, #51
 2132 057c FFF7FEFF 		bl	lcd_write_register
 2133              	.LVL232:
 653:lcd.c         ****          lcd_write_register(0x0035,0x0002);
 2134              		.loc 1 653 10 view .LVU453
 2135 0580 40F20221 		movw	r1, #514
 2136 0584 3420     		movs	r0, #52
 2137 0586 FFF7FEFF 		bl	lcd_write_register
 2138              	.LVL233:
 654:lcd.c         ****          lcd_write_register(0x0036,0x1F0F);
 2139              		.loc 1 654 10 view .LVU454
 2140 058a 0221     		movs	r1, #2
 2141 058c 3520     		movs	r0, #53
 2142 058e FFF7FEFF 		bl	lcd_write_register
 2143              	.LVL234:
 655:lcd.c         ****          lcd_write_register(0x0037,0x0707);
 2144              		.loc 1 655 10 view .LVU455
 2145 0592 41F60F71 		movw	r1, #7951
 2146 0596 3620     		movs	r0, #54
 2147 0598 FFF7FEFF 		bl	lcd_write_register
 2148              	.LVL235:
 656:lcd.c         ****          lcd_write_register(0x0038,0x0000);
 2149              		.loc 1 656 10 view .LVU456
 2150 059c 40F20771 		movw	r1, #1799
 2151 05a0 3720     		movs	r0, #55
 2152 05a2 FFF7FEFF 		bl	lcd_write_register
 2153              	.LVL236:
 657:lcd.c         ****          lcd_write_register(0x0039,0x0000);
 2154              		.loc 1 657 10 view .LVU457
 2155 05a6 2146     		mov	r1, r4
 2156 05a8 3820     		movs	r0, #56
 2157 05aa FFF7FEFF 		bl	lcd_write_register
 2158              	.LVL237:
 658:lcd.c         ****          lcd_write_register(0x003A,0x0707);
 2159              		.loc 1 658 10 view .LVU458
 2160 05ae 2146     		mov	r1, r4
 2161 05b0 3920     		movs	r0, #57
 2162 05b2 FFF7FEFF 		bl	lcd_write_register
 2163              	.LVL238:
 659:lcd.c         ****          lcd_write_register(0x003B,0x0000);
 2164              		.loc 1 659 10 view .LVU459
 2165 05b6 40F20771 		movw	r1, #1799
 2166 05ba 3A20     		movs	r0, #58
 2167 05bc FFF7FEFF 		bl	lcd_write_register
 2168              	.LVL239:
 660:lcd.c         ****          lcd_write_register(0x003C,0x0007);
 2169              		.loc 1 660 10 view .LVU460
 2170 05c0 2146     		mov	r1, r4
 2171 05c2 3B20     		movs	r0, #59
 2172 05c4 FFF7FEFF 		bl	lcd_write_register
 2173              	.LVL240:
 661:lcd.c         ****          lcd_write_register(0x003D,0x0000);
 2174              		.loc 1 661 10 view .LVU461
 2175 05c8 0721     		movs	r1, #7
 2176 05ca 3C20     		movs	r0, #60
 2177 05cc FFF7FEFF 		bl	lcd_write_register
 2178              	.LVL241:
 662:lcd.c         ****          lcd_delay(50);
 2179              		.loc 1 662 10 view .LVU462
 2180 05d0 2146     		mov	r1, r4
 2181 05d2 3D20     		movs	r0, #61
 2182 05d4 FFF7FEFF 		bl	lcd_write_register
 2183              	.LVL242:
 663:lcd.c         ****          lcd_write_register(0x0007,0x0001);
 2184              		.loc 1 663 10 view .LVU463
 2185              	.LBB85:
 2186              	.LBI85:
 458:lcd.c         **** {
 2187              		.loc 1 458 6 view .LVU464
 2188              	.LBB86:
 460:lcd.c         **** }
 2189              		.loc 1 460 7 view .LVU465
 2190 05d8 3220     		movs	r0, #50
 2191 05da FFF7FEFF 		bl	wait_ms
 2192              	.LVL243:
 460:lcd.c         **** }
 2193              		.loc 1 460 7 is_stmt 0 view .LVU466
 2194              	.LBE86:
 2195              	.LBE85:
 664:lcd.c         ****          lcd_write_register(0x0017,0x0001);
 2196              		.loc 1 664 10 is_stmt 1 view .LVU467
 2197 05de 0121     		movs	r1, #1
 2198 05e0 0720     		movs	r0, #7
 2199 05e2 FFF7FEFF 		bl	lcd_write_register
 2200              	.LVL244:
 665:lcd.c         ****          lcd_delay(50);
 2201              		.loc 1 665 10 view .LVU468
 2202 05e6 0121     		movs	r1, #1
 2203 05e8 1720     		movs	r0, #23
 2204 05ea FFF7FEFF 		bl	lcd_write_register
 2205              	.LVL245:
 666:lcd.c         ****          lcd_write_register(0x0010,0x17A0);
 2206              		.loc 1 666 10 view .LVU469
 2207              	.LBB87:
 2208              	.LBI87:
 458:lcd.c         **** {
 2209              		.loc 1 458 6 view .LVU470
 2210              	.LBB88:
 460:lcd.c         **** }
 2211              		.loc 1 460 7 view .LVU471
 2212 05ee 3220     		movs	r0, #50
 2213 05f0 FFF7FEFF 		bl	wait_ms
 2214              	.LVL246:
 460:lcd.c         **** }
 2215              		.loc 1 460 7 is_stmt 0 view .LVU472
 2216              	.LBE88:
 2217              	.LBE87:
 667:lcd.c         ****          lcd_write_register(0x0011,0x0217);
 2218              		.loc 1 667 10 is_stmt 1 view .LVU473
 2219 05f4 4FF4BD51 		mov	r1, #6048
 2220 05f8 1020     		movs	r0, #16
 2221 05fa FFF7FEFF 		bl	lcd_write_register
 2222              	.LVL247:
 668:lcd.c         ****          lcd_write_register(0x0012,0x011E);
 2223              		.loc 1 668 10 view .LVU474
 2224 05fe 40F21721 		movw	r1, #535
 2225 0602 1120     		movs	r0, #17
 2226 0604 FFF7FEFF 		bl	lcd_write_register
 2227              	.LVL248:
 669:lcd.c         ****          lcd_write_register(0x0013,0x0F00);
 2228              		.loc 1 669 10 view .LVU475
 2229 0608 4FF48F71 		mov	r1, #286
 2230 060c 1220     		movs	r0, #18
 2231 060e FFF7FEFF 		bl	lcd_write_register
 2232              	.LVL249:
 670:lcd.c         ****          lcd_write_register(0x002A,0x0000);
 2233              		.loc 1 670 10 view .LVU476
 2234 0612 4FF47061 		mov	r1, #3840
 2235 0616 1320     		movs	r0, #19
 2236 0618 FFF7FEFF 		bl	lcd_write_register
 2237              	.LVL250:
 671:lcd.c         ****          lcd_write_register(0x0029,0x000A);
 2238              		.loc 1 671 10 view .LVU477
 2239 061c 2146     		mov	r1, r4
 2240 061e 2A20     		movs	r0, #42
 2241 0620 FFF7FEFF 		bl	lcd_write_register
 2242              	.LVL251:
 672:lcd.c         ****          lcd_write_register(0x0012,0x013E);
 2243              		.loc 1 672 10 view .LVU478
 2244 0624 0A21     		movs	r1, #10
 2245 0626 2920     		movs	r0, #41
 2246 0628 FFF7FEFF 		bl	lcd_write_register
 2247              	.LVL252:
 673:lcd.c         ****          lcd_write_register(0x0050,0x0000);
 2248              		.loc 1 673 10 view .LVU479
 2249 062c 4FF49F71 		mov	r1, #318
 2250 0630 1220     		movs	r0, #18
 2251 0632 FFF7FEFF 		bl	lcd_write_register
 2252              	.LVL253:
 674:lcd.c         ****          lcd_write_register(0x0051,0x00EF);
 2253              		.loc 1 674 10 view .LVU480
 2254 0636 2146     		mov	r1, r4
 2255 0638 5020     		movs	r0, #80
 2256 063a FFF7FEFF 		bl	lcd_write_register
 2257              	.LVL254:
 675:lcd.c         ****          lcd_write_register(0x0052,0x0000);
 2258              		.loc 1 675 10 view .LVU481
 2259 063e EF21     		movs	r1, #239
 2260 0640 5120     		movs	r0, #81
 2261 0642 FFF7FEFF 		bl	lcd_write_register
 2262              	.LVL255:
 676:lcd.c         ****          lcd_write_register(0x0053,0x013F);
 2263              		.loc 1 676 10 view .LVU482
 2264 0646 2146     		mov	r1, r4
 2265 0648 5220     		movs	r0, #82
 2266 064a FFF7FEFF 		bl	lcd_write_register
 2267              	.LVL256:
 677:lcd.c         ****          lcd_write_register(0x0060,0x2700);
 2268              		.loc 1 677 10 view .LVU483
 2269 064e 40F23F11 		movw	r1, #319
 2270 0652 5320     		movs	r0, #83
 2271 0654 FFF7FEFF 		bl	lcd_write_register
 2272              	.LVL257:
 678:lcd.c         ****          lcd_write_register(0x0061,0x0001);
 2273              		.loc 1 678 10 view .LVU484
 2274 0658 4FF41C51 		mov	r1, #9984
 2275 065c 6020     		movs	r0, #96
 2276 065e FFF7FEFF 		bl	lcd_write_register
 2277              	.LVL258:
 679:lcd.c         ****          lcd_write_register(0x006A,0x0000);
 2278              		.loc 1 679 10 view .LVU485
 2279 0662 0121     		movs	r1, #1
 2280 0664 6120     		movs	r0, #97
 2281 0666 FFF7FEFF 		bl	lcd_write_register
 2282              	.LVL259:
 680:lcd.c         ****          lcd_write_register(0x0080,0x0000);
 2283              		.loc 1 680 10 view .LVU486
 2284 066a 2146     		mov	r1, r4
 2285 066c 6A20     		movs	r0, #106
 2286 066e FFF7FEFF 		bl	lcd_write_register
 2287              	.LVL260:
 681:lcd.c         ****          lcd_write_register(0x0081,0x0000);
 2288              		.loc 1 681 10 view .LVU487
 2289 0672 2146     		mov	r1, r4
 2290 0674 8020     		movs	r0, #128
 2291 0676 FFF7FEFF 		bl	lcd_write_register
 2292              	.LVL261:
 682:lcd.c         ****          lcd_write_register(0x0082,0x0000);
 2293              		.loc 1 682 10 view .LVU488
 2294 067a 2146     		mov	r1, r4
 2295 067c 8120     		movs	r0, #129
 2296 067e FFF7FEFF 		bl	lcd_write_register
 2297              	.LVL262:
 683:lcd.c         ****          lcd_write_register(0x0083,0x0000);
 2298              		.loc 1 683 10 view .LVU489
 2299 0682 2146     		mov	r1, r4
 2300 0684 8220     		movs	r0, #130
 2301 0686 FFF7FEFF 		bl	lcd_write_register
 2302              	.LVL263:
 684:lcd.c         ****          lcd_write_register(0x0084,0x0000);
 2303              		.loc 1 684 10 view .LVU490
 2304 068a 2146     		mov	r1, r4
 2305 068c 8320     		movs	r0, #131
 2306 068e FFF7FEFF 		bl	lcd_write_register
 2307              	.LVL264:
 685:lcd.c         ****          lcd_write_register(0x0085,0x0000);
 2308              		.loc 1 685 10 view .LVU491
 2309 0692 2146     		mov	r1, r4
 2310 0694 8420     		movs	r0, #132
 2311 0696 FFF7FEFF 		bl	lcd_write_register
 2312              	.LVL265:
 686:lcd.c         ****          lcd_write_register(0x0090,0x0013);
 2313              		.loc 1 686 10 view .LVU492
 2314 069a 2146     		mov	r1, r4
 2315 069c 8520     		movs	r0, #133
 2316 069e FFF7FEFF 		bl	lcd_write_register
 2317              	.LVL266:
 687:lcd.c         ****          lcd_write_register(0x0092,0x0300);
 2318              		.loc 1 687 10 view .LVU493
 2319 06a2 1321     		movs	r1, #19
 2320 06a4 9020     		movs	r0, #144
 2321 06a6 FFF7FEFF 		bl	lcd_write_register
 2322              	.LVL267:
 688:lcd.c         ****          lcd_write_register(0x0093,0x0005);
 2323              		.loc 1 688 10 view .LVU494
 2324 06aa 4FF44071 		mov	r1, #768
 2325 06ae 9220     		movs	r0, #146
 2326 06b0 FFF7FEFF 		bl	lcd_write_register
 2327              	.LVL268:
 689:lcd.c         ****          lcd_write_register(0x0095,0x0000);
 2328              		.loc 1 689 10 view .LVU495
 2329 06b4 0521     		movs	r1, #5
 2330 06b6 9320     		movs	r0, #147
 2331 06b8 FFF7FEFF 		bl	lcd_write_register
 2332              	.LVL269:
 690:lcd.c         ****          lcd_write_register(0x0097,0x0000);
 2333              		.loc 1 690 10 view .LVU496
 2334 06bc 2146     		mov	r1, r4
 2335 06be 9520     		movs	r0, #149
 2336 06c0 FFF7FEFF 		bl	lcd_write_register
 2337              	.LVL270:
 691:lcd.c         ****          lcd_write_register(0x0098,0x0000);
 2338              		.loc 1 691 10 view .LVU497
 2339 06c4 2146     		mov	r1, r4
 2340 06c6 9720     		movs	r0, #151
 2341 06c8 FFF7FEFF 		bl	lcd_write_register
 2342              	.LVL271:
 692:lcd.c         ****          lcd_write_register(0x0001,0x0100);
 2343              		.loc 1 692 10 view .LVU498
 2344 06cc 2146     		mov	r1, r4
 2345 06ce 9820     		movs	r0, #152
 2346 06d0 FFF7FEFF 		bl	lcd_write_register
 2347              	.LVL272:
 693:lcd.c         ****          lcd_write_register(0x0002,0x0700);
 2348              		.loc 1 693 10 view .LVU499
 2349 06d4 4FF48071 		mov	r1, #256
 2350 06d8 0120     		movs	r0, #1
 2351 06da FFF7FEFF 		bl	lcd_write_register
 2352              	.LVL273:
 694:lcd.c         ****          lcd_write_register(0x0003,0x1030);
 2353              		.loc 1 694 10 view .LVU500
 2354 06de 4FF4E061 		mov	r1, #1792
 2355 06e2 0220     		movs	r0, #2
 2356 06e4 FFF7FEFF 		bl	lcd_write_register
 2357              	.LVL274:
 695:lcd.c         ****          lcd_write_register(0x0004,0x0000);
 2358              		.loc 1 695 10 view .LVU501
 2359 06e8 41F23001 		movw	r1, #4144
 2360 06ec 0320     		movs	r0, #3
 2361 06ee FFF7FEFF 		bl	lcd_write_register
 2362              	.LVL275:
 696:lcd.c         ****          lcd_write_register(0x000C,0x0000);
 2363              		.loc 1 696 10 view .LVU502
 2364 06f2 2146     		mov	r1, r4
 2365 06f4 0420     		movs	r0, #4
 2366 06f6 FFF7FEFF 		bl	lcd_write_register
 2367              	.LVL276:
 697:lcd.c         ****          lcd_write_register(0x000F,0x0000);
 2368              		.loc 1 697 10 view .LVU503
 2369 06fa 2146     		mov	r1, r4
 2370 06fc 0C20     		movs	r0, #12
 2371 06fe FFF7FEFF 		bl	lcd_write_register
 2372              	.LVL277:
 698:lcd.c         ****          lcd_write_register(0x0020,0x0000);
 2373              		.loc 1 698 10 view .LVU504
 2374 0702 2146     		mov	r1, r4
 2375 0704 0F20     		movs	r0, #15
 2376 0706 FFF7FEFF 		bl	lcd_write_register
 2377              	.LVL278:
 699:lcd.c         ****          lcd_write_register(0x0021,0x0000);
 2378              		.loc 1 699 10 view .LVU505
 2379 070a 2146     		mov	r1, r4
 2380 070c 2020     		movs	r0, #32
 2381 070e FFF7FEFF 		bl	lcd_write_register
 2382              	.LVL279:
 700:lcd.c         ****          lcd_write_register(0x0007,0x0021);
 2383              		.loc 1 700 10 view .LVU506
 2384 0712 2146     		mov	r1, r4
 2385 0714 2120     		movs	r0, #33
 2386 0716 FFF7FEFF 		bl	lcd_write_register
 2387              	.LVL280:
 701:lcd.c         ****          lcd_delay(200);
 2388              		.loc 1 701 10 view .LVU507
 2389 071a 2121     		movs	r1, #33
 2390 071c 0720     		movs	r0, #7
 2391 071e FFF7FEFF 		bl	lcd_write_register
 2392              	.LVL281:
 702:lcd.c         ****          lcd_write_register(0x0007,0x0061);
 2393              		.loc 1 702 10 view .LVU508
 2394              	.LBB89:
 2395              	.LBI89:
 458:lcd.c         **** {
 2396              		.loc 1 458 6 view .LVU509
 2397              	.LBB90:
 460:lcd.c         **** }
 2398              		.loc 1 460 7 view .LVU510
 2399 0722 C820     		movs	r0, #200
 2400 0724 FFF7FEFF 		bl	wait_ms
 2401              	.LVL282:
 460:lcd.c         **** }
 2402              		.loc 1 460 7 is_stmt 0 view .LVU511
 2403              	.LBE90:
 2404              	.LBE89:
 703:lcd.c         ****          lcd_delay(200);
 2405              		.loc 1 703 10 is_stmt 1 view .LVU512
 2406 0728 6121     		movs	r1, #97
 2407 072a 0720     		movs	r0, #7
 2408 072c FFF7FEFF 		bl	lcd_write_register
 2409              	.LVL283:
 704:lcd.c         ****          lcd_write_register(0x0007,0x0173);
 2410              		.loc 1 704 10 view .LVU513
 2411              	.LBB91:
 2412              	.LBI91:
 458:lcd.c         **** {
 2413              		.loc 1 458 6 view .LVU514
 2414              	.LBB92:
 460:lcd.c         **** }
 2415              		.loc 1 460 7 view .LVU515
 2416 0730 C820     		movs	r0, #200
 2417 0732 FFF7FEFF 		bl	wait_ms
 2418              	.LVL284:
 460:lcd.c         **** }
 2419              		.loc 1 460 7 is_stmt 0 view .LVU516
 2420              	.LBE92:
 2421              	.LBE91:
 705:lcd.c         ****          lcd_delay(200);
 2422              		.loc 1 705 10 is_stmt 1 view .LVU517
 2423 0736 0720     		movs	r0, #7
 2424 0738 40F27311 		movw	r1, #371
 2425 073c FFF7FEFF 		bl	lcd_write_register
 2426              	.LVL285:
 706:lcd.c         ****       }	else if (device_code == 0x8989) {
 2427              		.loc 1 706 10 view .LVU518
 2428              	.LBB93:
 2429              	.LBI93:
 458:lcd.c         **** {
 2430              		.loc 1 458 6 view .LVU519
 2431              	.LBB94:
 460:lcd.c         **** }
 2432              		.loc 1 460 7 view .LVU520
 2433 0740 C820     		movs	r0, #200
 2434 0742 FFF7FEFF 		bl	wait_ms
 2435              	.LVL286:
 2436              	.L79:
 460:lcd.c         **** }
 2437              		.loc 1 460 7 is_stmt 0 view .LVU521
 2438              	.LBE94:
 2439              	.LBE93:
 788:lcd.c         ****       }
 789:lcd.c         ****       lcd_delay(500);
 2440              		.loc 1 789 7 is_stmt 1 view .LVU522
 2441              	.LBB95:
 2442              	.LBI95:
 458:lcd.c         **** {
 2443              		.loc 1 458 6 view .LVU523
 2444              	.LBB96:
 460:lcd.c         **** }
 2445              		.loc 1 460 7 view .LVU524
 2446 0746 4FF4FA70 		mov	r0, #500
 2447 074a FFF7FEFF 		bl	wait_ms
 2448              	.LVL287:
 460:lcd.c         **** }
 2449              		.loc 1 460 7 is_stmt 0 view .LVU525
 2450              	.LBE96:
 2451              	.LBE95:
 790:lcd.c         ****       lcd_clear(BLACK);
 2452              		.loc 1 790 7 is_stmt 1 view .LVU526
 791:lcd.c         **** }
 2453              		.loc 1 791 1 is_stmt 0 view .LVU527
 2454 074e BDE83840 		pop	{r3, r4, r5, lr}
 2455              		.cfi_remember_state
 2456              		.cfi_restore 14
 2457              		.cfi_restore 5
 2458              		.cfi_restore 4
 2459              		.cfi_restore 3
 2460              		.cfi_def_cfa_offset 0
 790:lcd.c         ****       lcd_clear(BLACK);
 2461              		.loc 1 790 7 view .LVU528
 2462 0752 0020     		movs	r0, #0
 2463 0754 FFF7FEBF 		b	lcd_clear
 2464              	.LVL288:
 2465              	.L81:
 2466              		.cfi_restore_state
 707:lcd.c         **** 	 lcd_write_register(0x0000,0x0001);
 2467              		.loc 1 707 14 is_stmt 1 view .LVU529
 707:lcd.c         **** 	 lcd_write_register(0x0000,0x0001);
 2468              		.loc 1 707 17 is_stmt 0 view .LVU530
 2469 0758 48F68913 		movw	r3, #35209
 2470 075c 9842     		cmp	r0, r3
 2471 075e 40F0B980 		bne	.L82
 708:lcd.c         ****     	 lcd_write_register(0x0003,0xA8A4);
 2472              		.loc 1 708 3 is_stmt 1 view .LVU531
 2473 0762 0121     		movs	r1, #1
 2474 0764 2046     		mov	r0, r4
 2475 0766 FFF7FEFF 		bl	lcd_write_register
 2476              	.LVL289:
 709:lcd.c         ****     	 lcd_write_register(0x000C,0x0000);
 2477              		.loc 1 709 7 view .LVU532
 2478 076a 4AF6A401 		movw	r1, #43172
 2479 076e 0320     		movs	r0, #3
 2480 0770 FFF7FEFF 		bl	lcd_write_register
 2481              	.LVL290:
 710:lcd.c         ****     	 lcd_write_register(0x000D,0x080C);
 2482              		.loc 1 710 7 view .LVU533
 2483 0774 2146     		mov	r1, r4
 2484 0776 0C20     		movs	r0, #12
 2485 0778 FFF7FEFF 		bl	lcd_write_register
 2486              	.LVL291:
 711:lcd.c         ****     	 lcd_write_register(0x000E,0x2B00);
 2487              		.loc 1 711 7 view .LVU534
 2488 077c 40F60C01 		movw	r1, #2060
 2489 0780 0D20     		movs	r0, #13
 2490 0782 FFF7FEFF 		bl	lcd_write_register
 2491              	.LVL292:
 712:lcd.c         ****     	 lcd_write_register(0x001E,0x00B0);
 2492              		.loc 1 712 7 view .LVU535
 2493 0786 4FF42C51 		mov	r1, #11008
 2494 078a 0E20     		movs	r0, #14
 2495 078c FFF7FEFF 		bl	lcd_write_register
 2496              	.LVL293:
 713:lcd.c         ****     	 lcd_write_register(0x0001,0x2B3F);
 2497              		.loc 1 713 7 view .LVU536
 2498 0790 B021     		movs	r1, #176
 2499 0792 2846     		mov	r0, r5
 2500 0794 FFF7FEFF 		bl	lcd_write_register
 2501              	.LVL294:
 714:lcd.c         ****     	 lcd_write_register(0x0002,0x0600);
 2502              		.loc 1 714 7 view .LVU537
 2503 0798 42F63F31 		movw	r1, #11071
 2504 079c 0120     		movs	r0, #1
 2505 079e FFF7FEFF 		bl	lcd_write_register
 2506              	.LVL295:
 715:lcd.c         ****     	 lcd_write_register(0x0010,0x0000);
 2507              		.loc 1 715 7 view .LVU538
 2508 07a2 4FF4C061 		mov	r1, #1536
 2509 07a6 0220     		movs	r0, #2
 2510 07a8 FFF7FEFF 		bl	lcd_write_register
 2511              	.LVL296:
 716:lcd.c         ****     	 lcd_write_register(0x0011,0x6070);
 2512              		.loc 1 716 7 view .LVU539
 2513 07ac 2146     		mov	r1, r4
 2514 07ae 1020     		movs	r0, #16
 2515 07b0 FFF7FEFF 		bl	lcd_write_register
 2516              	.LVL297:
 717:lcd.c         ****     	 lcd_write_register(0x0005,0x0000);
 2517              		.loc 1 717 7 view .LVU540
 2518 07b4 46F27001 		movw	r1, #24688
 2519 07b8 1120     		movs	r0, #17
 2520 07ba FFF7FEFF 		bl	lcd_write_register
 2521              	.LVL298:
 718:lcd.c         ****     	 lcd_write_register(0x0006,0x0000);
 2522              		.loc 1 718 7 view .LVU541
 2523 07be 2146     		mov	r1, r4
 2524 07c0 0520     		movs	r0, #5
 2525 07c2 FFF7FEFF 		bl	lcd_write_register
 2526              	.LVL299:
 719:lcd.c         ****     	 lcd_write_register(0x0016,0xEF1C);
 2527              		.loc 1 719 7 view .LVU542
 2528 07c6 2146     		mov	r1, r4
 2529 07c8 0620     		movs	r0, #6
 2530 07ca FFF7FEFF 		bl	lcd_write_register
 2531              	.LVL300:
 720:lcd.c         ****     	 lcd_write_register(0x0017,0x0003);
 2532              		.loc 1 720 7 view .LVU543
 2533 07ce 4EF61C71 		movw	r1, #61212
 2534 07d2 1620     		movs	r0, #22
 2535 07d4 FFF7FEFF 		bl	lcd_write_register
 2536              	.LVL301:
 721:lcd.c         ****     	 lcd_write_register(0x0007,0x0233);
 2537              		.loc 1 721 7 view .LVU544
 2538 07d8 0321     		movs	r1, #3
 2539 07da 1720     		movs	r0, #23
 2540 07dc FFF7FEFF 		bl	lcd_write_register
 2541              	.LVL302:
 722:lcd.c         ****     	 lcd_write_register(0x000B,0x0000);
 2542              		.loc 1 722 7 view .LVU545
 2543 07e0 40F23321 		movw	r1, #563
 2544 07e4 0720     		movs	r0, #7
 2545 07e6 FFF7FEFF 		bl	lcd_write_register
 2546              	.LVL303:
 723:lcd.c         ****     	 lcd_write_register(0x000F,0x0000);
 2547              		.loc 1 723 7 view .LVU546
 2548 07ea 2146     		mov	r1, r4
 2549 07ec 0B20     		movs	r0, #11
 2550 07ee FFF7FEFF 		bl	lcd_write_register
 2551              	.LVL304:
 724:lcd.c         ****     	 lcd_write_register(0x0041,0x0000);
 2552              		.loc 1 724 7 view .LVU547
 2553 07f2 2146     		mov	r1, r4
 2554 07f4 0F20     		movs	r0, #15
 2555 07f6 FFF7FEFF 		bl	lcd_write_register
 2556              	.LVL305:
 725:lcd.c         ****     	 lcd_write_register(0x0042,0x0000);
 2557              		.loc 1 725 7 view .LVU548
 2558 07fa 2146     		mov	r1, r4
 2559 07fc 4120     		movs	r0, #65
 2560 07fe FFF7FEFF 		bl	lcd_write_register
 2561              	.LVL306:
 726:lcd.c         ****     	 lcd_write_register(0x0048,0x0000);
 2562              		.loc 1 726 7 view .LVU549
 2563 0802 2146     		mov	r1, r4
 2564 0804 4220     		movs	r0, #66
 2565 0806 FFF7FEFF 		bl	lcd_write_register
 2566              	.LVL307:
 727:lcd.c         ****     	 lcd_write_register(0x0049,0x013F);
 2567              		.loc 1 727 7 view .LVU550
 2568 080a 2146     		mov	r1, r4
 2569 080c 4820     		movs	r0, #72
 2570 080e FFF7FEFF 		bl	lcd_write_register
 2571              	.LVL308:
 728:lcd.c         ****     	 lcd_write_register(0x004A,0x0000);
 2572              		.loc 1 728 7 view .LVU551
 2573 0812 40F23F11 		movw	r1, #319
 2574 0816 4920     		movs	r0, #73
 2575 0818 FFF7FEFF 		bl	lcd_write_register
 2576              	.LVL309:
 729:lcd.c         ****     	 lcd_write_register(0x004B,0x0000);
 2577              		.loc 1 729 7 view .LVU552
 2578 081c 2146     		mov	r1, r4
 2579 081e 4A20     		movs	r0, #74
 2580 0820 FFF7FEFF 		bl	lcd_write_register
 2581              	.LVL310:
 730:lcd.c         ****     	 lcd_write_register(0x0044,0xEF00);
 2582              		.loc 1 730 7 view .LVU553
 2583 0824 2146     		mov	r1, r4
 2584 0826 4B20     		movs	r0, #75
 2585 0828 FFF7FEFF 		bl	lcd_write_register
 2586              	.LVL311:
 731:lcd.c         ****     	 lcd_write_register(0x0045,0x0000);
 2587              		.loc 1 731 7 view .LVU554
 2588 082c 4FF46F41 		mov	r1, #61184
 2589 0830 4420     		movs	r0, #68
 2590 0832 FFF7FEFF 		bl	lcd_write_register
 2591              	.LVL312:
 732:lcd.c         ****     	 lcd_write_register(0x0046,0x013F);
 2592              		.loc 1 732 7 view .LVU555
 2593 0836 2146     		mov	r1, r4
 2594 0838 4520     		movs	r0, #69
 2595 083a FFF7FEFF 		bl	lcd_write_register
 2596              	.LVL313:
 733:lcd.c         ****     	 lcd_write_register(0x0030,0x0707);
 2597              		.loc 1 733 7 view .LVU556
 2598 083e 40F23F11 		movw	r1, #319
 2599 0842 4620     		movs	r0, #70
 2600 0844 FFF7FEFF 		bl	lcd_write_register
 2601              	.LVL314:
 734:lcd.c         ****     	 lcd_write_register(0x0031,0x0204);
 2602              		.loc 1 734 7 view .LVU557
 2603 0848 40F20771 		movw	r1, #1799
 2604 084c 3020     		movs	r0, #48
 2605 084e FFF7FEFF 		bl	lcd_write_register
 2606              	.LVL315:
 735:lcd.c         ****     	 lcd_write_register(0x0032,0x0204);
 2607              		.loc 1 735 7 view .LVU558
 2608 0852 4FF40171 		mov	r1, #516
 2609 0856 3120     		movs	r0, #49
 2610 0858 FFF7FEFF 		bl	lcd_write_register
 2611              	.LVL316:
 736:lcd.c         ****     	 lcd_write_register(0x0033,0x0502);
 2612              		.loc 1 736 7 view .LVU559
 2613 085c 4FF40171 		mov	r1, #516
 2614 0860 3220     		movs	r0, #50
 2615 0862 FFF7FEFF 		bl	lcd_write_register
 2616              	.LVL317:
 737:lcd.c         ****     	 lcd_write_register(0x0034,0x0507);
 2617              		.loc 1 737 7 view .LVU560
 2618 0866 40F20251 		movw	r1, #1282
 2619 086a 3320     		movs	r0, #51
 2620 086c FFF7FEFF 		bl	lcd_write_register
 2621              	.LVL318:
 738:lcd.c         ****     	 lcd_write_register(0x0035,0x0204);
 2622              		.loc 1 738 7 view .LVU561
 2623 0870 40F20751 		movw	r1, #1287
 2624 0874 3420     		movs	r0, #52
 2625 0876 FFF7FEFF 		bl	lcd_write_register
 2626              	.LVL319:
 739:lcd.c         ****     	 lcd_write_register(0x0036,0x0204);
 2627              		.loc 1 739 7 view .LVU562
 2628 087a 4FF40171 		mov	r1, #516
 2629 087e 3520     		movs	r0, #53
 2630 0880 FFF7FEFF 		bl	lcd_write_register
 2631              	.LVL320:
 740:lcd.c         ****     	 lcd_write_register(0x0037,0x0502);
 2632              		.loc 1 740 7 view .LVU563
 2633 0884 4FF40171 		mov	r1, #516
 2634 0888 3620     		movs	r0, #54
 2635 088a FFF7FEFF 		bl	lcd_write_register
 2636              	.LVL321:
 741:lcd.c         ****     	 lcd_write_register(0x003A,0x0302);
 2637              		.loc 1 741 7 view .LVU564
 2638 088e 40F20251 		movw	r1, #1282
 2639 0892 3720     		movs	r0, #55
 2640 0894 FFF7FEFF 		bl	lcd_write_register
 2641              	.LVL322:
 742:lcd.c         ****     	 lcd_write_register(0x003B,0x0302);
 2642              		.loc 1 742 7 view .LVU565
 2643 0898 40F20231 		movw	r1, #770
 2644 089c 3A20     		movs	r0, #58
 2645 089e FFF7FEFF 		bl	lcd_write_register
 2646              	.LVL323:
 743:lcd.c         ****     	 lcd_write_register(0x0023,0x0000);
 2647              		.loc 1 743 7 view .LVU566
 2648 08a2 40F20231 		movw	r1, #770
 2649 08a6 3B20     		movs	r0, #59
 2650 08a8 FFF7FEFF 		bl	lcd_write_register
 2651              	.LVL324:
 744:lcd.c         ****     	 lcd_write_register(0x0024,0x0000);
 2652              		.loc 1 744 7 view .LVU567
 2653 08ac 2146     		mov	r1, r4
 2654 08ae 2320     		movs	r0, #35
 2655 08b0 FFF7FEFF 		bl	lcd_write_register
 2656              	.LVL325:
 745:lcd.c         ****     	 lcd_write_register(0x0025,0x8000);
 2657              		.loc 1 745 7 view .LVU568
 2658 08b4 2146     		mov	r1, r4
 2659 08b6 2420     		movs	r0, #36
 2660 08b8 FFF7FEFF 		bl	lcd_write_register
 2661              	.LVL326:
 746:lcd.c         ****     	 lcd_write_register(0x004f,0);
 2662              		.loc 1 746 7 view .LVU569
 2663 08bc 4FF40041 		mov	r1, #32768
 2664 08c0 2520     		movs	r0, #37
 2665 08c2 FFF7FEFF 		bl	lcd_write_register
 2666              	.LVL327:
 747:lcd.c         ****     	 lcd_write_register(0x004e,0);
 2667              		.loc 1 747 7 view .LVU570
 2668 08c6 2146     		mov	r1, r4
 2669 08c8 4F20     		movs	r0, #79
 2670 08ca FFF7FEFF 		bl	lcd_write_register
 2671              	.LVL328:
 748:lcd.c         ****       }	else if (device_code == 0x8999) {
 2672              		.loc 1 748 7 view .LVU571
 2673 08ce 2146     		mov	r1, r4
 2674 08d0 4E20     		movs	r0, #78
 2675 08d2 52E5     		b	.L83
 2676              	.L82:
 749:lcd.c         **** 	 /************* Start Initial Sequence **********/
 2677              		.loc 1 749 14 view .LVU572
 749:lcd.c         **** 	 /************* Start Initial Sequence **********/
 2678              		.loc 1 749 17 is_stmt 0 view .LVU573
 2679 08d4 48F69913 		movw	r3, #35225
 2680 08d8 9842     		cmp	r0, r3
 2681 08da 7FF434AF 		bne	.L79
 751:lcd.c         **** 	 lcd_write_register(0x01,0x3B3F);
 2682              		.loc 1 751 3 is_stmt 1 view .LVU574
 2683 08de 0121     		movs	r1, #1
 2684 08e0 2046     		mov	r0, r4
 2685 08e2 FFF7FEFF 		bl	lcd_write_register
 2686              	.LVL329:
 752:lcd.c         **** 	 lcd_write_register(0x02,0x0600);
 2687              		.loc 1 752 3 view .LVU575
 2688 08e6 43F63F31 		movw	r1, #15167
 2689 08ea 0120     		movs	r0, #1
 2690 08ec FFF7FEFF 		bl	lcd_write_register
 2691              	.LVL330:
 753:lcd.c         **** 	 /************* Power control setup ***********/
 2692              		.loc 1 753 3 view .LVU576
 2693 08f0 4FF4C061 		mov	r1, #1536
 2694 08f4 0220     		movs	r0, #2
 2695 08f6 FFF7FEFF 		bl	lcd_write_register
 2696              	.LVL331:
 755:lcd.c         **** 	 lcd_write_register(0x0D,0x0006);
 2697              		.loc 1 755 3 view .LVU577
 2698 08fa 0721     		movs	r1, #7
 2699 08fc 0C20     		movs	r0, #12
 2700 08fe FFF7FEFF 		bl	lcd_write_register
 2701              	.LVL332:
 756:lcd.c         **** 	 lcd_write_register(0x0E,0x3200);
 2702              		.loc 1 756 3 view .LVU578
 2703 0902 0621     		movs	r1, #6
 2704 0904 0D20     		movs	r0, #13
 2705 0906 FFF7FEFF 		bl	lcd_write_register
 2706              	.LVL333:
 757:lcd.c         **** 	 lcd_write_register(0x1E,0x00BB);
 2707              		.loc 1 757 3 view .LVU579
 2708 090a 4FF44851 		mov	r1, #12800
 2709 090e 0E20     		movs	r0, #14
 2710 0910 FFF7FEFF 		bl	lcd_write_register
 2711              	.LVL334:
 758:lcd.c         **** 	 lcd_write_register(0x03,0x6A64);
 2712              		.loc 1 758 3 view .LVU580
 2713 0914 BB21     		movs	r1, #187
 2714 0916 2846     		mov	r0, r5
 2715 0918 FFF7FEFF 		bl	lcd_write_register
 2716              	.LVL335:
 759:lcd.c         **** 	 //************ RAM position control **********/
 2717              		.loc 1 759 3 view .LVU581
 2718 091c 46F66421 		movw	r1, #27236
 2719 0920 0320     		movs	r0, #3
 2720 0922 FFF7FEFF 		bl	lcd_write_register
 2721              	.LVL336:
 761:lcd.c         **** 	 lcd_write_register(0x44,0xEF00);
 2722              		.loc 1 761 3 view .LVU582
 2723 0926 2146     		mov	r1, r4
 2724 0928 0F20     		movs	r0, #15
 2725 092a FFF7FEFF 		bl	lcd_write_register
 2726              	.LVL337:
 762:lcd.c         **** 	 lcd_write_register(0x45,0x0000);
 2727              		.loc 1 762 3 view .LVU583
 2728 092e 4FF46F41 		mov	r1, #61184
 2729 0932 4420     		movs	r0, #68
 2730 0934 FFF7FEFF 		bl	lcd_write_register
 2731              	.LVL338:
 763:lcd.c         **** 	 lcd_write_register(0x46,0x013F);
 2732              		.loc 1 763 3 view .LVU584
 2733 0938 2146     		mov	r1, r4
 2734 093a 4520     		movs	r0, #69
 2735 093c FFF7FEFF 		bl	lcd_write_register
 2736              	.LVL339:
 764:lcd.c         **** 	 /************* Adjust the Gamma Curve ********/
 2737              		.loc 1 764 3 view .LVU585
 2738 0940 40F23F11 		movw	r1, #319
 2739 0944 4620     		movs	r0, #70
 2740 0946 FFF7FEFF 		bl	lcd_write_register
 2741              	.LVL340:
 766:lcd.c         **** 	 lcd_write_register(0x31,0x0706);
 2742              		.loc 1 766 3 view .LVU586
 2743 094a 2146     		mov	r1, r4
 2744 094c 3020     		movs	r0, #48
 2745 094e FFF7FEFF 		bl	lcd_write_register
 2746              	.LVL341:
 767:lcd.c         **** 	 lcd_write_register(0x32,0x0206);
 2747              		.loc 1 767 3 view .LVU587
 2748 0952 40F20671 		movw	r1, #1798
 2749 0956 3120     		movs	r0, #49
 2750 0958 FFF7FEFF 		bl	lcd_write_register
 2751              	.LVL342:
 768:lcd.c         **** 	 lcd_write_register(0x33,0x0300);
 2752              		.loc 1 768 3 view .LVU588
 2753 095c 40F20621 		movw	r1, #518
 2754 0960 3220     		movs	r0, #50
 2755 0962 FFF7FEFF 		bl	lcd_write_register
 2756              	.LVL343:
 769:lcd.c         **** 	 lcd_write_register(0x34,0x0002);
 2757              		.loc 1 769 3 view .LVU589
 2758 0966 4FF44071 		mov	r1, #768
 2759 096a 3320     		movs	r0, #51
 2760 096c FFF7FEFF 		bl	lcd_write_register
 2761              	.LVL344:
 770:lcd.c         **** 	 lcd_write_register(0x35,0x0000);
 2762              		.loc 1 770 3 view .LVU590
 2763 0970 0221     		movs	r1, #2
 2764 0972 3420     		movs	r0, #52
 2765 0974 FFF7FEFF 		bl	lcd_write_register
 2766              	.LVL345:
 771:lcd.c         **** 	 lcd_write_register(0x36,0x0707);
 2767              		.loc 1 771 3 view .LVU591
 2768 0978 2146     		mov	r1, r4
 2769 097a 3520     		movs	r0, #53
 2770 097c FFF7FEFF 		bl	lcd_write_register
 2771              	.LVL346:
 772:lcd.c         **** 	 lcd_write_register(0x37,0x0200);
 2772              		.loc 1 772 3 view .LVU592
 2773 0980 40F20771 		movw	r1, #1799
 2774 0984 3620     		movs	r0, #54
 2775 0986 FFF7FEFF 		bl	lcd_write_register
 2776              	.LVL347:
 773:lcd.c         **** 	 lcd_write_register(0x3A,0x0908);
 2777              		.loc 1 773 3 view .LVU593
 2778 098a 4FF40071 		mov	r1, #512
 2779 098e 3720     		movs	r0, #55
 2780 0990 FFF7FEFF 		bl	lcd_write_register
 2781              	.LVL348:
 774:lcd.c         **** 	 lcd_write_register(0x3B,0x0F0D);
 2782              		.loc 1 774 3 view .LVU594
 2783 0994 40F60811 		movw	r1, #2312
 2784 0998 3A20     		movs	r0, #58
 2785 099a FFF7FEFF 		bl	lcd_write_register
 2786              	.LVL349:
 775:lcd.c         **** 	 /************* Special command **************/
 2787              		.loc 1 775 3 view .LVU595
 2788 099e 40F60D71 		movw	r1, #3853
 2789 09a2 3B20     		movs	r0, #59
 2790 09a4 FFF7FEFF 		bl	lcd_write_register
 2791              	.LVL350:
 777:lcd.c         **** 	 lcd_write_register(0x2F,0x12EB);
 2792              		.loc 1 777 3 view .LVU596
 2793 09a8 0621     		movs	r1, #6
 2794 09aa 2820     		movs	r0, #40
 2795 09ac FFF7FEFF 		bl	lcd_write_register
 2796              	.LVL351:
 778:lcd.c         **** 	 lcd_write_register(0x26,0x7000);
 2797              		.loc 1 778 3 view .LVU597
 2798 09b0 41F2EB21 		movw	r1, #4843
 2799 09b4 2F20     		movs	r0, #47
 2800 09b6 FFF7FEFF 		bl	lcd_write_register
 2801              	.LVL352:
 779:lcd.c         **** 	 lcd_write_register(0x20,0xB0E3);
 2802              		.loc 1 779 3 view .LVU598
 2803 09ba 4FF4E041 		mov	r1, #28672
 2804 09be 2620     		movs	r0, #38
 2805 09c0 FFF7FEFF 		bl	lcd_write_register
 2806              	.LVL353:
 780:lcd.c         **** 	 lcd_write_register(0x27,0x0044);
 2807              		.loc 1 780 3 view .LVU599
 2808 09c4 4BF2E301 		movw	r1, #45283
 2809 09c8 2020     		movs	r0, #32
 2810 09ca FFF7FEFF 		bl	lcd_write_register
 2811              	.LVL354:
 781:lcd.c         **** 	 lcd_write_register(0x2E,0x7E45);
 2812              		.loc 1 781 3 view .LVU600
 2813 09ce 4421     		movs	r1, #68
 2814 09d0 2720     		movs	r0, #39
 2815 09d2 FFF7FEFF 		bl	lcd_write_register
 2816              	.LVL355:
 782:lcd.c         **** 	 /************* Turn On display **************/
 2817              		.loc 1 782 3 view .LVU601
 2818 09d6 47F64561 		movw	r1, #32325
 2819 09da 2E20     		movs	r0, #46
 2820 09dc FFF7FEFF 		bl	lcd_write_register
 2821              	.LVL356:
 784:lcd.c         **** 	 lcd_delay(30);
 2822              		.loc 1 784 3 view .LVU602
 2823 09e0 2146     		mov	r1, r4
 2824 09e2 1020     		movs	r0, #16
 2825 09e4 FFF7FEFF 		bl	lcd_write_register
 2826              	.LVL357:
 785:lcd.c         **** 	 lcd_write_register(0x11,0x6870);
 2827              		.loc 1 785 3 view .LVU603
 2828              	.LBB97:
 2829              	.LBI97:
 458:lcd.c         **** {
 2830              		.loc 1 458 6 view .LVU604
 2831              	.LBB98:
 460:lcd.c         **** }
 2832              		.loc 1 460 7 view .LVU605
 2833 09e8 2846     		mov	r0, r5
 2834 09ea FFF7FEFF 		bl	wait_ms
 2835              	.LVL358:
 460:lcd.c         **** }
 2836              		.loc 1 460 7 is_stmt 0 view .LVU606
 2837              	.LBE98:
 2838              	.LBE97:
 786:lcd.c         **** 	 lcd_write_register(0x07,0x0033);
 2839              		.loc 1 786 3 is_stmt 1 view .LVU607
 2840 09ee 46F67001 		movw	r1, #26736
 2841 09f2 1120     		movs	r0, #17
 2842 09f4 FFF7FEFF 		bl	lcd_write_register
 2843              	.LVL359:
 787:lcd.c         ****       }
 2844              		.loc 1 787 3 view .LVU608
 2845 09f8 3321     		movs	r1, #51
 2846 09fa 8BE5     		b	.L84
 2847              		.cfi_endproc
 2848              	.LFE61:
 2850              		.section	.text.lcd_fill,"ax",%progbits
 2851              		.align	1
 2852              		.global	lcd_fill
 2853              		.syntax unified
 2854              		.thumb
 2855              		.thumb_func
 2856              		.fpu softvfp
 2858              	lcd_fill:
 2859              	.LVL360:
 2860              	.LFB62:
 792:lcd.c         **** 
 793:lcd.c         **** 
 794:lcd.c         **** void lcd_fill (unsigned char xsta,unsigned short ysta,unsigned char xend,unsigned short yend,unsign
 795:lcd.c         **** {
 2861              		.loc 1 795 1 view -0
 2862              		.cfi_startproc
 2863              		@ args = 4, pretend = 0, frame = 0
 2864              		@ frame_needed = 0, uses_anonymous_args = 0
 796:lcd.c         ****       unsigned int n;
 2865              		.loc 1 796 7 view .LVU610
 797:lcd.c         ****       lcd_write_register(R80,xsta);
 2866              		.loc 1 797 7 view .LVU611
 795:lcd.c         ****       unsigned int n;
 2867              		.loc 1 795 1 is_stmt 0 view .LVU612
 2868 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2869              		.cfi_def_cfa_offset 24
 2870              		.cfi_offset 4, -24
 2871              		.cfi_offset 5, -20
 2872              		.cfi_offset 6, -16
 2873              		.cfi_offset 7, -12
 2874              		.cfi_offset 8, -8
 2875              		.cfi_offset 14, -4
 795:lcd.c         ****       unsigned int n;
 2876              		.loc 1 795 1 view .LVU613
 2877 0004 1546     		mov	r5, r2
 2878 0006 8846     		mov	r8, r1
 2879 0008 1E46     		mov	r6, r3
 2880 000a 0446     		mov	r4, r0
 2881              		.loc 1 797 7 view .LVU614
 2882 000c 0146     		mov	r1, r0
 2883              	.LVL361:
 2884              		.loc 1 797 7 view .LVU615
 2885 000e 5020     		movs	r0, #80
 2886              	.LVL362:
 795:lcd.c         ****       unsigned int n;
 2887              		.loc 1 795 1 view .LVU616
 2888 0010 BDF81870 		ldrh	r7, [sp, #24]
 2889              		.loc 1 797 7 view .LVU617
 2890 0014 FFF7FEFF 		bl	lcd_write_register
 2891              	.LVL363:
 798:lcd.c         ****       lcd_write_register(R81,xend);
 2892              		.loc 1 798 7 is_stmt 1 view .LVU618
 2893 0018 2946     		mov	r1, r5
 2894 001a 5120     		movs	r0, #81
 2895 001c FFF7FEFF 		bl	lcd_write_register
 2896              	.LVL364:
 799:lcd.c         ****       lcd_write_register(R82,ysta);
 2897              		.loc 1 799 7 view .LVU619
 2898 0020 4146     		mov	r1, r8
 2899 0022 5220     		movs	r0, #82
 2900 0024 FFF7FEFF 		bl	lcd_write_register
 2901              	.LVL365:
 800:lcd.c         ****       lcd_write_register(R83,yend);
 2902              		.loc 1 800 7 view .LVU620
 2903 0028 3146     		mov	r1, r6
 2904 002a 5320     		movs	r0, #83
 2905 002c FFF7FEFF 		bl	lcd_write_register
 2906              	.LVL366:
 801:lcd.c         ****       lcd_set_cursor(xsta,ysta);
 2907              		.loc 1 801 7 view .LVU621
 2908 0030 2046     		mov	r0, r4
 2909 0032 4146     		mov	r1, r8
 2910 0034 FFF7FEFF 		bl	lcd_set_cursor
 2911              	.LVL367:
 802:lcd.c         ****       lcd_write_ram_prepare();
 2912              		.loc 1 802 7 view .LVU622
 2913 0038 FFF7FEFF 		bl	lcd_write_ram_prepare
 2914              	.LVL368:
 803:lcd.c         ****       n = (unsigned int)(yend - ysta + 1) *(xend - xsta + 1);
 2915              		.loc 1 803 7 view .LVU623
 2916              		.loc 1 803 50 is_stmt 0 view .LVU624
 2917 003c 2C1B     		subs	r4, r5, r4
 2918              		.loc 1 803 31 view .LVU625
 2919 003e A6EB0806 		sub	r6, r6, r8
 2920              		.loc 1 803 57 view .LVU626
 2921 0042 0134     		adds	r4, r4, #1
 2922              		.loc 1 803 9 view .LVU627
 2923 0044 06FB0444 		mla	r4, r6, r4, r4
 2924              	.LVL369:
 804:lcd.c         ****       while (n--) {
 2925              		.loc 1 804 7 is_stmt 1 view .LVU628
 2926              	.L88:
 2927              		.loc 1 804 13 view .LVU629
 2928 0048 013C     		subs	r4, r4, #1
 2929              	.LVL370:
 2930              		.loc 1 804 13 is_stmt 0 view .LVU630
 2931 004a 12D2     		bcs	.L89
 805:lcd.c         ****       	    lcd_wr_data(color);
 806:lcd.c         ****       }
 807:lcd.c         ****       lcd_write_register(R80,0x0000);
 2932              		.loc 1 807 7 is_stmt 1 view .LVU631
 2933 004c 0021     		movs	r1, #0
 2934 004e 5020     		movs	r0, #80
 2935 0050 FFF7FEFF 		bl	lcd_write_register
 2936              	.LVL371:
 808:lcd.c         ****       lcd_write_register(R81,0x00EF);
 2937              		.loc 1 808 7 view .LVU632
 2938 0054 EF21     		movs	r1, #239
 2939 0056 5120     		movs	r0, #81
 2940 0058 FFF7FEFF 		bl	lcd_write_register
 2941              	.LVL372:
 809:lcd.c         ****       lcd_write_register(R82,0x0000);
 2942              		.loc 1 809 7 view .LVU633
 2943 005c 0021     		movs	r1, #0
 2944 005e 5220     		movs	r0, #82
 2945 0060 FFF7FEFF 		bl	lcd_write_register
 2946              	.LVL373:
 810:lcd.c         ****       lcd_write_register(R83,0x013F);
 2947              		.loc 1 810 7 view .LVU634
 811:lcd.c         **** }
 2948              		.loc 1 811 1 is_stmt 0 view .LVU635
 2949 0064 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2950              		.cfi_remember_state
 2951              		.cfi_restore 14
 2952              		.cfi_restore 8
 2953              		.cfi_restore 7
 2954              		.cfi_restore 6
 2955              		.cfi_restore 5
 2956              		.cfi_restore 4
 2957              		.cfi_def_cfa_offset 0
 2958              	.LVL374:
 810:lcd.c         ****       lcd_write_register(R83,0x013F);
 2959              		.loc 1 810 7 view .LVU636
 2960 0068 40F23F11 		movw	r1, #319
 2961 006c 5320     		movs	r0, #83
 2962 006e FFF7FEBF 		b	lcd_write_register
 2963              	.LVL375:
 2964              	.L89:
 2965              		.cfi_restore_state
 805:lcd.c         ****       }
 2966              		.loc 1 805 12 is_stmt 1 view .LVU637
 2967 0072 3846     		mov	r0, r7
 2968 0074 FFF7FEFF 		bl	lcd_wr_data
 2969              	.LVL376:
 2970 0078 E6E7     		b	.L88
 2971              		.cfi_endproc
 2972              	.LFE62:
 2974              		.section	.text.lcd_draw_line,"ax",%progbits
 2975              		.align	1
 2976              		.global	lcd_draw_line
 2977              		.syntax unified
 2978              		.thumb
 2979              		.thumb_func
 2980              		.fpu softvfp
 2982              	lcd_draw_line:
 2983              	.LVL377:
 2984              	.LFB63:
 812:lcd.c         **** 
 813:lcd.c         **** 
 814:lcd.c         **** void lcd_draw_line (unsigned char x1, unsigned short y1, unsigned char x2, unsigned short y2)
 815:lcd.c         **** {
 2985              		.loc 1 815 1 view -0
 2986              		.cfi_startproc
 2987              		@ args = 0, pretend = 0, frame = 0
 2988              		@ frame_needed = 0, uses_anonymous_args = 0
 816:lcd.c         ****       unsigned short x, y, t;
 2989              		.loc 1 816 7 view .LVU639
 817:lcd.c         ****       if ((x1 == x2) && (y1 == y2)) lcd_set_pixel(x1, y1);
 2990              		.loc 1 817 7 view .LVU640
 2991              		.loc 1 817 10 is_stmt 0 view .LVU641
 2992 0000 9042     		cmp	r0, r2
 815:lcd.c         ****       unsigned short x, y, t;
 2993              		.loc 1 815 1 view .LVU642
 2994 0002 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2995              		.cfi_def_cfa_offset 32
 2996              		.cfi_offset 3, -32
 2997              		.cfi_offset 4, -28
 2998              		.cfi_offset 5, -24
 2999              		.cfi_offset 6, -20
 3000              		.cfi_offset 7, -16
 3001              		.cfi_offset 8, -12
 3002              		.cfi_offset 9, -8
 3003              		.cfi_offset 14, -4
 815:lcd.c         ****       unsigned short x, y, t;
 3004              		.loc 1 815 1 view .LVU643
 3005 0006 0546     		mov	r5, r0
 3006 0008 0C46     		mov	r4, r1
 3007 000a 1E46     		mov	r6, r3
 3008              		.loc 1 817 10 view .LVU644
 3009 000c 05D1     		bne	.L91
 3010              		.loc 1 817 22 discriminator 1 view .LVU645
 3011 000e 9942     		cmp	r1, r3
 3012 0010 03D1     		bne	.L91
 3013              		.loc 1 817 37 is_stmt 1 discriminator 2 view .LVU646
 818:lcd.c         ****       else if (abs(y2 - y1) > abs(x2 - x1)) {
 819:lcd.c         **** 	 if (y1 > y2) {
 820:lcd.c         **** 	    t = y1;
 821:lcd.c         ****   	    y1 = y2;
 822:lcd.c         **** 	    y2 = t;
 823:lcd.c         **** 	    t = x1;
 824:lcd.c         **** 	    x1 = x2;
 825:lcd.c         **** 	    x2 = t;
 826:lcd.c         ****          }
 827:lcd.c         **** 	 for (y=y1;y<y2;y++) {
 828:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 829:lcd.c         **** 	     lcd_set_pixel(x, y);
 830:lcd.c         **** 	 }
 831:lcd.c         ****       }	else {
 832:lcd.c         **** 	 if (x1 > x2) {
 833:lcd.c         **** 	    t = y1;
 834:lcd.c         ****    	    y1 = y2;
 835:lcd.c         ****      	    y2 = t;
 836:lcd.c         ****             t = x1;
 837:lcd.c         **** 	    x1 = x2;
 838:lcd.c         **** 	    x2 = t;
 839:lcd.c         **** 	 }
 840:lcd.c         **** 	 for (x=x1;x<=x2;x++) {
 841:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 842:lcd.c         **** 	     lcd_set_pixel(x,y);
 843:lcd.c         **** 	 }
 844:lcd.c         ****       }
 845:lcd.c         **** }
 3014              		.loc 1 845 1 is_stmt 0 discriminator 2 view .LVU647
 3015 0012 BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}
 3016              		.cfi_remember_state
 3017              		.cfi_restore 14
 3018              		.cfi_restore 9
 3019              		.cfi_restore 8
 3020              		.cfi_restore 7
 3021              		.cfi_restore 6
 3022              		.cfi_restore 5
 3023              		.cfi_restore 4
 3024              		.cfi_restore 3
 3025              		.cfi_def_cfa_offset 0
 3026              	.LVL378:
 817:lcd.c         ****       else if (abs(y2 - y1) > abs(x2 - x1)) {
 3027              		.loc 1 817 37 discriminator 2 view .LVU648
 3028 0016 FFF7FEBF 		b	lcd_set_pixel
 3029              	.LVL379:
 3030              	.L91:
 3031              		.cfi_restore_state
 818:lcd.c         ****       else if (abs(y2 - y1) > abs(x2 - x1)) {
 3032              		.loc 1 818 12 is_stmt 1 view .LVU649
 818:lcd.c         ****       else if (abs(y2 - y1) > abs(x2 - x1)) {
 3033              		.loc 1 818 23 is_stmt 0 view .LVU650
 3034 001a 311B     		subs	r1, r6, r4
 3035              	.LVL380:
 818:lcd.c         ****       else if (abs(y2 - y1) > abs(x2 - x1)) {
 3036              		.loc 1 818 38 view .LVU651
 3037 001c 531B     		subs	r3, r2, r5
 3038              	.LVL381:
 818:lcd.c         ****       else if (abs(y2 - y1) > abs(x2 - x1)) {
 3039              		.loc 1 818 16 view .LVU652
 3040 001e 0029     		cmp	r1, #0
 3041 0020 B8BF     		it	lt
 3042 0022 4942     		rsblt	r1, r1, #0
 818:lcd.c         ****       else if (abs(y2 - y1) > abs(x2 - x1)) {
 3043              		.loc 1 818 31 view .LVU653
 3044 0024 002B     		cmp	r3, #0
 3045 0026 B8BF     		it	lt
 3046 0028 5B42     		rsblt	r3, r3, #0
 818:lcd.c         ****       else if (abs(y2 - y1) > abs(x2 - x1)) {
 3047              		.loc 1 818 15 view .LVU654
 3048 002a 9942     		cmp	r1, r3
 3049 002c 1BDD     		ble	.L92
 3050              	.LVL382:
 3051              	.LBB101:
 3052              	.LBI101:
 814:lcd.c         **** {
 3053              		.loc 1 814 6 is_stmt 1 view .LVU655
 3054              	.LBB102:
 819:lcd.c         **** 	    t = y1;
 3055              		.loc 1 819 3 view .LVU656
 819:lcd.c         **** 	    t = y1;
 3056              		.loc 1 819 6 is_stmt 0 view .LVU657
 3057 002e B442     		cmp	r4, r6
 3058 0030 05D9     		bls	.L93
 3059 0032 2346     		mov	r3, r4
 3060 0034 3446     		mov	r4, r6
 3061              	.LVL383:
 819:lcd.c         **** 	    t = y1;
 3062              		.loc 1 819 6 view .LVU658
 3063 0036 1E46     		mov	r6, r3
 3064              	.LVL384:
 819:lcd.c         **** 	    t = y1;
 3065              		.loc 1 819 6 view .LVU659
 3066 0038 2B46     		mov	r3, r5
 3067 003a 1546     		mov	r5, r2
 3068              	.LVL385:
 819:lcd.c         **** 	    t = y1;
 3069              		.loc 1 819 6 view .LVU660
 3070 003c 1A46     		mov	r2, r3
 3071              	.LVL386:
 3072              	.L93:
 827:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 3073              		.loc 1 827 3 is_stmt 1 view .LVU661
 827:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 3074              		.loc 1 827 3 is_stmt 0 view .LVU662
 3075 003e 0027     		movs	r7, #0
 3076 0040 A2EB0508 		sub	r8, r2, r5
 828:lcd.c         **** 	     lcd_set_pixel(x, y);
 3077              		.loc 1 828 52 view .LVU663
 3078 0044 A6EB0409 		sub	r9, r6, r4
 3079              	.LVL387:
 3080              	.L94:
 827:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 3081              		.loc 1 827 13 is_stmt 1 view .LVU664
 827:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 3082              		.loc 1 827 3 is_stmt 0 view .LVU665
 3083 0048 B442     		cmp	r4, r6
 3084 004a 01D3     		bcc	.L95
 3085              	.LVL388:
 3086              	.L90:
 827:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 3087              		.loc 1 827 3 view .LVU666
 3088              	.LBE102:
 3089              	.LBE101:
 3090              		.loc 1 845 1 view .LVU667
 3091 004c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3092              	.LVL389:
 3093              	.L95:
 3094              	.LBB104:
 3095              	.LBB103:
 828:lcd.c         **** 	     lcd_set_pixel(x, y);
 3096              		.loc 1 828 7 is_stmt 1 view .LVU668
 829:lcd.c         **** 	 }
 3097              		.loc 1 829 7 view .LVU669
 828:lcd.c         **** 	     lcd_set_pixel(x, y);
 3098              		.loc 1 828 46 is_stmt 0 view .LVU670
 3099 0050 B7FBF9F0 		udiv	r0, r7, r9
 828:lcd.c         **** 	     lcd_set_pixel(x, y);
 3100              		.loc 1 828 9 view .LVU671
 3101 0054 2844     		add	r0, r0, r5
 829:lcd.c         **** 	 }
 3102              		.loc 1 829 7 view .LVU672
 3103 0056 2146     		mov	r1, r4
 3104 0058 C0B2     		uxtb	r0, r0
 827:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 3105              		.loc 1 827 19 view .LVU673
 3106 005a 0134     		adds	r4, r4, #1
 3107              	.LVL390:
 829:lcd.c         **** 	 }
 3108              		.loc 1 829 7 view .LVU674
 3109 005c FFF7FEFF 		bl	lcd_set_pixel
 3110              	.LVL391:
 827:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 3111              		.loc 1 827 18 is_stmt 1 view .LVU675
 827:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 3112              		.loc 1 827 19 is_stmt 0 view .LVU676
 3113 0060 A4B2     		uxth	r4, r4
 3114              	.LVL392:
 827:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 3115              		.loc 1 827 19 view .LVU677
 3116 0062 4744     		add	r7, r7, r8
 827:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 3117              		.loc 1 827 19 view .LVU678
 3118 0064 F0E7     		b	.L94
 3119              	.LVL393:
 3120              	.L92:
 827:lcd.c         **** 	     x = (unsigned int)(y - y1) * (x2 - x1) / (y2 - y1) + x1;
 3121              		.loc 1 827 19 view .LVU679
 3122              	.LBE103:
 3123              	.LBE104:
 832:lcd.c         **** 	    t = y1;
 3124              		.loc 1 832 3 is_stmt 1 view .LVU680
 832:lcd.c         **** 	    t = y1;
 3125              		.loc 1 832 6 is_stmt 0 view .LVU681
 3126 0066 9542     		cmp	r5, r2
 3127 0068 05D9     		bls	.L97
 3128 006a 2346     		mov	r3, r4
 3129 006c 3446     		mov	r4, r6
 3130 006e 1E46     		mov	r6, r3
 3131 0070 2B46     		mov	r3, r5
 3132 0072 1546     		mov	r5, r2
 3133 0074 1A46     		mov	r2, r3
 3134              	.LVL394:
 3135              	.L97:
 840:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3136              		.loc 1 840 3 is_stmt 1 view .LVU682
 3137 0076 4FF00008 		mov	r8, #0
 840:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3138              		.loc 1 840 9 is_stmt 0 view .LVU683
 3139 007a AFB2     		uxth	r7, r5
 3140              	.LVL395:
 840:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3141              		.loc 1 840 9 view .LVU684
 3142 007c 361B     		subs	r6, r6, r4
 3143              	.LVL396:
 840:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3144              		.loc 1 840 3 view .LVU685
 3145 007e 1FFA82F9 		uxth	r9, r2
 841:lcd.c         **** 	     lcd_set_pixel(x,y);
 3146              		.loc 1 841 51 view .LVU686
 3147 0082 551B     		subs	r5, r2, r5
 3148              	.LVL397:
 3149              	.L98:
 840:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3150              		.loc 1 840 13 is_stmt 1 discriminator 1 view .LVU687
 840:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3151              		.loc 1 840 3 is_stmt 0 discriminator 1 view .LVU688
 3152 0084 B945     		cmp	r9, r7
 3153 0086 E1D3     		bcc	.L90
 841:lcd.c         **** 	     lcd_set_pixel(x,y);
 3154              		.loc 1 841 7 is_stmt 1 discriminator 3 view .LVU689
 3155              	.LVL398:
 842:lcd.c         **** 	 }
 3156              		.loc 1 842 7 discriminator 3 view .LVU690
 841:lcd.c         **** 	     lcd_set_pixel(x,y);
 3157              		.loc 1 841 45 is_stmt 0 discriminator 3 view .LVU691
 3158 0088 B8FBF5F1 		udiv	r1, r8, r5
 841:lcd.c         **** 	     lcd_set_pixel(x,y);
 3159              		.loc 1 841 9 discriminator 3 view .LVU692
 3160 008c 2144     		add	r1, r1, r4
 842:lcd.c         **** 	 }
 3161              		.loc 1 842 7 discriminator 3 view .LVU693
 3162 008e F8B2     		uxtb	r0, r7
 3163 0090 89B2     		uxth	r1, r1
 840:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3164              		.loc 1 840 20 discriminator 3 view .LVU694
 3165 0092 0137     		adds	r7, r7, #1
 3166              	.LVL399:
 842:lcd.c         **** 	 }
 3167              		.loc 1 842 7 discriminator 3 view .LVU695
 3168 0094 FFF7FEFF 		bl	lcd_set_pixel
 3169              	.LVL400:
 840:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3170              		.loc 1 840 19 is_stmt 1 discriminator 3 view .LVU696
 840:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3171              		.loc 1 840 20 is_stmt 0 discriminator 3 view .LVU697
 3172 0098 BFB2     		uxth	r7, r7
 3173              	.LVL401:
 840:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3174              		.loc 1 840 20 discriminator 3 view .LVU698
 3175 009a B044     		add	r8, r8, r6
 840:lcd.c         **** 	     y =(unsigned int)(x - x1) * (y2 - y1) / (x2 - x1) + y1;
 3176              		.loc 1 840 20 discriminator 3 view .LVU699
 3177 009c F2E7     		b	.L98
 3178              		.cfi_endproc
 3179              	.LFE63:
 3181              		.section	.text.draw_apple_logo,"ax",%progbits
 3182              		.align	1
 3183              		.global	draw_apple_logo
 3184              		.syntax unified
 3185              		.thumb
 3186              		.thumb_func
 3187              		.fpu softvfp
 3189              	draw_apple_logo:
 3190              	.LVL402:
 3191              	.LFB49:
 333:lcd.c         **** 	lcd_draw_line(x+32,y,x+34,y);
 3192              		.loc 1 333 56 is_stmt 1 view -0
 3193              		.cfi_startproc
 3194              		@ args = 0, pretend = 0, frame = 56
 3195              		@ frame_needed = 0, uses_anonymous_args = 0
 334:lcd.c         **** 	lcd_draw_line(x+30,y+1,x+34,y+1);
 3196              		.loc 1 334 2 view .LVU701
 333:lcd.c         **** 	lcd_draw_line(x+32,y,x+34,y);
 3197              		.loc 1 333 56 is_stmt 0 view .LVU702
 3198 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3199              		.cfi_def_cfa_offset 36
 3200              		.cfi_offset 4, -36
 3201              		.cfi_offset 5, -32
 3202              		.cfi_offset 6, -28
 3203              		.cfi_offset 7, -24
 3204              		.cfi_offset 8, -20
 3205              		.cfi_offset 9, -16
 3206              		.cfi_offset 10, -12
 3207              		.cfi_offset 11, -8
 3208              		.cfi_offset 14, -4
 3209 0004 0C46     		mov	r4, r1
 334:lcd.c         **** 	lcd_draw_line(x+30,y+1,x+34,y+1);
 3210              		.loc 1 334 2 view .LVU703
 3211 0006 C5B2     		uxtb	r5, r0
 3212 0008 05F12003 		add	r3, r5, #32
 333:lcd.c         **** 	lcd_draw_line(x+32,y,x+34,y);
 3213              		.loc 1 333 56 view .LVU704
 3214 000c 8FB0     		sub	sp, sp, #60
 3215              		.cfi_def_cfa_offset 96
 334:lcd.c         **** 	lcd_draw_line(x+30,y+1,x+34,y+1);
 3216              		.loc 1 334 2 view .LVU705
 3217 000e DBB2     		uxtb	r3, r3
 3218 0010 05F12206 		add	r6, r5, #34
 3219 0014 0193     		str	r3, [sp, #4]
 3220 0016 F6B2     		uxtb	r6, r6
 3221 0018 0B46     		mov	r3, r1
 3222 001a 3246     		mov	r2, r6
 3223 001c 0198     		ldr	r0, [sp, #4]
 3224              	.LVL403:
 334:lcd.c         **** 	lcd_draw_line(x+30,y+1,x+34,y+1);
 3225              		.loc 1 334 2 view .LVU706
 3226 001e FFF7FEFF 		bl	lcd_draw_line
 3227              	.LVL404:
 335:lcd.c         **** 	lcd_draw_line(x+28,y+2,x+34,y+2);
 3228              		.loc 1 335 2 is_stmt 1 view .LVU707
 3229 0022 05F11E03 		add	r3, r5, #30
 3230 0026 DBB2     		uxtb	r3, r3
 3231 0028 0593     		str	r3, [sp, #20]
 3232 002a 631C     		adds	r3, r4, #1
 3233 002c 9BB2     		uxth	r3, r3
 3234 002e 3246     		mov	r2, r6
 3235 0030 1946     		mov	r1, r3
 3236 0032 0598     		ldr	r0, [sp, #20]
 3237 0034 FFF7FEFF 		bl	lcd_draw_line
 3238              	.LVL405:
 336:lcd.c         **** 	lcd_draw_line(x+27,y+3,x+33,y+3);
 3239              		.loc 1 336 2 view .LVU708
 3240 0038 05F11C0A 		add	r10, r5, #28
 3241 003c A31C     		adds	r3, r4, #2
 3242 003e 5FFA8AFA 		uxtb	r10, r10
 3243 0042 9BB2     		uxth	r3, r3
 3244 0044 3246     		mov	r2, r6
 3245 0046 1946     		mov	r1, r3
 3246 0048 5046     		mov	r0, r10
 3247 004a FFF7FEFF 		bl	lcd_draw_line
 3248              	.LVL406:
 337:lcd.c         **** 	lcd_draw_line(x+26,y+4,x+33,y+4);
 3249              		.loc 1 337 2 view .LVU709
 3250 004e 05F11B09 		add	r9, r5, #27
 3251 0052 E31C     		adds	r3, r4, #3
 3252 0054 05F12107 		add	r7, r5, #33
 3253 0058 FFB2     		uxtb	r7, r7
 3254 005a 5FFA89F9 		uxtb	r9, r9
 3255 005e 9BB2     		uxth	r3, r3
 3256 0060 3A46     		mov	r2, r7
 3257 0062 1946     		mov	r1, r3
 3258 0064 4846     		mov	r0, r9
 3259 0066 FFF7FEFF 		bl	lcd_draw_line
 3260              	.LVL407:
 338:lcd.c         **** 	lcd_draw_line(x+26,y+5,x+33,y+5);
 3261              		.loc 1 338 2 view .LVU710
 3262 006a 05F11A06 		add	r6, r5, #26
 3263 006e 231D     		adds	r3, r4, #4
 3264 0070 F6B2     		uxtb	r6, r6
 3265 0072 9BB2     		uxth	r3, r3
 3266 0074 3A46     		mov	r2, r7
 3267 0076 1946     		mov	r1, r3
 3268 0078 3046     		mov	r0, r6
 3269 007a FFF7FEFF 		bl	lcd_draw_line
 3270              	.LVL408:
 339:lcd.c         **** 	lcd_draw_line(x+25,y+6,x+32,y+6);
 3271              		.loc 1 339 2 view .LVU711
 3272 007e 631D     		adds	r3, r4, #5
 3273 0080 9BB2     		uxth	r3, r3
 3274 0082 3A46     		mov	r2, r7
 3275 0084 1946     		mov	r1, r3
 3276 0086 3046     		mov	r0, r6
 3277 0088 FFF7FEFF 		bl	lcd_draw_line
 3278              	.LVL409:
 340:lcd.c         **** 	lcd_draw_line(x+25,y+7,x+32,y+7);
 3279              		.loc 1 340 2 view .LVU712
 3280 008c 05F11907 		add	r7, r5, #25
 3281 0090 A31D     		adds	r3, r4, #6
 3282 0092 FFB2     		uxtb	r7, r7
 3283 0094 9BB2     		uxth	r3, r3
 3284 0096 1946     		mov	r1, r3
 3285 0098 3846     		mov	r0, r7
 3286 009a 019A     		ldr	r2, [sp, #4]
 3287 009c FFF7FEFF 		bl	lcd_draw_line
 3288              	.LVL410:
 341:lcd.c         **** 	lcd_draw_line(x+24,y+8,x+31,y+8);
 3289              		.loc 1 341 2 view .LVU713
 3290 00a0 E31D     		adds	r3, r4, #7
 3291 00a2 9BB2     		uxth	r3, r3
 3292 00a4 1946     		mov	r1, r3
 3293 00a6 3846     		mov	r0, r7
 3294 00a8 019A     		ldr	r2, [sp, #4]
 3295 00aa FFF7FEFF 		bl	lcd_draw_line
 3296              	.LVL411:
 342:lcd.c         **** 	lcd_draw_line(x+24,y+9,x+30,y+9);
 3297              		.loc 1 342 2 view .LVU714
 3298 00ae 05F1180B 		add	fp, r5, #24
 3299 00b2 04F10803 		add	r3, r4, #8
 3300 00b6 05F11F08 		add	r8, r5, #31
 3301 00ba 5FFA8BFB 		uxtb	fp, fp
 3302 00be 9BB2     		uxth	r3, r3
 3303 00c0 5FFA88F8 		uxtb	r8, r8
 3304 00c4 4246     		mov	r2, r8
 3305 00c6 1946     		mov	r1, r3
 3306 00c8 5846     		mov	r0, fp
 3307 00ca FFF7FEFF 		bl	lcd_draw_line
 3308              	.LVL412:
 343:lcd.c         **** 	lcd_draw_line(x+24,y+10,x+29,y+10);
 3309              		.loc 1 343 2 view .LVU715
 3310 00ce 04F10903 		add	r3, r4, #9
 3311 00d2 9BB2     		uxth	r3, r3
 3312 00d4 1946     		mov	r1, r3
 3313 00d6 5846     		mov	r0, fp
 3314 00d8 059A     		ldr	r2, [sp, #20]
 3315 00da FFF7FEFF 		bl	lcd_draw_line
 3316              	.LVL413:
 344:lcd.c         **** 	lcd_draw_line(x+24,y+11,x+28,y+11);
 3317              		.loc 1 344 2 view .LVU716
 3318 00de 05F11D07 		add	r7, r5, #29
 3319 00e2 04F10A03 		add	r3, r4, #10
 3320 00e6 9BB2     		uxth	r3, r3
 3321 00e8 FFB2     		uxtb	r7, r7
 3322 00ea 3A46     		mov	r2, r7
 3323 00ec 1946     		mov	r1, r3
 3324 00ee 5846     		mov	r0, fp
 3325 00f0 FFF7FEFF 		bl	lcd_draw_line
 3326              	.LVL414:
 345:lcd.c         **** 	lcd_draw_line(x+24,y+12,x+27,y+12);
 3327              		.loc 1 345 2 view .LVU717
 3328 00f4 04F10B03 		add	r3, r4, #11
 3329 00f8 9BB2     		uxth	r3, r3
 3330 00fa 5246     		mov	r2, r10
 3331 00fc 1946     		mov	r1, r3
 3332 00fe 5846     		mov	r0, fp
 3333 0100 FFF7FEFF 		bl	lcd_draw_line
 3334              	.LVL415:
 346:lcd.c         **** 	lcd_draw_line(x+13,y+13,x+15,y+13);lcd_draw_line(x+31,y+13,x+37,y+13);
 3335              		.loc 1 346 2 view .LVU718
 3336 0104 04F10C03 		add	r3, r4, #12
 3337 0108 9BB2     		uxth	r3, r3
 3338 010a 4A46     		mov	r2, r9
 3339 010c 1946     		mov	r1, r3
 3340 010e 5846     		mov	r0, fp
 3341 0110 FFF7FEFF 		bl	lcd_draw_line
 3342              	.LVL416:
 347:lcd.c         **** 	lcd_draw_line(x+9,y+14,x+19,y+14);lcd_draw_line(x+29,y+14,x+39,y+14);
 3343              		.loc 1 347 2 view .LVU719
 3344 0114 05F10D03 		add	r3, r5, #13
 3345 0118 DBB2     		uxtb	r3, r3
 3346 011a 04F10D09 		add	r9, r4, #13
 3347 011e 1FFA89F9 		uxth	r9, r9
 3348 0122 0893     		str	r3, [sp, #32]
 3349 0124 05F10F02 		add	r2, r5, #15
 3350 0128 4B46     		mov	r3, r9
 3351 012a 4946     		mov	r1, r9
 3352 012c 0898     		ldr	r0, [sp, #32]
 3353 012e D2B2     		uxtb	r2, r2
 3354 0130 FFF7FEFF 		bl	lcd_draw_line
 3355              	.LVL417:
 347:lcd.c         **** 	lcd_draw_line(x+9,y+14,x+19,y+14);lcd_draw_line(x+29,y+14,x+39,y+14);
 3356              		.loc 1 347 37 view .LVU720
 3357 0134 05F12503 		add	r3, r5, #37
 3358 0138 DBB2     		uxtb	r3, r3
 3359 013a 0993     		str	r3, [sp, #36]
 3360 013c 4946     		mov	r1, r9
 3361 013e 4B46     		mov	r3, r9
 3362 0140 4046     		mov	r0, r8
 3363 0142 099A     		ldr	r2, [sp, #36]
 3364 0144 FFF7FEFF 		bl	lcd_draw_line
 3365              	.LVL418:
 348:lcd.c         **** 	lcd_draw_line(x+8,y+15,x+22,y+15);lcd_draw_line(x+26,y+15,x+41,y+15);
 3366              		.loc 1 348 2 view .LVU721
 3367 0148 05F10903 		add	r3, r5, #9
 3368 014c DBB2     		uxtb	r3, r3
 3369 014e 0A93     		str	r3, [sp, #40]
 3370 0150 05F11303 		add	r3, r5, #19
 3371 0154 04F10E09 		add	r9, r4, #14
 3372 0158 DBB2     		uxtb	r3, r3
 3373 015a 1FFA89F9 		uxth	r9, r9
 3374 015e 0B93     		str	r3, [sp, #44]
 348:lcd.c         **** 	lcd_draw_line(x+8,y+15,x+22,y+15);lcd_draw_line(x+26,y+15,x+41,y+15);
 3375              		.loc 1 348 36 is_stmt 0 view .LVU722
 3376 0160 05F12708 		add	r8, r5, #39
 3377 0164 5FFA88F8 		uxtb	r8, r8
 348:lcd.c         **** 	lcd_draw_line(x+8,y+15,x+22,y+15);lcd_draw_line(x+26,y+15,x+41,y+15);
 3378              		.loc 1 348 2 view .LVU723
 3379 0168 4B46     		mov	r3, r9
 3380 016a 4946     		mov	r1, r9
 3381 016c 0B9A     		ldr	r2, [sp, #44]
 3382 016e 0A98     		ldr	r0, [sp, #40]
 3383 0170 FFF7FEFF 		bl	lcd_draw_line
 3384              	.LVL419:
 348:lcd.c         **** 	lcd_draw_line(x+8,y+15,x+22,y+15);lcd_draw_line(x+26,y+15,x+41,y+15);
 3385              		.loc 1 348 36 is_stmt 1 view .LVU724
 3386 0174 4B46     		mov	r3, r9
 3387 0176 4246     		mov	r2, r8
 3388 0178 4946     		mov	r1, r9
 3389 017a 3846     		mov	r0, r7
 3390 017c FFF7FEFF 		bl	lcd_draw_line
 3391              	.LVL420:
 349:lcd.c         **** 	lcd_draw_line(x+6,y+16,x+42,y+16);
 3392              		.loc 1 349 2 view .LVU725
 3393 0180 05F10803 		add	r3, r5, #8
 3394 0184 DBB2     		uxtb	r3, r3
 3395 0186 04F10F07 		add	r7, r4, #15
 3396 018a BFB2     		uxth	r7, r7
 3397 018c 0C93     		str	r3, [sp, #48]
 3398 018e 05F11602 		add	r2, r5, #22
 3399 0192 3B46     		mov	r3, r7
 3400 0194 3946     		mov	r1, r7
 3401 0196 0C98     		ldr	r0, [sp, #48]
 3402 0198 D2B2     		uxtb	r2, r2
 3403 019a FFF7FEFF 		bl	lcd_draw_line
 3404              	.LVL421:
 349:lcd.c         **** 	lcd_draw_line(x+6,y+16,x+42,y+16);
 3405              		.loc 1 349 36 view .LVU726
 3406 019e 05F12903 		add	r3, r5, #41
 3407 01a2 DBB2     		uxtb	r3, r3
 3408 01a4 0293     		str	r3, [sp, #8]
 3409 01a6 3946     		mov	r1, r7
 3410 01a8 3B46     		mov	r3, r7
 3411 01aa 3046     		mov	r0, r6
 3412 01ac 029A     		ldr	r2, [sp, #8]
 3413 01ae FFF7FEFF 		bl	lcd_draw_line
 3414              	.LVL422:
 350:lcd.c         **** 	lcd_draw_line(x+5,y+17,x+43,y+17);
 3415              		.loc 1 350 2 view .LVU727
 3416 01b2 AB1D     		adds	r3, r5, #6
 3417 01b4 DBB2     		uxtb	r3, r3
 3418 01b6 0693     		str	r3, [sp, #24]
 3419 01b8 04F11003 		add	r3, r4, #16
 3420 01bc 9BB2     		uxth	r3, r3
 3421 01be 05F12A02 		add	r2, r5, #42
 3422 01c2 1946     		mov	r1, r3
 3423 01c4 0698     		ldr	r0, [sp, #24]
 3424 01c6 D2B2     		uxtb	r2, r2
 3425 01c8 0392     		str	r2, [sp, #12]
 3426 01ca FFF7FEFF 		bl	lcd_draw_line
 3427              	.LVL423:
 351:lcd.c         **** 	lcd_draw_line(x+5,y+18,x+43,y+18);
 3428              		.loc 1 351 2 view .LVU728
 3429 01ce 6B1D     		adds	r3, r5, #5
 3430 01d0 DBB2     		uxtb	r3, r3
 3431 01d2 0493     		str	r3, [sp, #16]
 3432 01d4 05F12B0B 		add	fp, r5, #43
 3433 01d8 04F11103 		add	r3, r4, #17
 3434 01dc 5FFA8BFB 		uxtb	fp, fp
 3435 01e0 9BB2     		uxth	r3, r3
 3436 01e2 5A46     		mov	r2, fp
 3437 01e4 1946     		mov	r1, r3
 3438 01e6 0498     		ldr	r0, [sp, #16]
 3439 01e8 FFF7FEFF 		bl	lcd_draw_line
 3440              	.LVL424:
 352:lcd.c         **** 	lcd_draw_line(x+4,y+19,x+43,y+19);
 3441              		.loc 1 352 2 view .LVU729
 3442 01ec 04F11203 		add	r3, r4, #18
 3443 01f0 9BB2     		uxth	r3, r3
 3444 01f2 5A46     		mov	r2, fp
 3445 01f4 1946     		mov	r1, r3
 3446 01f6 0498     		ldr	r0, [sp, #16]
 3447 01f8 FFF7FEFF 		bl	lcd_draw_line
 3448              	.LVL425:
 353:lcd.c         **** 	lcd_draw_line(x+3,y+20,x+41,y+20);
 3449              		.loc 1 353 2 view .LVU730
 3450 01fc 2B1D     		adds	r3, r5, #4
 3451 01fe DBB2     		uxtb	r3, r3
 3452 0200 0793     		str	r3, [sp, #28]
 3453 0202 04F11303 		add	r3, r4, #19
 3454 0206 9BB2     		uxth	r3, r3
 3455 0208 5A46     		mov	r2, fp
 3456 020a 1946     		mov	r1, r3
 3457 020c 0798     		ldr	r0, [sp, #28]
 3458 020e FFF7FEFF 		bl	lcd_draw_line
 3459              	.LVL426:
 354:lcd.c         **** 	lcd_draw_line(x+3,y+21,x+40,y+21);
 3460              		.loc 1 354 2 view .LVU731
 3461 0212 05F10309 		add	r9, r5, #3
 3462 0216 04F11403 		add	r3, r4, #20
 3463 021a 5FFA89F9 		uxtb	r9, r9
 3464 021e 9BB2     		uxth	r3, r3
 3465 0220 1946     		mov	r1, r3
 3466 0222 4846     		mov	r0, r9
 3467 0224 029A     		ldr	r2, [sp, #8]
 3468 0226 FFF7FEFF 		bl	lcd_draw_line
 3469              	.LVL427:
 355:lcd.c         **** 	lcd_draw_line(x+2,y+22,x+40,y+22);
 3470              		.loc 1 355 2 view .LVU732
 3471 022a 04F11503 		add	r3, r4, #21
 3472 022e 9BB2     		uxth	r3, r3
 3473 0230 05F1280A 		add	r10, r5, #40
 3474 0234 5FFA8AF2 		uxtb	r2, r10
 3475 0238 1946     		mov	r1, r3
 3476 023a 4846     		mov	r0, r9
 3477 023c 0092     		str	r2, [sp]
 356:lcd.c         **** 	lcd_draw_line(x+2,y+23,x+39,y+23);
 3478              		.loc 1 356 2 is_stmt 0 view .LVU733
 3479 023e AF1C     		adds	r7, r5, #2
 355:lcd.c         **** 	lcd_draw_line(x+2,y+22,x+40,y+22);
 3480              		.loc 1 355 2 view .LVU734
 3481 0240 FFF7FEFF 		bl	lcd_draw_line
 3482              	.LVL428:
 356:lcd.c         **** 	lcd_draw_line(x+2,y+23,x+39,y+23);
 3483              		.loc 1 356 2 is_stmt 1 view .LVU735
 3484 0244 04F11603 		add	r3, r4, #22
 3485 0248 FFB2     		uxtb	r7, r7
 3486 024a 9BB2     		uxth	r3, r3
 3487 024c 1946     		mov	r1, r3
 3488 024e 3846     		mov	r0, r7
 3489 0250 009A     		ldr	r2, [sp]
 3490 0252 FFF7FEFF 		bl	lcd_draw_line
 3491              	.LVL429:
 357:lcd.c         **** 	lcd_draw_line(x+2,y+24,x+39,y+24);
 3492              		.loc 1 357 2 view .LVU736
 3493 0256 04F11703 		add	r3, r4, #23
 3494 025a 9BB2     		uxth	r3, r3
 3495 025c 4246     		mov	r2, r8
 3496 025e 1946     		mov	r1, r3
 3497 0260 3846     		mov	r0, r7
 3498 0262 FFF7FEFF 		bl	lcd_draw_line
 3499              	.LVL430:
 358:lcd.c         **** 	lcd_draw_line(x+1,y+25,x+38,y+25);
 3500              		.loc 1 358 2 view .LVU737
 3501 0266 04F11803 		add	r3, r4, #24
 3502 026a 9BB2     		uxth	r3, r3
 3503 026c 4246     		mov	r2, r8
 3504 026e 1946     		mov	r1, r3
 3505 0270 3846     		mov	r0, r7
 3506 0272 FFF7FEFF 		bl	lcd_draw_line
 3507              	.LVL431:
 359:lcd.c         **** 	lcd_draw_line(x+1,y+26,x+38,y+26);
 3508              		.loc 1 359 2 view .LVU738
 3509 0276 05F12606 		add	r6, r5, #38
 3510 027a 681C     		adds	r0, r5, #1
 3511 027c 04F11903 		add	r3, r4, #25
 3512 0280 5FFA80FA 		uxtb	r10, r0
 3513 0284 F6B2     		uxtb	r6, r6
 3514 0286 9BB2     		uxth	r3, r3
 3515 0288 3246     		mov	r2, r6
 3516 028a 1946     		mov	r1, r3
 3517 028c 5046     		mov	r0, r10
 3518 028e FFF7FEFF 		bl	lcd_draw_line
 3519              	.LVL432:
 360:lcd.c         **** 	lcd_draw_line(x+1,y+27,x+38,y+27);	
 3520              		.loc 1 360 2 view .LVU739
 3521 0292 04F11A03 		add	r3, r4, #26
 3522 0296 9BB2     		uxth	r3, r3
 3523 0298 3246     		mov	r2, r6
 3524 029a 1946     		mov	r1, r3
 3525 029c 5046     		mov	r0, r10
 3526 029e FFF7FEFF 		bl	lcd_draw_line
 3527              	.LVL433:
 361:lcd.c         **** 	lcd_draw_line(x+1,y+28,x+38,y+28);
 3528              		.loc 1 361 2 view .LVU740
 3529 02a2 04F11B03 		add	r3, r4, #27
 3530 02a6 9BB2     		uxth	r3, r3
 3531 02a8 3246     		mov	r2, r6
 3532 02aa 1946     		mov	r1, r3
 3533 02ac 5046     		mov	r0, r10
 3534 02ae FFF7FEFF 		bl	lcd_draw_line
 3535              	.LVL434:
 362:lcd.c         **** 	lcd_draw_line(x+1,y+29,x+38,y+29);
 3536              		.loc 1 362 2 view .LVU741
 3537 02b2 04F11C03 		add	r3, r4, #28
 3538 02b6 9BB2     		uxth	r3, r3
 3539 02b8 3246     		mov	r2, r6
 3540 02ba 1946     		mov	r1, r3
 3541 02bc 5046     		mov	r0, r10
 3542 02be FFF7FEFF 		bl	lcd_draw_line
 3543              	.LVL435:
 363:lcd.c         **** 	lcd_draw_line(x+1,y+30,x+38,y+30);
 3544              		.loc 1 363 2 view .LVU742
 3545 02c2 04F11D03 		add	r3, r4, #29
 3546 02c6 9BB2     		uxth	r3, r3
 3547 02c8 3246     		mov	r2, r6
 3548 02ca 1946     		mov	r1, r3
 3549 02cc 5046     		mov	r0, r10
 3550 02ce FFF7FEFF 		bl	lcd_draw_line
 3551              	.LVL436:
 364:lcd.c         **** 	lcd_draw_line(x+1,y+31,x+38,y+31);
 3552              		.loc 1 364 2 view .LVU743
 3553 02d2 04F11E03 		add	r3, r4, #30
 3554 02d6 9BB2     		uxth	r3, r3
 3555 02d8 3246     		mov	r2, r6
 3556 02da 1946     		mov	r1, r3
 3557 02dc 5046     		mov	r0, r10
 3558 02de FFF7FEFF 		bl	lcd_draw_line
 3559              	.LVL437:
 365:lcd.c         **** 	lcd_draw_line(x+1,y+32,x+38,y+32);
 3560              		.loc 1 365 2 view .LVU744
 3561 02e2 04F11F03 		add	r3, r4, #31
 3562 02e6 9BB2     		uxth	r3, r3
 3563 02e8 3246     		mov	r2, r6
 3564 02ea 1946     		mov	r1, r3
 3565 02ec 5046     		mov	r0, r10
 3566 02ee FFF7FEFF 		bl	lcd_draw_line
 3567              	.LVL438:
 366:lcd.c         **** 	lcd_draw_line(x+1,y+33,x+39,y+33);
 3568              		.loc 1 366 2 view .LVU745
 3569 02f2 04F12003 		add	r3, r4, #32
 3570 02f6 9BB2     		uxth	r3, r3
 3571 02f8 3246     		mov	r2, r6
 3572 02fa 1946     		mov	r1, r3
 3573 02fc 5046     		mov	r0, r10
 3574 02fe FFF7FEFF 		bl	lcd_draw_line
 3575              	.LVL439:
 367:lcd.c         **** 	lcd_draw_line(x+2,y+34,x+39,y+34);
 3576              		.loc 1 367 2 view .LVU746
 3577 0302 04F12103 		add	r3, r4, #33
 3578 0306 9BB2     		uxth	r3, r3
 3579 0308 4246     		mov	r2, r8
 3580 030a 1946     		mov	r1, r3
 3581 030c 5046     		mov	r0, r10
 3582 030e FFF7FEFF 		bl	lcd_draw_line
 3583              	.LVL440:
 368:lcd.c         **** 	lcd_draw_line(x+2,y+35,x+40,y+35);
 3584              		.loc 1 368 2 view .LVU747
 3585 0312 04F12203 		add	r3, r4, #34
 3586 0316 9BB2     		uxth	r3, r3
 3587 0318 4246     		mov	r2, r8
 3588 031a 1946     		mov	r1, r3
 3589 031c 3846     		mov	r0, r7
 3590 031e FFF7FEFF 		bl	lcd_draw_line
 3591              	.LVL441:
 369:lcd.c         **** 	lcd_draw_line(x+2,y+36,x+40,y+36);
 3592              		.loc 1 369 2 view .LVU748
 3593 0322 04F12303 		add	r3, r4, #35
 3594 0326 9BB2     		uxth	r3, r3
 3595 0328 1946     		mov	r1, r3
 3596 032a 3846     		mov	r0, r7
 3597 032c 009A     		ldr	r2, [sp]
 3598 032e FFF7FEFF 		bl	lcd_draw_line
 3599              	.LVL442:
 370:lcd.c         **** 	lcd_draw_line(x+2,y+37,x+41,y+37);
 3600              		.loc 1 370 2 view .LVU749
 3601 0332 04F12403 		add	r3, r4, #36
 3602 0336 9BB2     		uxth	r3, r3
 3603 0338 1946     		mov	r1, r3
 3604 033a 3846     		mov	r0, r7
 3605 033c 009A     		ldr	r2, [sp]
 3606 033e FFF7FEFF 		bl	lcd_draw_line
 3607              	.LVL443:
 371:lcd.c         **** 	lcd_draw_line(x+3,y+38,x+42,y+38);
 3608              		.loc 1 371 2 view .LVU750
 3609 0342 04F12503 		add	r3, r4, #37
 3610 0346 9BB2     		uxth	r3, r3
 3611 0348 1946     		mov	r1, r3
 3612 034a 3846     		mov	r0, r7
 3613 034c 029A     		ldr	r2, [sp, #8]
 3614 034e FFF7FEFF 		bl	lcd_draw_line
 3615              	.LVL444:
 372:lcd.c         **** 	lcd_draw_line(x+3,y+39,x+44,y+39);
 3616              		.loc 1 372 2 view .LVU751
 3617 0352 04F12603 		add	r3, r4, #38
 3618 0356 9BB2     		uxth	r3, r3
 3619 0358 1946     		mov	r1, r3
 3620 035a 4846     		mov	r0, r9
 3621 035c 039A     		ldr	r2, [sp, #12]
 3622 035e FFF7FEFF 		bl	lcd_draw_line
 3623              	.LVL445:
 373:lcd.c         **** 	lcd_draw_line(x+3,y+40,x+45,y+40);
 3624              		.loc 1 373 2 view .LVU752
 3625 0362 05F12C07 		add	r7, r5, #44
 3626 0366 04F12703 		add	r3, r4, #39
 3627 036a FFB2     		uxtb	r7, r7
 3628 036c 9BB2     		uxth	r3, r3
 3629 036e 3A46     		mov	r2, r7
 3630 0370 1946     		mov	r1, r3
 3631 0372 4846     		mov	r0, r9
 3632 0374 FFF7FEFF 		bl	lcd_draw_line
 3633              	.LVL446:
 374:lcd.c         **** 	lcd_draw_line(x+3,y+41,x+45,y+41);
 3634              		.loc 1 374 2 view .LVU753
 3635 0378 04F12803 		add	r3, r4, #40
 3636 037c 9BB2     		uxth	r3, r3
 3637 037e 05F12D02 		add	r2, r5, #45
 3638 0382 1946     		mov	r1, r3
 3639 0384 4846     		mov	r0, r9
 3640 0386 D2B2     		uxtb	r2, r2
 3641 0388 0D92     		str	r2, [sp, #52]
 3642 038a FFF7FEFF 		bl	lcd_draw_line
 3643              	.LVL447:
 375:lcd.c         **** 	lcd_draw_line(x+4,y+42,x+45,y+42);
 3644              		.loc 1 375 2 view .LVU754
 3645 038e 04F12903 		add	r3, r4, #41
 3646 0392 9BB2     		uxth	r3, r3
 3647 0394 1946     		mov	r1, r3
 3648 0396 4846     		mov	r0, r9
 3649 0398 0D9A     		ldr	r2, [sp, #52]
 3650 039a FFF7FEFF 		bl	lcd_draw_line
 3651              	.LVL448:
 376:lcd.c         **** 	lcd_draw_line(x+4,y+43,x+44,y+43);
 3652              		.loc 1 376 2 view .LVU755
 3653 039e 04F12A03 		add	r3, r4, #42
 3654 03a2 9BB2     		uxth	r3, r3
 3655 03a4 1946     		mov	r1, r3
 3656 03a6 0D9A     		ldr	r2, [sp, #52]
 3657 03a8 0798     		ldr	r0, [sp, #28]
 3658 03aa FFF7FEFF 		bl	lcd_draw_line
 3659              	.LVL449:
 377:lcd.c         **** 	lcd_draw_line(x+5,y+44,x+44,y+44);
 3660              		.loc 1 377 2 view .LVU756
 3661 03ae 04F12B03 		add	r3, r4, #43
 3662 03b2 9BB2     		uxth	r3, r3
 3663 03b4 3A46     		mov	r2, r7
 3664 03b6 1946     		mov	r1, r3
 3665 03b8 0798     		ldr	r0, [sp, #28]
 3666 03ba FFF7FEFF 		bl	lcd_draw_line
 3667              	.LVL450:
 378:lcd.c         **** 	lcd_draw_line(x+5,y+45,x+43,y+45);
 3668              		.loc 1 378 2 view .LVU757
 3669 03be 04F12C03 		add	r3, r4, #44
 3670 03c2 9BB2     		uxth	r3, r3
 3671 03c4 3A46     		mov	r2, r7
 3672 03c6 1946     		mov	r1, r3
 3673 03c8 0498     		ldr	r0, [sp, #16]
 3674 03ca FFF7FEFF 		bl	lcd_draw_line
 3675              	.LVL451:
 379:lcd.c         **** 	lcd_draw_line(x+6,y+46,x+43,y+46);
 3676              		.loc 1 379 2 view .LVU758
 3677 03ce 04F12D03 		add	r3, r4, #45
 3678 03d2 9BB2     		uxth	r3, r3
 3679 03d4 5A46     		mov	r2, fp
 3680 03d6 1946     		mov	r1, r3
 3681 03d8 0498     		ldr	r0, [sp, #16]
 3682 03da FFF7FEFF 		bl	lcd_draw_line
 3683              	.LVL452:
 380:lcd.c         **** 	lcd_draw_line(x+6,y+47,x+42,y+47);
 3684              		.loc 1 380 2 view .LVU759
 3685 03de 04F12E03 		add	r3, r4, #46
 3686 03e2 9BB2     		uxth	r3, r3
 3687 03e4 5A46     		mov	r2, fp
 3688 03e6 1946     		mov	r1, r3
 3689 03e8 0698     		ldr	r0, [sp, #24]
 3690 03ea FFF7FEFF 		bl	lcd_draw_line
 3691              	.LVL453:
 381:lcd.c         **** 	lcd_draw_line(x+7,y+48,x+42,y+48);
 3692              		.loc 1 381 2 view .LVU760
 3693 03ee 04F12F03 		add	r3, r4, #47
 3694 03f2 9BB2     		uxth	r3, r3
 3695 03f4 1946     		mov	r1, r3
 3696 03f6 039A     		ldr	r2, [sp, #12]
 3697 03f8 0698     		ldr	r0, [sp, #24]
 3698 03fa FFF7FEFF 		bl	lcd_draw_line
 3699              	.LVL454:
 382:lcd.c         **** 	lcd_draw_line(x+8,y+49,x+41,y+49);
 3700              		.loc 1 382 2 view .LVU761
 3701 03fe 04F13003 		add	r3, r4, #48
 3702 0402 9BB2     		uxth	r3, r3
 3703 0404 E81D     		adds	r0, r5, #7
 3704 0406 1946     		mov	r1, r3
 3705 0408 039A     		ldr	r2, [sp, #12]
 3706 040a C0B2     		uxtb	r0, r0
 3707 040c FFF7FEFF 		bl	lcd_draw_line
 3708              	.LVL455:
 383:lcd.c         **** 	lcd_draw_line(x+9,y+50,x+40,y+50);
 3709              		.loc 1 383 2 view .LVU762
 3710 0410 04F13103 		add	r3, r4, #49
 3711 0414 9BB2     		uxth	r3, r3
 3712 0416 1946     		mov	r1, r3
 3713 0418 029A     		ldr	r2, [sp, #8]
 3714 041a 0C98     		ldr	r0, [sp, #48]
 3715 041c FFF7FEFF 		bl	lcd_draw_line
 3716              	.LVL456:
 384:lcd.c         **** 	lcd_draw_line(x+10,y+51,x+39,y+51);
 3717              		.loc 1 384 2 view .LVU763
 3718 0420 04F13203 		add	r3, r4, #50
 3719 0424 9BB2     		uxth	r3, r3
 3720 0426 1946     		mov	r1, r3
 3721 0428 009A     		ldr	r2, [sp]
 3722 042a 0A98     		ldr	r0, [sp, #40]
 3723 042c FFF7FEFF 		bl	lcd_draw_line
 3724              	.LVL457:
 385:lcd.c         **** 	lcd_draw_line(x+11,y+52,x+38,y+52);
 3725              		.loc 1 385 2 view .LVU764
 3726 0430 04F13303 		add	r3, r4, #51
 3727 0434 9BB2     		uxth	r3, r3
 3728 0436 05F10A00 		add	r0, r5, #10
 3729 043a 4246     		mov	r2, r8
 3730 043c 1946     		mov	r1, r3
 3731 043e C0B2     		uxtb	r0, r0
 3732 0440 FFF7FEFF 		bl	lcd_draw_line
 3733              	.LVL458:
 386:lcd.c         **** 	lcd_draw_line(x+12,y+53,x+19,y+53);lcd_draw_line(x+30,y+53,x+37,y+53);
 3734              		.loc 1 386 2 view .LVU765
 3735 0444 04F13403 		add	r3, r4, #52
 3736 0448 9BB2     		uxth	r3, r3
 3737 044a 05F10B00 		add	r0, r5, #11
 3738 044e 3246     		mov	r2, r6
 3739 0450 1946     		mov	r1, r3
 3740 0452 C0B2     		uxtb	r0, r0
 387:lcd.c         **** 	lcd_draw_line(x+13,y+54,x+18,y+54);lcd_draw_line(x+32,y+54,x+36,y+54);
 3741              		.loc 1 387 2 is_stmt 0 view .LVU766
 3742 0454 04F13506 		add	r6, r4, #53
 386:lcd.c         **** 	lcd_draw_line(x+12,y+53,x+19,y+53);lcd_draw_line(x+30,y+53,x+37,y+53);
 3743              		.loc 1 386 2 view .LVU767
 3744 0458 FFF7FEFF 		bl	lcd_draw_line
 3745              	.LVL459:
 387:lcd.c         **** 	lcd_draw_line(x+13,y+54,x+18,y+54);lcd_draw_line(x+32,y+54,x+36,y+54);
 3746              		.loc 1 387 2 is_stmt 1 view .LVU768
 3747 045c B6B2     		uxth	r6, r6
 3748 045e 05F10C00 		add	r0, r5, #12
 3749 0462 3346     		mov	r3, r6
 3750 0464 3146     		mov	r1, r6
 3751 0466 0B9A     		ldr	r2, [sp, #44]
 3752 0468 C0B2     		uxtb	r0, r0
 3753 046a FFF7FEFF 		bl	lcd_draw_line
 3754              	.LVL460:
 387:lcd.c         **** 	lcd_draw_line(x+13,y+54,x+18,y+54);lcd_draw_line(x+32,y+54,x+36,y+54);
 3755              		.loc 1 387 37 view .LVU769
 388:lcd.c         **** }
 3756              		.loc 1 388 2 is_stmt 0 view .LVU770
 3757 046e 3634     		adds	r4, r4, #54
 387:lcd.c         **** 	lcd_draw_line(x+13,y+54,x+18,y+54);lcd_draw_line(x+32,y+54,x+36,y+54);
 3758              		.loc 1 387 37 view .LVU771
 3759 0470 3346     		mov	r3, r6
 3760 0472 3146     		mov	r1, r6
 3761 0474 099A     		ldr	r2, [sp, #36]
 3762 0476 0598     		ldr	r0, [sp, #20]
 3763 0478 FFF7FEFF 		bl	lcd_draw_line
 3764              	.LVL461:
 388:lcd.c         **** }
 3765              		.loc 1 388 2 is_stmt 1 view .LVU772
 3766 047c A4B2     		uxth	r4, r4
 3767 047e 05F11202 		add	r2, r5, #18
 3768 0482 2346     		mov	r3, r4
 3769 0484 2146     		mov	r1, r4
 3770 0486 0898     		ldr	r0, [sp, #32]
 3771 0488 D2B2     		uxtb	r2, r2
 3772 048a FFF7FEFF 		bl	lcd_draw_line
 3773              	.LVL462:
 388:lcd.c         **** }
 3774              		.loc 1 388 37 view .LVU773
 3775 048e 2346     		mov	r3, r4
 3776 0490 2146     		mov	r1, r4
 3777 0492 05F12402 		add	r2, r5, #36
 3778 0496 0198     		ldr	r0, [sp, #4]
 3779 0498 D2B2     		uxtb	r2, r2
 389:lcd.c         **** 
 3780              		.loc 1 389 1 is_stmt 0 view .LVU774
 3781 049a 0FB0     		add	sp, sp, #60
 3782              		.cfi_def_cfa_offset 36
 3783              		@ sp needed
 3784 049c BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3785              		.cfi_restore 14
 3786              		.cfi_restore 11
 3787              		.cfi_restore 10
 3788              		.cfi_restore 9
 3789              		.cfi_restore 8
 3790              		.cfi_restore 7
 3791              		.cfi_restore 6
 3792              		.cfi_restore 5
 3793              		.cfi_restore 4
 3794              		.cfi_def_cfa_offset 0
 388:lcd.c         **** }
 3795              		.loc 1 388 37 view .LVU775
 3796 04a0 FFF7FEBF 		b	lcd_draw_line
 3797              	.LVL463:
 3798              		.cfi_endproc
 3799              	.LFE49:
 3801              		.section	.text.lcd_draw_rectangle,"ax",%progbits
 3802              		.align	1
 3803              		.global	lcd_draw_rectangle
 3804              		.syntax unified
 3805              		.thumb
 3806              		.thumb_func
 3807              		.fpu softvfp
 3809              	lcd_draw_rectangle:
 3810              	.LVL464:
 3811              	.LFB64:
 846:lcd.c         **** 
 847:lcd.c         **** 
 848:lcd.c         **** void lcd_draw_rectangle (unsigned char x1, unsigned short y1, unsigned char x2, unsigned short y2)
 849:lcd.c         **** {
 3812              		.loc 1 849 1 is_stmt 1 view -0
 3813              		.cfi_startproc
 3814              		@ args = 0, pretend = 0, frame = 0
 3815              		@ frame_needed = 0, uses_anonymous_args = 0
 850:lcd.c         ****       lcd_draw_line(x1,y1,x2,y1);
 3816              		.loc 1 850 7 view .LVU777
 849:lcd.c         ****       lcd_draw_line(x1,y1,x2,y1);
 3817              		.loc 1 849 1 is_stmt 0 view .LVU778
 3818 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3819              		.cfi_def_cfa_offset 24
 3820              		.cfi_offset 4, -24
 3821              		.cfi_offset 5, -20
 3822              		.cfi_offset 6, -16
 3823              		.cfi_offset 7, -12
 3824              		.cfi_offset 8, -8
 3825              		.cfi_offset 14, -4
 849:lcd.c         ****       lcd_draw_line(x1,y1,x2,y1);
 3826              		.loc 1 849 1 view .LVU779
 3827 0004 1C46     		mov	r4, r3
 3828 0006 0646     		mov	r6, r0
 3829 0008 0D46     		mov	r5, r1
 3830 000a 1746     		mov	r7, r2
 3831              		.loc 1 850 7 view .LVU780
 3832 000c 0B46     		mov	r3, r1
 3833              	.LVL465:
 3834              		.loc 1 850 7 view .LVU781
 3835 000e FFF7FEFF 		bl	lcd_draw_line
 3836              	.LVL466:
 851:lcd.c         ****       lcd_draw_line(x1,y1,x1,y2);
 3837              		.loc 1 851 7 is_stmt 1 view .LVU782
 3838 0012 2346     		mov	r3, r4
 3839 0014 3246     		mov	r2, r6
 3840 0016 2946     		mov	r1, r5
 3841 0018 3046     		mov	r0, r6
 3842 001a FFF7FEFF 		bl	lcd_draw_line
 3843              	.LVL467:
 852:lcd.c         ****       lcd_draw_line(x1,y2,x2,y2);
 3844              		.loc 1 852 7 view .LVU783
 3845 001e 2346     		mov	r3, r4
 3846 0020 3A46     		mov	r2, r7
 3847 0022 2146     		mov	r1, r4
 3848 0024 3046     		mov	r0, r6
 3849 0026 FFF7FEFF 		bl	lcd_draw_line
 3850              	.LVL468:
 853:lcd.c         ****       lcd_draw_line(x2,y1,x2,y2);
 3851              		.loc 1 853 7 view .LVU784
 3852 002a 2346     		mov	r3, r4
 3853 002c 3A46     		mov	r2, r7
 3854 002e 2946     		mov	r1, r5
 3855 0030 3846     		mov	r0, r7
 854:lcd.c         **** }
 3856              		.loc 1 854 1 is_stmt 0 view .LVU785
 3857 0032 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 3858              		.cfi_restore 14
 3859              		.cfi_restore 8
 3860              		.cfi_restore 7
 3861              		.cfi_restore 6
 3862              		.cfi_restore 5
 3863              		.cfi_restore 4
 3864              		.cfi_def_cfa_offset 0
 853:lcd.c         ****       lcd_draw_line(x2,y1,x2,y2);
 3865              		.loc 1 853 7 view .LVU786
 3866 0036 FFF7FEBF 		b	lcd_draw_line
 3867              	.LVL469:
 3868              		.cfi_endproc
 3869              	.LFE64:
 3871              		.section	.text.lcd_draw_circle,"ax",%progbits
 3872              		.align	1
 3873              		.global	lcd_draw_circle
 3874              		.syntax unified
 3875              		.thumb
 3876              		.thumb_func
 3877              		.fpu softvfp
 3879              	lcd_draw_circle:
 3880              	.LVL470:
 3881              	.LFB65:
 855:lcd.c         **** 
 856:lcd.c         **** 
 857:lcd.c         **** void lcd_draw_circle (unsigned char x0,unsigned short y0,unsigned char r)
 858:lcd.c         **** {
 3882              		.loc 1 858 1 is_stmt 1 view -0
 3883              		.cfi_startproc
 3884              		@ args = 0, pretend = 0, frame = 24
 3885              		@ frame_needed = 0, uses_anonymous_args = 0
 859:lcd.c         ****       int a,b;
 3886              		.loc 1 859 7 view .LVU788
 860:lcd.c         ****       int di;
 3887              		.loc 1 860 7 view .LVU789
 861:lcd.c         ****       a = 0;
 3888              		.loc 1 861 7 view .LVU790
 862:lcd.c         ****       b = r;
 3889              		.loc 1 862 7 view .LVU791
 863:lcd.c         ****       di = 3 - (r << 1);
 3890              		.loc 1 863 7 view .LVU792
 858:lcd.c         ****       int a,b;
 3891              		.loc 1 858 1 is_stmt 0 view .LVU793
 3892 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3893              		.cfi_def_cfa_offset 36
 3894              		.cfi_offset 4, -36
 3895              		.cfi_offset 5, -32
 3896              		.cfi_offset 6, -28
 3897              		.cfi_offset 7, -24
 3898              		.cfi_offset 8, -20
 3899              		.cfi_offset 9, -16
 3900              		.cfi_offset 10, -12
 3901              		.cfi_offset 11, -8
 3902              		.cfi_offset 14, -4
 3903 0004 0746     		mov	r7, r0
 3904 0006 8846     		mov	r8, r1
 3905 0008 1446     		mov	r4, r2
 861:lcd.c         ****       b = r;
 3906              		.loc 1 861 9 view .LVU794
 3907 000a 0026     		movs	r6, #0
 3908              		.loc 1 863 19 view .LVU795
 3909 000c 5500     		lsls	r5, r2, #1
 858:lcd.c         ****       int a,b;
 3910              		.loc 1 858 1 view .LVU796
 3911 000e 87B0     		sub	sp, sp, #28
 3912              		.cfi_def_cfa_offset 64
 3913              		.loc 1 863 10 view .LVU797
 3914 0010 C5F10305 		rsb	r5, r5, #3
 3915              	.LVL471:
 864:lcd.c         ****       while (a <= b) {
 3916              		.loc 1 864 7 is_stmt 1 view .LVU798
 3917              		.loc 1 864 13 view .LVU799
 3918              	.L106:
 865:lcd.c         **** 	    lcd_set_pixel(x0-b,y0-a);
 3919              		.loc 1 865 6 view .LVU800
 3920 0014 B3B2     		uxth	r3, r6
 3921 0016 5FFA84F9 		uxtb	r9, r4
 3922 001a A8EB030B 		sub	fp, r8, r3
 3923 001e A7EB090A 		sub	r10, r7, r9
 3924 0022 1FFA8BFB 		uxth	fp, fp
 3925 0026 5FFA8AFA 		uxtb	r10, r10
 866:lcd.c         **** 	    lcd_set_pixel(x0+b,y0-a);
 3926              		.loc 1 866 6 is_stmt 0 view .LVU801
 3927 002a B944     		add	r9, r9, r7
 865:lcd.c         **** 	    lcd_set_pixel(x0-b,y0-a);
 3928              		.loc 1 865 6 view .LVU802
 3929 002c 5946     		mov	r1, fp
 3930              		.loc 1 866 6 view .LVU803
 3931 002e 5FFA89F9 		uxtb	r9, r9
 865:lcd.c         **** 	    lcd_set_pixel(x0-b,y0-a);
 3932              		.loc 1 865 6 view .LVU804
 3933 0032 5046     		mov	r0, r10
 3934 0034 0393     		str	r3, [sp, #12]
 3935 0036 FFF7FEFF 		bl	lcd_set_pixel
 3936              	.LVL472:
 3937              		.loc 1 866 6 is_stmt 1 view .LVU805
 3938 003a 5946     		mov	r1, fp
 3939 003c 4846     		mov	r0, r9
 3940 003e FFF7FEFF 		bl	lcd_set_pixel
 3941              	.LVL473:
 867:lcd.c         **** 	    lcd_set_pixel(x0-a,y0+b);
 3942              		.loc 1 867 6 view .LVU806
 3943 0042 F3B2     		uxtb	r3, r6
 3944 0044 0293     		str	r3, [sp, #8]
 3945 0046 FA1A     		subs	r2, r7, r3
 3946 0048 A3B2     		uxth	r3, r4
 3947 004a 0193     		str	r3, [sp, #4]
 3948 004c 4344     		add	r3, r3, r8
 3949 004e D2B2     		uxtb	r2, r2
 3950 0050 9BB2     		uxth	r3, r3
 3951 0052 1946     		mov	r1, r3
 3952 0054 1046     		mov	r0, r2
 3953 0056 0593     		str	r3, [sp, #20]
 3954 0058 0492     		str	r2, [sp, #16]
 3955 005a FFF7FEFF 		bl	lcd_set_pixel
 3956              	.LVL474:
 868:lcd.c         **** 	    lcd_set_pixel(x0-b,y0-a);
 3957              		.loc 1 868 6 view .LVU807
 3958 005e 5946     		mov	r1, fp
 3959 0060 5046     		mov	r0, r10
 3960 0062 FFF7FEFF 		bl	lcd_set_pixel
 3961              	.LVL475:
 869:lcd.c         **** 	    lcd_set_pixel(x0-a,y0-b);
 3962              		.loc 1 869 6 view .LVU808
 3963 0066 019B     		ldr	r3, [sp, #4]
 3964 0068 049A     		ldr	r2, [sp, #16]
 3965 006a A8EB030B 		sub	fp, r8, r3
 3966 006e 1FFA8BFB 		uxth	fp, fp
 3967 0072 1046     		mov	r0, r2
 3968 0074 5946     		mov	r1, fp
 3969 0076 FFF7FEFF 		bl	lcd_set_pixel
 3970              	.LVL476:
 870:lcd.c         **** 	    lcd_set_pixel(x0+b,y0+a);
 3971              		.loc 1 870 6 view .LVU809
 3972 007a 039B     		ldr	r3, [sp, #12]
 3973 007c 4846     		mov	r0, r9
 3974 007e 08EB0302 		add	r2, r8, r3
 3975 0082 92B2     		uxth	r2, r2
 3976 0084 1146     		mov	r1, r2
 3977 0086 0192     		str	r2, [sp, #4]
 3978 0088 FFF7FEFF 		bl	lcd_set_pixel
 3979              	.LVL477:
 871:lcd.c         **** 	    lcd_set_pixel(x0+a,y0-b);
 3980              		.loc 1 871 6 view .LVU810
 3981 008c 029B     		ldr	r3, [sp, #8]
 3982 008e 5946     		mov	r1, fp
 3983 0090 03EB0709 		add	r9, r3, r7
 3984 0094 5FFA89F9 		uxtb	r9, r9
 3985 0098 4846     		mov	r0, r9
 3986 009a FFF7FEFF 		bl	lcd_set_pixel
 3987              	.LVL478:
 872:lcd.c         **** 	    lcd_set_pixel(x0+a,y0+b);
 3988              		.loc 1 872 6 view .LVU811
 3989 009e 059B     		ldr	r3, [sp, #20]
 3990 00a0 4846     		mov	r0, r9
 3991 00a2 1946     		mov	r1, r3
 3992 00a4 FFF7FEFF 		bl	lcd_set_pixel
 3993              	.LVL479:
 873:lcd.c         **** 	    lcd_set_pixel(x0-b,y0+a);
 3994              		.loc 1 873 6 view .LVU812
 3995 00a8 019A     		ldr	r2, [sp, #4]
 3996 00aa 5046     		mov	r0, r10
 3997 00ac 1146     		mov	r1, r2
 3998 00ae FFF7FEFF 		bl	lcd_set_pixel
 3999              	.LVL480:
 874:lcd.c         **** 	    a++;
 4000              		.loc 1 874 6 view .LVU813
 4001              		.loc 1 874 7 is_stmt 0 view .LVU814
 4002 00b2 0136     		adds	r6, r6, #1
 4003              	.LVL481:
 875:lcd.c         **** 	    if (di < 0) {
 4004              		.loc 1 875 6 is_stmt 1 view .LVU815
 4005              		.loc 1 875 9 is_stmt 0 view .LVU816
 4006 00b4 002D     		cmp	r5, #0
 876:lcd.c         **** 	       di += 4 * a + 6;
 4007              		.loc 1 876 9 is_stmt 1 view .LVU817
 877:lcd.c         **** 	    } else {
 878:lcd.c         **** 	       di += 10 + 4 * (a - b);
 4008              		.loc 1 878 27 is_stmt 0 view .LVU818
 4009 00b6 A4BF     		itt	ge
 4010 00b8 331B     		subge	r3, r6, r4
 879:lcd.c         **** 	       b--;
 4011              		.loc 1 879 10 view .LVU819
 4012 00ba 04F1FF34 		addge	r4, r4, #-1
 4013              	.LVL482:
 880:lcd.c         **** 	    }
 881:lcd.c         **** 	    lcd_set_pixel(x0+a,y0+b);
 4014              		.loc 1 881 6 view .LVU820
 4015 00be 08EB0401 		add	r1, r8, r4
 4016 00c2 07EB0600 		add	r0, r7, r6
 876:lcd.c         **** 	    } else {
 4017              		.loc 1 876 12 view .LVU821
 4018 00c6 B4BF     		ite	lt
 4019 00c8 05EB8605 		addlt	r5, r5, r6, lsl #2
 4020              	.LVL483:
 878:lcd.c         **** 	       b--;
 4021              		.loc 1 878 18 view .LVU822
 4022 00cc 05EB8305 		addge	r5, r5, r3, lsl #2
 4023              		.loc 1 881 6 view .LVU823
 4024 00d0 89B2     		uxth	r1, r1
 4025 00d2 C0B2     		uxtb	r0, r0
 876:lcd.c         **** 	    } else {
 4026              		.loc 1 876 12 view .LVU824
 4027 00d4 B4BF     		ite	lt
 4028 00d6 0635     		addlt	r5, r5, #6
 878:lcd.c         **** 	       b--;
 4029              		.loc 1 878 9 is_stmt 1 view .LVU825
 878:lcd.c         **** 	       b--;
 4030              		.loc 1 878 12 is_stmt 0 view .LVU826
 4031 00d8 0A35     		addge	r5, r5, #10
 4032              	.LVL484:
 879:lcd.c         **** 	    }
 4033              		.loc 1 879 9 is_stmt 1 view .LVU827
 4034              		.loc 1 881 6 view .LVU828
 4035 00da FFF7FEFF 		bl	lcd_set_pixel
 4036              	.LVL485:
 864:lcd.c         **** 	    lcd_set_pixel(x0-b,y0-a);
 4037              		.loc 1 864 13 view .LVU829
 4038 00de B442     		cmp	r4, r6
 4039 00e0 98DA     		bge	.L106
 882:lcd.c         ****       }
 883:lcd.c         **** }
 4040              		.loc 1 883 1 is_stmt 0 view .LVU830
 4041 00e2 07B0     		add	sp, sp, #28
 4042              		.cfi_def_cfa_offset 36
 4043              		@ sp needed
 4044 00e4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4045              		.loc 1 883 1 view .LVU831
 4046              		.cfi_endproc
 4047              	.LFE65:
 4049              		.section	.text.set_color,"ax",%progbits
 4050              		.align	1
 4051              		.global	set_color
 4052              		.syntax unified
 4053              		.thumb
 4054              		.thumb_func
 4055              		.fpu softvfp
 4057              	set_color:
 4058              	.LVL486:
 4059              	.LFB66:
 884:lcd.c         **** 
 885:lcd.c         **** 
 886:lcd.c         **** void set_color (unsigned short color)
 887:lcd.c         **** {
 4060              		.loc 1 887 1 is_stmt 1 view -0
 4061              		.cfi_startproc
 4062              		@ args = 0, pretend = 0, frame = 0
 4063              		@ frame_needed = 0, uses_anonymous_args = 0
 4064              		@ link register save eliminated.
 888:lcd.c         ****       foreground_color = color;
 4065              		.loc 1 888 7 view .LVU833
 4066              		.loc 1 888 24 is_stmt 0 view .LVU834
 4067 0000 014B     		ldr	r3, .L109
 4068 0002 1880     		strh	r0, [r3]	@ movhi
 889:lcd.c         **** }
 4069              		.loc 1 889 1 view .LVU835
 4070 0004 7047     		bx	lr
 4071              	.L110:
 4072 0006 00BF     		.align	2
 4073              	.L109:
 4074 0008 00000000 		.word	foreground_color
 4075              		.cfi_endproc
 4076              	.LFE66:
 4078              		.section	.text.set_background_color,"ax",%progbits
 4079              		.align	1
 4080              		.global	set_background_color
 4081              		.syntax unified
 4082              		.thumb
 4083              		.thumb_func
 4084              		.fpu softvfp
 4086              	set_background_color:
 4087              	.LVL487:
 4088              	.LFB67:
 890:lcd.c         **** 
 891:lcd.c         **** 
 892:lcd.c         **** void set_background_color (unsigned short color)
 893:lcd.c         **** {
 4089              		.loc 1 893 1 is_stmt 1 view -0
 4090              		.cfi_startproc
 4091              		@ args = 0, pretend = 0, frame = 0
 4092              		@ frame_needed = 0, uses_anonymous_args = 0
 4093              		@ link register save eliminated.
 894:lcd.c         ****       background_color = color;
 4094              		.loc 1 894 7 view .LVU837
 4095              		.loc 1 894 24 is_stmt 0 view .LVU838
 4096 0000 014B     		ldr	r3, .L112
 4097 0002 1880     		strh	r0, [r3]	@ movhi
 895:lcd.c         **** }
 4098              		.loc 1 895 1 view .LVU839
 4099 0004 7047     		bx	lr
 4100              	.L113:
 4101 0006 00BF     		.align	2
 4102              	.L112:
 4103 0008 00000000 		.word	background_color
 4104              		.cfi_endproc
 4105              	.LFE67:
 4107              		.section	.text.set_pixel,"ax",%progbits
 4108              		.align	1
 4109              		.global	set_pixel
 4110              		.syntax unified
 4111              		.thumb
 4112              		.thumb_func
 4113              		.fpu softvfp
 4115              	set_pixel:
 4116              	.LVL488:
 4117              	.LFB68:
 896:lcd.c         **** 
 897:lcd.c         **** 
 898:lcd.c         **** void set_pixel (unsigned short x, unsigned short y, unsigned short color)
 899:lcd.c         **** {
 4118              		.loc 1 899 1 is_stmt 1 view -0
 4119              		.cfi_startproc
 4120              		@ args = 0, pretend = 0, frame = 0
 4121              		@ frame_needed = 0, uses_anonymous_args = 0
 900:lcd.c         ****       unsigned short temp = foreground_color;
 4122              		.loc 1 900 7 view .LVU841
 899:lcd.c         ****       unsigned short temp = foreground_color;
 4123              		.loc 1 899 1 is_stmt 0 view .LVU842
 4124 0000 38B5     		push	{r3, r4, r5, lr}
 4125              		.cfi_def_cfa_offset 16
 4126              		.cfi_offset 3, -16
 4127              		.cfi_offset 4, -12
 4128              		.cfi_offset 5, -8
 4129              		.cfi_offset 14, -4
 4130              		.loc 1 900 22 view .LVU843
 4131 0002 044C     		ldr	r4, .L115
 901:lcd.c         ****       foreground_color = color;
 902:lcd.c         ****       lcd_set_pixel(x,y);
 4132              		.loc 1 902 7 view .LVU844
 4133 0004 C0B2     		uxtb	r0, r0
 4134              	.LVL489:
 900:lcd.c         ****       foreground_color = color;
 4135              		.loc 1 900 22 view .LVU845
 4136 0006 2588     		ldrh	r5, [r4]
 4137              	.LVL490:
 901:lcd.c         ****       foreground_color = color;
 4138              		.loc 1 901 7 is_stmt 1 view .LVU846
 901:lcd.c         ****       foreground_color = color;
 4139              		.loc 1 901 24 is_stmt 0 view .LVU847
 4140 0008 2280     		strh	r2, [r4]	@ movhi
 4141              		.loc 1 902 7 is_stmt 1 view .LVU848
 4142 000a FFF7FEFF 		bl	lcd_set_pixel
 4143              	.LVL491:
 903:lcd.c         ****       foreground_color = temp;
 4144              		.loc 1 903 7 view .LVU849
 4145              		.loc 1 903 24 is_stmt 0 view .LVU850
 4146 000e 2580     		strh	r5, [r4]	@ movhi
 904:lcd.c         **** }
 4147              		.loc 1 904 1 view .LVU851
 4148 0010 38BD     		pop	{r3, r4, r5, pc}
 4149              	.LVL492:
 4150              	.L116:
 4151              		.loc 1 904 1 view .LVU852
 4152 0012 00BF     		.align	2
 4153              	.L115:
 4154 0014 00000000 		.word	foreground_color
 4155              		.cfi_endproc
 4156              	.LFE68:
 4158              		.section	.text.out_lcd,"ax",%progbits
 4159              		.align	1
 4160              		.global	out_lcd
 4161              		.syntax unified
 4162              		.thumb
 4163              		.thumb_func
 4164              		.fpu softvfp
 4166              	out_lcd:
 4167              	.LVL493:
 4168              	.LFB69:
 905:lcd.c         **** 
 906:lcd.c         **** 
 907:lcd.c         **** void out_lcd (char wchar)
 908:lcd.c         **** {
 4169              		.loc 1 908 1 is_stmt 1 view -0
 4170              		.cfi_startproc
 4171              		@ args = 0, pretend = 0, frame = 0
 4172              		@ frame_needed = 0, uses_anonymous_args = 0
 909:lcd.c         ****       int idx;
 4173              		.loc 1 909 7 view .LVU854
 910:lcd.c         ****       for (idx=0;idx<8;idx++) {
 4174              		.loc 1 910 7 view .LVU855
 4175              		.loc 1 910 18 view .LVU856
 908:lcd.c         ****       int idx;
 4176              		.loc 1 908 1 is_stmt 0 view .LVU857
 4177 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4178              		.cfi_def_cfa_offset 32
 4179              		.cfi_offset 3, -32
 4180              		.cfi_offset 4, -28
 4181              		.cfi_offset 5, -24
 4182              		.cfi_offset 6, -20
 4183              		.cfi_offset 7, -16
 4184              		.cfi_offset 8, -12
 4185              		.cfi_offset 9, -8
 4186              		.cfi_offset 14, -4
 4187 0004 DFF84480 		ldr	r8, .L123+12
 908:lcd.c         ****       int idx;
 4188              		.loc 1 908 1 view .LVU858
 4189 0008 0546     		mov	r5, r0
 4190              		.loc 1 910 15 view .LVU859
 4191 000a 0024     		movs	r4, #0
 4192 000c 4646     		mov	r6, r8
 4193 000e 0C4F     		ldr	r7, .L123
 4194 0010 DFF83C90 		ldr	r9, .L123+16
 4195              	.LVL494:
 4196              	.L120:
 911:lcd.c         ****           if ((s_bit[idx] & wchar) == 0) set_pixel(tx,ty,background_color); else set_pixel(tx,ty,fo
 4197              		.loc 1 911 11 is_stmt 1 view .LVU860
 4198              		.loc 1 911 21 is_stmt 0 view .LVU861
 4199 0014 17F8013B 		ldrb	r3, [r7], #1	@ zero_extendqisi2
 4200 0018 B8F80000 		ldrh	r0, [r8]
 4201              		.loc 1 911 14 view .LVU862
 4202 001c 2B42     		tst	r3, r5
 4203              		.loc 1 911 42 is_stmt 1 view .LVU863
 4204 001e 0CBF     		ite	eq
 4205 0020 084B     		ldreq	r3, .L123+4
 4206              		.loc 1 911 82 view .LVU864
 4207 0022 094B     		ldrne	r3, .L123+8
 4208 0024 B9F80010 		ldrh	r1, [r9]
 4209 0028 1A88     		ldrh	r2, [r3]
 4210 002a FFF7FEFF 		bl	set_pixel
 4211              	.LVL495:
 912:lcd.c         ****           tx++;
 4212              		.loc 1 912 11 view .LVU865
 4213              		.loc 1 912 13 is_stmt 0 view .LVU866
 4214 002e 3388     		ldrh	r3, [r6]
 910:lcd.c         ****           if ((s_bit[idx] & wchar) == 0) set_pixel(tx,ty,background_color); else set_pixel(tx,ty,fo
 4215              		.loc 1 910 27 view .LVU867
 4216 0030 0134     		adds	r4, r4, #1
 4217              	.LVL496:
 4218              		.loc 1 912 13 view .LVU868
 4219 0032 0133     		adds	r3, r3, #1
 910:lcd.c         ****           if ((s_bit[idx] & wchar) == 0) set_pixel(tx,ty,background_color); else set_pixel(tx,ty,fo
 4220              		.loc 1 910 7 view .LVU869
 4221 0034 082C     		cmp	r4, #8
 4222              		.loc 1 912 13 view .LVU870
 4223 0036 3380     		strh	r3, [r6]	@ movhi
 910:lcd.c         ****           if ((s_bit[idx] & wchar) == 0) set_pixel(tx,ty,background_color); else set_pixel(tx,ty,fo
 4224              		.loc 1 910 24 is_stmt 1 view .LVU871
 4225              	.LVL497:
 910:lcd.c         ****           if ((s_bit[idx] & wchar) == 0) set_pixel(tx,ty,background_color); else set_pixel(tx,ty,fo
 4226              		.loc 1 910 18 view .LVU872
 910:lcd.c         ****           if ((s_bit[idx] & wchar) == 0) set_pixel(tx,ty,background_color); else set_pixel(tx,ty,fo
 4227              		.loc 1 910 7 is_stmt 0 view .LVU873
 4228 0038 ECD1     		bne	.L120
 913:lcd.c         ****       }
 914:lcd.c         **** }
 4229              		.loc 1 914 1 view .LVU874
 4230 003a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4231              	.LVL498:
 4232              	.L124:
 4233              		.loc 1 914 1 view .LVU875
 4234 003e 00BF     		.align	2
 4235              	.L123:
 4236 0040 00000000 		.word	.LANCHOR0
 4237 0044 00000000 		.word	background_color
 4238 0048 00000000 		.word	foreground_color
 4239 004c 00000000 		.word	tx
 4240 0050 00000000 		.word	ty
 4241              		.cfi_endproc
 4242              	.LFE69:
 4244              		.section	.text.uni_to_kssm2,"ax",%progbits
 4245              		.align	1
 4246              		.global	uni_to_kssm2
 4247              		.syntax unified
 4248              		.thumb
 4249              		.thumb_func
 4250              		.fpu softvfp
 4252              	uni_to_kssm2:
 4253              	.LVL499:
 4254              	.LFB70:
 915:lcd.c         **** 
 916:lcd.c         **** 
 917:lcd.c         **** unsigned short uni_to_kssm2 (unsigned short wchar)
 918:lcd.c         **** {
 4255              		.loc 1 918 1 is_stmt 1 view -0
 4256              		.cfi_startproc
 4257              		@ args = 0, pretend = 0, frame = 0
 4258              		@ frame_needed = 0, uses_anonymous_args = 0
 4259              		@ link register save eliminated.
 919:lcd.c         ****       unsigned short cho_sung,jung_sung,jong_sung,unicode;
 4260              		.loc 1 919 7 view .LVU877
 920:lcd.c         ****       unsigned short temp = 0x0000;
 4261              		.loc 1 920 7 view .LVU878
 921:lcd.c         ****       unsigned short unicode_hangul_base = 0xAC00;
 4262              		.loc 1 921 7 view .LVU879
 922:lcd.c         ****       unsigned short unicode_hangul_last = 0xD79F;
 4263              		.loc 1 922 7 view .LVU880
 923:lcd.c         ****       unsigned short cho,jung,jong,result;
 4264              		.loc 1 923 7 view .LVU881
 924:lcd.c         ****       temp = wchar;
 4265              		.loc 1 924 7 view .LVU882
 925:lcd.c         ****       if ((temp < unicode_hangul_base) || (temp > unicode_hangul_last)) return temp;
 4266              		.loc 1 925 7 view .LVU883
 4267              		.loc 1 925 10 is_stmt 0 view .LVU884
 4268 0000 00F5A843 		add	r3, r0, #21504
 4269 0004 9AB2     		uxth	r2, r3
 4270 0006 42F69F33 		movw	r3, #11167
 4271 000a 9A42     		cmp	r2, r3
 4272 000c 18D8     		bhi	.L126
 926:lcd.c         ****       unicode = temp - unicode_hangul_base;
 4273              		.loc 1 926 7 is_stmt 1 view .LVU885
 4274              	.LVL500:
 927:lcd.c         ****       cho_sung = unicode / (21 * 28);
 4275              		.loc 1 927 7 view .LVU886
 928:lcd.c         ****       unicode = unicode % (21 * 28);
 4276              		.loc 1 928 7 view .LVU887
 4277              		.loc 1 928 15 is_stmt 0 view .LVU888
 4278 000e 4FF41373 		mov	r3, #588
 4279 0012 B2FBF3F1 		udiv	r1, r2, r3
 4280 0016 03FB1123 		mls	r3, r3, r1, r2
 929:lcd.c         ****       jung_sung = unicode / 28;
 4281              		.loc 1 929 17 view .LVU889
 4282 001a 1C22     		movs	r2, #28
 4283              	.LVL501:
 928:lcd.c         ****       unicode = unicode % (21 * 28);
 4284              		.loc 1 928 15 view .LVU890
 4285 001c 9BB2     		uxth	r3, r3
 4286              	.LVL502:
 4287              		.loc 1 929 7 is_stmt 1 view .LVU891
 930:lcd.c         ****       unicode = unicode % 28;
 4288              		.loc 1 930 7 view .LVU892
 931:lcd.c         ****       jong_sung = unicode;
 4289              		.loc 1 931 7 view .LVU893
 932:lcd.c         ****       cho = hangul_chosung_tbl[cho_sung];
 4290              		.loc 1 932 7 view .LVU894
 933:lcd.c         ****       jung = hangul_jungsung_tbl[jung_sung];
 4291              		.loc 1 933 7 view .LVU895
 934:lcd.c         ****       jong = hangul_jongsung_tbl[jong_sung];
 4292              		.loc 1 934 7 view .LVU896
 935:lcd.c         ****       result = (cho | jung | jong);
 4293              		.loc 1 935 7 view .LVU897
 929:lcd.c         ****       unicode = unicode % 28;
 4294              		.loc 1 929 17 is_stmt 0 view .LVU898
 4295 001e B3FBF2F0 		udiv	r0, r3, r2
 4296              	.LVL503:
 930:lcd.c         ****       jong_sung = unicode;
 4297              		.loc 1 930 15 view .LVU899
 4298 0022 02FB1033 		mls	r3, r2, r0, r3
 4299              	.LVL504:
 4300              		.loc 1 935 14 view .LVU900
 4301 0026 074A     		ldr	r2, .L127
 934:lcd.c         ****       result = (cho | jung | jong);
 4302              		.loc 1 934 33 view .LVU901
 4303 0028 9BB2     		uxth	r3, r3
 4304              		.loc 1 935 14 view .LVU902
 4305 002a 32F81000 		ldrh	r0, [r2, r0, lsl #1]
 4306 002e 064A     		ldr	r2, .L127+4
 4307 0030 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4308 0034 1843     		orrs	r0, r0, r3
 4309 0036 054B     		ldr	r3, .L127+8
 4310 0038 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 4311 003c 1843     		orrs	r0, r0, r3
 4312 003e 80B2     		uxth	r0, r0
 4313              	.LVL505:
 936:lcd.c         ****       return result;
 4314              		.loc 1 936 7 is_stmt 1 view .LVU903
 4315              	.L126:
 937:lcd.c         **** }
 4316              		.loc 1 937 1 is_stmt 0 view .LVU904
 4317 0040 7047     		bx	lr
 4318              	.L128:
 4319 0042 00BF     		.align	2
 4320              	.L127:
 4321 0044 00000000 		.word	.LANCHOR1
 4322 0048 00000000 		.word	.LANCHOR2
 4323 004c 00000000 		.word	.LANCHOR3
 4324              		.cfi_endproc
 4325              	.LFE70:
 4327              		.section	.text.uni_to_kssm,"ax",%progbits
 4328              		.align	1
 4329              		.global	uni_to_kssm
 4330              		.syntax unified
 4331              		.thumb
 4332              		.thumb_func
 4333              		.fpu softvfp
 4335              	uni_to_kssm:
 4336              	.LVL506:
 4337              	.LFB71:
 938:lcd.c         **** 
 939:lcd.c         **** 
 940:lcd.c         **** unsigned short uni_to_kssm (unsigned short wchar)
 941:lcd.c         **** {
 4338              		.loc 1 941 1 is_stmt 1 view -0
 4339              		.cfi_startproc
 4340              		@ args = 0, pretend = 0, frame = 0
 4341              		@ frame_needed = 0, uses_anonymous_args = 0
 942:lcd.c         ****       unsigned short cho,joong,jong;
 4342              		.loc 1 942 7 view .LVU906
 943:lcd.c         ****       unsigned short result = 0x8000;
 4343              		.loc 1 943 7 view .LVU907
 944:lcd.c         ****       cho = 2 + (wchar - 0xAC00) / (21 * 28);
 4344              		.loc 1 944 7 view .LVU908
 941:lcd.c         ****       unsigned short cho,joong,jong;
 4345              		.loc 1 941 1 is_stmt 0 view .LVU909
 4346 0000 30B5     		push	{r4, r5, lr}
 4347              		.cfi_def_cfa_offset 12
 4348              		.cfi_offset 4, -12
 4349              		.cfi_offset 5, -8
 4350              		.cfi_offset 14, -4
 4351              		.loc 1 944 34 view .LVU910
 4352 0002 4FF41375 		mov	r5, #588
 4353              		.loc 1 944 24 view .LVU911
 4354 0006 A0F52C44 		sub	r4, r0, #44032
 4355              		.loc 1 944 34 view .LVU912
 4356 000a 94FBF5F2 		sdiv	r2, r4, r5
 4357              		.loc 1 944 11 view .LVU913
 4358 000e 931C     		adds	r3, r2, #2
 4359 0010 99B2     		uxth	r1, r3
 4360              	.LVL507:
 945:lcd.c         ****       joong = (wchar - 0xAC00) % (21 * 28) / 28;
 4361              		.loc 1 945 7 is_stmt 1 view .LVU914
 4362              		.loc 1 945 44 is_stmt 0 view .LVU915
 4363 0012 1C23     		movs	r3, #28
 4364              		.loc 1 945 32 view .LVU916
 4365 0014 05FB1242 		mls	r2, r5, r2, r4
 4366              		.loc 1 945 44 view .LVU917
 4367 0018 92FBF3F3 		sdiv	r3, r2, r3
 4368              		.loc 1 945 13 view .LVU918
 4369 001c 9BB2     		uxth	r3, r3
 4370              	.LVL508:
 946:lcd.c         ****       if (joong < 5) joong += 3;
 4371              		.loc 1 946 7 is_stmt 1 view .LVU919
 4372              		.loc 1 946 10 is_stmt 0 view .LVU920
 4373 001e 042B     		cmp	r3, #4
 4374 0020 16D8     		bhi	.L130
 4375              		.loc 1 946 22 is_stmt 1 discriminator 1 view .LVU921
 4376              		.loc 1 946 28 is_stmt 0 discriminator 1 view .LVU922
 4377 0022 0333     		adds	r3, r3, #3
 4378              	.LVL509:
 4379              	.L136:
 947:lcd.c         ****       else if (joong < 11) joong += 5;
 948:lcd.c         ****       else if (joong < 17) joong += 7;
 949:lcd.c         ****       else joong += 9;
 950:lcd.c         ****       jong  = (wchar - 0xAC00) % 28;
 4380              		.loc 1 950 32 view .LVU923
 4381 0024 1C22     		movs	r2, #28
 4382              	.LVL510:
 949:lcd.c         ****       jong  = (wchar - 0xAC00) % 28;
 4383              		.loc 1 949 18 view .LVU924
 4384 0026 9BB2     		uxth	r3, r3
 4385              	.LVL511:
 4386              		.loc 1 950 7 is_stmt 1 view .LVU925
 951:lcd.c         ****       if (jong < 17) jong++;
 952:lcd.c         ****       else jong += 2;
 953:lcd.c         ****       result |= cho << 10;
 954:lcd.c         ****       result |= joong << 5;
 4387              		.loc 1 954 23 is_stmt 0 view .LVU926
 4388 0028 5B01     		lsls	r3, r3, #5
 4389              	.LVL512:
 4390              		.loc 1 954 14 view .LVU927
 4391 002a 43EA8123 		orr	r3, r3, r1, lsl #10
 4392 002e 6FEA4343 		mvn	r3, r3, lsl #17
 950:lcd.c         ****       if (jong < 17) jong++;
 4393              		.loc 1 950 32 view .LVU928
 4394 0032 94FBF2F0 		sdiv	r0, r4, r2
 4395              	.LVL513:
 4396              		.loc 1 954 14 view .LVU929
 4397 0036 6FEA5343 		mvn	r3, r3, lsr #17
 950:lcd.c         ****       if (jong < 17) jong++;
 4398              		.loc 1 950 32 view .LVU930
 4399 003a 02FB1040 		mls	r0, r2, r0, r4
 950:lcd.c         ****       if (jong < 17) jong++;
 4400              		.loc 1 950 13 view .LVU931
 4401 003e 80B2     		uxth	r0, r0
 4402              	.LVL514:
 951:lcd.c         ****       if (jong < 17) jong++;
 4403              		.loc 1 951 7 is_stmt 1 view .LVU932
 951:lcd.c         ****       if (jong < 17) jong++;
 4404              		.loc 1 951 10 is_stmt 0 view .LVU933
 4405 0040 1028     		cmp	r0, #16
 951:lcd.c         ****       if (jong < 17) jong++;
 4406              		.loc 1 951 22 is_stmt 1 view .LVU934
 951:lcd.c         ****       if (jong < 17) jong++;
 4407              		.loc 1 951 26 is_stmt 0 view .LVU935
 4408 0042 94BF     		ite	ls
 4409 0044 0130     		addls	r0, r0, #1
 4410              	.LVL515:
 952:lcd.c         ****       result |= cho << 10;
 4411              		.loc 1 952 12 is_stmt 1 view .LVU936
 952:lcd.c         ****       result |= cho << 10;
 4412              		.loc 1 952 17 is_stmt 0 view .LVU937
 4413 0046 0230     		addhi	r0, r0, #2
 4414              		.loc 1 954 14 view .LVU938
 4415 0048 9BB2     		uxth	r3, r3
 952:lcd.c         ****       result |= cho << 10;
 4416              		.loc 1 952 17 view .LVU939
 4417 004a 80B2     		uxth	r0, r0
 4418              	.LVL516:
 953:lcd.c         ****       result |= joong << 5;
 4419              		.loc 1 953 7 is_stmt 1 view .LVU940
 4420              		.loc 1 954 7 view .LVU941
 955:lcd.c         ****       result |= jong;
 4421              		.loc 1 955 7 view .LVU942
 956:lcd.c         ****       return result;
 4422              		.loc 1 956 7 view .LVU943
 957:lcd.c         **** }
 4423              		.loc 1 957 1 is_stmt 0 view .LVU944
 4424 004c 1843     		orrs	r0, r0, r3
 4425              	.LVL517:
 4426              		.loc 1 957 1 view .LVU945
 4427 004e 30BD     		pop	{r4, r5, pc}
 4428              	.LVL518:
 4429              	.L130:
 947:lcd.c         ****       else if (joong < 17) joong += 7;
 4430              		.loc 1 947 12 is_stmt 1 view .LVU946
 947:lcd.c         ****       else if (joong < 17) joong += 7;
 4431              		.loc 1 947 15 is_stmt 0 view .LVU947
 4432 0050 0A2B     		cmp	r3, #10
 4433 0052 01D8     		bhi	.L132
 947:lcd.c         ****       else if (joong < 17) joong += 7;
 4434              		.loc 1 947 28 is_stmt 1 discriminator 1 view .LVU948
 947:lcd.c         ****       else if (joong < 17) joong += 7;
 4435              		.loc 1 947 34 is_stmt 0 discriminator 1 view .LVU949
 4436 0054 0533     		adds	r3, r3, #5
 4437              	.LVL519:
 947:lcd.c         ****       else if (joong < 17) joong += 7;
 4438              		.loc 1 947 34 discriminator 1 view .LVU950
 4439 0056 E5E7     		b	.L136
 4440              	.LVL520:
 4441              	.L132:
 948:lcd.c         ****       else joong += 9;
 4442              		.loc 1 948 12 is_stmt 1 view .LVU951
 948:lcd.c         ****       else joong += 9;
 4443              		.loc 1 948 15 is_stmt 0 view .LVU952
 4444 0058 102B     		cmp	r3, #16
 948:lcd.c         ****       else joong += 9;
 4445              		.loc 1 948 28 is_stmt 1 view .LVU953
 948:lcd.c         ****       else joong += 9;
 4446              		.loc 1 948 34 is_stmt 0 view .LVU954
 4447 005a 94BF     		ite	ls
 4448 005c 0733     		addls	r3, r3, #7
 4449              	.LVL521:
 949:lcd.c         ****       jong  = (wchar - 0xAC00) % 28;
 4450              		.loc 1 949 12 is_stmt 1 view .LVU955
 949:lcd.c         ****       jong  = (wchar - 0xAC00) % 28;
 4451              		.loc 1 949 18 is_stmt 0 view .LVU956
 4452 005e 0933     		addhi	r3, r3, #9
 4453 0060 E0E7     		b	.L136
 4454              		.cfi_endproc
 4455              	.LFE71:
 4457              		.section	.text.ks5601_to_kssm,"ax",%progbits
 4458              		.align	1
 4459              		.global	ks5601_to_kssm
 4460              		.syntax unified
 4461              		.thumb
 4462              		.thumb_func
 4463              		.fpu softvfp
 4465              	ks5601_to_kssm:
 4466              	.LVL522:
 4467              	.LFB72:
 958:lcd.c         **** 
 959:lcd.c         **** 
 960:lcd.c         **** 
 961:lcd.c         **** unsigned short ks5601_to_kssm (unsigned short wchar)
 962:lcd.c         **** {
 4468              		.loc 1 962 1 is_stmt 1 view -0
 4469              		.cfi_startproc
 4470              		@ args = 0, pretend = 0, frame = 0
 4471              		@ frame_needed = 0, uses_anonymous_args = 0
 4472              		@ link register save eliminated.
 963:lcd.c         ****       unsigned char xh,xl;
 4473              		.loc 1 963 7 view .LVU958
 964:lcd.c         ****       unsigned short i,result;
 4474              		.loc 1 964 7 view .LVU959
 965:lcd.c         ****       xh = ((wchar >> 8) & 0xFF);
 4475              		.loc 1 965 7 view .LVU960
 966:lcd.c         ****       xl = (wchar & 0x00FF);
 967:lcd.c         ****       if ((xh >= 0xB0) && (xl >= 0xA0)) {
 4476              		.loc 1 967 10 is_stmt 0 view .LVU961
 4477 0000 B0F5304F 		cmp	r0, #45056
 965:lcd.c         ****       xh = ((wchar >> 8) & 0xFF);
 4478              		.loc 1 965 10 view .LVU962
 4479 0004 4FEA1023 		lsr	r3, r0, #8
 4480              	.LVL523:
 966:lcd.c         ****       xl = (wchar & 0x00FF);
 4481              		.loc 1 966 7 is_stmt 1 view .LVU963
 4482              		.loc 1 967 7 view .LVU964
 4483              		.loc 1 967 10 is_stmt 0 view .LVU965
 4484 0008 13D3     		bcc	.L141
 966:lcd.c         ****       xl = (wchar & 0x00FF);
 4485              		.loc 1 966 10 discriminator 1 view .LVU966
 4486 000a C0B2     		uxtb	r0, r0
 4487              	.LVL524:
 4488              		.loc 1 967 24 discriminator 1 view .LVU967
 4489 000c 9F28     		cmp	r0, #159
 4490 000e 10D9     		bls	.L141
 968:lcd.c         ****          xh = xh - 0xB0;
 4491              		.loc 1 968 10 is_stmt 1 view .LVU968
 4492              	.LVL525:
 969:lcd.c         ****          xl = xl - 0xA0;
 4493              		.loc 1 969 10 view .LVU969
 970:lcd.c         ****          i = xl + xh * 96;
 4494              		.loc 1 970 10 view .LVU970
 971:lcd.c         ****          result = KS_CODE[i][0] << 8 | KS_CODE[i][1];
 4495              		.loc 1 971 10 view .LVU971
 968:lcd.c         ****          xl = xl - 0xA0;
 4496              		.loc 1 968 13 is_stmt 0 view .LVU972
 4497 0010 5033     		adds	r3, r3, #80
 4498              	.LVL526:
 970:lcd.c         ****          i = xl + xh * 96;
 4499              		.loc 1 970 17 view .LVU973
 4500 0012 DBB2     		uxtb	r3, r3
 4501              	.LVL527:
 969:lcd.c         ****          i = xl + xh * 96;
 4502              		.loc 1 969 13 view .LVU974
 4503 0014 6030     		adds	r0, r0, #96
 4504              	.LVL528:
 970:lcd.c         ****          result = KS_CODE[i][0] << 8 | KS_CODE[i][1];
 4505              		.loc 1 970 17 view .LVU975
 4506 0016 03EB4302 		add	r2, r3, r3, lsl #1
 4507 001a C3B2     		uxtb	r3, r0
 4508              		.loc 1 971 29 view .LVU976
 4509 001c 03EB4213 		add	r3, r3, r2, lsl #5
 4510 0020 054A     		ldr	r2, .L142
 4511 0022 12F81310 		ldrb	r1, [r2, r3, lsl #1]	@ zero_extendqisi2
 4512              		.loc 1 971 50 view .LVU977
 4513 0026 02EB4303 		add	r3, r2, r3, lsl #1
 4514 002a 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 4515              	.LVL529:
 4516              		.loc 1 971 17 view .LVU978
 4517 002c 40EA0120 		orr	r0, r0, r1, lsl #8
 4518              	.LVL530:
 972:lcd.c         ****          return result;
 4519              		.loc 1 972 10 is_stmt 1 view .LVU979
 4520              		.loc 1 972 17 is_stmt 0 view .LVU980
 4521 0030 7047     		bx	lr
 4522              	.LVL531:
 4523              	.L141:
 973:lcd.c         ****       }
 974:lcd.c         ****       return 0;
 4524              		.loc 1 974 14 view .LVU981
 4525 0032 0020     		movs	r0, #0
 975:lcd.c         **** }
 4526              		.loc 1 975 1 view .LVU982
 4527 0034 7047     		bx	lr
 4528              	.L143:
 4529 0036 00BF     		.align	2
 4530              	.L142:
 4531 0038 00000000 		.word	KS_CODE
 4532              		.cfi_endproc
 4533              	.LFE72:
 4535              		.section	.text.put_eng,"ax",%progbits
 4536              		.align	1
 4537              		.global	put_eng
 4538              		.syntax unified
 4539              		.thumb
 4540              		.thumb_func
 4541              		.fpu softvfp
 4543              	put_eng:
 4544              	.LVL532:
 4545              	.LFB73:
 976:lcd.c         **** 
 977:lcd.c         **** 
 978:lcd.c         **** void put_eng (char cdata)
 979:lcd.c         **** {
 4546              		.loc 1 979 1 is_stmt 1 view -0
 4547              		.cfi_startproc
 4548              		@ args = 0, pretend = 0, frame = 0
 4549              		@ frame_needed = 0, uses_anonymous_args = 0
 980:lcd.c         ****       unsigned short val,pi;
 4550              		.loc 1 980 7 view .LVU984
 981:lcd.c         ****       if (cdata < 0x20) {
 4551              		.loc 1 981 7 view .LVU985
 4552              		.loc 1 981 10 is_stmt 0 view .LVU986
 4553 0000 1F28     		cmp	r0, #31
 979:lcd.c         ****       unsigned short val,pi;
 4554              		.loc 1 979 1 view .LVU987
 4555 0002 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4556              		.cfi_def_cfa_offset 40
 4557              		.cfi_offset 3, -40
 4558              		.cfi_offset 4, -36
 4559              		.cfi_offset 5, -32
 4560              		.cfi_offset 6, -28
 4561              		.cfi_offset 7, -24
 4562              		.cfi_offset 8, -20
 4563              		.cfi_offset 9, -16
 4564              		.cfi_offset 10, -12
 4565              		.cfi_offset 11, -8
 4566              		.cfi_offset 14, -4
 4567              		.loc 1 981 10 view .LVU988
 4568 0006 13D8     		bhi	.L145
 982:lcd.c         ****          if (cdata == 0x0D) ax = 0;
 4569              		.loc 1 982 10 is_stmt 1 view .LVU989
 4570              		.loc 1 982 13 is_stmt 0 view .LVU990
 4571 0008 0D28     		cmp	r0, #13
 4572 000a 04D1     		bne	.L146
 4573              	.LVL533:
 4574              	.L156:
 983:lcd.c         ****          if (cdata == 0x0A) {
 984:lcd.c         ****             ay++;
 985:lcd.c         ****             if (ay >= max_row) {
 986:lcd.c         ****                ay -= 1;
 987:lcd.c         ****                ax = 0;
 4575              		.loc 1 987 16 is_stmt 1 view .LVU991
 4576              		.loc 1 987 19 is_stmt 0 view .LVU992
 4577 000c 0022     		movs	r2, #0
 4578 000e 304B     		ldr	r3, .L157
 4579 0010 1A80     		strh	r2, [r3]	@ movhi
 4580              	.L144:
 988:lcd.c         ****             }
 989:lcd.c         ****          }
 990:lcd.c         ****       } else {
 991:lcd.c         **** 	 val = (unsigned short)cdata;
 992:lcd.c         ****          ty = ay * 16;
 993:lcd.c         ****          for (pi=0;pi<16;pi++) {
 994:lcd.c         ****              tx = ax * 8;
 995:lcd.c         ****              if (eng_mode == 0) {
 996:lcd.c         ****                 dumy_data[pi] = eng_font[val][pi];
 997:lcd.c         ****              } else {
 998:lcd.c         ****                 if (page == 0) dumy_data[pi] = eng_font[val*2][pi];else dumy_data[pi] = eng_font[va
 999:lcd.c         ****              }
1000:lcd.c         ****              out_lcd(dumy_data[pi]);
1001:lcd.c         ****              ty++;
1002:lcd.c         ****          }
1003:lcd.c         ****          ax++;
1004:lcd.c         ****          if (ax >= max_col) {
1005:lcd.c         ****             ax = 0;
1006:lcd.c         ****             ay++;
1007:lcd.c         ****             if (ay >= max_row) {
1008:lcd.c         ****                ay -= 1;
1009:lcd.c         ****             }
1010:lcd.c         ****          }
1011:lcd.c         ****       }
1012:lcd.c         **** }
 4581              		.loc 1 1012 1 view .LVU993
 4582 0012 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4583              	.LVL534:
 4584              	.L146:
 983:lcd.c         ****          if (cdata == 0x0A) {
 4585              		.loc 1 983 10 is_stmt 1 view .LVU994
 983:lcd.c         ****          if (cdata == 0x0A) {
 4586              		.loc 1 983 13 is_stmt 0 view .LVU995
 4587 0016 0A28     		cmp	r0, #10
 4588 0018 FBD1     		bne	.L144
 984:lcd.c         ****             if (ay >= max_row) {
 4589              		.loc 1 984 13 is_stmt 1 view .LVU996
 984:lcd.c         ****             if (ay >= max_row) {
 4590              		.loc 1 984 15 is_stmt 0 view .LVU997
 4591 001a 2E4A     		ldr	r2, .L157+4
 985:lcd.c         ****                ay -= 1;
 4592              		.loc 1 985 20 view .LVU998
 4593 001c 2E48     		ldr	r0, .L157+8
 4594              	.LVL535:
 984:lcd.c         ****             if (ay >= max_row) {
 4595              		.loc 1 984 15 view .LVU999
 4596 001e 1188     		ldrh	r1, [r2]
 985:lcd.c         ****                ay -= 1;
 4597              		.loc 1 985 16 view .LVU1000
 4598 0020 0088     		ldrh	r0, [r0]
 984:lcd.c         ****             if (ay >= max_row) {
 4599              		.loc 1 984 15 view .LVU1001
 4600 0022 4B1C     		adds	r3, r1, #1
 4601 0024 9BB2     		uxth	r3, r3
 985:lcd.c         ****                ay -= 1;
 4602              		.loc 1 985 16 view .LVU1002
 4603 0026 9842     		cmp	r0, r3
 984:lcd.c         ****             if (ay >= max_row) {
 4604              		.loc 1 984 15 view .LVU1003
 4605 0028 1380     		strh	r3, [r2]	@ movhi
 985:lcd.c         ****                ay -= 1;
 4606              		.loc 1 985 13 is_stmt 1 view .LVU1004
 985:lcd.c         ****                ay -= 1;
 4607              		.loc 1 985 16 is_stmt 0 view .LVU1005
 4608 002a F2D8     		bhi	.L144
 986:lcd.c         ****                ax = 0;
 4609              		.loc 1 986 16 is_stmt 1 view .LVU1006
 986:lcd.c         ****                ax = 0;
 4610              		.loc 1 986 19 is_stmt 0 view .LVU1007
 4611 002c 1180     		strh	r1, [r2]	@ movhi
 4612 002e EDE7     		b	.L156
 4613              	.LVL536:
 4614              	.L145:
 4615              	.LBB107:
 4616              	.LBI107:
 978:lcd.c         **** {
 4617              		.loc 1 978 6 is_stmt 1 view .LVU1008
 4618              	.LBB108:
 991:lcd.c         ****          ty = ay * 16;
 4619              		.loc 1 991 3 view .LVU1009
 992:lcd.c         ****          for (pi=0;pi<16;pi++) {
 4620              		.loc 1 992 10 view .LVU1010
 992:lcd.c         ****          for (pi=0;pi<16;pi++) {
 4621              		.loc 1 992 13 is_stmt 0 view .LVU1011
 4622 0030 284F     		ldr	r7, .L157+4
 4623 0032 2A49     		ldr	r1, .L157+12
 4624 0034 3B88     		ldrh	r3, [r7]
 4625 0036 6FF00F0A 		mvn	r10, #15
 4626 003a 1B01     		lsls	r3, r3, #4
 4627 003c 0B80     		strh	r3, [r1]	@ movhi
 993:lcd.c         ****              tx = ax * 8;
 4628              		.loc 1 993 10 is_stmt 1 view .LVU1012
 4629              	.LVL537:
 993:lcd.c         ****              tx = ax * 8;
 4630              		.loc 1 993 20 view .LVU1013
 994:lcd.c         ****              if (eng_mode == 0) {
 4631              		.loc 1 994 17 is_stmt 0 view .LVU1014
 4632 003e 244B     		ldr	r3, .L157
 4633 0040 0AFB00FA 		mul	r10, r10, r0
 4634 0044 9946     		mov	r9, r3
 4635 0046 264E     		ldr	r6, .L157+16
 4636 0048 8846     		mov	r8, r1
 998:lcd.c         ****              }
 4637              		.loc 1 998 103 view .LVU1015
 4638 004a 4FEA401B 		lsl	fp, r0, #5
 4639 004e 254D     		ldr	r5, .L157+20
 994:lcd.c         ****              if (eng_mode == 0) {
 4640              		.loc 1 994 17 view .LVU1016
 4641 0050 2549     		ldr	r1, .L157+24
 4642 0052 06EB0016 		add	r6, r6, r0, lsl #4
 4643 0056 0BF1100B 		add	fp, fp, #16
 4644 005a 4401     		lsls	r4, r0, #5
 4645              	.LVL538:
 4646              	.L153:
 994:lcd.c         ****              if (eng_mode == 0) {
 4647              		.loc 1 994 14 is_stmt 1 view .LVU1017
 994:lcd.c         ****              if (eng_mode == 0) {
 4648              		.loc 1 994 17 is_stmt 0 view .LVU1018
 4649 005c 1888     		ldrh	r0, [r3]
 4650 005e C000     		lsls	r0, r0, #3
 4651 0060 0880     		strh	r0, [r1]	@ movhi
 995:lcd.c         ****                 dumy_data[pi] = eng_font[val][pi];
 4652              		.loc 1 995 14 is_stmt 1 view .LVU1019
 995:lcd.c         ****                 dumy_data[pi] = eng_font[val][pi];
 4653              		.loc 1 995 27 is_stmt 0 view .LVU1020
 4654 0062 2248     		ldr	r0, .L157+28
 995:lcd.c         ****                 dumy_data[pi] = eng_font[val][pi];
 4655              		.loc 1 995 17 view .LVU1021
 4656 0064 0088     		ldrh	r0, [r0]
 4657 0066 40BB     		cbnz	r0, .L150
 996:lcd.c         ****              } else {
 4658              		.loc 1 996 17 is_stmt 1 view .LVU1022
 996:lcd.c         ****              } else {
 4659              		.loc 1 996 31 is_stmt 0 view .LVU1023
 4660 0068 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 4661              	.L155:
1000:lcd.c         ****              ty++;
 4662              		.loc 1 1000 14 is_stmt 1 view .LVU1024
 998:lcd.c         ****              }
 4663              		.loc 1 998 87 is_stmt 0 view .LVU1025
 4664 006a 2870     		strb	r0, [r5]
1000:lcd.c         ****              ty++;
 4665              		.loc 1 1000 14 view .LVU1026
 4666 006c 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 4667              	.LVL539:
1000:lcd.c         ****              ty++;
 4668              		.loc 1 1000 14 view .LVU1027
 4669 0070 FFF7FEFF 		bl	out_lcd
 4670              	.LVL540:
1001:lcd.c         ****          }
 4671              		.loc 1 1001 14 is_stmt 1 view .LVU1028
1001:lcd.c         ****          }
 4672              		.loc 1 1001 16 is_stmt 0 view .LVU1029
 4673 0074 B8F80000 		ldrh	r0, [r8]
 993:lcd.c         ****              tx = ax * 8;
 4674              		.loc 1 993 10 view .LVU1030
 4675 0078 1D4B     		ldr	r3, .L157+32
1001:lcd.c         ****          }
 4676              		.loc 1 1001 16 view .LVU1031
 4677 007a 0130     		adds	r0, r0, #1
 993:lcd.c         ****              tx = ax * 8;
 4678              		.loc 1 993 10 view .LVU1032
 4679 007c 9D42     		cmp	r5, r3
 4680 007e 1A49     		ldr	r1, .L157+24
 4681 0080 134B     		ldr	r3, .L157
1001:lcd.c         ****          }
 4682              		.loc 1 1001 16 view .LVU1033
 4683 0082 A8F80000 		strh	r0, [r8]	@ movhi
 993:lcd.c         ****              tx = ax * 8;
 4684              		.loc 1 993 26 is_stmt 1 view .LVU1034
 4685              	.LVL541:
 993:lcd.c         ****              tx = ax * 8;
 4686              		.loc 1 993 20 view .LVU1035
 4687 0086 06F10106 		add	r6, r6, #1
 993:lcd.c         ****              tx = ax * 8;
 4688              		.loc 1 993 10 is_stmt 0 view .LVU1036
 4689 008a E7D1     		bne	.L153
1003:lcd.c         ****          if (ax >= max_col) {
 4690              		.loc 1 1003 10 is_stmt 1 view .LVU1037
1003:lcd.c         ****          if (ax >= max_col) {
 4691              		.loc 1 1003 12 is_stmt 0 view .LVU1038
 4692 008c B9F80030 		ldrh	r3, [r9]
1004:lcd.c         ****             ax = 0;
 4693              		.loc 1 1004 17 view .LVU1039
 4694 0090 184A     		ldr	r2, .L157+36
1003:lcd.c         ****          if (ax >= max_col) {
 4695              		.loc 1 1003 12 view .LVU1040
 4696 0092 0133     		adds	r3, r3, #1
1004:lcd.c         ****             ax = 0;
 4697              		.loc 1 1004 13 view .LVU1041
 4698 0094 1288     		ldrh	r2, [r2]
1003:lcd.c         ****          if (ax >= max_col) {
 4699              		.loc 1 1003 12 view .LVU1042
 4700 0096 9BB2     		uxth	r3, r3
1004:lcd.c         ****             ax = 0;
 4701              		.loc 1 1004 13 view .LVU1043
 4702 0098 9A42     		cmp	r2, r3
1003:lcd.c         ****          if (ax >= max_col) {
 4703              		.loc 1 1003 12 view .LVU1044
 4704 009a A9F80030 		strh	r3, [r9]	@ movhi
1004:lcd.c         ****             ax = 0;
 4705              		.loc 1 1004 10 is_stmt 1 view .LVU1045
1004:lcd.c         ****             ax = 0;
 4706              		.loc 1 1004 13 is_stmt 0 view .LVU1046
 4707 009e B8D8     		bhi	.L144
1005:lcd.c         ****             ay++;
 4708              		.loc 1 1005 13 is_stmt 1 view .LVU1047
1005:lcd.c         ****             ay++;
 4709              		.loc 1 1005 16 is_stmt 0 view .LVU1048
 4710 00a0 0023     		movs	r3, #0
1006:lcd.c         ****             if (ay >= max_row) {
 4711              		.loc 1 1006 15 view .LVU1049
 4712 00a2 3A88     		ldrh	r2, [r7]
1007:lcd.c         ****                ay -= 1;
 4713              		.loc 1 1007 20 view .LVU1050
 4714 00a4 0C49     		ldr	r1, .L157+8
1005:lcd.c         ****             ay++;
 4715              		.loc 1 1005 16 view .LVU1051
 4716 00a6 A9F80030 		strh	r3, [r9]	@ movhi
1006:lcd.c         ****             if (ay >= max_row) {
 4717              		.loc 1 1006 13 is_stmt 1 view .LVU1052
1007:lcd.c         ****                ay -= 1;
 4718              		.loc 1 1007 16 is_stmt 0 view .LVU1053
 4719 00aa 0988     		ldrh	r1, [r1]
1006:lcd.c         ****             if (ay >= max_row) {
 4720              		.loc 1 1006 15 view .LVU1054
 4721 00ac 531C     		adds	r3, r2, #1
 4722 00ae 9BB2     		uxth	r3, r3
1007:lcd.c         ****                ay -= 1;
 4723              		.loc 1 1007 13 is_stmt 1 view .LVU1055
1008:lcd.c         ****             }
 4724              		.loc 1 1008 19 is_stmt 0 view .LVU1056
 4725 00b0 9942     		cmp	r1, r3
 4726 00b2 98BF     		it	ls
 4727 00b4 1346     		movls	r3, r2
 4728 00b6 3B80     		strh	r3, [r7]	@ movhi
 4729 00b8 ABE7     		b	.L144
 4730              	.L150:
 998:lcd.c         ****              }
 4731              		.loc 1 998 17 is_stmt 1 view .LVU1057
 998:lcd.c         ****              }
 4732              		.loc 1 998 26 is_stmt 0 view .LVU1058
 4733 00ba 0F48     		ldr	r0, .L157+40
 998:lcd.c         ****              }
 4734              		.loc 1 998 20 view .LVU1059
 4735 00bc 0288     		ldrh	r2, [r0]
 4736 00be 06EB0A00 		add	r0, r6, r10
 4737 00c2 0AB9     		cbnz	r2, .L152
 998:lcd.c         ****              }
 4738              		.loc 1 998 32 is_stmt 1 view .LVU1060
 998:lcd.c         ****              }
 4739              		.loc 1 998 46 is_stmt 0 view .LVU1061
 4740 00c4 005D     		ldrb	r0, [r0, r4]	@ zero_extendqisi2
 4741 00c6 D0E7     		b	.L155
 4742              	.L152:
 998:lcd.c         ****              }
 4743              		.loc 1 998 73 is_stmt 1 view .LVU1062
 998:lcd.c         ****              }
 4744              		.loc 1 998 87 is_stmt 0 view .LVU1063
 4745 00c8 10F80B00 		ldrb	r0, [r0, fp]	@ zero_extendqisi2
 4746 00cc CDE7     		b	.L155
 4747              	.L158:
 4748 00ce 00BF     		.align	2
 4749              	.L157:
 4750 00d0 00000000 		.word	ax
 4751 00d4 00000000 		.word	ay
 4752 00d8 00000000 		.word	max_row
 4753 00dc 00000000 		.word	ty
 4754 00e0 00000000 		.word	.LANCHOR4
 4755 00e4 00000000 		.word	dumy_data
 4756 00e8 00000000 		.word	tx
 4757 00ec 00000000 		.word	eng_mode
 4758 00f0 10000000 		.word	dumy_data+16
 4759 00f4 00000000 		.word	max_col
 4760 00f8 00000000 		.word	page
 4761              	.LBE108:
 4762              	.LBE107:
 4763              		.cfi_endproc
 4764              	.LFE73:
 4766              		.section	.text.put_han,"ax",%progbits
 4767              		.align	1
 4768              		.global	put_han
 4769              		.syntax unified
 4770              		.thumb
 4771              		.thumb_func
 4772              		.fpu softvfp
 4774              	put_han:
 4775              	.LVL542:
 4776              	.LFB74:
1013:lcd.c         **** 
1014:lcd.c         **** 
1015:lcd.c         **** void put_han (unsigned short c)
1016:lcd.c         **** {
 4777              		.loc 1 1016 1 is_stmt 1 view -0
 4778              		.cfi_startproc
 4779              		@ args = 0, pretend = 0, frame = 0
 4780              		@ frame_needed = 0, uses_anonymous_args = 0
1017:lcd.c         ****       unsigned char i,first,mid,last,b1,b2,b3;
 4781              		.loc 1 1017 7 view .LVU1065
1018:lcd.c         ****       unsigned short cc,hlx1,hlx2,hlx3;
 4782              		.loc 1 1018 7 view .LVU1066
1019:lcd.c         ****       if (hangul_mode == 0) cc = ks5601_to_kssm(c);else cc = uni_to_kssm(c);
 4783              		.loc 1 1019 7 view .LVU1067
1016:lcd.c         ****       unsigned char i,first,mid,last,b1,b2,b3;
 4784              		.loc 1 1016 1 is_stmt 0 view .LVU1068
 4785 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4786              		.cfi_def_cfa_offset 40
 4787              		.cfi_offset 3, -40
 4788              		.cfi_offset 4, -36
 4789              		.cfi_offset 5, -32
 4790              		.cfi_offset 6, -28
 4791              		.cfi_offset 7, -24
 4792              		.cfi_offset 8, -20
 4793              		.cfi_offset 9, -16
 4794              		.cfi_offset 10, -12
 4795              		.cfi_offset 11, -8
 4796              		.cfi_offset 14, -4
 4797              		.loc 1 1019 23 view .LVU1069
 4798 0004 994B     		ldr	r3, .L226
 4799 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4800              		.loc 1 1019 10 view .LVU1070
 4801 0008 F3B9     		cbnz	r3, .L160
 4802              		.loc 1 1019 29 is_stmt 1 discriminator 1 view .LVU1071
 4803              		.loc 1 1019 34 is_stmt 0 discriminator 1 view .LVU1072
 4804 000a FFF7FEFF 		bl	ks5601_to_kssm
 4805              	.LVL543:
 4806              	.L161:
1020:lcd.c         ****       first = ((cc & 0x7C00) >> 10);
 4807              		.loc 1 1020 7 is_stmt 1 view .LVU1073
1021:lcd.c         ****       mid = ((cc & 0x03E0) >> 5);
 4808              		.loc 1 1021 7 view .LVU1074
1022:lcd.c         ****       last = (cc & 0x001F);
 4809              		.loc 1 1022 7 view .LVU1075
1023:lcd.c         ****       first = han_tbl[0][first];
 4810              		.loc 1 1023 7 view .LVU1076
 4811              		.loc 1 1023 13 is_stmt 0 view .LVU1077
 4812 000e 984B     		ldr	r3, .L226+4
 4813              		.loc 1 1023 25 view .LVU1078
 4814 0010 C0F38422 		ubfx	r2, r0, #10, #5
 4815              		.loc 1 1023 13 view .LVU1079
 4816 0014 9E5C     		ldrb	r6, [r3, r2]	@ zero_extendqisi2
 4817              	.LVL544:
1024:lcd.c         ****       mid = han_tbl[1][mid];
 4818              		.loc 1 1024 7 is_stmt 1 view .LVU1080
 4819              		.loc 1 1024 23 is_stmt 0 view .LVU1081
 4820 0016 C0F34412 		ubfx	r2, r0, #5, #5
 4821              		.loc 1 1024 11 view .LVU1082
 4822 001a 1A44     		add	r2, r2, r3
 4823 001c 92F82070 		ldrb	r7, [r2, #32]	@ zero_extendqisi2
 4824              	.LVL545:
1025:lcd.c         ****       last = han_tbl[2][last];
 4825              		.loc 1 1025 7 is_stmt 1 view .LVU1083
 4826              		.loc 1 1025 24 is_stmt 0 view .LVU1084
 4827 0020 00F01F00 		and	r0, r0, #31
 4828              	.LVL546:
 4829              		.loc 1 1025 12 view .LVU1085
 4830 0024 1844     		add	r0, r0, r3
 4831 0026 BB1E     		subs	r3, r7, #2
 4832 0028 90F84000 		ldrb	r0, [r0, #64]	@ zero_extendqisi2
 4833              	.LVL547:
1026:lcd.c         ****       b1 = 0;
 4834              		.loc 1 1026 7 is_stmt 1 view .LVU1086
1027:lcd.c         ****       b2 = 0;
 4835              		.loc 1 1027 7 view .LVU1087
1028:lcd.c         ****       b3 = 0;
 4836              		.loc 1 1028 7 view .LVU1088
1029:lcd.c         ****       switch (mid) {
 4837              		.loc 1 1029 7 view .LVU1089
 4838 002c 132B     		cmp	r3, #19
 4839 002e 38D8     		bhi	.L192
 4840 0030 DFE803F0 		tbb	[pc, r3]
 4841              	.L164:
 4842 0034 33       		.byte	(.L166-.L164)/2
 4843 0035 37       		.byte	(.L192-.L164)/2
 4844 0036 33       		.byte	(.L166-.L164)/2
 4845 0037 0D       		.byte	(.L163-.L164)/2
 4846 0038 33       		.byte	(.L166-.L164)/2
 4847 0039 0D       		.byte	(.L163-.L164)/2
 4848 003a 33       		.byte	(.L166-.L164)/2
 4849 003b 35       		.byte	(.L165-.L164)/2
 4850 003c 37       		.byte	(.L192-.L164)/2
 4851 003d 33       		.byte	(.L166-.L164)/2
 4852 003e 0D       		.byte	(.L163-.L164)/2
 4853 003f 35       		.byte	(.L165-.L164)/2
 4854 0040 35       		.byte	(.L165-.L164)/2
 4855 0041 0D       		.byte	(.L163-.L164)/2
 4856 0042 33       		.byte	(.L166-.L164)/2
 4857 0043 0D       		.byte	(.L163-.L164)/2
 4858 0044 35       		.byte	(.L165-.L164)/2
 4859 0045 35       		.byte	(.L165-.L164)/2
 4860 0046 0D       		.byte	(.L163-.L164)/2
 4861 0047 0D       		.byte	(.L163-.L164)/2
 4862              	.LVL548:
 4863              		.p2align 1
 4864              	.L160:
1019:lcd.c         ****       first = ((cc & 0x7C00) >> 10);
 4865              		.loc 1 1019 57 discriminator 2 view .LVU1090
1019:lcd.c         ****       first = ((cc & 0x7C00) >> 10);
 4866              		.loc 1 1019 62 is_stmt 0 discriminator 2 view .LVU1091
 4867 0048 FFF7FEFF 		bl	uni_to_kssm
 4868              	.LVL549:
1019:lcd.c         ****       first = ((cc & 0x7C00) >> 10);
 4869              		.loc 1 1019 62 discriminator 2 view .LVU1092
 4870 004c DFE7     		b	.L161
 4871              	.LVL550:
 4872              	.L163:
1030:lcd.c         ****       	 case 1:
1031:lcd.c         ****       	 case 3:
1032:lcd.c         ****       	 case 10:
1033:lcd.c         ****            b3 = 0;
1034:lcd.c         ****            break;
1035:lcd.c         ****          case 5:
1036:lcd.c         ****          case 7:
1037:lcd.c         ****          case 12:
1038:lcd.c         ****          case 15:
1039:lcd.c         ****          case 17:
1040:lcd.c         ****          case 20:
1041:lcd.c         ****          case 21:
1042:lcd.c         ****            b3 = 1;
 4873              		.loc 1 1042 15 view .LVU1093
 4874 004e 0125     		movs	r5, #1
 4875              	.LVL551:
 4876              	.L162:
1043:lcd.c         ****            break;
1044:lcd.c         ****          case 2:
1045:lcd.c         ****          case 4:
1046:lcd.c         ****          case 6:
1047:lcd.c         ****          case 8:
1048:lcd.c         ****          case 11:
1049:lcd.c         ****          case 16:
1050:lcd.c         ****            b3 = 2;
1051:lcd.c         ****            break;
1052:lcd.c         ****          case 9:
1053:lcd.c         ****          case 13:
1054:lcd.c         ****          case 14:
1055:lcd.c         ****          case 18:
1056:lcd.c         ****          case 19:
1057:lcd.c         ****            b3 = 3;
1058:lcd.c         ****            break;
1059:lcd.c         ****       }
1060:lcd.c         ****       switch (first) {
 4877              		.loc 1 1060 7 is_stmt 1 view .LVU1094
 4878 0050 012E     		cmp	r6, #1
 4879 0052 07F1FF33 		add	r3, r7, #-1
 4880 0056 01D0     		beq	.L167
 4881 0058 102E     		cmp	r6, #16
 4882 005a 24D1     		bne	.L168
 4883              	.L167:
1061:lcd.c         ****          case 1:
1062:lcd.c         ****          case 16:
1063:lcd.c         ****            if (last == 0) b2 = 0;else b2 = 2;
 4884              		.loc 1 1063 12 view .LVU1095
 4885              		.loc 1 1063 15 is_stmt 0 view .LVU1096
 4886 005c 0028     		cmp	r0, #0
 4887 005e 00F0CF80 		beq	.L193
 4888              		.loc 1 1063 42 view .LVU1097
 4889 0062 4FF0020C 		mov	ip, #2
 4890              	.L170:
 4891              	.LVL552:
1064:lcd.c         ****            break;
1065:lcd.c         ****          default:
1066:lcd.c         ****            if (last == 0) b2 = 1;else b2 = 3;
1067:lcd.c         ****       }
1068:lcd.c         ****       switch (mid) {
 4892              		.loc 1 1068 7 is_stmt 1 view .LVU1098
 4893 0066 142B     		cmp	r3, #20
 4894 0068 00F2C280 		bhi	.L187
 4895 006c DFE813F0 		tbh	[pc, r3, lsl #1]
 4896              	.L191:
 4897 0070 FB00     		.2byte	(.L190-.L191)/2
 4898 0072 FB00     		.2byte	(.L190-.L191)/2
 4899 0074 FB00     		.2byte	(.L190-.L191)/2
 4900 0076 FB00     		.2byte	(.L190-.L191)/2
 4901 0078 FB00     		.2byte	(.L190-.L191)/2
 4902 007a FB00     		.2byte	(.L190-.L191)/2
 4903 007c FB00     		.2byte	(.L190-.L191)/2
 4904 007e FB00     		.2byte	(.L190-.L191)/2
 4905 0080 2400     		.2byte	(.L200-.L191)/2
 4906 0082 2600     		.2byte	(.L176-.L191)/2
 4907 0084 2600     		.2byte	(.L176-.L191)/2
 4908 0086 2600     		.2byte	(.L176-.L191)/2
 4909 0088 2400     		.2byte	(.L200-.L191)/2
 4910 008a 2100     		.2byte	(.L173-.L191)/2
 4911 008c BB00     		.2byte	(.L177-.L191)/2
 4912 008e BB00     		.2byte	(.L177-.L191)/2
 4913 0090 BB00     		.2byte	(.L177-.L191)/2
 4914 0092 2100     		.2byte	(.L173-.L191)/2
 4915 0094 2400     		.2byte	(.L200-.L191)/2
 4916 0096 2600     		.2byte	(.L176-.L191)/2
 4917 0098 FB00     		.2byte	(.L190-.L191)/2
 4918              	.LVL553:
 4919              		.p2align 1
 4920              	.L166:
1050:lcd.c         ****            break;
 4921              		.loc 1 1050 12 view .LVU1099
1051:lcd.c         ****          case 9:
 4922              		.loc 1 1051 12 view .LVU1100
1050:lcd.c         ****            break;
 4923              		.loc 1 1050 15 is_stmt 0 view .LVU1101
 4924 009a 0225     		movs	r5, #2
1051:lcd.c         ****          case 9:
 4925              		.loc 1 1051 12 view .LVU1102
 4926 009c D8E7     		b	.L162
 4927              	.LVL554:
 4928              	.L165:
1057:lcd.c         ****            break;
 4929              		.loc 1 1057 12 is_stmt 1 view .LVU1103
1058:lcd.c         ****       }
 4930              		.loc 1 1058 12 view .LVU1104
1057:lcd.c         ****            break;
 4931              		.loc 1 1057 15 is_stmt 0 view .LVU1105
 4932 009e 0325     		movs	r5, #3
1058:lcd.c         ****       }
 4933              		.loc 1 1058 12 view .LVU1106
 4934 00a0 D6E7     		b	.L162
 4935              	.LVL555:
 4936              	.L192:
1025:lcd.c         ****       b1 = 0;
 4937              		.loc 1 1025 12 view .LVU1107
 4938 00a2 0025     		movs	r5, #0
 4939 00a4 D4E7     		b	.L162
 4940              	.LVL556:
 4941              	.L168:
1066:lcd.c         ****       }
 4942              		.loc 1 1066 12 is_stmt 1 view .LVU1108
1066:lcd.c         ****       }
 4943              		.loc 1 1066 15 is_stmt 0 view .LVU1109
 4944 00a6 0028     		cmp	r0, #0
 4945 00a8 00F0DA80 		beq	.L194
1066:lcd.c         ****       }
 4946              		.loc 1 1066 42 view .LVU1110
 4947 00ac 4FF0030C 		mov	ip, #3
 4948 00b0 D9E7     		b	.L170
 4949              	.LVL557:
 4950              	.L173:
1069:lcd.c         ****          case 1:
1070:lcd.c         ****          case 2:
1071:lcd.c         ****          case 3:
1072:lcd.c         ****          case 4:
1073:lcd.c         ****          case 5:
1074:lcd.c         ****          case 6:
1075:lcd.c         ****          case 7:
1076:lcd.c         ****          case 8:
1077:lcd.c         ****          case 21:
1078:lcd.c         ****            if (last == 0) b1 = 0; else b1 = 5;
1079:lcd.c         ****            break;
1080:lcd.c         ****          case 9:
1081:lcd.c         ****          case 13:
1082:lcd.c         ****          case 19:
1083:lcd.c         ****            if (last == 0) b1 = 1;else b1 = 6;
1084:lcd.c         ****            break;
1085:lcd.c         ****          case 14: case 18:
1086:lcd.c         ****            if (last == 0) b1 = 2;else b1 = 6;
 4951              		.loc 1 1086 12 is_stmt 1 view .LVU1111
 4952              		.loc 1 1086 15 is_stmt 0 view .LVU1112
 4953 00b2 0028     		cmp	r0, #0
 4954 00b4 00F09E80 		beq	.L195
 4955              	.L200:
1083:lcd.c         ****            break;
 4956              		.loc 1 1083 42 view .LVU1113
 4957 00b8 0622     		movs	r2, #6
 4958              	.LVL558:
1087:lcd.c         ****            break;
1088:lcd.c         ****          case 10:
1089:lcd.c         ****          case 11:
1090:lcd.c         ****          case 12:
1091:lcd.c         ****          case 20:
1092:lcd.c         ****            if (last == 0) b1 = 3;else b1 = 7;
1093:lcd.c         ****            break;
1094:lcd.c         ****          case 15:
1095:lcd.c         ****          case 16:
1096:lcd.c         ****          case 17:
1097:lcd.c         ****            if (last == 0) b1 = 4;else b1 = 7;
1098:lcd.c         ****            break;
1099:lcd.c         ****       }
1100:lcd.c         ****       if ((mid == 0) && (last == 0)) b1 = 0;
 4959              		.loc 1 1100 7 is_stmt 1 view .LVU1114
 4960 00ba 03E0     		b	.L172
 4961              	.LVL559:
 4962              	.L176:
1092:lcd.c         ****            break;
 4963              		.loc 1 1092 12 view .LVU1115
1092:lcd.c         ****            break;
 4964              		.loc 1 1092 15 is_stmt 0 view .LVU1116
 4965 00bc 0028     		cmp	r0, #0
 4966 00be 00F09B80 		beq	.L196
 4967              	.L225:
1097:lcd.c         ****            break;
 4968              		.loc 1 1097 42 view .LVU1117
 4969 00c2 0722     		movs	r2, #7
 4970              	.LVL560:
 4971              	.L172:
1101:lcd.c         ****       for (i=0;i<16;i++) {
 4972              		.loc 1 1101 7 is_stmt 1 view .LVU1118
 4973              		.loc 1 1101 16 view .LVU1119
 4974 00c4 6B4B     		ldr	r3, .L226+8
1100:lcd.c         ****       for (i=0;i<16;i++) {
 4975              		.loc 1 1100 41 is_stmt 0 view .LVU1120
 4976 00c6 0021     		movs	r1, #0
 4977 00c8 9A46     		mov	r10, r3
1102:lcd.c         ****           if (first != 0) {
1103:lcd.c         ****              hlx1 = first + loc1[b1];
1104:lcd.c         ****              dumy_data[i*2] = kor_font[hlx1][i*2];
 4978              		.loc 1 1104 45 view .LVU1121
 4979 00ca DFF8C8E1 		ldr	lr, .L226+40
1105:lcd.c         ****              dumy_data[i*2+1] = kor_font[hlx1][i*2+1];
1106:lcd.c         ****           }
1107:lcd.c         ****           if (mid != 0) {
1108:lcd.c         ****              hlx2 = mid + loc2[b2];
 4980              		.loc 1 1108 31 view .LVU1122
 4981 00ce DFF8C891 		ldr	r9, .L226+44
 4982              	.LVL561:
 4983              	.L181:
1102:lcd.c         ****           if (first != 0) {
 4984              		.loc 1 1102 11 is_stmt 1 view .LVU1123
1102:lcd.c         ****           if (first != 0) {
 4985              		.loc 1 1102 14 is_stmt 0 view .LVU1124
 4986 00d2 6EB1     		cbz	r6, .L178
1103:lcd.c         ****              dumy_data[i*2] = kor_font[hlx1][i*2];
 4987              		.loc 1 1103 14 is_stmt 1 view .LVU1125
 4988              	.LVL562:
1104:lcd.c         ****              dumy_data[i*2+1] = kor_font[hlx1][i*2+1];
 4989              		.loc 1 1104 14 view .LVU1126
1103:lcd.c         ****              dumy_data[i*2] = kor_font[hlx1][i*2];
 4990              		.loc 1 1103 19 is_stmt 0 view .LVU1127
 4991 00d4 684C     		ldr	r4, .L226+12
 4992 00d6 34F81240 		ldrh	r4, [r4, r2, lsl #1]
 4993 00da 3444     		add	r4, r4, r6
1104:lcd.c         ****              dumy_data[i*2+1] = kor_font[hlx1][i*2+1];
 4994              		.loc 1 1104 45 view .LVU1128
 4995 00dc A4B2     		uxth	r4, r4
 4996 00de 0EEB4414 		add	r4, lr, r4, lsl #5
 4997 00e2 04EB0108 		add	r8, r4, r1
1104:lcd.c         ****              dumy_data[i*2+1] = kor_font[hlx1][i*2+1];
 4998              		.loc 1 1104 29 view .LVU1129
 4999 00e6 645C     		ldrb	r4, [r4, r1]	@ zero_extendqisi2
 5000 00e8 1C70     		strb	r4, [r3]
1105:lcd.c         ****              dumy_data[i*2+1] = kor_font[hlx1][i*2+1];
 5001              		.loc 1 1105 14 is_stmt 1 view .LVU1130
1105:lcd.c         ****              dumy_data[i*2+1] = kor_font[hlx1][i*2+1];
 5002              		.loc 1 1105 31 is_stmt 0 view .LVU1131
 5003 00ea 98F80140 		ldrb	r4, [r8, #1]	@ zero_extendqisi2
 5004 00ee 5C70     		strb	r4, [r3, #1]
 5005              	.LVL563:
 5006              	.L178:
1107:lcd.c         ****              hlx2 = mid + loc2[b2];
 5007              		.loc 1 1107 11 is_stmt 1 view .LVU1132
1107:lcd.c         ****              hlx2 = mid + loc2[b2];
 5008              		.loc 1 1107 14 is_stmt 0 view .LVU1133
 5009 00f0 AFB1     		cbz	r7, .L179
 5010              		.loc 1 1108 14 is_stmt 1 view .LVU1134
 5011              	.LVL564:
1109:lcd.c         ****              dumy_data[i*2] = dumy_data[i*2] | kor_font[hlx2][i*2];
 5012              		.loc 1 1109 14 view .LVU1135
1108:lcd.c         ****              dumy_data[i*2] = dumy_data[i*2] | kor_font[hlx2][i*2];
 5013              		.loc 1 1108 19 is_stmt 0 view .LVU1136
 5014 00f2 39F81C40 		ldrh	r4, [r9, ip, lsl #1]
 5015              		.loc 1 1109 29 view .LVU1137
 5016 00f6 93F80080 		ldrb	r8, [r3]	@ zero_extendqisi2
1108:lcd.c         ****              dumy_data[i*2] = dumy_data[i*2] | kor_font[hlx2][i*2];
 5017              		.loc 1 1108 19 view .LVU1138
 5018 00fa 3C44     		add	r4, r4, r7
 5019              		.loc 1 1109 62 view .LVU1139
 5020 00fc A4B2     		uxth	r4, r4
 5021 00fe 0EEB4414 		add	r4, lr, r4, lsl #5
 5022 0102 04EB010B 		add	fp, r4, r1
 5023              		.loc 1 1109 29 view .LVU1140
 5024 0106 645C     		ldrb	r4, [r4, r1]	@ zero_extendqisi2
 5025 0108 48EA0408 		orr	r8, r8, r4
 5026 010c 83F80080 		strb	r8, [r3]
1110:lcd.c         ****              dumy_data[i*2+1] = dumy_data[i*2+1] | kor_font[hlx2][i*2+1];
 5027              		.loc 1 1110 14 is_stmt 1 view .LVU1141
 5028              		.loc 1 1110 31 is_stmt 0 view .LVU1142
 5029 0110 9BF80140 		ldrb	r4, [fp, #1]	@ zero_extendqisi2
 5030 0114 93F80180 		ldrb	r8, [r3, #1]	@ zero_extendqisi2
 5031 0118 44EA0804 		orr	r4, r4, r8
 5032 011c 5C70     		strb	r4, [r3, #1]
 5033              	.LVL565:
 5034              	.L179:
1111:lcd.c         ****           }
1112:lcd.c         ****           if (last != 0) {
 5035              		.loc 1 1112 11 is_stmt 1 view .LVU1143
 5036              		.loc 1 1112 14 is_stmt 0 view .LVU1144
 5037 011e B0B1     		cbz	r0, .L180
1113:lcd.c         ****              hlx3 = last + loc3[b3];
 5038              		.loc 1 1113 14 is_stmt 1 view .LVU1145
 5039              	.LVL566:
1114:lcd.c         ****              dumy_data[i*2] = dumy_data[i*2] | kor_font[hlx3][i*2];
 5040              		.loc 1 1114 14 view .LVU1146
1113:lcd.c         ****              hlx3 = last + loc3[b3];
 5041              		.loc 1 1113 19 is_stmt 0 view .LVU1147
 5042 0120 564C     		ldr	r4, .L226+16
 5043              		.loc 1 1114 29 view .LVU1148
 5044 0122 93F80080 		ldrb	r8, [r3]	@ zero_extendqisi2
1113:lcd.c         ****              hlx3 = last + loc3[b3];
 5045              		.loc 1 1113 19 view .LVU1149
 5046 0126 34F81540 		ldrh	r4, [r4, r5, lsl #1]
 5047 012a 0444     		add	r4, r4, r0
 5048              		.loc 1 1114 62 view .LVU1150
 5049 012c A4B2     		uxth	r4, r4
 5050 012e 0EEB4414 		add	r4, lr, r4, lsl #5
 5051 0132 04EB010B 		add	fp, r4, r1
 5052              		.loc 1 1114 29 view .LVU1151
 5053 0136 645C     		ldrb	r4, [r4, r1]	@ zero_extendqisi2
 5054 0138 48EA0408 		orr	r8, r8, r4
 5055 013c 83F80080 		strb	r8, [r3]
1115:lcd.c         ****              dumy_data[i*2+1] = dumy_data[i*2+1] | kor_font[hlx3][i*2+1];
 5056              		.loc 1 1115 14 is_stmt 1 view .LVU1152
 5057              		.loc 1 1115 31 is_stmt 0 view .LVU1153
 5058 0140 9BF80140 		ldrb	r4, [fp, #1]	@ zero_extendqisi2
 5059 0144 93F80180 		ldrb	r8, [r3, #1]	@ zero_extendqisi2
 5060 0148 44EA0804 		orr	r4, r4, r8
 5061 014c 5C70     		strb	r4, [r3, #1]
 5062              	.LVL567:
 5063              	.L180:
1101:lcd.c         ****           if (first != 0) {
 5064              		.loc 1 1101 21 is_stmt 1 discriminator 2 view .LVU1154
1101:lcd.c         ****           if (first != 0) {
 5065              		.loc 1 1101 16 discriminator 2 view .LVU1155
 5066 014e 0231     		adds	r1, r1, #2
1101:lcd.c         ****           if (first != 0) {
 5067              		.loc 1 1101 7 is_stmt 0 discriminator 2 view .LVU1156
 5068 0150 2029     		cmp	r1, #32
 5069 0152 03F10203 		add	r3, r3, #2
 5070 0156 BCD1     		bne	.L181
1116:lcd.c         ****           }
1117:lcd.c         ****       }
1118:lcd.c         ****       ty = ay * 16;
 5071              		.loc 1 1118 7 is_stmt 1 view .LVU1157
1119:lcd.c         ****       for (i=0;i<16;i++) {
1120:lcd.c         ****           tx = ax * 8;
 5072              		.loc 1 1120 14 is_stmt 0 view .LVU1158
 5073 0158 DFF84091 		ldr	r9, .L226+48
1118:lcd.c         ****       for (i=0;i<16;i++) {
 5074              		.loc 1 1118 10 view .LVU1159
 5075 015c 4FF00008 		mov	r8, #0
 5076 0160 4F46     		mov	r7, r9
 5077              	.LVL568:
1118:lcd.c         ****       for (i=0;i<16;i++) {
 5078              		.loc 1 1118 10 view .LVU1160
 5079 0162 474D     		ldr	r5, .L226+20
 5080              	.LVL569:
1118:lcd.c         ****       for (i=0;i<16;i++) {
 5081              		.loc 1 1118 10 view .LVU1161
 5082 0164 474C     		ldr	r4, .L226+24
 5083 0166 2B88     		ldrh	r3, [r5]
 5084              		.loc 1 1120 14 view .LVU1162
 5085 0168 474E     		ldr	r6, .L226+28
 5086              	.LVL570:
1118:lcd.c         ****       for (i=0;i<16;i++) {
 5087              		.loc 1 1118 10 view .LVU1163
 5088 016a 1B01     		lsls	r3, r3, #4
 5089 016c 2380     		strh	r3, [r4]	@ movhi
1119:lcd.c         ****       for (i=0;i<16;i++) {
 5090              		.loc 1 1119 7 is_stmt 1 view .LVU1164
 5091              	.LVL571:
1119:lcd.c         ****       for (i=0;i<16;i++) {
 5092              		.loc 1 1119 16 view .LVU1165
 5093              	.L182:
 5094              		.loc 1 1120 11 discriminator 3 view .LVU1166
 5095              		.loc 1 1120 14 is_stmt 0 discriminator 3 view .LVU1167
 5096 016e 3388     		ldrh	r3, [r6]
1121:lcd.c         ****           out_lcd(dumy_data[i*2]);
 5097              		.loc 1 1121 11 discriminator 3 view .LVU1168
 5098 0170 1AF81800 		ldrb	r0, [r10, r8, lsl #1]	@ zero_extendqisi2
1120:lcd.c         ****           out_lcd(dumy_data[i*2]);
 5099              		.loc 1 1120 14 discriminator 3 view .LVU1169
 5100 0174 DB00     		lsls	r3, r3, #3
 5101 0176 A9F80030 		strh	r3, [r9]	@ movhi
 5102              		.loc 1 1121 11 is_stmt 1 discriminator 3 view .LVU1170
 5103 017a FFF7FEFF 		bl	out_lcd
 5104              	.LVL572:
1122:lcd.c         ****           ty++;
 5105              		.loc 1 1122 11 discriminator 3 view .LVU1171
 5106              		.loc 1 1122 13 is_stmt 0 discriminator 3 view .LVU1172
 5107 017e 2388     		ldrh	r3, [r4]
 5108 0180 08F10108 		add	r8, r8, #1
 5109              	.LVL573:
 5110              		.loc 1 1122 13 discriminator 3 view .LVU1173
 5111 0184 0133     		adds	r3, r3, #1
1119:lcd.c         ****           tx = ax * 8;
 5112              		.loc 1 1119 7 discriminator 3 view .LVU1174
 5113 0186 B8F1100F 		cmp	r8, #16
 5114              		.loc 1 1122 13 discriminator 3 view .LVU1175
 5115 018a 2380     		strh	r3, [r4]	@ movhi
1119:lcd.c         ****           tx = ax * 8;
 5116              		.loc 1 1119 21 is_stmt 1 discriminator 3 view .LVU1176
1119:lcd.c         ****           tx = ax * 8;
 5117              		.loc 1 1119 16 discriminator 3 view .LVU1177
1119:lcd.c         ****           tx = ax * 8;
 5118              		.loc 1 1119 7 is_stmt 0 discriminator 3 view .LVU1178
 5119 018c EFD1     		bne	.L182
1123:lcd.c         ****       }
1124:lcd.c         ****       ty = ay * 16;
 5120              		.loc 1 1124 7 is_stmt 1 view .LVU1179
 5121              		.loc 1 1124 10 is_stmt 0 view .LVU1180
 5122 018e 4FF00008 		mov	r8, #0
 5123 0192 2B88     		ldrh	r3, [r5]
1125:lcd.c         ****       for (i=0;i<16;i++) {
1126:lcd.c         ****           tx = (ax+1) * 8;
1127:lcd.c         ****           out_lcd(dumy_data[i*2+1]);
 5124              		.loc 1 1127 11 view .LVU1181
 5125 0194 DFF80891 		ldr	r9, .L226+52
1124:lcd.c         ****       for (i=0;i<16;i++) {
 5126              		.loc 1 1124 10 view .LVU1182
 5127 0198 1B01     		lsls	r3, r3, #4
 5128 019a 2380     		strh	r3, [r4]	@ movhi
1125:lcd.c         ****       for (i=0;i<16;i++) {
 5129              		.loc 1 1125 7 is_stmt 1 view .LVU1183
 5130              	.LVL574:
1125:lcd.c         ****       for (i=0;i<16;i++) {
 5131              		.loc 1 1125 16 view .LVU1184
 5132              	.L183:
1126:lcd.c         ****           out_lcd(dumy_data[i*2+1]);
 5133              		.loc 1 1126 11 discriminator 3 view .LVU1185
1126:lcd.c         ****           out_lcd(dumy_data[i*2+1]);
 5134              		.loc 1 1126 14 is_stmt 0 discriminator 3 view .LVU1186
 5135 019c 3388     		ldrh	r3, [r6]
 5136              		.loc 1 1127 11 discriminator 3 view .LVU1187
 5137 019e 19F81800 		ldrb	r0, [r9, r8, lsl #1]	@ zero_extendqisi2
1126:lcd.c         ****           out_lcd(dumy_data[i*2+1]);
 5138              		.loc 1 1126 14 discriminator 3 view .LVU1188
 5139 01a2 0133     		adds	r3, r3, #1
 5140 01a4 DB00     		lsls	r3, r3, #3
 5141 01a6 3B80     		strh	r3, [r7]	@ movhi
 5142              		.loc 1 1127 11 is_stmt 1 discriminator 3 view .LVU1189
 5143 01a8 FFF7FEFF 		bl	out_lcd
 5144              	.LVL575:
1128:lcd.c         ****           ty++;
 5145              		.loc 1 1128 11 discriminator 3 view .LVU1190
 5146              		.loc 1 1128 13 is_stmt 0 discriminator 3 view .LVU1191
 5147 01ac 2388     		ldrh	r3, [r4]
 5148 01ae 08F10108 		add	r8, r8, #1
 5149              	.LVL576:
 5150              		.loc 1 1128 13 discriminator 3 view .LVU1192
 5151 01b2 0133     		adds	r3, r3, #1
1125:lcd.c         ****           tx = (ax+1) * 8;
 5152              		.loc 1 1125 7 discriminator 3 view .LVU1193
 5153 01b4 B8F1100F 		cmp	r8, #16
 5154              		.loc 1 1128 13 discriminator 3 view .LVU1194
 5155 01b8 2380     		strh	r3, [r4]	@ movhi
1125:lcd.c         ****           tx = (ax+1) * 8;
 5156              		.loc 1 1125 21 is_stmt 1 discriminator 3 view .LVU1195
1125:lcd.c         ****           tx = (ax+1) * 8;
 5157              		.loc 1 1125 16 discriminator 3 view .LVU1196
1125:lcd.c         ****           tx = (ax+1) * 8;
 5158              		.loc 1 1125 7 is_stmt 0 discriminator 3 view .LVU1197
 5159 01ba EFD1     		bne	.L183
1129:lcd.c         ****       }
1130:lcd.c         ****       ax += 2;
 5160              		.loc 1 1130 7 is_stmt 1 view .LVU1198
 5161              		.loc 1 1130 10 is_stmt 0 view .LVU1199
 5162 01bc 3388     		ldrh	r3, [r6]
1131:lcd.c         ****       if (ax >= max_col) {
 5163              		.loc 1 1131 14 view .LVU1200
 5164 01be 334A     		ldr	r2, .L226+32
1130:lcd.c         ****       if (ax >= max_col) {
 5165              		.loc 1 1130 10 view .LVU1201
 5166 01c0 0233     		adds	r3, r3, #2
 5167              		.loc 1 1131 10 view .LVU1202
 5168 01c2 1288     		ldrh	r2, [r2]
1130:lcd.c         ****       if (ax >= max_col) {
 5169              		.loc 1 1130 10 view .LVU1203
 5170 01c4 9BB2     		uxth	r3, r3
 5171              		.loc 1 1131 10 view .LVU1204
 5172 01c6 9A42     		cmp	r2, r3
1130:lcd.c         ****       if (ax >= max_col) {
 5173              		.loc 1 1130 10 view .LVU1205
 5174 01c8 3380     		strh	r3, [r6]	@ movhi
 5175              		.loc 1 1131 7 is_stmt 1 view .LVU1206
 5176              		.loc 1 1131 10 is_stmt 0 view .LVU1207
 5177 01ca 0AD8     		bhi	.L159
1132:lcd.c         ****          ax = 0;
 5178              		.loc 1 1132 10 is_stmt 1 view .LVU1208
 5179              		.loc 1 1132 13 is_stmt 0 view .LVU1209
 5180 01cc 0023     		movs	r3, #0
1133:lcd.c         ****          ay++;
 5181              		.loc 1 1133 12 view .LVU1210
 5182 01ce 2A88     		ldrh	r2, [r5]
1134:lcd.c         ****          if (ay >= max_row) {
 5183              		.loc 1 1134 17 view .LVU1211
 5184 01d0 2F49     		ldr	r1, .L226+36
1132:lcd.c         ****          ax = 0;
 5185              		.loc 1 1132 13 view .LVU1212
 5186 01d2 3380     		strh	r3, [r6]	@ movhi
1133:lcd.c         ****          ay++;
 5187              		.loc 1 1133 10 is_stmt 1 view .LVU1213
 5188              		.loc 1 1134 13 is_stmt 0 view .LVU1214
 5189 01d4 0988     		ldrh	r1, [r1]
1133:lcd.c         ****          ay++;
 5190              		.loc 1 1133 12 view .LVU1215
 5191 01d6 531C     		adds	r3, r2, #1
 5192 01d8 9BB2     		uxth	r3, r3
 5193              		.loc 1 1134 10 is_stmt 1 view .LVU1216
1135:lcd.c         ****             ay -= 1;
 5194              		.loc 1 1135 16 is_stmt 0 view .LVU1217
 5195 01da 9942     		cmp	r1, r3
 5196 01dc 98BF     		it	ls
 5197 01de 1346     		movls	r3, r2
 5198 01e0 2B80     		strh	r3, [r5]	@ movhi
 5199              	.L159:
1136:lcd.c         ****          }
1137:lcd.c         ****       }
1138:lcd.c         **** }
 5200              		.loc 1 1138 1 view .LVU1218
 5201 01e2 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5202              	.LVL577:
 5203              	.L177:
1097:lcd.c         ****            break;
 5204              		.loc 1 1097 12 is_stmt 1 view .LVU1219
1097:lcd.c         ****            break;
 5205              		.loc 1 1097 15 is_stmt 0 view .LVU1220
 5206 01e6 0028     		cmp	r0, #0
 5207 01e8 7FF46BAF 		bne	.L225
 5208              	.L197:
1097:lcd.c         ****            break;
 5209              		.loc 1 1097 30 view .LVU1221
 5210 01ec 0422     		movs	r2, #4
 5211 01ee 69E7     		b	.L172
 5212              	.L187:
1100:lcd.c         ****       for (i=0;i<16;i++) {
 5213              		.loc 1 1100 7 is_stmt 1 view .LVU1222
1100:lcd.c         ****       for (i=0;i<16;i++) {
 5214              		.loc 1 1100 41 is_stmt 0 view .LVU1223
 5215 01f0 0022     		movs	r2, #0
 5216 01f2 67E7     		b	.L172
 5217              	.L195:
1086:lcd.c         ****            break;
 5218              		.loc 1 1086 30 view .LVU1224
 5219 01f4 0222     		movs	r2, #2
 5220 01f6 65E7     		b	.L172
 5221              	.L196:
1092:lcd.c         ****            break;
 5222              		.loc 1 1092 30 view .LVU1225
 5223 01f8 0322     		movs	r2, #3
 5224 01fa 63E7     		b	.L172
 5225              	.L199:
1083:lcd.c         ****            break;
 5226              		.loc 1 1083 30 view .LVU1226
 5227 01fc 0122     		movs	r2, #1
 5228              	.LVL578:
1100:lcd.c         ****       for (i=0;i<16;i++) {
 5229              		.loc 1 1100 7 is_stmt 1 view .LVU1227
 5230 01fe 61E7     		b	.L172
 5231              	.LVL579:
 5232              	.L193:
1063:lcd.c         ****            break;
 5233              		.loc 1 1063 30 is_stmt 0 view .LVU1228
 5234 0200 8446     		mov	ip, r0
 5235              	.L169:
 5236              	.LVL580:
1068:lcd.c         ****          case 1:
 5237              		.loc 1 1068 7 is_stmt 1 view .LVU1229
 5238 0202 142B     		cmp	r3, #20
 5239 0204 F4D8     		bhi	.L187
 5240 0206 01A2     		adr	r2, .L189
 5241 0208 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5242              		.p2align 2
 5243              	.L189:
 5244 020c F1010000 		.word	.L187+1
 5245 0210 F1010000 		.word	.L187+1
 5246 0214 F1010000 		.word	.L187+1
 5247 0218 F1010000 		.word	.L187+1
 5248 021c F1010000 		.word	.L187+1
 5249 0220 F1010000 		.word	.L187+1
 5250 0224 F1010000 		.word	.L187+1
 5251 0228 F1010000 		.word	.L187+1
 5252 022c FD010000 		.word	.L199+1
 5253 0230 F9010000 		.word	.L196+1
 5254 0234 F9010000 		.word	.L196+1
 5255 0238 F9010000 		.word	.L196+1
 5256 023c FD010000 		.word	.L199+1
 5257 0240 F5010000 		.word	.L195+1
 5258 0244 ED010000 		.word	.L197+1
 5259 0248 ED010000 		.word	.L197+1
 5260 024c ED010000 		.word	.L197+1
 5261 0250 F5010000 		.word	.L195+1
 5262 0254 FD010000 		.word	.L199+1
 5263 0258 F9010000 		.word	.L196+1
 5264 025c F1010000 		.word	.L187+1
 5265              	.LVL581:
 5266              		.p2align 1
 5267              	.L194:
1066:lcd.c         ****       }
 5268              		.loc 1 1066 30 is_stmt 0 view .LVU1230
 5269 0260 4FF0010C 		mov	ip, #1
 5270 0264 CDE7     		b	.L169
 5271              	.LVL582:
 5272              	.L190:
1086:lcd.c         ****            break;
 5273              		.loc 1 1086 42 view .LVU1231
 5274 0266 0522     		movs	r2, #5
 5275 0268 2CE7     		b	.L172
 5276              	.L227:
 5277 026a 00BF     		.align	2
 5278              	.L226:
 5279 026c 00000000 		.word	hangul_mode
 5280 0270 00000000 		.word	.LANCHOR5
 5281 0274 00000000 		.word	dumy_data
 5282 0278 00000000 		.word	.LANCHOR6
 5283 027c 00000000 		.word	.LANCHOR8
 5284 0280 00000000 		.word	ay
 5285 0284 00000000 		.word	ty
 5286 0288 00000000 		.word	ax
 5287 028c 00000000 		.word	max_col
 5288 0290 00000000 		.word	max_row
 5289 0294 00000000 		.word	kor_font
 5290 0298 00000000 		.word	.LANCHOR7
 5291 029c 00000000 		.word	tx
 5292 02a0 01000000 		.word	dumy_data+1
 5293              		.cfi_endproc
 5294              	.LFE74:
 5296              		.section	.text.put_engxy,"ax",%progbits
 5297              		.align	1
 5298              		.global	put_engxy
 5299              		.syntax unified
 5300              		.thumb
 5301              		.thumb_func
 5302              		.fpu softvfp
 5304              	put_engxy:
 5305              	.LVL583:
 5306              	.LFB75:
1139:lcd.c         **** 
1140:lcd.c         **** 
1141:lcd.c         **** void put_engxy (unsigned short x,unsigned short y,char pdata)
1142:lcd.c         **** {
 5307              		.loc 1 1142 1 is_stmt 1 view -0
 5308              		.cfi_startproc
 5309              		@ args = 0, pretend = 0, frame = 0
 5310              		@ frame_needed = 0, uses_anonymous_args = 0
 5311              		@ link register save eliminated.
1143:lcd.c         ****       ax = x;
 5312              		.loc 1 1143 7 view .LVU1233
 5313              		.loc 1 1143 10 is_stmt 0 view .LVU1234
 5314 0000 034B     		ldr	r3, .L229
 5315 0002 1880     		strh	r0, [r3]	@ movhi
1144:lcd.c         ****       ay = y;
 5316              		.loc 1 1144 7 is_stmt 1 view .LVU1235
 5317              		.loc 1 1144 10 is_stmt 0 view .LVU1236
 5318 0004 034B     		ldr	r3, .L229+4
1145:lcd.c         ****       put_eng(pdata);
 5319              		.loc 1 1145 7 view .LVU1237
 5320 0006 1046     		mov	r0, r2
 5321              	.LVL584:
1144:lcd.c         ****       ay = y;
 5322              		.loc 1 1144 10 view .LVU1238
 5323 0008 1980     		strh	r1, [r3]	@ movhi
 5324              		.loc 1 1145 7 is_stmt 1 view .LVU1239
 5325 000a FFF7FEBF 		b	put_eng
 5326              	.LVL585:
 5327              	.L230:
 5328              		.loc 1 1145 7 is_stmt 0 view .LVU1240
 5329 000e 00BF     		.align	2
 5330              	.L229:
 5331 0010 00000000 		.word	ax
 5332 0014 00000000 		.word	ay
 5333              		.cfi_endproc
 5334              	.LFE75:
 5336              		.section	.text.put_hanxy,"ax",%progbits
 5337              		.align	1
 5338              		.global	put_hanxy
 5339              		.syntax unified
 5340              		.thumb
 5341              		.thumb_func
 5342              		.fpu softvfp
 5344              	put_hanxy:
 5345              	.LVL586:
 5346              	.LFB76:
1146:lcd.c         **** }
1147:lcd.c         **** 
1148:lcd.c         **** 
1149:lcd.c         **** void put_hanxy (unsigned short x,unsigned short y,unsigned short pdata)
1150:lcd.c         **** {
 5347              		.loc 1 1150 1 is_stmt 1 view -0
 5348              		.cfi_startproc
 5349              		@ args = 0, pretend = 0, frame = 0
 5350              		@ frame_needed = 0, uses_anonymous_args = 0
1151:lcd.c         ****       ax = x;
 5351              		.loc 1 1151 7 view .LVU1242
1150:lcd.c         ****       ax = x;
 5352              		.loc 1 1150 1 is_stmt 0 view .LVU1243
 5353 0000 10B5     		push	{r4, lr}
 5354              		.cfi_def_cfa_offset 8
 5355              		.cfi_offset 4, -8
 5356              		.cfi_offset 14, -4
1150:lcd.c         ****       ax = x;
 5357              		.loc 1 1150 1 view .LVU1244
 5358 0002 0446     		mov	r4, r0
 5359              		.loc 1 1151 10 view .LVU1245
 5360 0004 0A4B     		ldr	r3, .L234
1152:lcd.c         ****       ay = y;
1153:lcd.c         ****       if (pdata >= 0xAC00) {
 5361              		.loc 1 1153 10 view .LVU1246
 5362 0006 B2F52C4F 		cmp	r2, #44032
1151:lcd.c         ****       ay = y;
 5363              		.loc 1 1151 10 view .LVU1247
 5364 000a 1C80     		strh	r4, [r3]	@ movhi
1152:lcd.c         ****       ay = y;
 5365              		.loc 1 1152 7 is_stmt 1 view .LVU1248
1152:lcd.c         ****       ay = y;
 5366              		.loc 1 1152 10 is_stmt 0 view .LVU1249
 5367 000c 094B     		ldr	r3, .L234+4
1150:lcd.c         ****       ax = x;
 5368              		.loc 1 1150 1 view .LVU1250
 5369 000e 1046     		mov	r0, r2
 5370              	.LVL587:
1152:lcd.c         ****       ay = y;
 5371              		.loc 1 1152 10 view .LVU1251
 5372 0010 1980     		strh	r1, [r3]	@ movhi
 5373              		.loc 1 1153 7 is_stmt 1 view .LVU1252
 5374              		.loc 1 1153 10 is_stmt 0 view .LVU1253
 5375 0012 05D3     		bcc	.L232
1154:lcd.c         ****          if (pdata >= 0xB0A1) {
 5376              		.loc 1 1154 10 is_stmt 1 view .LVU1254
 5377              		.loc 1 1154 13 is_stmt 0 view .LVU1255
 5378 0014 4BF2A003 		movw	r3, #45216
 5379 0018 9A42     		cmp	r2, r3
 5380 001a 05D9     		bls	.L233
1155:lcd.c         ****             put_han(ks5601_to_kssm(pdata));
 5381              		.loc 1 1155 13 is_stmt 1 view .LVU1256
 5382 001c FFF7FEFF 		bl	ks5601_to_kssm
 5383              	.LVL588:
 5384              	.L232:
1156:lcd.c         ****          } else {
1157:lcd.c         ****             put_han(uni_to_kssm(pdata));
1158:lcd.c         ****          }
1159:lcd.c         ****       } else {
1160:lcd.c         ****          put_han(pdata);
 5385              		.loc 1 1160 10 view .LVU1257
1161:lcd.c         ****       }
1162:lcd.c         **** }
 5386              		.loc 1 1162 1 is_stmt 0 view .LVU1258
 5387 0020 BDE81040 		pop	{r4, lr}
 5388              		.cfi_remember_state
 5389              		.cfi_restore 14
 5390              		.cfi_restore 4
 5391              		.cfi_def_cfa_offset 0
1160:lcd.c         ****       }
 5392              		.loc 1 1160 10 view .LVU1259
 5393 0024 FFF7FEBF 		b	put_han
 5394              	.LVL589:
 5395              	.L233:
 5396              		.cfi_restore_state
1157:lcd.c         ****          }
 5397              		.loc 1 1157 13 is_stmt 1 view .LVU1260
 5398 0028 FFF7FEFF 		bl	uni_to_kssm
 5399              	.LVL590:
1157:lcd.c         ****          }
 5400              		.loc 1 1157 13 is_stmt 0 view .LVU1261
 5401 002c F8E7     		b	.L232
 5402              	.L235:
 5403 002e 00BF     		.align	2
 5404              	.L234:
 5405 0030 00000000 		.word	ax
 5406 0034 00000000 		.word	ay
 5407              		.cfi_endproc
 5408              	.LFE76:
 5410              		.section	.text.lput_char,"ax",%progbits
 5411              		.align	1
 5412              		.global	lput_char
 5413              		.syntax unified
 5414              		.thumb
 5415              		.thumb_func
 5416              		.fpu softvfp
 5418              	lput_char:
 5419              	.LVL591:
 5420              	.LFB77:
1163:lcd.c         **** 
1164:lcd.c         **** 
1165:lcd.c         **** void lput_char (char *str)
1166:lcd.c         **** {
 5421              		.loc 1 1166 1 is_stmt 1 view -0
 5422              		.cfi_startproc
 5423              		@ args = 0, pretend = 0, frame = 0
 5424              		@ frame_needed = 0, uses_anonymous_args = 0
1167:lcd.c         ****       unsigned char len,n;
 5425              		.loc 1 1167 7 view .LVU1263
1168:lcd.c         ****       unsigned short hangul_char;
 5426              		.loc 1 1168 7 view .LVU1264
1169:lcd.c         ****       len = strlen(str);
 5427              		.loc 1 1169 7 view .LVU1265
1166:lcd.c         ****       unsigned char len,n;
 5428              		.loc 1 1166 1 is_stmt 0 view .LVU1266
 5429 0000 70B5     		push	{r4, r5, r6, lr}
 5430              		.cfi_def_cfa_offset 16
 5431              		.cfi_offset 4, -16
 5432              		.cfi_offset 5, -12
 5433              		.cfi_offset 6, -8
 5434              		.cfi_offset 14, -4
1166:lcd.c         ****       unsigned char len,n;
 5435              		.loc 1 1166 1 view .LVU1267
 5436 0002 0546     		mov	r5, r0
 5437              		.loc 1 1169 13 view .LVU1268
 5438 0004 FFF7FEFF 		bl	strlen
 5439              	.LVL592:
1170:lcd.c         ****       for (n=0;n<len;n++) {
 5440              		.loc 1 1170 13 view .LVU1269
 5441 0008 0024     		movs	r4, #0
1169:lcd.c         ****       len = strlen(str);
 5442              		.loc 1 1169 11 view .LVU1270
 5443 000a C6B2     		uxtb	r6, r0
 5444              	.LVL593:
 5445              		.loc 1 1170 7 is_stmt 1 view .LVU1271
 5446              	.L237:
 5447              		.loc 1 1170 16 discriminator 1 view .LVU1272
 5448              		.loc 1 1170 7 is_stmt 0 discriminator 1 view .LVU1273
 5449 000c B442     		cmp	r4, r6
 5450 000e 00D3     		bcc	.L240
1171:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
1172:lcd.c         ****              put_eng(str[n]);
1173:lcd.c         ****           } else {
1174:lcd.c         ****              hangul_char = str[n];
1175:lcd.c         ****              hangul_char = hangul_char << 8;
1176:lcd.c         ****              hangul_char = hangul_char | str[n + 1];
1177:lcd.c         ****              put_han(hangul_char);
1178:lcd.c         ****              n++;
1179:lcd.c         ****           }
1180:lcd.c         ****       }
1181:lcd.c         **** }
 5451              		.loc 1 1181 1 view .LVU1274
 5452 0010 70BD     		pop	{r4, r5, r6, pc}
 5453              	.LVL594:
 5454              	.L240:
1171:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 5455              		.loc 1 1171 10 is_stmt 1 view .LVU1275
1171:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 5456              		.loc 1 1171 13 is_stmt 0 view .LVU1276
 5457 0012 2A57     		ldrsb	r2, [r5, r4]
1171:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 5458              		.loc 1 1171 18 view .LVU1277
 5459 0014 2346     		mov	r3, r4
1171:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 5460              		.loc 1 1171 13 view .LVU1278
 5461 0016 002A     		cmp	r2, #0
1171:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 5462              		.loc 1 1171 18 view .LVU1279
 5463 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
1171:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 5464              		.loc 1 1171 13 view .LVU1280
 5465 001a 04DB     		blt	.L238
1172:lcd.c         ****           } else {
 5466              		.loc 1 1172 14 is_stmt 1 view .LVU1281
 5467 001c FFF7FEFF 		bl	put_eng
 5468              	.LVL595:
 5469              	.L239:
1170:lcd.c         ****       for (n=0;n<len;n++) {
 5470              		.loc 1 1170 22 discriminator 2 view .LVU1282
1170:lcd.c         ****       for (n=0;n<len;n++) {
 5471              		.loc 1 1170 23 is_stmt 0 discriminator 2 view .LVU1283
 5472 0020 0134     		adds	r4, r4, #1
 5473              	.LVL596:
1170:lcd.c         ****       for (n=0;n<len;n++) {
 5474              		.loc 1 1170 23 discriminator 2 view .LVU1284
 5475 0022 E4B2     		uxtb	r4, r4
 5476              	.LVL597:
1170:lcd.c         ****       for (n=0;n<len;n++) {
 5477              		.loc 1 1170 23 discriminator 2 view .LVU1285
 5478 0024 F2E7     		b	.L237
 5479              	.L238:
1176:lcd.c         ****              put_han(hangul_char);
 5480              		.loc 1 1176 45 view .LVU1286
 5481 0026 2B44     		add	r3, r3, r5
 5482 0028 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5483 002a 0134     		adds	r4, r4, #1
 5484              	.LVL598:
1177:lcd.c         ****              n++;
 5485              		.loc 1 1177 14 view .LVU1287
 5486 002c 43EA0020 		orr	r0, r3, r0, lsl #8
 5487 0030 E4B2     		uxtb	r4, r4
1174:lcd.c         ****              hangul_char = hangul_char << 8;
 5488              		.loc 1 1174 14 is_stmt 1 view .LVU1288
1175:lcd.c         ****              hangul_char = hangul_char | str[n + 1];
 5489              		.loc 1 1175 14 view .LVU1289
1176:lcd.c         ****              put_han(hangul_char);
 5490              		.loc 1 1176 14 view .LVU1290
1177:lcd.c         ****              n++;
 5491              		.loc 1 1177 14 view .LVU1291
 5492 0032 FFF7FEFF 		bl	put_han
 5493              	.LVL599:
1178:lcd.c         ****           }
 5494              		.loc 1 1178 14 view .LVU1292
1178:lcd.c         ****           }
 5495              		.loc 1 1178 14 is_stmt 0 view .LVU1293
 5496 0036 F3E7     		b	.L239
 5497              		.cfi_endproc
 5498              	.LFE77:
 5500              		.section	.text.lput_char_xy,"ax",%progbits
 5501              		.align	1
 5502              		.global	lput_char_xy
 5503              		.syntax unified
 5504              		.thumb
 5505              		.thumb_func
 5506              		.fpu softvfp
 5508              	lput_char_xy:
 5509              	.LVL600:
 5510              	.LFB78:
1182:lcd.c         **** 
1183:lcd.c         **** 
1184:lcd.c         **** void lput_char_xy (unsigned short x,unsigned short y,char *str)
1185:lcd.c         **** {
 5511              		.loc 1 1185 1 is_stmt 1 view -0
 5512              		.cfi_startproc
 5513              		@ args = 0, pretend = 0, frame = 0
 5514              		@ frame_needed = 0, uses_anonymous_args = 0
1186:lcd.c         ****       unsigned char len,n;
 5515              		.loc 1 1186 7 view .LVU1295
1187:lcd.c         ****       unsigned short hangul_char;
 5516              		.loc 1 1187 7 view .LVU1296
1188:lcd.c         ****       ax = x;
 5517              		.loc 1 1188 7 view .LVU1297
 5518              		.loc 1 1188 10 is_stmt 0 view .LVU1298
 5519 0000 104B     		ldr	r3, .L246
1185:lcd.c         ****       unsigned char len,n;
 5520              		.loc 1 1185 1 view .LVU1299
 5521 0002 70B5     		push	{r4, r5, r6, lr}
 5522              		.cfi_def_cfa_offset 16
 5523              		.cfi_offset 4, -16
 5524              		.cfi_offset 5, -12
 5525              		.cfi_offset 6, -8
 5526              		.cfi_offset 14, -4
 5527              		.loc 1 1188 10 view .LVU1300
 5528 0004 1880     		strh	r0, [r3]	@ movhi
1189:lcd.c         ****       ay = y;
 5529              		.loc 1 1189 7 is_stmt 1 view .LVU1301
 5530              		.loc 1 1189 10 is_stmt 0 view .LVU1302
 5531 0006 104B     		ldr	r3, .L246+4
1190:lcd.c         ****       len = strlen(str);
 5532              		.loc 1 1190 13 view .LVU1303
 5533 0008 1046     		mov	r0, r2
 5534              	.LVL601:
1185:lcd.c         ****       unsigned char len,n;
 5535              		.loc 1 1185 1 view .LVU1304
 5536 000a 1546     		mov	r5, r2
1189:lcd.c         ****       ay = y;
 5537              		.loc 1 1189 10 view .LVU1305
 5538 000c 1980     		strh	r1, [r3]	@ movhi
 5539              		.loc 1 1190 7 is_stmt 1 view .LVU1306
 5540              		.loc 1 1190 13 is_stmt 0 view .LVU1307
 5541 000e FFF7FEFF 		bl	strlen
 5542              	.LVL602:
1191:lcd.c         ****       for (n=0;n<len;n++) {
 5543              		.loc 1 1191 13 view .LVU1308
 5544 0012 0024     		movs	r4, #0
1190:lcd.c         ****       len = strlen(str);
 5545              		.loc 1 1190 11 view .LVU1309
 5546 0014 C6B2     		uxtb	r6, r0
 5547              	.LVL603:
 5548              		.loc 1 1191 7 is_stmt 1 view .LVU1310
 5549              	.L242:
 5550              		.loc 1 1191 16 discriminator 1 view .LVU1311
 5551              		.loc 1 1191 7 is_stmt 0 discriminator 1 view .LVU1312
 5552 0016 B442     		cmp	r4, r6
 5553 0018 00D3     		bcc	.L245
1192:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
1193:lcd.c         ****              put_eng(str[n]);
1194:lcd.c         ****           } else {
1195:lcd.c         ****              hangul_char = str[n];
1196:lcd.c         ****              hangul_char = hangul_char << 8;
1197:lcd.c         ****              hangul_char = hangul_char | str[n + 1];
1198:lcd.c         ****              put_han(hangul_char);
1199:lcd.c         ****              n++;
1200:lcd.c         ****           }
1201:lcd.c         ****       }
1202:lcd.c         **** }
 5554              		.loc 1 1202 1 view .LVU1313
 5555 001a 70BD     		pop	{r4, r5, r6, pc}
 5556              	.LVL604:
 5557              	.L245:
1192:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 5558              		.loc 1 1192 10 is_stmt 1 view .LVU1314
1192:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 5559              		.loc 1 1192 13 is_stmt 0 view .LVU1315
 5560 001c 2A57     		ldrsb	r2, [r5, r4]
1192:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 5561              		.loc 1 1192 18 view .LVU1316
 5562 001e 2346     		mov	r3, r4
1192:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 5563              		.loc 1 1192 13 view .LVU1317
 5564 0020 002A     		cmp	r2, #0
1192:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 5565              		.loc 1 1192 18 view .LVU1318
 5566 0022 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
1192:lcd.c         ****       	  if ((str[n] & 0x80) == 0) {
 5567              		.loc 1 1192 13 view .LVU1319
 5568 0024 04DB     		blt	.L243
1193:lcd.c         ****           } else {
 5569              		.loc 1 1193 14 is_stmt 1 view .LVU1320
 5570 0026 FFF7FEFF 		bl	put_eng
 5571              	.LVL605:
 5572              	.L244:
1191:lcd.c         ****       for (n=0;n<len;n++) {
 5573              		.loc 1 1191 22 discriminator 2 view .LVU1321
1191:lcd.c         ****       for (n=0;n<len;n++) {
 5574              		.loc 1 1191 23 is_stmt 0 discriminator 2 view .LVU1322
 5575 002a 0134     		adds	r4, r4, #1
 5576              	.LVL606:
1191:lcd.c         ****       for (n=0;n<len;n++) {
 5577              		.loc 1 1191 23 discriminator 2 view .LVU1323
 5578 002c E4B2     		uxtb	r4, r4
 5579              	.LVL607:
1191:lcd.c         ****       for (n=0;n<len;n++) {
 5580              		.loc 1 1191 23 discriminator 2 view .LVU1324
 5581 002e F2E7     		b	.L242
 5582              	.L243:
1197:lcd.c         ****              put_han(hangul_char);
 5583              		.loc 1 1197 45 view .LVU1325
 5584 0030 2B44     		add	r3, r3, r5
 5585 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5586 0034 0134     		adds	r4, r4, #1
 5587              	.LVL608:
1198:lcd.c         ****              n++;
 5588              		.loc 1 1198 14 view .LVU1326
 5589 0036 43EA0020 		orr	r0, r3, r0, lsl #8
 5590 003a E4B2     		uxtb	r4, r4
1195:lcd.c         ****              hangul_char = hangul_char << 8;
 5591              		.loc 1 1195 14 is_stmt 1 view .LVU1327
1196:lcd.c         ****              hangul_char = hangul_char | str[n + 1];
 5592              		.loc 1 1196 14 view .LVU1328
1197:lcd.c         ****              put_han(hangul_char);
 5593              		.loc 1 1197 14 view .LVU1329
1198:lcd.c         ****              n++;
 5594              		.loc 1 1198 14 view .LVU1330
 5595 003c FFF7FEFF 		bl	put_han
 5596              	.LVL609:
1199:lcd.c         ****           }
 5597              		.loc 1 1199 14 view .LVU1331
1199:lcd.c         ****           }
 5598              		.loc 1 1199 14 is_stmt 0 view .LVU1332
 5599 0040 F3E7     		b	.L244
 5600              	.L247:
 5601 0042 00BF     		.align	2
 5602              	.L246:
 5603 0044 00000000 		.word	ax
 5604 0048 00000000 		.word	ay
 5605              		.cfi_endproc
 5606              	.LFE78:
 5608              		.section	.text.lcd_printf,"ax",%progbits
 5609              		.align	1
 5610              		.global	lcd_printf
 5611              		.syntax unified
 5612              		.thumb
 5613              		.thumb_func
 5614              		.fpu softvfp
 5616              	lcd_printf:
 5617              	.LVL610:
 5618              	.LFB79:
1203:lcd.c         **** 
1204:lcd.c         **** 
1205:lcd.c         **** void lcd_printf (unsigned short x,unsigned short y,char *form,...)
1206:lcd.c         **** {
 5619              		.loc 1 1206 1 is_stmt 1 view -0
 5620              		.cfi_startproc
 5621              		@ args = 4, pretend = 8, frame = 8
 5622              		@ frame_needed = 0, uses_anonymous_args = 1
1207:lcd.c         ****       va_list argptr;
 5623              		.loc 1 1207 7 view .LVU1334
1208:lcd.c         ****       ax = x;
 5624              		.loc 1 1208 7 view .LVU1335
1206:lcd.c         ****       va_list argptr;
 5625              		.loc 1 1206 1 is_stmt 0 view .LVU1336
 5626 0000 0CB4     		push	{r2, r3}
 5627              		.cfi_def_cfa_offset 8
 5628              		.cfi_offset 2, -8
 5629              		.cfi_offset 3, -4
 5630 0002 13B5     		push	{r0, r1, r4, lr}
 5631              		.cfi_def_cfa_offset 24
 5632              		.cfi_offset 4, -16
 5633              		.cfi_offset 14, -12
 5634              		.loc 1 1208 10 view .LVU1337
 5635 0004 0A4C     		ldr	r4, .L249
1206:lcd.c         ****       va_list argptr;
 5636              		.loc 1 1206 1 view .LVU1338
 5637 0006 04AA     		add	r2, sp, #16
 5638 0008 52F8043B 		ldr	r3, [r2], #4
 5639              		.loc 1 1208 10 view .LVU1339
 5640 000c 2080     		strh	r0, [r4]	@ movhi
1209:lcd.c         ****       ay = y;
 5641              		.loc 1 1209 7 is_stmt 1 view .LVU1340
1210:lcd.c         ****       va_start(argptr,form);
1211:lcd.c         ****       vsprintf(buff,form,argptr);
 5642              		.loc 1 1211 7 is_stmt 0 view .LVU1341
 5643 000e 094C     		ldr	r4, .L249+4
1209:lcd.c         ****       ay = y;
 5644              		.loc 1 1209 10 view .LVU1342
 5645 0010 0948     		ldr	r0, .L249+8
 5646              	.LVL611:
1210:lcd.c         ****       va_start(argptr,form);
 5647              		.loc 1 1210 7 view .LVU1343
 5648 0012 0192     		str	r2, [sp, #4]
1209:lcd.c         ****       ay = y;
 5649              		.loc 1 1209 10 view .LVU1344
 5650 0014 0180     		strh	r1, [r0]	@ movhi
1210:lcd.c         ****       va_start(argptr,form);
 5651              		.loc 1 1210 7 is_stmt 1 view .LVU1345
 5652              		.loc 1 1211 7 view .LVU1346
 5653 0016 1946     		mov	r1, r3
 5654              	.LVL612:
 5655              		.loc 1 1211 7 is_stmt 0 view .LVU1347
 5656 0018 2046     		mov	r0, r4
 5657              		.loc 1 1211 7 view .LVU1348
 5658 001a FFF7FEFF 		bl	vsprintf
 5659              	.LVL613:
1212:lcd.c         ****       lput_char(buff);
 5660              		.loc 1 1212 7 is_stmt 1 view .LVU1349
 5661 001e 2046     		mov	r0, r4
 5662 0020 FFF7FEFF 		bl	lput_char
 5663              	.LVL614:
1213:lcd.c         ****       va_end(argptr);
 5664              		.loc 1 1213 7 view .LVU1350
1214:lcd.c         **** }
 5665              		.loc 1 1214 1 is_stmt 0 view .LVU1351
 5666 0024 02B0     		add	sp, sp, #8
 5667              		.cfi_def_cfa_offset 16
 5668              		@ sp needed
 5669 0026 BDE81040 		pop	{r4, lr}
 5670              		.cfi_restore 14
 5671              		.cfi_restore 4
 5672              		.cfi_def_cfa_offset 8
 5673 002a 02B0     		add	sp, sp, #8
 5674              		.cfi_restore 3
 5675              		.cfi_restore 2
 5676              		.cfi_def_cfa_offset 0
 5677 002c 7047     		bx	lr
 5678              	.L250:
 5679 002e 00BF     		.align	2
 5680              	.L249:
 5681 0030 00000000 		.word	ax
 5682 0034 00000000 		.word	buff
 5683 0038 00000000 		.word	ay
 5684              		.cfi_endproc
 5685              	.LFE79:
 5687              		.global	hangul_jongsung_tbl
 5688              		.global	hangul_jungsung_tbl
 5689              		.global	hangul_chosung_tbl
 5690              		.global	loc3
 5691              		.global	loc2
 5692              		.global	loc1
 5693              		.global	han_tbl
 5694              		.comm	hangul_mode,1,1
 5695              		.global	s_bit
 5696              		.comm	dumy_data,32,1
 5697              		.comm	buff,256,1
 5698              		.comm	page,2,2
 5699              		.comm	eng_mode,2,2
 5700              		.comm	ty,2,2
 5701              		.comm	tx,2,2
 5702              		.comm	max_row,2,2
 5703              		.comm	max_col,2,2
 5704              		.comm	ay,2,2
 5705              		.comm	ax,2,2
 5706              		.comm	maxy,2,2
 5707              		.comm	maxx,2,2
 5708              		.comm	device_code,2,2
 5709              		.comm	background_color,2,2
 5710              		.comm	foreground_color,2,2
 5711              		.global	KS_CODE
 5712              		.global	kor_font
 5713              		.global	eng_font
 5714              		.section	.rodata.KS_CODE,"a"
 5717              	KS_CODE:
 5718 0000 2020     		.ascii	"  "
 5719 0002 8861     		.ascii	"\210a"
 5720 0004 8862     		.ascii	"\210b"
 5721 0006 8865     		.ascii	"\210e"
 5722 0008 8868     		.ascii	"\210h"
 5723 000a 8869     		.ascii	"\210i"
 5724 000c 886A     		.ascii	"\210j"
 5725 000e 886B     		.ascii	"\210k"
 5726 0010 8871     		.ascii	"\210q"
 5727 0012 8873     		.ascii	"\210s"
 5728 0014 8874     		.ascii	"\210t"
 5729 0016 8875     		.ascii	"\210u"
 5730 0018 8876     		.ascii	"\210v"
 5731 001a 8877     		.ascii	"\210w"
 5732 001c 8878     		.ascii	"\210x"
 5733 001e 8879     		.ascii	"\210y"
 5734 0020 887B     		.ascii	"\210{"
 5735 0022 887C     		.ascii	"\210|"
 5736 0024 887D     		.ascii	"\210}"
 5737 0026 8881     		.ascii	"\210\201"
 5738 0028 8882     		.ascii	"\210\202"
 5739 002a 8885     		.ascii	"\210\205"
 5740 002c 8889     		.ascii	"\210\211"
 5741 002e 8891     		.ascii	"\210\221"
 5742 0030 8893     		.ascii	"\210\223"
 5743 0032 8895     		.ascii	"\210\225"
 5744 0034 8896     		.ascii	"\210\226"
 5745 0036 8897     		.ascii	"\210\227"
 5746 0038 88A1     		.ascii	"\210\241"
 5747 003a 88A2     		.ascii	"\210\242"
 5748 003c 88A5     		.ascii	"\210\245"
 5749 003e 88A9     		.ascii	"\210\251"
 5750 0040 88B5     		.ascii	"\210\265"
 5751 0042 88B7     		.ascii	"\210\267"
 5752 0044 88C1     		.ascii	"\210\301"
 5753 0046 88C5     		.ascii	"\210\305"
 5754 0048 88C9     		.ascii	"\210\311"
 5755 004a 88E1     		.ascii	"\210\341"
 5756 004c 88E2     		.ascii	"\210\342"
 5757 004e 88E5     		.ascii	"\210\345"
 5758 0050 88E8     		.ascii	"\210\350"
 5759 0052 88E9     		.ascii	"\210\351"
 5760 0054 88EB     		.ascii	"\210\353"
 5761 0056 88F1     		.ascii	"\210\361"
 5762 0058 88F3     		.ascii	"\210\363"
 5763 005a 88F5     		.ascii	"\210\365"
 5764 005c 88F6     		.ascii	"\210\366"
 5765 005e 88F7     		.ascii	"\210\367"
 5766 0060 88F8     		.ascii	"\210\370"
 5767 0062 88FB     		.ascii	"\210\373"
 5768 0064 88FC     		.ascii	"\210\374"
 5769 0066 88FD     		.ascii	"\210\375"
 5770 0068 8941     		.ascii	"\211A"
 5771 006a 8945     		.ascii	"\211E"
 5772 006c 8949     		.ascii	"\211I"
 5773 006e 8951     		.ascii	"\211Q"
 5774 0070 8953     		.ascii	"\211S"
 5775 0072 8955     		.ascii	"\211U"
 5776 0074 8956     		.ascii	"\211V"
 5777 0076 8957     		.ascii	"\211W"
 5778 0078 8961     		.ascii	"\211a"
 5779 007a 8962     		.ascii	"\211b"
 5780 007c 8963     		.ascii	"\211c"
 5781 007e 8965     		.ascii	"\211e"
 5782 0080 8968     		.ascii	"\211h"
 5783 0082 8969     		.ascii	"\211i"
 5784 0084 8971     		.ascii	"\211q"
 5785 0086 8973     		.ascii	"\211s"
 5786 0088 8975     		.ascii	"\211u"
 5787 008a 8976     		.ascii	"\211v"
 5788 008c 8977     		.ascii	"\211w"
 5789 008e 897B     		.ascii	"\211{"
 5790 0090 8981     		.ascii	"\211\201"
 5791 0092 8985     		.ascii	"\211\205"
 5792 0094 8989     		.ascii	"\211\211"
 5793 0096 8993     		.ascii	"\211\223"
 5794 0098 8995     		.ascii	"\211\225"
 5795 009a 89A1     		.ascii	"\211\241"
 5796 009c 89A2     		.ascii	"\211\242"
 5797 009e 89A5     		.ascii	"\211\245"
 5798 00a0 89A8     		.ascii	"\211\250"
 5799 00a2 89A9     		.ascii	"\211\251"
 5800 00a4 89AB     		.ascii	"\211\253"
 5801 00a6 89AD     		.ascii	"\211\255"
 5802 00a8 89B0     		.ascii	"\211\260"
 5803 00aa 89B1     		.ascii	"\211\261"
 5804 00ac 89B3     		.ascii	"\211\263"
 5805 00ae 89B5     		.ascii	"\211\265"
 5806 00b0 89B7     		.ascii	"\211\267"
 5807 00b2 89B8     		.ascii	"\211\270"
 5808 00b4 89C1     		.ascii	"\211\301"
 5809 00b6 89C2     		.ascii	"\211\302"
 5810 00b8 89C5     		.ascii	"\211\305"
 5811 00ba 89C9     		.ascii	"\211\311"
 5812 00bc 89CB     		.ascii	"\211\313"
 5813 00be 2020     		.ascii	"  "
 5814 00c0 2020     		.ascii	"  "
 5815 00c2 89D1     		.ascii	"\211\321"
 5816 00c4 89D3     		.ascii	"\211\323"
 5817 00c6 89D5     		.ascii	"\211\325"
 5818 00c8 89D7     		.ascii	"\211\327"
 5819 00ca 89E1     		.ascii	"\211\341"
 5820 00cc 89E5     		.ascii	"\211\345"
 5821 00ce 89E9     		.ascii	"\211\351"
 5822 00d0 89F3     		.ascii	"\211\363"
 5823 00d2 89F6     		.ascii	"\211\366"
 5824 00d4 89F7     		.ascii	"\211\367"
 5825 00d6 8A41     		.ascii	"\212A"
 5826 00d8 8A42     		.ascii	"\212B"
 5827 00da 8A45     		.ascii	"\212E"
 5828 00dc 8A49     		.ascii	"\212I"
 5829 00de 8A51     		.ascii	"\212Q"
 5830 00e0 8A53     		.ascii	"\212S"
 5831 00e2 8A55     		.ascii	"\212U"
 5832 00e4 8A57     		.ascii	"\212W"
 5833 00e6 8A61     		.ascii	"\212a"
 5834 00e8 8A65     		.ascii	"\212e"
 5835 00ea 8A69     		.ascii	"\212i"
 5836 00ec 8A73     		.ascii	"\212s"
 5837 00ee 8A75     		.ascii	"\212u"
 5838 00f0 8A81     		.ascii	"\212\201"
 5839 00f2 8A82     		.ascii	"\212\202"
 5840 00f4 8A85     		.ascii	"\212\205"
 5841 00f6 8A88     		.ascii	"\212\210"
 5842 00f8 8A89     		.ascii	"\212\211"
 5843 00fa 8A8A     		.ascii	"\212\212"
 5844 00fc 8A8B     		.ascii	"\212\213"
 5845 00fe 8A90     		.ascii	"\212\220"
 5846 0100 8A91     		.ascii	"\212\221"
 5847 0102 8A93     		.ascii	"\212\223"
 5848 0104 8A95     		.ascii	"\212\225"
 5849 0106 8A97     		.ascii	"\212\227"
 5850 0108 8A98     		.ascii	"\212\230"
 5851 010a 8AA1     		.ascii	"\212\241"
 5852 010c 8AA2     		.ascii	"\212\242"
 5853 010e 8AA5     		.ascii	"\212\245"
 5854 0110 8AA9     		.ascii	"\212\251"
 5855 0112 8AB6     		.ascii	"\212\266"
 5856 0114 8AB7     		.ascii	"\212\267"
 5857 0116 8AC1     		.ascii	"\212\301"
 5858 0118 8AD5     		.ascii	"\212\325"
 5859 011a 8AE1     		.ascii	"\212\341"
 5860 011c 8AE2     		.ascii	"\212\342"
 5861 011e 8AE5     		.ascii	"\212\345"
 5862 0120 8AE9     		.ascii	"\212\351"
 5863 0122 8AF1     		.ascii	"\212\361"
 5864 0124 8AF3     		.ascii	"\212\363"
 5865 0126 8AF5     		.ascii	"\212\365"
 5866 0128 8B41     		.ascii	"\213A"
 5867 012a 8B45     		.ascii	"\213E"
 5868 012c 8B49     		.ascii	"\213I"
 5869 012e 8B61     		.ascii	"\213a"
 5870 0130 8B62     		.ascii	"\213b"
 5871 0132 8B65     		.ascii	"\213e"
 5872 0134 8B68     		.ascii	"\213h"
 5873 0136 8B69     		.ascii	"\213i"
 5874 0138 8B6A     		.ascii	"\213j"
 5875 013a 8B71     		.ascii	"\213q"
 5876 013c 8B73     		.ascii	"\213s"
 5877 013e 8B75     		.ascii	"\213u"
 5878 0140 8B77     		.ascii	"\213w"
 5879 0142 8B81     		.ascii	"\213\201"
 5880 0144 8BA1     		.ascii	"\213\241"
 5881 0146 8BA2     		.ascii	"\213\242"
 5882 0148 8BA5     		.ascii	"\213\245"
 5883 014a 8BA8     		.ascii	"\213\250"
 5884 014c 8BA9     		.ascii	"\213\251"
 5885 014e 8BAB     		.ascii	"\213\253"
 5886 0150 8BB1     		.ascii	"\213\261"
 5887 0152 8BB3     		.ascii	"\213\263"
 5888 0154 8BB5     		.ascii	"\213\265"
 5889 0156 8BB7     		.ascii	"\213\267"
 5890 0158 8BB8     		.ascii	"\213\270"
 5891 015a 8BBC     		.ascii	"\213\274"
 5892 015c 8C61     		.ascii	"\214a"
 5893 015e 8C62     		.ascii	"\214b"
 5894 0160 8C63     		.ascii	"\214c"
 5895 0162 8C65     		.ascii	"\214e"
 5896 0164 8C69     		.ascii	"\214i"
 5897 0166 8C6B     		.ascii	"\214k"
 5898 0168 8C71     		.ascii	"\214q"
 5899 016a 8C73     		.ascii	"\214s"
 5900 016c 8C75     		.ascii	"\214u"
 5901 016e 8C76     		.ascii	"\214v"
 5902 0170 8C77     		.ascii	"\214w"
 5903 0172 8C7B     		.ascii	"\214{"
 5904 0174 8C81     		.ascii	"\214\201"
 5905 0176 8C82     		.ascii	"\214\202"
 5906 0178 8C85     		.ascii	"\214\205"
 5907 017a 8C89     		.ascii	"\214\211"
 5908 017c 8C91     		.ascii	"\214\221"
 5909 017e 2020     		.ascii	"  "
 5910 0180 2020     		.ascii	"  "
 5911 0182 8C93     		.ascii	"\214\223"
 5912 0184 8C95     		.ascii	"\214\225"
 5913 0186 8C96     		.ascii	"\214\226"
 5914 0188 8C97     		.ascii	"\214\227"
 5915 018a 8CA1     		.ascii	"\214\241"
 5916 018c 8CA2     		.ascii	"\214\242"
 5917 018e 8CA9     		.ascii	"\214\251"
 5918 0190 8CE1     		.ascii	"\214\341"
 5919 0192 8CE2     		.ascii	"\214\342"
 5920 0194 8CE3     		.ascii	"\214\343"
 5921 0196 8CE5     		.ascii	"\214\345"
 5922 0198 8CE9     		.ascii	"\214\351"
 5923 019a 8CF1     		.ascii	"\214\361"
 5924 019c 8CF3     		.ascii	"\214\363"
 5925 019e 8CF5     		.ascii	"\214\365"
 5926 01a0 8CF6     		.ascii	"\214\366"
 5927 01a2 8CF7     		.ascii	"\214\367"
 5928 01a4 8D41     		.ascii	"\215A"
 5929 01a6 8D42     		.ascii	"\215B"
 5930 01a8 8D45     		.ascii	"\215E"
 5931 01aa 8D51     		.ascii	"\215Q"
 5932 01ac 8D56     		.ascii	"\215V"
 5933 01ae 8D57     		.ascii	"\215W"
 5934 01b0 8D61     		.ascii	"\215a"
 5935 01b2 8D65     		.ascii	"\215e"
 5936 01b4 8D69     		.ascii	"\215i"
 5937 01b6 8D75     		.ascii	"\215u"
 5938 01b8 8D76     		.ascii	"\215v"
 5939 01ba 8D7B     		.ascii	"\215{"
 5940 01bc 8D81     		.ascii	"\215\201"
 5941 01be 8DA1     		.ascii	"\215\241"
 5942 01c0 8DA2     		.ascii	"\215\242"
 5943 01c2 8DA5     		.ascii	"\215\245"
 5944 01c4 8DA7     		.ascii	"\215\247"
 5945 01c6 8DA9     		.ascii	"\215\251"
 5946 01c8 8DB1     		.ascii	"\215\261"
 5947 01ca 8DB3     		.ascii	"\215\263"
 5948 01cc 8DB5     		.ascii	"\215\265"
 5949 01ce 8DB7     		.ascii	"\215\267"
 5950 01d0 8DB8     		.ascii	"\215\270"
 5951 01d2 8DB9     		.ascii	"\215\271"
 5952 01d4 8DC1     		.ascii	"\215\301"
 5953 01d6 8DC2     		.ascii	"\215\302"
 5954 01d8 8DC9     		.ascii	"\215\311"
 5955 01da 8DD6     		.ascii	"\215\326"
 5956 01dc 8DD7     		.ascii	"\215\327"
 5957 01de 8DE1     		.ascii	"\215\341"
 5958 01e0 8DE2     		.ascii	"\215\342"
 5959 01e2 8DF7     		.ascii	"\215\367"
 5960 01e4 8E41     		.ascii	"\216A"
 5961 01e6 8E45     		.ascii	"\216E"
 5962 01e8 8E49     		.ascii	"\216I"
 5963 01ea 8E51     		.ascii	"\216Q"
 5964 01ec 8E53     		.ascii	"\216S"
 5965 01ee 8E57     		.ascii	"\216W"
 5966 01f0 8E61     		.ascii	"\216a"
 5967 01f2 8E81     		.ascii	"\216\201"
 5968 01f4 8E82     		.ascii	"\216\202"
 5969 01f6 8E85     		.ascii	"\216\205"
 5970 01f8 8E89     		.ascii	"\216\211"
 5971 01fa 8E90     		.ascii	"\216\220"
 5972 01fc 8E91     		.ascii	"\216\221"
 5973 01fe 8E93     		.ascii	"\216\223"
 5974 0200 8E95     		.ascii	"\216\225"
 5975 0202 8E97     		.ascii	"\216\227"
 5976 0204 8E98     		.ascii	"\216\230"
 5977 0206 8EA1     		.ascii	"\216\241"
 5978 0208 8EA9     		.ascii	"\216\251"
 5979 020a 8EB6     		.ascii	"\216\266"
 5980 020c 8EB7     		.ascii	"\216\267"
 5981 020e 8EC1     		.ascii	"\216\301"
 5982 0210 8EC2     		.ascii	"\216\302"
 5983 0212 8EC5     		.ascii	"\216\305"
 5984 0214 8EC9     		.ascii	"\216\311"
 5985 0216 8ED1     		.ascii	"\216\321"
 5986 0218 8ED3     		.ascii	"\216\323"
 5987 021a 8ED6     		.ascii	"\216\326"
 5988 021c 8EE1     		.ascii	"\216\341"
 5989 021e 8EE5     		.ascii	"\216\345"
 5990 0220 8EE9     		.ascii	"\216\351"
 5991 0222 8EF1     		.ascii	"\216\361"
 5992 0224 8EF3     		.ascii	"\216\363"
 5993 0226 8F41     		.ascii	"\217A"
 5994 0228 8F61     		.ascii	"\217a"
 5995 022a 8F62     		.ascii	"\217b"
 5996 022c 8F65     		.ascii	"\217e"
 5997 022e 8F67     		.ascii	"\217g"
 5998 0230 8F69     		.ascii	"\217i"
 5999 0232 8F6B     		.ascii	"\217k"
 6000 0234 8F70     		.ascii	"\217p"
 6001 0236 8F71     		.ascii	"\217q"
 6002 0238 8F73     		.ascii	"\217s"
 6003 023a 8F75     		.ascii	"\217u"
 6004 023c 8F77     		.ascii	"\217w"
 6005 023e 2020     		.ascii	"  "
 6006 0240 2020     		.ascii	"  "
 6007 0242 8F7B     		.ascii	"\217{"
 6008 0244 8FA1     		.ascii	"\217\241"
 6009 0246 8FA2     		.ascii	"\217\242"
 6010 0248 8FA5     		.ascii	"\217\245"
 6011 024a 8FA9     		.ascii	"\217\251"
 6012 024c 8FB1     		.ascii	"\217\261"
 6013 024e 8FB3     		.ascii	"\217\263"
 6014 0250 8FB5     		.ascii	"\217\265"
 6015 0252 8FB7     		.ascii	"\217\267"
 6016 0254 9061     		.ascii	"\220a"
 6017 0256 9062     		.ascii	"\220b"
 6018 0258 9063     		.ascii	"\220c"
 6019 025a 9065     		.ascii	"\220e"
 6020 025c 9068     		.ascii	"\220h"
 6021 025e 9069     		.ascii	"\220i"
 6022 0260 906A     		.ascii	"\220j"
 6023 0262 906B     		.ascii	"\220k"
 6024 0264 9071     		.ascii	"\220q"
 6025 0266 9073     		.ascii	"\220s"
 6026 0268 9075     		.ascii	"\220u"
 6027 026a 9076     		.ascii	"\220v"
 6028 026c 9077     		.ascii	"\220w"
 6029 026e 9078     		.ascii	"\220x"
 6030 0270 9079     		.ascii	"\220y"
 6031 0272 907B     		.ascii	"\220{"
 6032 0274 907D     		.ascii	"\220}"
 6033 0276 9081     		.ascii	"\220\201"
 6034 0278 9082     		.ascii	"\220\202"
 6035 027a 9085     		.ascii	"\220\205"
 6036 027c 9089     		.ascii	"\220\211"
 6037 027e 9091     		.ascii	"\220\221"
 6038 0280 9093     		.ascii	"\220\223"
 6039 0282 9095     		.ascii	"\220\225"
 6040 0284 9096     		.ascii	"\220\226"
 6041 0286 9097     		.ascii	"\220\227"
 6042 0288 90A1     		.ascii	"\220\241"
 6043 028a 90A2     		.ascii	"\220\242"
 6044 028c 90A5     		.ascii	"\220\245"
 6045 028e 90A9     		.ascii	"\220\251"
 6046 0290 90B1     		.ascii	"\220\261"
 6047 0292 90B7     		.ascii	"\220\267"
 6048 0294 90E1     		.ascii	"\220\341"
 6049 0296 90E2     		.ascii	"\220\342"
 6050 0298 90E4     		.ascii	"\220\344"
 6051 029a 90E5     		.ascii	"\220\345"
 6052 029c 90E9     		.ascii	"\220\351"
 6053 029e 90EB     		.ascii	"\220\353"
 6054 02a0 90EC     		.ascii	"\220\354"
 6055 02a2 90F1     		.ascii	"\220\361"
 6056 02a4 90F3     		.ascii	"\220\363"
 6057 02a6 90F5     		.ascii	"\220\365"
 6058 02a8 90F6     		.ascii	"\220\366"
 6059 02aa 90F7     		.ascii	"\220\367"
 6060 02ac 90FD     		.ascii	"\220\375"
 6061 02ae 9141     		.ascii	"\221A"
 6062 02b0 9142     		.ascii	"\221B"
 6063 02b2 9145     		.ascii	"\221E"
 6064 02b4 9149     		.ascii	"\221I"
 6065 02b6 9151     		.ascii	"\221Q"
 6066 02b8 9153     		.ascii	"\221S"
 6067 02ba 9155     		.ascii	"\221U"
 6068 02bc 9156     		.ascii	"\221V"
 6069 02be 9157     		.ascii	"\221W"
 6070 02c0 9161     		.ascii	"\221a"
 6071 02c2 9162     		.ascii	"\221b"
 6072 02c4 9165     		.ascii	"\221e"
 6073 02c6 9169     		.ascii	"\221i"
 6074 02c8 9171     		.ascii	"\221q"
 6075 02ca 9173     		.ascii	"\221s"
 6076 02cc 9176     		.ascii	"\221v"
 6077 02ce 9177     		.ascii	"\221w"
 6078 02d0 917A     		.ascii	"\221z"
 6079 02d2 9181     		.ascii	"\221\201"
 6080 02d4 9185     		.ascii	"\221\205"
 6081 02d6 91A1     		.ascii	"\221\241"
 6082 02d8 91A2     		.ascii	"\221\242"
 6083 02da 91A5     		.ascii	"\221\245"
 6084 02dc 91A9     		.ascii	"\221\251"
 6085 02de 91AB     		.ascii	"\221\253"
 6086 02e0 91B1     		.ascii	"\221\261"
 6087 02e2 91B3     		.ascii	"\221\263"
 6088 02e4 91B5     		.ascii	"\221\265"
 6089 02e6 91B7     		.ascii	"\221\267"
 6090 02e8 91BC     		.ascii	"\221\274"
 6091 02ea 91BD     		.ascii	"\221\275"
 6092 02ec 91C1     		.ascii	"\221\301"
 6093 02ee 91C5     		.ascii	"\221\305"
 6094 02f0 91C9     		.ascii	"\221\311"
 6095 02f2 91D6     		.ascii	"\221\326"
 6096 02f4 9241     		.ascii	"\222A"
 6097 02f6 9245     		.ascii	"\222E"
 6098 02f8 9249     		.ascii	"\222I"
 6099 02fa 9251     		.ascii	"\222Q"
 6100 02fc 9253     		.ascii	"\222S"
 6101 02fe 2020     		.ascii	"  "
 6102 0300 2020     		.ascii	"  "
 6103 0302 9255     		.ascii	"\222U"
 6104 0304 9261     		.ascii	"\222a"
 6105 0306 9262     		.ascii	"\222b"
 6106 0308 9265     		.ascii	"\222e"
 6107 030a 9269     		.ascii	"\222i"
 6108 030c 9273     		.ascii	"\222s"
 6109 030e 9275     		.ascii	"\222u"
 6110 0310 9277     		.ascii	"\222w"
 6111 0312 9281     		.ascii	"\222\201"
 6112 0314 9282     		.ascii	"\222\202"
 6113 0316 9285     		.ascii	"\222\205"
 6114 0318 9288     		.ascii	"\222\210"
 6115 031a 9289     		.ascii	"\222\211"
 6116 031c 9291     		.ascii	"\222\221"
 6117 031e 9293     		.ascii	"\222\223"
 6118 0320 9295     		.ascii	"\222\225"
 6119 0322 9297     		.ascii	"\222\227"
 6120 0324 92A1     		.ascii	"\222\241"
 6121 0326 92B6     		.ascii	"\222\266"
 6122 0328 92C1     		.ascii	"\222\301"
 6123 032a 92E1     		.ascii	"\222\341"
 6124 032c 92E5     		.ascii	"\222\345"
 6125 032e 92E9     		.ascii	"\222\351"
 6126 0330 92F1     		.ascii	"\222\361"
 6127 0332 92F3     		.ascii	"\222\363"
 6128 0334 9341     		.ascii	"\223A"
 6129 0336 9342     		.ascii	"\223B"
 6130 0338 9349     		.ascii	"\223I"
 6131 033a 9351     		.ascii	"\223Q"
 6132 033c 9353     		.ascii	"\223S"
 6133 033e 9357     		.ascii	"\223W"
 6134 0340 9361     		.ascii	"\223a"
 6135 0342 9362     		.ascii	"\223b"
 6136 0344 9365     		.ascii	"\223e"
 6137 0346 9369     		.ascii	"\223i"
 6138 0348 936A     		.ascii	"\223j"
 6139 034a 936B     		.ascii	"\223k"
 6140 034c 9371     		.ascii	"\223q"
 6141 034e 9373     		.ascii	"\223s"
 6142 0350 9375     		.ascii	"\223u"
 6143 0352 9377     		.ascii	"\223w"
 6144 0354 9378     		.ascii	"\223x"
 6145 0356 937C     		.ascii	"\223|"
 6146 0358 9381     		.ascii	"\223\201"
 6147 035a 9385     		.ascii	"\223\205"
 6148 035c 9389     		.ascii	"\223\211"
 6149 035e 93A1     		.ascii	"\223\241"
 6150 0360 93A2     		.ascii	"\223\242"
 6151 0362 93A5     		.ascii	"\223\245"
 6152 0364 93A9     		.ascii	"\223\251"
 6153 0366 93AB     		.ascii	"\223\253"
 6154 0368 93B1     		.ascii	"\223\261"
 6155 036a 93B3     		.ascii	"\223\263"
 6156 036c 93B5     		.ascii	"\223\265"
 6157 036e 93B7     		.ascii	"\223\267"
 6158 0370 93BC     		.ascii	"\223\274"
 6159 0372 9461     		.ascii	"\224a"
 6160 0374 9462     		.ascii	"\224b"
 6161 0376 9463     		.ascii	"\224c"
 6162 0378 9465     		.ascii	"\224e"
 6163 037a 9468     		.ascii	"\224h"
 6164 037c 9469     		.ascii	"\224i"
 6165 037e 946A     		.ascii	"\224j"
 6166 0380 946B     		.ascii	"\224k"
 6167 0382 946C     		.ascii	"\224l"
 6168 0384 9470     		.ascii	"\224p"
 6169 0386 9471     		.ascii	"\224q"
 6170 0388 9473     		.ascii	"\224s"
 6171 038a 9475     		.ascii	"\224u"
 6172 038c 9476     		.ascii	"\224v"
 6173 038e 9477     		.ascii	"\224w"
 6174 0390 9478     		.ascii	"\224x"
 6175 0392 9479     		.ascii	"\224y"
 6176 0394 947D     		.ascii	"\224}"
 6177 0396 9481     		.ascii	"\224\201"
 6178 0398 9482     		.ascii	"\224\202"
 6179 039a 9485     		.ascii	"\224\205"
 6180 039c 9489     		.ascii	"\224\211"
 6181 039e 9491     		.ascii	"\224\221"
 6182 03a0 9493     		.ascii	"\224\223"
 6183 03a2 9495     		.ascii	"\224\225"
 6184 03a4 9496     		.ascii	"\224\226"
 6185 03a6 9497     		.ascii	"\224\227"
 6186 03a8 94A1     		.ascii	"\224\241"
 6187 03aa 94E1     		.ascii	"\224\341"
 6188 03ac 94E2     		.ascii	"\224\342"
 6189 03ae 94E3     		.ascii	"\224\343"
 6190 03b0 94E5     		.ascii	"\224\345"
 6191 03b2 94E8     		.ascii	"\224\350"
 6192 03b4 94E9     		.ascii	"\224\351"
 6193 03b6 94EB     		.ascii	"\224\353"
 6194 03b8 94EC     		.ascii	"\224\354"
 6195 03ba 94F1     		.ascii	"\224\361"
 6196 03bc 94F3     		.ascii	"\224\363"
 6197 03be 2020     		.ascii	"  "
 6198 03c0 2020     		.ascii	"  "
 6199 03c2 94F5     		.ascii	"\224\365"
 6200 03c4 94F7     		.ascii	"\224\367"
 6201 03c6 94F9     		.ascii	"\224\371"
 6202 03c8 94FC     		.ascii	"\224\374"
 6203 03ca 9541     		.ascii	"\225A"
 6204 03cc 9542     		.ascii	"\225B"
 6205 03ce 9545     		.ascii	"\225E"
 6206 03d0 9549     		.ascii	"\225I"
 6207 03d2 9551     		.ascii	"\225Q"
 6208 03d4 9553     		.ascii	"\225S"
 6209 03d6 9555     		.ascii	"\225U"
 6210 03d8 9556     		.ascii	"\225V"
 6211 03da 9557     		.ascii	"\225W"
 6212 03dc 9561     		.ascii	"\225a"
 6213 03de 9565     		.ascii	"\225e"
 6214 03e0 9569     		.ascii	"\225i"
 6215 03e2 9576     		.ascii	"\225v"
 6216 03e4 9577     		.ascii	"\225w"
 6217 03e6 9581     		.ascii	"\225\201"
 6218 03e8 9585     		.ascii	"\225\205"
 6219 03ea 95A1     		.ascii	"\225\241"
 6220 03ec 95A2     		.ascii	"\225\242"
 6221 03ee 95A5     		.ascii	"\225\245"
 6222 03f0 95A8     		.ascii	"\225\250"
 6223 03f2 95A9     		.ascii	"\225\251"
 6224 03f4 95AB     		.ascii	"\225\253"
 6225 03f6 95AD     		.ascii	"\225\255"
 6226 03f8 95B1     		.ascii	"\225\261"
 6227 03fa 95B3     		.ascii	"\225\263"
 6228 03fc 95B5     		.ascii	"\225\265"
 6229 03fe 95B7     		.ascii	"\225\267"
 6230 0400 95B9     		.ascii	"\225\271"
 6231 0402 95BB     		.ascii	"\225\273"
 6232 0404 95C1     		.ascii	"\225\301"
 6233 0406 95C5     		.ascii	"\225\305"
 6234 0408 95C9     		.ascii	"\225\311"
 6235 040a 95E1     		.ascii	"\225\341"
 6236 040c 95F6     		.ascii	"\225\366"
 6237 040e 9641     		.ascii	"\226A"
 6238 0410 9645     		.ascii	"\226E"
 6239 0412 9649     		.ascii	"\226I"
 6240 0414 9651     		.ascii	"\226Q"
 6241 0416 9653     		.ascii	"\226S"
 6242 0418 9655     		.ascii	"\226U"
 6243 041a 9661     		.ascii	"\226a"
 6244 041c 9681     		.ascii	"\226\201"
 6245 041e 9682     		.ascii	"\226\202"
 6246 0420 9685     		.ascii	"\226\205"
 6247 0422 9689     		.ascii	"\226\211"
 6248 0424 9691     		.ascii	"\226\221"
 6249 0426 9693     		.ascii	"\226\223"
 6250 0428 9695     		.ascii	"\226\225"
 6251 042a 9697     		.ascii	"\226\227"
 6252 042c 96A1     		.ascii	"\226\241"
 6253 042e 96B6     		.ascii	"\226\266"
 6254 0430 96C1     		.ascii	"\226\301"
 6255 0432 96D7     		.ascii	"\226\327"
 6256 0434 96E1     		.ascii	"\226\341"
 6257 0436 96E5     		.ascii	"\226\345"
 6258 0438 96E9     		.ascii	"\226\351"
 6259 043a 96F3     		.ascii	"\226\363"
 6260 043c 96F5     		.ascii	"\226\365"
 6261 043e 96F7     		.ascii	"\226\367"
 6262 0440 9741     		.ascii	"\227A"
 6263 0442 9745     		.ascii	"\227E"
 6264 0444 9749     		.ascii	"\227I"
 6265 0446 9751     		.ascii	"\227Q"
 6266 0448 9757     		.ascii	"\227W"
 6267 044a 9761     		.ascii	"\227a"
 6268 044c 9762     		.ascii	"\227b"
 6269 044e 9765     		.ascii	"\227e"
 6270 0450 9768     		.ascii	"\227h"
 6271 0452 9769     		.ascii	"\227i"
 6272 0454 976B     		.ascii	"\227k"
 6273 0456 9771     		.ascii	"\227q"
 6274 0458 9773     		.ascii	"\227s"
 6275 045a 9775     		.ascii	"\227u"
 6276 045c 9777     		.ascii	"\227w"
 6277 045e 9781     		.ascii	"\227\201"
 6278 0460 97A1     		.ascii	"\227\241"
 6279 0462 97A2     		.ascii	"\227\242"
 6280 0464 97A5     		.ascii	"\227\245"
 6281 0466 97A8     		.ascii	"\227\250"
 6282 0468 97A9     		.ascii	"\227\251"
 6283 046a 97B1     		.ascii	"\227\261"
 6284 046c 97B3     		.ascii	"\227\263"
 6285 046e 97B5     		.ascii	"\227\265"
 6286 0470 97B6     		.ascii	"\227\266"
 6287 0472 97B7     		.ascii	"\227\267"
 6288 0474 97B8     		.ascii	"\227\270"
 6289 0476 9861     		.ascii	"\230a"
 6290 0478 9862     		.ascii	"\230b"
 6291 047a 9865     		.ascii	"\230e"
 6292 047c 9869     		.ascii	"\230i"
 6293 047e 2020     		.ascii	"  "
 6294 0480 2020     		.ascii	"  "
 6295 0482 9871     		.ascii	"\230q"
 6296 0484 9873     		.ascii	"\230s"
 6297 0486 9875     		.ascii	"\230u"
 6298 0488 9876     		.ascii	"\230v"
 6299 048a 9877     		.ascii	"\230w"
 6300 048c 987D     		.ascii	"\230}"
 6301 048e 9881     		.ascii	"\230\201"
 6302 0490 9882     		.ascii	"\230\202"
 6303 0492 9885     		.ascii	"\230\205"
 6304 0494 9889     		.ascii	"\230\211"
 6305 0496 9891     		.ascii	"\230\221"
 6306 0498 9893     		.ascii	"\230\223"
 6307 049a 9895     		.ascii	"\230\225"
 6308 049c 9896     		.ascii	"\230\226"
 6309 049e 9897     		.ascii	"\230\227"
 6310 04a0 98E1     		.ascii	"\230\341"
 6311 04a2 98E2     		.ascii	"\230\342"
 6312 04a4 98E5     		.ascii	"\230\345"
 6313 04a6 98E9     		.ascii	"\230\351"
 6314 04a8 98EB     		.ascii	"\230\353"
 6315 04aa 98EC     		.ascii	"\230\354"
 6316 04ac 98F1     		.ascii	"\230\361"
 6317 04ae 98F3     		.ascii	"\230\363"
 6318 04b0 98F5     		.ascii	"\230\365"
 6319 04b2 98F6     		.ascii	"\230\366"
 6320 04b4 98F7     		.ascii	"\230\367"
 6321 04b6 98FD     		.ascii	"\230\375"
 6322 04b8 9941     		.ascii	"\231A"
 6323 04ba 9942     		.ascii	"\231B"
 6324 04bc 9945     		.ascii	"\231E"
 6325 04be 9949     		.ascii	"\231I"
 6326 04c0 9951     		.ascii	"\231Q"
 6327 04c2 9953     		.ascii	"\231S"
 6328 04c4 9955     		.ascii	"\231U"
 6329 04c6 9956     		.ascii	"\231V"
 6330 04c8 9957     		.ascii	"\231W"
 6331 04ca 9961     		.ascii	"\231a"
 6332 04cc 9976     		.ascii	"\231v"
 6333 04ce 99A1     		.ascii	"\231\241"
 6334 04d0 99A2     		.ascii	"\231\242"
 6335 04d2 99A5     		.ascii	"\231\245"
 6336 04d4 99A9     		.ascii	"\231\251"
 6337 04d6 99B7     		.ascii	"\231\267"
 6338 04d8 99C1     		.ascii	"\231\301"
 6339 04da 99C9     		.ascii	"\231\311"
 6340 04dc 99E1     		.ascii	"\231\341"
 6341 04de 9A41     		.ascii	"\232A"
 6342 04e0 9A45     		.ascii	"\232E"
 6343 04e2 9A81     		.ascii	"\232\201"
 6344 04e4 9A82     		.ascii	"\232\202"
 6345 04e6 9A85     		.ascii	"\232\205"
 6346 04e8 9A89     		.ascii	"\232\211"
 6347 04ea 9A90     		.ascii	"\232\220"
 6348 04ec 9A91     		.ascii	"\232\221"
 6349 04ee 9A97     		.ascii	"\232\227"
 6350 04f0 9AC1     		.ascii	"\232\301"
 6351 04f2 9AE1     		.ascii	"\232\341"
 6352 04f4 9AE5     		.ascii	"\232\345"
 6353 04f6 9AE9     		.ascii	"\232\351"
 6354 04f8 9AF1     		.ascii	"\232\361"
 6355 04fa 9AF3     		.ascii	"\232\363"
 6356 04fc 9AF7     		.ascii	"\232\367"
 6357 04fe 9B61     		.ascii	"\233a"
 6358 0500 9B62     		.ascii	"\233b"
 6359 0502 9B65     		.ascii	"\233e"
 6360 0504 9B68     		.ascii	"\233h"
 6361 0506 9B69     		.ascii	"\233i"
 6362 0508 9B71     		.ascii	"\233q"
 6363 050a 9B73     		.ascii	"\233s"
 6364 050c 9B75     		.ascii	"\233u"
 6365 050e 9B81     		.ascii	"\233\201"
 6366 0510 9B85     		.ascii	"\233\205"
 6367 0512 9B89     		.ascii	"\233\211"
 6368 0514 9B91     		.ascii	"\233\221"
 6369 0516 9B93     		.ascii	"\233\223"
 6370 0518 9BA1     		.ascii	"\233\241"
 6371 051a 9BA5     		.ascii	"\233\245"
 6372 051c 9BA9     		.ascii	"\233\251"
 6373 051e 9BB1     		.ascii	"\233\261"
 6374 0520 9BB3     		.ascii	"\233\263"
 6375 0522 9BB5     		.ascii	"\233\265"
 6376 0524 9BB7     		.ascii	"\233\267"
 6377 0526 9C61     		.ascii	"\234a"
 6378 0528 9C62     		.ascii	"\234b"
 6379 052a 9C65     		.ascii	"\234e"
 6380 052c 9C69     		.ascii	"\234i"
 6381 052e 9C71     		.ascii	"\234q"
 6382 0530 9C73     		.ascii	"\234s"
 6383 0532 9C75     		.ascii	"\234u"
 6384 0534 9C76     		.ascii	"\234v"
 6385 0536 9C77     		.ascii	"\234w"
 6386 0538 9C78     		.ascii	"\234x"
 6387 053a 9C7C     		.ascii	"\234|"
 6388 053c 9C7D     		.ascii	"\234}"
 6389 053e 2020     		.ascii	"  "
 6390 0540 2020     		.ascii	"  "
 6391 0542 9C81     		.ascii	"\234\201"
 6392 0544 9C82     		.ascii	"\234\202"
 6393 0546 9C85     		.ascii	"\234\205"
 6394 0548 9C89     		.ascii	"\234\211"
 6395 054a 9C91     		.ascii	"\234\221"
 6396 054c 9C93     		.ascii	"\234\223"
 6397 054e 9C95     		.ascii	"\234\225"
 6398 0550 9C96     		.ascii	"\234\226"
 6399 0552 9C97     		.ascii	"\234\227"
 6400 0554 9CA1     		.ascii	"\234\241"
 6401 0556 9CA2     		.ascii	"\234\242"
 6402 0558 9CA5     		.ascii	"\234\245"
 6403 055a 9CB5     		.ascii	"\234\265"
 6404 055c 9CB7     		.ascii	"\234\267"
 6405 055e 9CE1     		.ascii	"\234\341"
 6406 0560 9CE2     		.ascii	"\234\342"
 6407 0562 9CE5     		.ascii	"\234\345"
 6408 0564 9CE9     		.ascii	"\234\351"
 6409 0566 9CF1     		.ascii	"\234\361"
 6410 0568 9CF3     		.ascii	"\234\363"
 6411 056a 9CF5     		.ascii	"\234\365"
 6412 056c 9CF6     		.ascii	"\234\366"
 6413 056e 9CF7     		.ascii	"\234\367"
 6414 0570 9CFD     		.ascii	"\234\375"
 6415 0572 9D41     		.ascii	"\235A"
 6416 0574 9D42     		.ascii	"\235B"
 6417 0576 9D45     		.ascii	"\235E"
 6418 0578 9D49     		.ascii	"\235I"
 6419 057a 9D51     		.ascii	"\235Q"
 6420 057c 9D53     		.ascii	"\235S"
 6421 057e 9D55     		.ascii	"\235U"
 6422 0580 9D57     		.ascii	"\235W"
 6423 0582 9D61     		.ascii	"\235a"
 6424 0584 9D62     		.ascii	"\235b"
 6425 0586 9D65     		.ascii	"\235e"
 6426 0588 9D69     		.ascii	"\235i"
 6427 058a 9D71     		.ascii	"\235q"
 6428 058c 9D73     		.ascii	"\235s"
 6429 058e 9D75     		.ascii	"\235u"
 6430 0590 9D76     		.ascii	"\235v"
 6431 0592 9D77     		.ascii	"\235w"
 6432 0594 9D81     		.ascii	"\235\201"
 6433 0596 9D85     		.ascii	"\235\205"
 6434 0598 9D93     		.ascii	"\235\223"
 6435 059a 9D95     		.ascii	"\235\225"
 6436 059c 9DA1     		.ascii	"\235\241"
 6437 059e 9DA2     		.ascii	"\235\242"
 6438 05a0 9DA5     		.ascii	"\235\245"
 6439 05a2 9DA9     		.ascii	"\235\251"
 6440 05a4 9DB1     		.ascii	"\235\261"
 6441 05a6 9DB3     		.ascii	"\235\263"
 6442 05a8 9DB5     		.ascii	"\235\265"
 6443 05aa 9DB7     		.ascii	"\235\267"
 6444 05ac 9DC1     		.ascii	"\235\301"
 6445 05ae 9DC5     		.ascii	"\235\305"
 6446 05b0 9DD7     		.ascii	"\235\327"
 6447 05b2 9DF6     		.ascii	"\235\366"
 6448 05b4 9E41     		.ascii	"\236A"
 6449 05b6 9E45     		.ascii	"\236E"
 6450 05b8 9E49     		.ascii	"\236I"
 6451 05ba 9E51     		.ascii	"\236Q"
 6452 05bc 9E53     		.ascii	"\236S"
 6453 05be 9E55     		.ascii	"\236U"
 6454 05c0 9E57     		.ascii	"\236W"
 6455 05c2 9E61     		.ascii	"\236a"
 6456 05c4 9E65     		.ascii	"\236e"
 6457 05c6 9E69     		.ascii	"\236i"
 6458 05c8 9E73     		.ascii	"\236s"
 6459 05ca 9E75     		.ascii	"\236u"
 6460 05cc 9E77     		.ascii	"\236w"
 6461 05ce 9E81     		.ascii	"\236\201"
 6462 05d0 9E82     		.ascii	"\236\202"
 6463 05d2 9E85     		.ascii	"\236\205"
 6464 05d4 9E89     		.ascii	"\236\211"
 6465 05d6 9E91     		.ascii	"\236\221"
 6466 05d8 9E93     		.ascii	"\236\223"
 6467 05da 9E95     		.ascii	"\236\225"
 6468 05dc 9E97     		.ascii	"\236\227"
 6469 05de 9EA1     		.ascii	"\236\241"
 6470 05e0 9EB6     		.ascii	"\236\266"
 6471 05e2 9EC1     		.ascii	"\236\301"
 6472 05e4 9EE1     		.ascii	"\236\341"
 6473 05e6 9EE2     		.ascii	"\236\342"
 6474 05e8 9EE5     		.ascii	"\236\345"
 6475 05ea 9EE9     		.ascii	"\236\351"
 6476 05ec 9EF1     		.ascii	"\236\361"
 6477 05ee 9EF5     		.ascii	"\236\365"
 6478 05f0 9EF7     		.ascii	"\236\367"
 6479 05f2 9F41     		.ascii	"\237A"
 6480 05f4 9F42     		.ascii	"\237B"
 6481 05f6 9F45     		.ascii	"\237E"
 6482 05f8 9F49     		.ascii	"\237I"
 6483 05fa 9F51     		.ascii	"\237Q"
 6484 05fc 9F53     		.ascii	"\237S"
 6485 05fe 2020     		.ascii	"  "
 6486 0600 2020     		.ascii	"  "
 6487 0602 9F55     		.ascii	"\237U"
 6488 0604 9F57     		.ascii	"\237W"
 6489 0606 9F61     		.ascii	"\237a"
 6490 0608 9F62     		.ascii	"\237b"
 6491 060a 9F65     		.ascii	"\237e"
 6492 060c 9F69     		.ascii	"\237i"
 6493 060e 9F71     		.ascii	"\237q"
 6494 0610 9F73     		.ascii	"\237s"
 6495 0612 9F75     		.ascii	"\237u"
 6496 0614 9F77     		.ascii	"\237w"
 6497 0616 9F78     		.ascii	"\237x"
 6498 0618 9F7B     		.ascii	"\237{"
 6499 061a 9F7C     		.ascii	"\237|"
 6500 061c 9FA1     		.ascii	"\237\241"
 6501 061e 9FA2     		.ascii	"\237\242"
 6502 0620 9FA5     		.ascii	"\237\245"
 6503 0622 9FA9     		.ascii	"\237\251"
 6504 0624 9FB1     		.ascii	"\237\261"
 6505 0626 9FB3     		.ascii	"\237\263"
 6506 0628 9FB5     		.ascii	"\237\265"
 6507 062a 9FB7     		.ascii	"\237\267"
 6508 062c A061     		.ascii	"\240a"
 6509 062e A062     		.ascii	"\240b"
 6510 0630 A065     		.ascii	"\240e"
 6511 0632 A067     		.ascii	"\240g"
 6512 0634 A068     		.ascii	"\240h"
 6513 0636 A069     		.ascii	"\240i"
 6514 0638 A06A     		.ascii	"\240j"
 6515 063a A06B     		.ascii	"\240k"
 6516 063c A071     		.ascii	"\240q"
 6517 063e A073     		.ascii	"\240s"
 6518 0640 A075     		.ascii	"\240u"
 6519 0642 A077     		.ascii	"\240w"
 6520 0644 A078     		.ascii	"\240x"
 6521 0646 A07B     		.ascii	"\240{"
 6522 0648 A07D     		.ascii	"\240}"
 6523 064a A081     		.ascii	"\240\201"
 6524 064c A082     		.ascii	"\240\202"
 6525 064e A085     		.ascii	"\240\205"
 6526 0650 A089     		.ascii	"\240\211"
 6527 0652 A091     		.ascii	"\240\221"
 6528 0654 A093     		.ascii	"\240\223"
 6529 0656 A095     		.ascii	"\240\225"
 6530 0658 A096     		.ascii	"\240\226"
 6531 065a A097     		.ascii	"\240\227"
 6532 065c A098     		.ascii	"\240\230"
 6533 065e A0A1     		.ascii	"\240\241"
 6534 0660 A0A2     		.ascii	"\240\242"
 6535 0662 A0A9     		.ascii	"\240\251"
 6536 0664 A0B7     		.ascii	"\240\267"
 6537 0666 A0E1     		.ascii	"\240\341"
 6538 0668 A0E2     		.ascii	"\240\342"
 6539 066a A0E5     		.ascii	"\240\345"
 6540 066c A0E9     		.ascii	"\240\351"
 6541 066e A0EB     		.ascii	"\240\353"
 6542 0670 A0F1     		.ascii	"\240\361"
 6543 0672 A0F3     		.ascii	"\240\363"
 6544 0674 A0F5     		.ascii	"\240\365"
 6545 0676 A0F7     		.ascii	"\240\367"
 6546 0678 A0F8     		.ascii	"\240\370"
 6547 067a A0FD     		.ascii	"\240\375"
 6548 067c A141     		.ascii	"\241A"
 6549 067e A142     		.ascii	"\241B"
 6550 0680 A145     		.ascii	"\241E"
 6551 0682 A149     		.ascii	"\241I"
 6552 0684 A151     		.ascii	"\241Q"
 6553 0686 A153     		.ascii	"\241S"
 6554 0688 A155     		.ascii	"\241U"
 6555 068a A156     		.ascii	"\241V"
 6556 068c A157     		.ascii	"\241W"
 6557 068e A161     		.ascii	"\241a"
 6558 0690 A162     		.ascii	"\241b"
 6559 0692 A165     		.ascii	"\241e"
 6560 0694 A169     		.ascii	"\241i"
 6561 0696 A175     		.ascii	"\241u"
 6562 0698 A176     		.ascii	"\241v"
 6563 069a A177     		.ascii	"\241w"
 6564 069c A179     		.ascii	"\241y"
 6565 069e A181     		.ascii	"\241\201"
 6566 06a0 A1A1     		.ascii	"\241\241"
 6567 06a2 A1A2     		.ascii	"\241\242"
 6568 06a4 A1A4     		.ascii	"\241\244"
 6569 06a6 A1A5     		.ascii	"\241\245"
 6570 06a8 A1A9     		.ascii	"\241\251"
 6571 06aa A1AB     		.ascii	"\241\253"
 6572 06ac A1B1     		.ascii	"\241\261"
 6573 06ae A1B3     		.ascii	"\241\263"
 6574 06b0 A1B5     		.ascii	"\241\265"
 6575 06b2 A1B7     		.ascii	"\241\267"
 6576 06b4 A1C1     		.ascii	"\241\301"
 6577 06b6 A1C5     		.ascii	"\241\305"
 6578 06b8 A1D6     		.ascii	"\241\326"
 6579 06ba A1D7     		.ascii	"\241\327"
 6580 06bc A241     		.ascii	"\242A"
 6581 06be 2020     		.ascii	"  "
 6582 06c0 2020     		.ascii	"  "
 6583 06c2 A245     		.ascii	"\242E"
 6584 06c4 A249     		.ascii	"\242I"
 6585 06c6 A253     		.ascii	"\242S"
 6586 06c8 A255     		.ascii	"\242U"
 6587 06ca A257     		.ascii	"\242W"
 6588 06cc A261     		.ascii	"\242a"
 6589 06ce A265     		.ascii	"\242e"
 6590 06d0 A269     		.ascii	"\242i"
 6591 06d2 A273     		.ascii	"\242s"
 6592 06d4 A275     		.ascii	"\242u"
 6593 06d6 A281     		.ascii	"\242\201"
 6594 06d8 A282     		.ascii	"\242\202"
 6595 06da A283     		.ascii	"\242\203"
 6596 06dc A285     		.ascii	"\242\205"
 6597 06de A288     		.ascii	"\242\210"
 6598 06e0 A289     		.ascii	"\242\211"
 6599 06e2 A28A     		.ascii	"\242\212"
 6600 06e4 A28B     		.ascii	"\242\213"
 6601 06e6 A291     		.ascii	"\242\221"
 6602 06e8 A293     		.ascii	"\242\223"
 6603 06ea A295     		.ascii	"\242\225"
 6604 06ec A297     		.ascii	"\242\227"
 6605 06ee A29B     		.ascii	"\242\233"
 6606 06f0 A29D     		.ascii	"\242\235"
 6607 06f2 A2A1     		.ascii	"\242\241"
 6608 06f4 A2A5     		.ascii	"\242\245"
 6609 06f6 A2A9     		.ascii	"\242\251"
 6610 06f8 A2B1     		.ascii	"\242\261"
 6611 06fa A2B5     		.ascii	"\242\265"
 6612 06fc A2C1     		.ascii	"\242\301"
 6613 06fe A2E1     		.ascii	"\242\341"
 6614 0700 A2E5     		.ascii	"\242\345"
 6615 0702 A2E9     		.ascii	"\242\351"
 6616 0704 A341     		.ascii	"\243A"
 6617 0706 A345     		.ascii	"\243E"
 6618 0708 A349     		.ascii	"\243I"
 6619 070a A351     		.ascii	"\243Q"
 6620 070c A355     		.ascii	"\243U"
 6621 070e A361     		.ascii	"\243a"
 6622 0710 A365     		.ascii	"\243e"
 6623 0712 A369     		.ascii	"\243i"
 6624 0714 A371     		.ascii	"\243q"
 6625 0716 A375     		.ascii	"\243u"
 6626 0718 A3A1     		.ascii	"\243\241"
 6627 071a A3A2     		.ascii	"\243\242"
 6628 071c A3A5     		.ascii	"\243\245"
 6629 071e A3A8     		.ascii	"\243\250"
 6630 0720 A3A9     		.ascii	"\243\251"
 6631 0722 A3AB     		.ascii	"\243\253"
 6632 0724 A3B1     		.ascii	"\243\261"
 6633 0726 A3B3     		.ascii	"\243\263"
 6634 0728 A3B5     		.ascii	"\243\265"
 6635 072a A3B6     		.ascii	"\243\266"
 6636 072c A3B7     		.ascii	"\243\267"
 6637 072e A3B9     		.ascii	"\243\271"
 6638 0730 A3BB     		.ascii	"\243\273"
 6639 0732 A461     		.ascii	"\244a"
 6640 0734 A462     		.ascii	"\244b"
 6641 0736 A463     		.ascii	"\244c"
 6642 0738 A464     		.ascii	"\244d"
 6643 073a A465     		.ascii	"\244e"
 6644 073c A468     		.ascii	"\244h"
 6645 073e A469     		.ascii	"\244i"
 6646 0740 A46A     		.ascii	"\244j"
 6647 0742 A46B     		.ascii	"\244k"
 6648 0744 A46C     		.ascii	"\244l"
 6649 0746 A471     		.ascii	"\244q"
 6650 0748 A473     		.ascii	"\244s"
 6651 074a A475     		.ascii	"\244u"
 6652 074c A477     		.ascii	"\244w"
 6653 074e A47B     		.ascii	"\244{"
 6654 0750 A481     		.ascii	"\244\201"
 6655 0752 A482     		.ascii	"\244\202"
 6656 0754 A485     		.ascii	"\244\205"
 6657 0756 A489     		.ascii	"\244\211"
 6658 0758 A491     		.ascii	"\244\221"
 6659 075a A493     		.ascii	"\244\223"
 6660 075c A495     		.ascii	"\244\225"
 6661 075e A496     		.ascii	"\244\226"
 6662 0760 A497     		.ascii	"\244\227"
 6663 0762 A49B     		.ascii	"\244\233"
 6664 0764 A4A1     		.ascii	"\244\241"
 6665 0766 A4A2     		.ascii	"\244\242"
 6666 0768 A4A5     		.ascii	"\244\245"
 6667 076a A4B3     		.ascii	"\244\263"
 6668 076c A4E1     		.ascii	"\244\341"
 6669 076e A4E2     		.ascii	"\244\342"
 6670 0770 A4E5     		.ascii	"\244\345"
 6671 0772 A4E8     		.ascii	"\244\350"
 6672 0774 A4E9     		.ascii	"\244\351"
 6673 0776 A4EB     		.ascii	"\244\353"
 6674 0778 A4F1     		.ascii	"\244\361"
 6675 077a A4F3     		.ascii	"\244\363"
 6676 077c A4F5     		.ascii	"\244\365"
 6677 077e 2020     		.ascii	"  "
 6678 0780 2020     		.ascii	"  "
 6679 0782 A4F7     		.ascii	"\244\367"
 6680 0784 A4F8     		.ascii	"\244\370"
 6681 0786 A541     		.ascii	"\245A"
 6682 0788 A542     		.ascii	"\245B"
 6683 078a A545     		.ascii	"\245E"
 6684 078c A549     		.ascii	"\245I"
 6685 078e A551     		.ascii	"\245Q"
 6686 0790 A553     		.ascii	"\245S"
 6687 0792 A555     		.ascii	"\245U"
 6688 0794 A556     		.ascii	"\245V"
 6689 0796 A557     		.ascii	"\245W"
 6690 0798 A55B     		.ascii	"\245["
 6691 079a A561     		.ascii	"\245a"
 6692 079c A562     		.ascii	"\245b"
 6693 079e A565     		.ascii	"\245e"
 6694 07a0 A569     		.ascii	"\245i"
 6695 07a2 A573     		.ascii	"\245s"
 6696 07a4 A575     		.ascii	"\245u"
 6697 07a6 A576     		.ascii	"\245v"
 6698 07a8 A577     		.ascii	"\245w"
 6699 07aa A57B     		.ascii	"\245{"
 6700 07ac A581     		.ascii	"\245\201"
 6701 07ae A585     		.ascii	"\245\205"
 6702 07b0 A5A1     		.ascii	"\245\241"
 6703 07b2 A5A2     		.ascii	"\245\242"
 6704 07b4 A5A3     		.ascii	"\245\243"
 6705 07b6 A5A5     		.ascii	"\245\245"
 6706 07b8 A5A9     		.ascii	"\245\251"
 6707 07ba A5B1     		.ascii	"\245\261"
 6708 07bc A5B3     		.ascii	"\245\263"
 6709 07be A5B5     		.ascii	"\245\265"
 6710 07c0 A5B7     		.ascii	"\245\267"
 6711 07c2 A5C1     		.ascii	"\245\301"
 6712 07c4 A5C5     		.ascii	"\245\305"
 6713 07c6 A5D6     		.ascii	"\245\326"
 6714 07c8 A5E1     		.ascii	"\245\341"
 6715 07ca A5F6     		.ascii	"\245\366"
 6716 07cc A641     		.ascii	"\246A"
 6717 07ce A642     		.ascii	"\246B"
 6718 07d0 A645     		.ascii	"\246E"
 6719 07d2 A649     		.ascii	"\246I"
 6720 07d4 A651     		.ascii	"\246Q"
 6721 07d6 A653     		.ascii	"\246S"
 6722 07d8 A661     		.ascii	"\246a"
 6723 07da A665     		.ascii	"\246e"
 6724 07dc A681     		.ascii	"\246\201"
 6725 07de A682     		.ascii	"\246\202"
 6726 07e0 A685     		.ascii	"\246\205"
 6727 07e2 A688     		.ascii	"\246\210"
 6728 07e4 A689     		.ascii	"\246\211"
 6729 07e6 A68A     		.ascii	"\246\212"
 6730 07e8 A68B     		.ascii	"\246\213"
 6731 07ea A691     		.ascii	"\246\221"
 6732 07ec A693     		.ascii	"\246\223"
 6733 07ee A695     		.ascii	"\246\225"
 6734 07f0 A697     		.ascii	"\246\227"
 6735 07f2 A69B     		.ascii	"\246\233"
 6736 07f4 A69C     		.ascii	"\246\234"
 6737 07f6 A6A1     		.ascii	"\246\241"
 6738 07f8 A6A9     		.ascii	"\246\251"
 6739 07fa A6B6     		.ascii	"\246\266"
 6740 07fc A6C1     		.ascii	"\246\301"
 6741 07fe A6E1     		.ascii	"\246\341"
 6742 0800 A6E2     		.ascii	"\246\342"
 6743 0802 A6E5     		.ascii	"\246\345"
 6744 0804 A6E9     		.ascii	"\246\351"
 6745 0806 A6F7     		.ascii	"\246\367"
 6746 0808 A741     		.ascii	"\247A"
 6747 080a A745     		.ascii	"\247E"
 6748 080c A749     		.ascii	"\247I"
 6749 080e A751     		.ascii	"\247Q"
 6750 0810 A755     		.ascii	"\247U"
 6751 0812 A757     		.ascii	"\247W"
 6752 0814 A761     		.ascii	"\247a"
 6753 0816 A762     		.ascii	"\247b"
 6754 0818 A765     		.ascii	"\247e"
 6755 081a A769     		.ascii	"\247i"
 6756 081c A771     		.ascii	"\247q"
 6757 081e A773     		.ascii	"\247s"
 6758 0820 A775     		.ascii	"\247u"
 6759 0822 A7A1     		.ascii	"\247\241"
 6760 0824 A7A2     		.ascii	"\247\242"
 6761 0826 A7A5     		.ascii	"\247\245"
 6762 0828 A7A9     		.ascii	"\247\251"
 6763 082a A7AB     		.ascii	"\247\253"
 6764 082c A7B1     		.ascii	"\247\261"
 6765 082e A7B3     		.ascii	"\247\263"
 6766 0830 A7B5     		.ascii	"\247\265"
 6767 0832 A7B7     		.ascii	"\247\267"
 6768 0834 A7B8     		.ascii	"\247\270"
 6769 0836 A7B9     		.ascii	"\247\271"
 6770 0838 A861     		.ascii	"\250a"
 6771 083a A862     		.ascii	"\250b"
 6772 083c A865     		.ascii	"\250e"
 6773 083e 2020     		.ascii	"  "
 6774 0840 2020     		.ascii	"  "
 6775 0842 A869     		.ascii	"\250i"
 6776 0844 A86B     		.ascii	"\250k"
 6777 0846 A871     		.ascii	"\250q"
 6778 0848 A873     		.ascii	"\250s"
 6779 084a A875     		.ascii	"\250u"
 6780 084c A876     		.ascii	"\250v"
 6781 084e A877     		.ascii	"\250w"
 6782 0850 A87D     		.ascii	"\250}"
 6783 0852 A881     		.ascii	"\250\201"
 6784 0854 A882     		.ascii	"\250\202"
 6785 0856 A885     		.ascii	"\250\205"
 6786 0858 A889     		.ascii	"\250\211"
 6787 085a A891     		.ascii	"\250\221"
 6788 085c A893     		.ascii	"\250\223"
 6789 085e A895     		.ascii	"\250\225"
 6790 0860 A896     		.ascii	"\250\226"
 6791 0862 A897     		.ascii	"\250\227"
 6792 0864 A8A1     		.ascii	"\250\241"
 6793 0866 A8A2     		.ascii	"\250\242"
 6794 0868 A8B1     		.ascii	"\250\261"
 6795 086a A8E1     		.ascii	"\250\341"
 6796 086c A8E2     		.ascii	"\250\342"
 6797 086e A8E5     		.ascii	"\250\345"
 6798 0870 A8E8     		.ascii	"\250\350"
 6799 0872 A8E9     		.ascii	"\250\351"
 6800 0874 A8F1     		.ascii	"\250\361"
 6801 0876 A8F5     		.ascii	"\250\365"
 6802 0878 A8F6     		.ascii	"\250\366"
 6803 087a A8F7     		.ascii	"\250\367"
 6804 087c A941     		.ascii	"\251A"
 6805 087e A957     		.ascii	"\251W"
 6806 0880 A961     		.ascii	"\251a"
 6807 0882 A962     		.ascii	"\251b"
 6808 0884 A971     		.ascii	"\251q"
 6809 0886 A973     		.ascii	"\251s"
 6810 0888 A975     		.ascii	"\251u"
 6811 088a A976     		.ascii	"\251v"
 6812 088c A977     		.ascii	"\251w"
 6813 088e A9A1     		.ascii	"\251\241"
 6814 0890 A9A2     		.ascii	"\251\242"
 6815 0892 A9A5     		.ascii	"\251\245"
 6816 0894 A9A9     		.ascii	"\251\251"
 6817 0896 A9B1     		.ascii	"\251\261"
 6818 0898 A9B3     		.ascii	"\251\263"
 6819 089a A9B7     		.ascii	"\251\267"
 6820 089c AA41     		.ascii	"\252A"
 6821 089e AA61     		.ascii	"\252a"
 6822 08a0 AA77     		.ascii	"\252w"
 6823 08a2 AA81     		.ascii	"\252\201"
 6824 08a4 AA82     		.ascii	"\252\202"
 6825 08a6 AA85     		.ascii	"\252\205"
 6826 08a8 AA89     		.ascii	"\252\211"
 6827 08aa AA91     		.ascii	"\252\221"
 6828 08ac AA95     		.ascii	"\252\225"
 6829 08ae AA97     		.ascii	"\252\227"
 6830 08b0 AB41     		.ascii	"\253A"
 6831 08b2 AB57     		.ascii	"\253W"
 6832 08b4 AB61     		.ascii	"\253a"
 6833 08b6 AB65     		.ascii	"\253e"
 6834 08b8 AB69     		.ascii	"\253i"
 6835 08ba AB71     		.ascii	"\253q"
 6836 08bc AB73     		.ascii	"\253s"
 6837 08be ABA1     		.ascii	"\253\241"
 6838 08c0 ABA2     		.ascii	"\253\242"
 6839 08c2 ABA5     		.ascii	"\253\245"
 6840 08c4 ABA9     		.ascii	"\253\251"
 6841 08c6 ABB1     		.ascii	"\253\261"
 6842 08c8 ABB3     		.ascii	"\253\263"
 6843 08ca ABB5     		.ascii	"\253\265"
 6844 08cc ABB7     		.ascii	"\253\267"
 6845 08ce AC61     		.ascii	"\254a"
 6846 08d0 AC62     		.ascii	"\254b"
 6847 08d2 AC64     		.ascii	"\254d"
 6848 08d4 AC65     		.ascii	"\254e"
 6849 08d6 AC68     		.ascii	"\254h"
 6850 08d8 AC69     		.ascii	"\254i"
 6851 08da AC6A     		.ascii	"\254j"
 6852 08dc AC6B     		.ascii	"\254k"
 6853 08de AC71     		.ascii	"\254q"
 6854 08e0 AC73     		.ascii	"\254s"
 6855 08e2 AC75     		.ascii	"\254u"
 6856 08e4 AC76     		.ascii	"\254v"
 6857 08e6 AC77     		.ascii	"\254w"
 6858 08e8 AC7B     		.ascii	"\254{"
 6859 08ea AC81     		.ascii	"\254\201"
 6860 08ec AC82     		.ascii	"\254\202"
 6861 08ee AC85     		.ascii	"\254\205"
 6862 08f0 AC89     		.ascii	"\254\211"
 6863 08f2 AC91     		.ascii	"\254\221"
 6864 08f4 AC93     		.ascii	"\254\223"
 6865 08f6 AC95     		.ascii	"\254\225"
 6866 08f8 AC96     		.ascii	"\254\226"
 6867 08fa AC97     		.ascii	"\254\227"
 6868 08fc ACA1     		.ascii	"\254\241"
 6869 08fe 2020     		.ascii	"  "
 6870 0900 2020     		.ascii	"  "
 6871 0902 ACA2     		.ascii	"\254\242"
 6872 0904 ACA5     		.ascii	"\254\245"
 6873 0906 ACA9     		.ascii	"\254\251"
 6874 0908 ACB1     		.ascii	"\254\261"
 6875 090a ACB3     		.ascii	"\254\263"
 6876 090c ACB5     		.ascii	"\254\265"
 6877 090e ACB7     		.ascii	"\254\267"
 6878 0910 ACC1     		.ascii	"\254\301"
 6879 0912 ACC5     		.ascii	"\254\305"
 6880 0914 ACC9     		.ascii	"\254\311"
 6881 0916 ACD1     		.ascii	"\254\321"
 6882 0918 ACD7     		.ascii	"\254\327"
 6883 091a ACE1     		.ascii	"\254\341"
 6884 091c ACE2     		.ascii	"\254\342"
 6885 091e ACE3     		.ascii	"\254\343"
 6886 0920 ACE4     		.ascii	"\254\344"
 6887 0922 ACE5     		.ascii	"\254\345"
 6888 0924 ACE8     		.ascii	"\254\350"
 6889 0926 ACE9     		.ascii	"\254\351"
 6890 0928 ACEB     		.ascii	"\254\353"
 6891 092a ACEC     		.ascii	"\254\354"
 6892 092c ACF1     		.ascii	"\254\361"
 6893 092e ACF3     		.ascii	"\254\363"
 6894 0930 ACF5     		.ascii	"\254\365"
 6895 0932 ACF6     		.ascii	"\254\366"
 6896 0934 ACF7     		.ascii	"\254\367"
 6897 0936 ACFC     		.ascii	"\254\374"
 6898 0938 AD41     		.ascii	"\255A"
 6899 093a AD42     		.ascii	"\255B"
 6900 093c AD45     		.ascii	"\255E"
 6901 093e AD49     		.ascii	"\255I"
 6902 0940 AD51     		.ascii	"\255Q"
 6903 0942 AD53     		.ascii	"\255S"
 6904 0944 AD55     		.ascii	"\255U"
 6905 0946 AD56     		.ascii	"\255V"
 6906 0948 AD57     		.ascii	"\255W"
 6907 094a AD61     		.ascii	"\255a"
 6908 094c AD62     		.ascii	"\255b"
 6909 094e AD65     		.ascii	"\255e"
 6910 0950 AD69     		.ascii	"\255i"
 6911 0952 AD71     		.ascii	"\255q"
 6912 0954 AD73     		.ascii	"\255s"
 6913 0956 AD75     		.ascii	"\255u"
 6914 0958 AD76     		.ascii	"\255v"
 6915 095a AD77     		.ascii	"\255w"
 6916 095c AD81     		.ascii	"\255\201"
 6917 095e AD85     		.ascii	"\255\205"
 6918 0960 AD89     		.ascii	"\255\211"
 6919 0962 AD97     		.ascii	"\255\227"
 6920 0964 ADA1     		.ascii	"\255\241"
 6921 0966 ADA2     		.ascii	"\255\242"
 6922 0968 ADA3     		.ascii	"\255\243"
 6923 096a ADA5     		.ascii	"\255\245"
 6924 096c ADA9     		.ascii	"\255\251"
 6925 096e ADAB     		.ascii	"\255\253"
 6926 0970 ADB1     		.ascii	"\255\261"
 6927 0972 ADB3     		.ascii	"\255\263"
 6928 0974 ADB5     		.ascii	"\255\265"
 6929 0976 ADB7     		.ascii	"\255\267"
 6930 0978 ADBB     		.ascii	"\255\273"
 6931 097a ADC1     		.ascii	"\255\301"
 6932 097c ADC2     		.ascii	"\255\302"
 6933 097e ADC5     		.ascii	"\255\305"
 6934 0980 ADC9     		.ascii	"\255\311"
 6935 0982 ADD7     		.ascii	"\255\327"
 6936 0984 ADE1     		.ascii	"\255\341"
 6937 0986 ADE5     		.ascii	"\255\345"
 6938 0988 ADE9     		.ascii	"\255\351"
 6939 098a ADF1     		.ascii	"\255\361"
 6940 098c ADF5     		.ascii	"\255\365"
 6941 098e ADF6     		.ascii	"\255\366"
 6942 0990 AE41     		.ascii	"\256A"
 6943 0992 AE45     		.ascii	"\256E"
 6944 0994 AE49     		.ascii	"\256I"
 6945 0996 AE51     		.ascii	"\256Q"
 6946 0998 AE53     		.ascii	"\256S"
 6947 099a AE55     		.ascii	"\256U"
 6948 099c AE61     		.ascii	"\256a"
 6949 099e AE62     		.ascii	"\256b"
 6950 09a0 AE65     		.ascii	"\256e"
 6951 09a2 AE69     		.ascii	"\256i"
 6952 09a4 AE71     		.ascii	"\256q"
 6953 09a6 AE73     		.ascii	"\256s"
 6954 09a8 AE75     		.ascii	"\256u"
 6955 09aa AE77     		.ascii	"\256w"
 6956 09ac AE81     		.ascii	"\256\201"
 6957 09ae AE82     		.ascii	"\256\202"
 6958 09b0 AE85     		.ascii	"\256\205"
 6959 09b2 AE88     		.ascii	"\256\210"
 6960 09b4 AE89     		.ascii	"\256\211"
 6961 09b6 AE91     		.ascii	"\256\221"
 6962 09b8 AE93     		.ascii	"\256\223"
 6963 09ba AE95     		.ascii	"\256\225"
 6964 09bc AE97     		.ascii	"\256\227"
 6965 09be 2020     		.ascii	"  "
 6966 09c0 2020     		.ascii	"  "
 6967 09c2 AE99     		.ascii	"\256\231"
 6968 09c4 AE9B     		.ascii	"\256\233"
 6969 09c6 AE9C     		.ascii	"\256\234"
 6970 09c8 AEA1     		.ascii	"\256\241"
 6971 09ca AEB6     		.ascii	"\256\266"
 6972 09cc AEC1     		.ascii	"\256\301"
 6973 09ce AEC2     		.ascii	"\256\302"
 6974 09d0 AEC5     		.ascii	"\256\305"
 6975 09d2 AEC9     		.ascii	"\256\311"
 6976 09d4 AED1     		.ascii	"\256\321"
 6977 09d6 AED7     		.ascii	"\256\327"
 6978 09d8 AEE1     		.ascii	"\256\341"
 6979 09da AEE2     		.ascii	"\256\342"
 6980 09dc AEE5     		.ascii	"\256\345"
 6981 09de AEE9     		.ascii	"\256\351"
 6982 09e0 AEF1     		.ascii	"\256\361"
 6983 09e2 AEF3     		.ascii	"\256\363"
 6984 09e4 AEF5     		.ascii	"\256\365"
 6985 09e6 AEF7     		.ascii	"\256\367"
 6986 09e8 AF41     		.ascii	"\257A"
 6987 09ea AF42     		.ascii	"\257B"
 6988 09ec AF49     		.ascii	"\257I"
 6989 09ee AF51     		.ascii	"\257Q"
 6990 09f0 AF55     		.ascii	"\257U"
 6991 09f2 AF57     		.ascii	"\257W"
 6992 09f4 AF61     		.ascii	"\257a"
 6993 09f6 AF62     		.ascii	"\257b"
 6994 09f8 AF65     		.ascii	"\257e"
 6995 09fa AF69     		.ascii	"\257i"
 6996 09fc AF6A     		.ascii	"\257j"
 6997 09fe AF71     		.ascii	"\257q"
 6998 0a00 AF73     		.ascii	"\257s"
 6999 0a02 AF75     		.ascii	"\257u"
 7000 0a04 AF77     		.ascii	"\257w"
 7001 0a06 AFA1     		.ascii	"\257\241"
 7002 0a08 AFA2     		.ascii	"\257\242"
 7003 0a0a AFA5     		.ascii	"\257\245"
 7004 0a0c AFA8     		.ascii	"\257\250"
 7005 0a0e AFA9     		.ascii	"\257\251"
 7006 0a10 AFB0     		.ascii	"\257\260"
 7007 0a12 AFB1     		.ascii	"\257\261"
 7008 0a14 AFB3     		.ascii	"\257\263"
 7009 0a16 AFB5     		.ascii	"\257\265"
 7010 0a18 AFB7     		.ascii	"\257\267"
 7011 0a1a AFBC     		.ascii	"\257\274"
 7012 0a1c B061     		.ascii	"\260a"
 7013 0a1e B062     		.ascii	"\260b"
 7014 0a20 B064     		.ascii	"\260d"
 7015 0a22 B065     		.ascii	"\260e"
 7016 0a24 B069     		.ascii	"\260i"
 7017 0a26 B071     		.ascii	"\260q"
 7018 0a28 B073     		.ascii	"\260s"
 7019 0a2a B076     		.ascii	"\260v"
 7020 0a2c B077     		.ascii	"\260w"
 7021 0a2e B07D     		.ascii	"\260}"
 7022 0a30 B081     		.ascii	"\260\201"
 7023 0a32 B082     		.ascii	"\260\202"
 7024 0a34 B085     		.ascii	"\260\205"
 7025 0a36 B089     		.ascii	"\260\211"
 7026 0a38 B091     		.ascii	"\260\221"
 7027 0a3a B093     		.ascii	"\260\223"
 7028 0a3c B096     		.ascii	"\260\226"
 7029 0a3e B097     		.ascii	"\260\227"
 7030 0a40 B0B7     		.ascii	"\260\267"
 7031 0a42 B0E1     		.ascii	"\260\341"
 7032 0a44 B0E2     		.ascii	"\260\342"
 7033 0a46 B0E5     		.ascii	"\260\345"
 7034 0a48 B0E9     		.ascii	"\260\351"
 7035 0a4a B0EB     		.ascii	"\260\353"
 7036 0a4c B0F1     		.ascii	"\260\361"
 7037 0a4e B0F3     		.ascii	"\260\363"
 7038 0a50 B0F6     		.ascii	"\260\366"
 7039 0a52 B0F7     		.ascii	"\260\367"
 7040 0a54 B141     		.ascii	"\261A"
 7041 0a56 B145     		.ascii	"\261E"
 7042 0a58 B149     		.ascii	"\261I"
 7043 0a5a B185     		.ascii	"\261\205"
 7044 0a5c B1A1     		.ascii	"\261\241"
 7045 0a5e B1A2     		.ascii	"\261\242"
 7046 0a60 B1A5     		.ascii	"\261\245"
 7047 0a62 B1A8     		.ascii	"\261\250"
 7048 0a64 B1A9     		.ascii	"\261\251"
 7049 0a66 B1AB     		.ascii	"\261\253"
 7050 0a68 B1B1     		.ascii	"\261\261"
 7051 0a6a B1B3     		.ascii	"\261\263"
 7052 0a6c B1B7     		.ascii	"\261\267"
 7053 0a6e B1C1     		.ascii	"\261\301"
 7054 0a70 B1C2     		.ascii	"\261\302"
 7055 0a72 B1C5     		.ascii	"\261\305"
 7056 0a74 B1D6     		.ascii	"\261\326"
 7057 0a76 B1E1     		.ascii	"\261\341"
 7058 0a78 B1F6     		.ascii	"\261\366"
 7059 0a7a B241     		.ascii	"\262A"
 7060 0a7c B245     		.ascii	"\262E"
 7061 0a7e 2020     		.ascii	"  "
 7062 0a80 2020     		.ascii	"  "
 7063 0a82 B249     		.ascii	"\262I"
 7064 0a84 B251     		.ascii	"\262Q"
 7065 0a86 B253     		.ascii	"\262S"
 7066 0a88 B261     		.ascii	"\262a"
 7067 0a8a B281     		.ascii	"\262\201"
 7068 0a8c B282     		.ascii	"\262\202"
 7069 0a8e B285     		.ascii	"\262\205"
 7070 0a90 B289     		.ascii	"\262\211"
 7071 0a92 B291     		.ascii	"\262\221"
 7072 0a94 B293     		.ascii	"\262\223"
 7073 0a96 B297     		.ascii	"\262\227"
 7074 0a98 B2A1     		.ascii	"\262\241"
 7075 0a9a B2B6     		.ascii	"\262\266"
 7076 0a9c B2C1     		.ascii	"\262\301"
 7077 0a9e B2E1     		.ascii	"\262\341"
 7078 0aa0 B2E5     		.ascii	"\262\345"
 7079 0aa2 B357     		.ascii	"\263W"
 7080 0aa4 B361     		.ascii	"\263a"
 7081 0aa6 B362     		.ascii	"\263b"
 7082 0aa8 B365     		.ascii	"\263e"
 7083 0aaa B369     		.ascii	"\263i"
 7084 0aac B36B     		.ascii	"\263k"
 7085 0aae B370     		.ascii	"\263p"
 7086 0ab0 B371     		.ascii	"\263q"
 7087 0ab2 B373     		.ascii	"\263s"
 7088 0ab4 B381     		.ascii	"\263\201"
 7089 0ab6 B385     		.ascii	"\263\205"
 7090 0ab8 B389     		.ascii	"\263\211"
 7091 0aba B391     		.ascii	"\263\221"
 7092 0abc B3A1     		.ascii	"\263\241"
 7093 0abe B3A2     		.ascii	"\263\242"
 7094 0ac0 B3A5     		.ascii	"\263\245"
 7095 0ac2 B3A9     		.ascii	"\263\251"
 7096 0ac4 B3B1     		.ascii	"\263\261"
 7097 0ac6 B3B3     		.ascii	"\263\263"
 7098 0ac8 B3B5     		.ascii	"\263\265"
 7099 0aca B3B7     		.ascii	"\263\267"
 7100 0acc B461     		.ascii	"\264a"
 7101 0ace B462     		.ascii	"\264b"
 7102 0ad0 B465     		.ascii	"\264e"
 7103 0ad2 B466     		.ascii	"\264f"
 7104 0ad4 B467     		.ascii	"\264g"
 7105 0ad6 B469     		.ascii	"\264i"
 7106 0ad8 B46A     		.ascii	"\264j"
 7107 0ada B46B     		.ascii	"\264k"
 7108 0adc B470     		.ascii	"\264p"
 7109 0ade B471     		.ascii	"\264q"
 7110 0ae0 B473     		.ascii	"\264s"
 7111 0ae2 B475     		.ascii	"\264u"
 7112 0ae4 B476     		.ascii	"\264v"
 7113 0ae6 B477     		.ascii	"\264w"
 7114 0ae8 B47B     		.ascii	"\264{"
 7115 0aea B47C     		.ascii	"\264|"
 7116 0aec B481     		.ascii	"\264\201"
 7117 0aee B482     		.ascii	"\264\202"
 7118 0af0 B485     		.ascii	"\264\205"
 7119 0af2 B489     		.ascii	"\264\211"
 7120 0af4 B491     		.ascii	"\264\221"
 7121 0af6 B493     		.ascii	"\264\223"
 7122 0af8 B495     		.ascii	"\264\225"
 7123 0afa B496     		.ascii	"\264\226"
 7124 0afc B497     		.ascii	"\264\227"
 7125 0afe B4A1     		.ascii	"\264\241"
 7126 0b00 B4A2     		.ascii	"\264\242"
 7127 0b02 B4A5     		.ascii	"\264\245"
 7128 0b04 B4A9     		.ascii	"\264\251"
 7129 0b06 B4AC     		.ascii	"\264\254"
 7130 0b08 B4B1     		.ascii	"\264\261"
 7131 0b0a B4B3     		.ascii	"\264\263"
 7132 0b0c B4B5     		.ascii	"\264\265"
 7133 0b0e B4B7     		.ascii	"\264\267"
 7134 0b10 B4BB     		.ascii	"\264\273"
 7135 0b12 B4BD     		.ascii	"\264\275"
 7136 0b14 B4C1     		.ascii	"\264\301"
 7137 0b16 B4C5     		.ascii	"\264\305"
 7138 0b18 B4C9     		.ascii	"\264\311"
 7139 0b1a B4D3     		.ascii	"\264\323"
 7140 0b1c B4E1     		.ascii	"\264\341"
 7141 0b1e B4E2     		.ascii	"\264\342"
 7142 0b20 B4E5     		.ascii	"\264\345"
 7143 0b22 B4E6     		.ascii	"\264\346"
 7144 0b24 B4E8     		.ascii	"\264\350"
 7145 0b26 B4E9     		.ascii	"\264\351"
 7146 0b28 B4EA     		.ascii	"\264\352"
 7147 0b2a B4EB     		.ascii	"\264\353"
 7148 0b2c B4F1     		.ascii	"\264\361"
 7149 0b2e B4F3     		.ascii	"\264\363"
 7150 0b30 B4F4     		.ascii	"\264\364"
 7151 0b32 B4F5     		.ascii	"\264\365"
 7152 0b34 B4F6     		.ascii	"\264\366"
 7153 0b36 B4F7     		.ascii	"\264\367"
 7154 0b38 B4F8     		.ascii	"\264\370"
 7155 0b3a B4FA     		.ascii	"\264\372"
 7156 0b3c B4FC     		.ascii	"\264\374"
 7157 0b3e 2020     		.ascii	"  "
 7158 0b40 2020     		.ascii	"  "
 7159 0b42 B541     		.ascii	"\265A"
 7160 0b44 B542     		.ascii	"\265B"
 7161 0b46 B545     		.ascii	"\265E"
 7162 0b48 B549     		.ascii	"\265I"
 7163 0b4a B551     		.ascii	"\265Q"
 7164 0b4c B553     		.ascii	"\265S"
 7165 0b4e B555     		.ascii	"\265U"
 7166 0b50 B557     		.ascii	"\265W"
 7167 0b52 B561     		.ascii	"\265a"
 7168 0b54 B562     		.ascii	"\265b"
 7169 0b56 B563     		.ascii	"\265c"
 7170 0b58 B565     		.ascii	"\265e"
 7171 0b5a B569     		.ascii	"\265i"
 7172 0b5c B56B     		.ascii	"\265k"
 7173 0b5e B56C     		.ascii	"\265l"
 7174 0b60 B571     		.ascii	"\265q"
 7175 0b62 B573     		.ascii	"\265s"
 7176 0b64 B574     		.ascii	"\265t"
 7177 0b66 B575     		.ascii	"\265u"
 7178 0b68 B576     		.ascii	"\265v"
 7179 0b6a B577     		.ascii	"\265w"
 7180 0b6c B57B     		.ascii	"\265{"
 7181 0b6e B57C     		.ascii	"\265|"
 7182 0b70 B57D     		.ascii	"\265}"
 7183 0b72 B581     		.ascii	"\265\201"
 7184 0b74 B585     		.ascii	"\265\205"
 7185 0b76 B589     		.ascii	"\265\211"
 7186 0b78 B591     		.ascii	"\265\221"
 7187 0b7a B593     		.ascii	"\265\223"
 7188 0b7c B595     		.ascii	"\265\225"
 7189 0b7e B596     		.ascii	"\265\226"
 7190 0b80 B5A1     		.ascii	"\265\241"
 7191 0b82 B5A2     		.ascii	"\265\242"
 7192 0b84 B5A5     		.ascii	"\265\245"
 7193 0b86 B5A9     		.ascii	"\265\251"
 7194 0b88 B5AA     		.ascii	"\265\252"
 7195 0b8a B5AB     		.ascii	"\265\253"
 7196 0b8c B5AD     		.ascii	"\265\255"
 7197 0b8e B5B0     		.ascii	"\265\260"
 7198 0b90 B5B1     		.ascii	"\265\261"
 7199 0b92 B5B3     		.ascii	"\265\263"
 7200 0b94 B5B5     		.ascii	"\265\265"
 7201 0b96 B5B7     		.ascii	"\265\267"
 7202 0b98 B5B9     		.ascii	"\265\271"
 7203 0b9a B5C1     		.ascii	"\265\301"
 7204 0b9c B5C2     		.ascii	"\265\302"
 7205 0b9e B5C5     		.ascii	"\265\305"
 7206 0ba0 B5C9     		.ascii	"\265\311"
 7207 0ba2 B5D1     		.ascii	"\265\321"
 7208 0ba4 B5D3     		.ascii	"\265\323"
 7209 0ba6 B5D5     		.ascii	"\265\325"
 7210 0ba8 B5D6     		.ascii	"\265\326"
 7211 0baa B5D7     		.ascii	"\265\327"
 7212 0bac B5E1     		.ascii	"\265\341"
 7213 0bae B5E2     		.ascii	"\265\342"
 7214 0bb0 B5E5     		.ascii	"\265\345"
 7215 0bb2 B5F1     		.ascii	"\265\361"
 7216 0bb4 B5F5     		.ascii	"\265\365"
 7217 0bb6 B5F7     		.ascii	"\265\367"
 7218 0bb8 B641     		.ascii	"\266A"
 7219 0bba B642     		.ascii	"\266B"
 7220 0bbc B645     		.ascii	"\266E"
 7221 0bbe B649     		.ascii	"\266I"
 7222 0bc0 B651     		.ascii	"\266Q"
 7223 0bc2 B653     		.ascii	"\266S"
 7224 0bc4 B655     		.ascii	"\266U"
 7225 0bc6 B657     		.ascii	"\266W"
 7226 0bc8 B661     		.ascii	"\266a"
 7227 0bca B662     		.ascii	"\266b"
 7228 0bcc B665     		.ascii	"\266e"
 7229 0bce B669     		.ascii	"\266i"
 7230 0bd0 B671     		.ascii	"\266q"
 7231 0bd2 B673     		.ascii	"\266s"
 7232 0bd4 B675     		.ascii	"\266u"
 7233 0bd6 B677     		.ascii	"\266w"
 7234 0bd8 B681     		.ascii	"\266\201"
 7235 0bda B682     		.ascii	"\266\202"
 7236 0bdc B685     		.ascii	"\266\205"
 7237 0bde B689     		.ascii	"\266\211"
 7238 0be0 B68A     		.ascii	"\266\212"
 7239 0be2 B68B     		.ascii	"\266\213"
 7240 0be4 B691     		.ascii	"\266\221"
 7241 0be6 B693     		.ascii	"\266\223"
 7242 0be8 B695     		.ascii	"\266\225"
 7243 0bea B697     		.ascii	"\266\227"
 7244 0bec B6A1     		.ascii	"\266\241"
 7245 0bee B6A2     		.ascii	"\266\242"
 7246 0bf0 B6A5     		.ascii	"\266\245"
 7247 0bf2 B6A9     		.ascii	"\266\251"
 7248 0bf4 B6B1     		.ascii	"\266\261"
 7249 0bf6 B6B3     		.ascii	"\266\263"
 7250 0bf8 B6B6     		.ascii	"\266\266"
 7251 0bfa B6B7     		.ascii	"\266\267"
 7252 0bfc B6C1     		.ascii	"\266\301"
 7253 0bfe 2020     		.ascii	"  "
 7254 0c00 2020     		.ascii	"  "
 7255 0c02 B6C2     		.ascii	"\266\302"
 7256 0c04 B6C5     		.ascii	"\266\305"
 7257 0c06 B6C9     		.ascii	"\266\311"
 7258 0c08 B6D1     		.ascii	"\266\321"
 7259 0c0a B6D3     		.ascii	"\266\323"
 7260 0c0c B6D7     		.ascii	"\266\327"
 7261 0c0e B6E1     		.ascii	"\266\341"
 7262 0c10 B6E2     		.ascii	"\266\342"
 7263 0c12 B6E5     		.ascii	"\266\345"
 7264 0c14 B6E9     		.ascii	"\266\351"
 7265 0c16 B6F1     		.ascii	"\266\361"
 7266 0c18 B6F3     		.ascii	"\266\363"
 7267 0c1a B6F5     		.ascii	"\266\365"
 7268 0c1c B6F7     		.ascii	"\266\367"
 7269 0c1e B741     		.ascii	"\267A"
 7270 0c20 B742     		.ascii	"\267B"
 7271 0c22 B745     		.ascii	"\267E"
 7272 0c24 B749     		.ascii	"\267I"
 7273 0c26 B751     		.ascii	"\267Q"
 7274 0c28 B753     		.ascii	"\267S"
 7275 0c2a B755     		.ascii	"\267U"
 7276 0c2c B757     		.ascii	"\267W"
 7277 0c2e B759     		.ascii	"\267Y"
 7278 0c30 B761     		.ascii	"\267a"
 7279 0c32 B762     		.ascii	"\267b"
 7280 0c34 B765     		.ascii	"\267e"
 7281 0c36 B769     		.ascii	"\267i"
 7282 0c38 B76F     		.ascii	"\267o"
 7283 0c3a B771     		.ascii	"\267q"
 7284 0c3c B773     		.ascii	"\267s"
 7285 0c3e B775     		.ascii	"\267u"
 7286 0c40 B777     		.ascii	"\267w"
 7287 0c42 B778     		.ascii	"\267x"
 7288 0c44 B779     		.ascii	"\267y"
 7289 0c46 B77A     		.ascii	"\267z"
 7290 0c48 B77B     		.ascii	"\267{"
 7291 0c4a B77C     		.ascii	"\267|"
 7292 0c4c B77D     		.ascii	"\267}"
 7293 0c4e B781     		.ascii	"\267\201"
 7294 0c50 B785     		.ascii	"\267\205"
 7295 0c52 B789     		.ascii	"\267\211"
 7296 0c54 B791     		.ascii	"\267\221"
 7297 0c56 B795     		.ascii	"\267\225"
 7298 0c58 B7A1     		.ascii	"\267\241"
 7299 0c5a B7A2     		.ascii	"\267\242"
 7300 0c5c B7A5     		.ascii	"\267\245"
 7301 0c5e B7A9     		.ascii	"\267\251"
 7302 0c60 B7AA     		.ascii	"\267\252"
 7303 0c62 B7AB     		.ascii	"\267\253"
 7304 0c64 B7B0     		.ascii	"\267\260"
 7305 0c66 B7B1     		.ascii	"\267\261"
 7306 0c68 B7B3     		.ascii	"\267\263"
 7307 0c6a B7B5     		.ascii	"\267\265"
 7308 0c6c B7B6     		.ascii	"\267\266"
 7309 0c6e B7B7     		.ascii	"\267\267"
 7310 0c70 B7B8     		.ascii	"\267\270"
 7311 0c72 B7BC     		.ascii	"\267\274"
 7312 0c74 B861     		.ascii	"\270a"
 7313 0c76 B862     		.ascii	"\270b"
 7314 0c78 B865     		.ascii	"\270e"
 7315 0c7a B867     		.ascii	"\270g"
 7316 0c7c B868     		.ascii	"\270h"
 7317 0c7e B869     		.ascii	"\270i"
 7318 0c80 B86B     		.ascii	"\270k"
 7319 0c82 B871     		.ascii	"\270q"
 7320 0c84 B873     		.ascii	"\270s"
 7321 0c86 B875     		.ascii	"\270u"
 7322 0c88 B876     		.ascii	"\270v"
 7323 0c8a B877     		.ascii	"\270w"
 7324 0c8c B878     		.ascii	"\270x"
 7325 0c8e B881     		.ascii	"\270\201"
 7326 0c90 B882     		.ascii	"\270\202"
 7327 0c92 B885     		.ascii	"\270\205"
 7328 0c94 B889     		.ascii	"\270\211"
 7329 0c96 B891     		.ascii	"\270\221"
 7330 0c98 B893     		.ascii	"\270\223"
 7331 0c9a B895     		.ascii	"\270\225"
 7332 0c9c B896     		.ascii	"\270\226"
 7333 0c9e B897     		.ascii	"\270\227"
 7334 0ca0 B8A1     		.ascii	"\270\241"
 7335 0ca2 B8A2     		.ascii	"\270\242"
 7336 0ca4 B8A5     		.ascii	"\270\245"
 7337 0ca6 B8A7     		.ascii	"\270\247"
 7338 0ca8 B8A9     		.ascii	"\270\251"
 7339 0caa B8B1     		.ascii	"\270\261"
 7340 0cac B8B7     		.ascii	"\270\267"
 7341 0cae B8C1     		.ascii	"\270\301"
 7342 0cb0 B8C5     		.ascii	"\270\305"
 7343 0cb2 B8C9     		.ascii	"\270\311"
 7344 0cb4 B8E1     		.ascii	"\270\341"
 7345 0cb6 B8E2     		.ascii	"\270\342"
 7346 0cb8 B8E5     		.ascii	"\270\345"
 7347 0cba B8E9     		.ascii	"\270\351"
 7348 0cbc B8EB     		.ascii	"\270\353"
 7349 0cbe 2020     		.ascii	"  "
 7350 0cc0 2020     		.ascii	"  "
 7351 0cc2 B8F1     		.ascii	"\270\361"
 7352 0cc4 B8F3     		.ascii	"\270\363"
 7353 0cc6 B8F5     		.ascii	"\270\365"
 7354 0cc8 B8F7     		.ascii	"\270\367"
 7355 0cca B8F8     		.ascii	"\270\370"
 7356 0ccc B941     		.ascii	"\271A"
 7357 0cce B942     		.ascii	"\271B"
 7358 0cd0 B945     		.ascii	"\271E"
 7359 0cd2 B949     		.ascii	"\271I"
 7360 0cd4 B951     		.ascii	"\271Q"
 7361 0cd6 B953     		.ascii	"\271S"
 7362 0cd8 B955     		.ascii	"\271U"
 7363 0cda B957     		.ascii	"\271W"
 7364 0cdc B961     		.ascii	"\271a"
 7365 0cde B965     		.ascii	"\271e"
 7366 0ce0 B969     		.ascii	"\271i"
 7367 0ce2 B971     		.ascii	"\271q"
 7368 0ce4 B973     		.ascii	"\271s"
 7369 0ce6 B976     		.ascii	"\271v"
 7370 0ce8 B977     		.ascii	"\271w"
 7371 0cea B981     		.ascii	"\271\201"
 7372 0cec B9A1     		.ascii	"\271\241"
 7373 0cee B9A2     		.ascii	"\271\242"
 7374 0cf0 B9A5     		.ascii	"\271\245"
 7375 0cf2 B9A9     		.ascii	"\271\251"
 7376 0cf4 B9AB     		.ascii	"\271\253"
 7377 0cf6 B9B1     		.ascii	"\271\261"
 7378 0cf8 B9B3     		.ascii	"\271\263"
 7379 0cfa B9B5     		.ascii	"\271\265"
 7380 0cfc B9B7     		.ascii	"\271\267"
 7381 0cfe B9B8     		.ascii	"\271\270"
 7382 0d00 B9B9     		.ascii	"\271\271"
 7383 0d02 B9BD     		.ascii	"\271\275"
 7384 0d04 B9C1     		.ascii	"\271\301"
 7385 0d06 B9C2     		.ascii	"\271\302"
 7386 0d08 B9C9     		.ascii	"\271\311"
 7387 0d0a B9D3     		.ascii	"\271\323"
 7388 0d0c B9D5     		.ascii	"\271\325"
 7389 0d0e B9D7     		.ascii	"\271\327"
 7390 0d10 B9E1     		.ascii	"\271\341"
 7391 0d12 B9F6     		.ascii	"\271\366"
 7392 0d14 B9F7     		.ascii	"\271\367"
 7393 0d16 BA41     		.ascii	"\272A"
 7394 0d18 BA45     		.ascii	"\272E"
 7395 0d1a BA49     		.ascii	"\272I"
 7396 0d1c BA51     		.ascii	"\272Q"
 7397 0d1e BA53     		.ascii	"\272S"
 7398 0d20 BA55     		.ascii	"\272U"
 7399 0d22 BA57     		.ascii	"\272W"
 7400 0d24 BA61     		.ascii	"\272a"
 7401 0d26 BA62     		.ascii	"\272b"
 7402 0d28 BA65     		.ascii	"\272e"
 7403 0d2a BA77     		.ascii	"\272w"
 7404 0d2c BA81     		.ascii	"\272\201"
 7405 0d2e BA82     		.ascii	"\272\202"
 7406 0d30 BA85     		.ascii	"\272\205"
 7407 0d32 BA89     		.ascii	"\272\211"
 7408 0d34 BA8A     		.ascii	"\272\212"
 7409 0d36 BA8B     		.ascii	"\272\213"
 7410 0d38 BA91     		.ascii	"\272\221"
 7411 0d3a BA93     		.ascii	"\272\223"
 7412 0d3c BA95     		.ascii	"\272\225"
 7413 0d3e BA97     		.ascii	"\272\227"
 7414 0d40 BAA1     		.ascii	"\272\241"
 7415 0d42 BAB6     		.ascii	"\272\266"
 7416 0d44 BAC1     		.ascii	"\272\301"
 7417 0d46 BAE1     		.ascii	"\272\341"
 7418 0d48 BAE2     		.ascii	"\272\342"
 7419 0d4a BAE5     		.ascii	"\272\345"
 7420 0d4c BAE9     		.ascii	"\272\351"
 7421 0d4e BAF1     		.ascii	"\272\361"
 7422 0d50 BAF3     		.ascii	"\272\363"
 7423 0d52 BAF5     		.ascii	"\272\365"
 7424 0d54 BB41     		.ascii	"\273A"
 7425 0d56 BB45     		.ascii	"\273E"
 7426 0d58 BB49     		.ascii	"\273I"
 7427 0d5a BB51     		.ascii	"\273Q"
 7428 0d5c BB61     		.ascii	"\273a"
 7429 0d5e BB62     		.ascii	"\273b"
 7430 0d60 BB65     		.ascii	"\273e"
 7431 0d62 BB69     		.ascii	"\273i"
 7432 0d64 BB71     		.ascii	"\273q"
 7433 0d66 BB73     		.ascii	"\273s"
 7434 0d68 BB75     		.ascii	"\273u"
 7435 0d6a BB77     		.ascii	"\273w"
 7436 0d6c BBA1     		.ascii	"\273\241"
 7437 0d6e BBA2     		.ascii	"\273\242"
 7438 0d70 BBA5     		.ascii	"\273\245"
 7439 0d72 BBA8     		.ascii	"\273\250"
 7440 0d74 BBA9     		.ascii	"\273\251"
 7441 0d76 BBAB     		.ascii	"\273\253"
 7442 0d78 BBB1     		.ascii	"\273\261"
 7443 0d7a BBB3     		.ascii	"\273\263"
 7444 0d7c BBB5     		.ascii	"\273\265"
 7445 0d7e 2020     		.ascii	"  "
 7446 0d80 2020     		.ascii	"  "
 7447 0d82 BBB7     		.ascii	"\273\267"
 7448 0d84 BBB8     		.ascii	"\273\270"
 7449 0d86 BBBB     		.ascii	"\273\273"
 7450 0d88 BBBC     		.ascii	"\273\274"
 7451 0d8a BC61     		.ascii	"\274a"
 7452 0d8c BC62     		.ascii	"\274b"
 7453 0d8e BC65     		.ascii	"\274e"
 7454 0d90 BC67     		.ascii	"\274g"
 7455 0d92 BC69     		.ascii	"\274i"
 7456 0d94 BC6C     		.ascii	"\274l"
 7457 0d96 BC71     		.ascii	"\274q"
 7458 0d98 BC73     		.ascii	"\274s"
 7459 0d9a BC75     		.ascii	"\274u"
 7460 0d9c BC76     		.ascii	"\274v"
 7461 0d9e BC77     		.ascii	"\274w"
 7462 0da0 BC81     		.ascii	"\274\201"
 7463 0da2 BC82     		.ascii	"\274\202"
 7464 0da4 BC85     		.ascii	"\274\205"
 7465 0da6 BC89     		.ascii	"\274\211"
 7466 0da8 BC91     		.ascii	"\274\221"
 7467 0daa BC93     		.ascii	"\274\223"
 7468 0dac BC95     		.ascii	"\274\225"
 7469 0dae BC96     		.ascii	"\274\226"
 7470 0db0 BC97     		.ascii	"\274\227"
 7471 0db2 BCA1     		.ascii	"\274\241"
 7472 0db4 BCA5     		.ascii	"\274\245"
 7473 0db6 BCB7     		.ascii	"\274\267"
 7474 0db8 BCE1     		.ascii	"\274\341"
 7475 0dba BCE2     		.ascii	"\274\342"
 7476 0dbc BCE5     		.ascii	"\274\345"
 7477 0dbe BCE9     		.ascii	"\274\351"
 7478 0dc0 BCF1     		.ascii	"\274\361"
 7479 0dc2 BCF3     		.ascii	"\274\363"
 7480 0dc4 BCF5     		.ascii	"\274\365"
 7481 0dc6 BCF6     		.ascii	"\274\366"
 7482 0dc8 BCF7     		.ascii	"\274\367"
 7483 0dca BD41     		.ascii	"\275A"
 7484 0dcc BD57     		.ascii	"\275W"
 7485 0dce BD61     		.ascii	"\275a"
 7486 0dd0 BD76     		.ascii	"\275v"
 7487 0dd2 BDA1     		.ascii	"\275\241"
 7488 0dd4 BDA2     		.ascii	"\275\242"
 7489 0dd6 BDA5     		.ascii	"\275\245"
 7490 0dd8 BDA9     		.ascii	"\275\251"
 7491 0dda BDB1     		.ascii	"\275\261"
 7492 0ddc BDB3     		.ascii	"\275\263"
 7493 0dde BDB5     		.ascii	"\275\265"
 7494 0de0 BDB7     		.ascii	"\275\267"
 7495 0de2 BDB9     		.ascii	"\275\271"
 7496 0de4 BDC1     		.ascii	"\275\301"
 7497 0de6 BDC2     		.ascii	"\275\302"
 7498 0de8 BDC9     		.ascii	"\275\311"
 7499 0dea BDD6     		.ascii	"\275\326"
 7500 0dec BDE1     		.ascii	"\275\341"
 7501 0dee BDF6     		.ascii	"\275\366"
 7502 0df0 BE41     		.ascii	"\276A"
 7503 0df2 BE45     		.ascii	"\276E"
 7504 0df4 BE49     		.ascii	"\276I"
 7505 0df6 BE51     		.ascii	"\276Q"
 7506 0df8 BE53     		.ascii	"\276S"
 7507 0dfa BE77     		.ascii	"\276w"
 7508 0dfc BE81     		.ascii	"\276\201"
 7509 0dfe BE82     		.ascii	"\276\202"
 7510 0e00 BE85     		.ascii	"\276\205"
 7511 0e02 BE89     		.ascii	"\276\211"
 7512 0e04 BE91     		.ascii	"\276\221"
 7513 0e06 BE93     		.ascii	"\276\223"
 7514 0e08 BE97     		.ascii	"\276\227"
 7515 0e0a BEA1     		.ascii	"\276\241"
 7516 0e0c BEB6     		.ascii	"\276\266"
 7517 0e0e BEB7     		.ascii	"\276\267"
 7518 0e10 BEE1     		.ascii	"\276\341"
 7519 0e12 BF41     		.ascii	"\277A"
 7520 0e14 BF61     		.ascii	"\277a"
 7521 0e16 BF71     		.ascii	"\277q"
 7522 0e18 BF75     		.ascii	"\277u"
 7523 0e1a BF77     		.ascii	"\277w"
 7524 0e1c BFA1     		.ascii	"\277\241"
 7525 0e1e BFA2     		.ascii	"\277\242"
 7526 0e20 BFA5     		.ascii	"\277\245"
 7527 0e22 BFA9     		.ascii	"\277\251"
 7528 0e24 BFB1     		.ascii	"\277\261"
 7529 0e26 BFB3     		.ascii	"\277\263"
 7530 0e28 BFB7     		.ascii	"\277\267"
 7531 0e2a BFB8     		.ascii	"\277\270"
 7532 0e2c BFBD     		.ascii	"\277\275"
 7533 0e2e C061     		.ascii	"\300a"
 7534 0e30 C062     		.ascii	"\300b"
 7535 0e32 C065     		.ascii	"\300e"
 7536 0e34 C067     		.ascii	"\300g"
 7537 0e36 C069     		.ascii	"\300i"
 7538 0e38 C071     		.ascii	"\300q"
 7539 0e3a C073     		.ascii	"\300s"
 7540 0e3c C075     		.ascii	"\300u"
 7541 0e3e 2020     		.ascii	"  "
 7542 0e40 2020     		.ascii	"  "
 7543 0e42 C076     		.ascii	"\300v"
 7544 0e44 C077     		.ascii	"\300w"
 7545 0e46 C078     		.ascii	"\300x"
 7546 0e48 C081     		.ascii	"\300\201"
 7547 0e4a C082     		.ascii	"\300\202"
 7548 0e4c C085     		.ascii	"\300\205"
 7549 0e4e C089     		.ascii	"\300\211"
 7550 0e50 C091     		.ascii	"\300\221"
 7551 0e52 C093     		.ascii	"\300\223"
 7552 0e54 C095     		.ascii	"\300\225"
 7553 0e56 C096     		.ascii	"\300\226"
 7554 0e58 C097     		.ascii	"\300\227"
 7555 0e5a C0A1     		.ascii	"\300\241"
 7556 0e5c C0A5     		.ascii	"\300\245"
 7557 0e5e C0A7     		.ascii	"\300\247"
 7558 0e60 C0A9     		.ascii	"\300\251"
 7559 0e62 C0B1     		.ascii	"\300\261"
 7560 0e64 C0B7     		.ascii	"\300\267"
 7561 0e66 C0E1     		.ascii	"\300\341"
 7562 0e68 C0E2     		.ascii	"\300\342"
 7563 0e6a C0E5     		.ascii	"\300\345"
 7564 0e6c C0E9     		.ascii	"\300\351"
 7565 0e6e C0F1     		.ascii	"\300\361"
 7566 0e70 C0F3     		.ascii	"\300\363"
 7567 0e72 C0F5     		.ascii	"\300\365"
 7568 0e74 C0F6     		.ascii	"\300\366"
 7569 0e76 C0F7     		.ascii	"\300\367"
 7570 0e78 C141     		.ascii	"\301A"
 7571 0e7a C142     		.ascii	"\301B"
 7572 0e7c C145     		.ascii	"\301E"
 7573 0e7e C149     		.ascii	"\301I"
 7574 0e80 C151     		.ascii	"\301Q"
 7575 0e82 C153     		.ascii	"\301S"
 7576 0e84 C155     		.ascii	"\301U"
 7577 0e86 C157     		.ascii	"\301W"
 7578 0e88 C161     		.ascii	"\301a"
 7579 0e8a C165     		.ascii	"\301e"
 7580 0e8c C176     		.ascii	"\301v"
 7581 0e8e C181     		.ascii	"\301\201"
 7582 0e90 C185     		.ascii	"\301\205"
 7583 0e92 C197     		.ascii	"\301\227"
 7584 0e94 C1A1     		.ascii	"\301\241"
 7585 0e96 C1A2     		.ascii	"\301\242"
 7586 0e98 C1A5     		.ascii	"\301\245"
 7587 0e9a C1A9     		.ascii	"\301\251"
 7588 0e9c C1B1     		.ascii	"\301\261"
 7589 0e9e C1B3     		.ascii	"\301\263"
 7590 0ea0 C1B5     		.ascii	"\301\265"
 7591 0ea2 C1B7     		.ascii	"\301\267"
 7592 0ea4 C1C1     		.ascii	"\301\301"
 7593 0ea6 C1C5     		.ascii	"\301\305"
 7594 0ea8 C1C9     		.ascii	"\301\311"
 7595 0eaa C1D7     		.ascii	"\301\327"
 7596 0eac C241     		.ascii	"\302A"
 7597 0eae C245     		.ascii	"\302E"
 7598 0eb0 C249     		.ascii	"\302I"
 7599 0eb2 C251     		.ascii	"\302Q"
 7600 0eb4 C253     		.ascii	"\302S"
 7601 0eb6 C255     		.ascii	"\302U"
 7602 0eb8 C257     		.ascii	"\302W"
 7603 0eba C261     		.ascii	"\302a"
 7604 0ebc C271     		.ascii	"\302q"
 7605 0ebe C281     		.ascii	"\302\201"
 7606 0ec0 C282     		.ascii	"\302\202"
 7607 0ec2 C285     		.ascii	"\302\205"
 7608 0ec4 C289     		.ascii	"\302\211"
 7609 0ec6 C291     		.ascii	"\302\221"
 7610 0ec8 C293     		.ascii	"\302\223"
 7611 0eca C295     		.ascii	"\302\225"
 7612 0ecc C297     		.ascii	"\302\227"
 7613 0ece C2A1     		.ascii	"\302\241"
 7614 0ed0 C2B6     		.ascii	"\302\266"
 7615 0ed2 C2C1     		.ascii	"\302\301"
 7616 0ed4 C2C5     		.ascii	"\302\305"
 7617 0ed6 C2E1     		.ascii	"\302\341"
 7618 0ed8 C2E5     		.ascii	"\302\345"
 7619 0eda C2E9     		.ascii	"\302\351"
 7620 0edc C2F1     		.ascii	"\302\361"
 7621 0ede C2F3     		.ascii	"\302\363"
 7622 0ee0 C2F5     		.ascii	"\302\365"
 7623 0ee2 C2F7     		.ascii	"\302\367"
 7624 0ee4 C341     		.ascii	"\303A"
 7625 0ee6 C345     		.ascii	"\303E"
 7626 0ee8 C349     		.ascii	"\303I"
 7627 0eea C351     		.ascii	"\303Q"
 7628 0eec C357     		.ascii	"\303W"
 7629 0eee C361     		.ascii	"\303a"
 7630 0ef0 C362     		.ascii	"\303b"
 7631 0ef2 C365     		.ascii	"\303e"
 7632 0ef4 C369     		.ascii	"\303i"
 7633 0ef6 C371     		.ascii	"\303q"
 7634 0ef8 C373     		.ascii	"\303s"
 7635 0efa C375     		.ascii	"\303u"
 7636 0efc C377     		.ascii	"\303w"
 7637 0efe 2020     		.ascii	"  "
 7638 0f00 2020     		.ascii	"  "
 7639 0f02 C3A1     		.ascii	"\303\241"
 7640 0f04 C3A2     		.ascii	"\303\242"
 7641 0f06 C3A5     		.ascii	"\303\245"
 7642 0f08 C3A8     		.ascii	"\303\250"
 7643 0f0a C3A9     		.ascii	"\303\251"
 7644 0f0c C3AA     		.ascii	"\303\252"
 7645 0f0e C3B1     		.ascii	"\303\261"
 7646 0f10 C3B3     		.ascii	"\303\263"
 7647 0f12 C3B5     		.ascii	"\303\265"
 7648 0f14 C3B7     		.ascii	"\303\267"
 7649 0f16 C461     		.ascii	"\304a"
 7650 0f18 C462     		.ascii	"\304b"
 7651 0f1a C465     		.ascii	"\304e"
 7652 0f1c C469     		.ascii	"\304i"
 7653 0f1e C471     		.ascii	"\304q"
 7654 0f20 C473     		.ascii	"\304s"
 7655 0f22 C475     		.ascii	"\304u"
 7656 0f24 C477     		.ascii	"\304w"
 7657 0f26 C481     		.ascii	"\304\201"
 7658 0f28 C482     		.ascii	"\304\202"
 7659 0f2a C485     		.ascii	"\304\205"
 7660 0f2c C489     		.ascii	"\304\211"
 7661 0f2e C491     		.ascii	"\304\221"
 7662 0f30 C493     		.ascii	"\304\223"
 7663 0f32 C495     		.ascii	"\304\225"
 7664 0f34 C496     		.ascii	"\304\226"
 7665 0f36 C497     		.ascii	"\304\227"
 7666 0f38 C4A1     		.ascii	"\304\241"
 7667 0f3a C4A2     		.ascii	"\304\242"
 7668 0f3c C4B7     		.ascii	"\304\267"
 7669 0f3e C4E1     		.ascii	"\304\341"
 7670 0f40 C4E2     		.ascii	"\304\342"
 7671 0f42 C4E5     		.ascii	"\304\345"
 7672 0f44 C4E8     		.ascii	"\304\350"
 7673 0f46 C4E9     		.ascii	"\304\351"
 7674 0f48 C4F1     		.ascii	"\304\361"
 7675 0f4a C4F3     		.ascii	"\304\363"
 7676 0f4c C4F5     		.ascii	"\304\365"
 7677 0f4e C4F6     		.ascii	"\304\366"
 7678 0f50 C4F7     		.ascii	"\304\367"
 7679 0f52 C541     		.ascii	"\305A"
 7680 0f54 C542     		.ascii	"\305B"
 7681 0f56 C545     		.ascii	"\305E"
 7682 0f58 C549     		.ascii	"\305I"
 7683 0f5a C551     		.ascii	"\305Q"
 7684 0f5c C553     		.ascii	"\305S"
 7685 0f5e C555     		.ascii	"\305U"
 7686 0f60 C557     		.ascii	"\305W"
 7687 0f62 C561     		.ascii	"\305a"
 7688 0f64 C565     		.ascii	"\305e"
 7689 0f66 C569     		.ascii	"\305i"
 7690 0f68 C571     		.ascii	"\305q"
 7691 0f6a C573     		.ascii	"\305s"
 7692 0f6c C575     		.ascii	"\305u"
 7693 0f6e C576     		.ascii	"\305v"
 7694 0f70 C577     		.ascii	"\305w"
 7695 0f72 C581     		.ascii	"\305\201"
 7696 0f74 C5A1     		.ascii	"\305\241"
 7697 0f76 C5A2     		.ascii	"\305\242"
 7698 0f78 C5A5     		.ascii	"\305\245"
 7699 0f7a C5A9     		.ascii	"\305\251"
 7700 0f7c C5B1     		.ascii	"\305\261"
 7701 0f7e C5B3     		.ascii	"\305\263"
 7702 0f80 C5B5     		.ascii	"\305\265"
 7703 0f82 C5B7     		.ascii	"\305\267"
 7704 0f84 C5C1     		.ascii	"\305\301"
 7705 0f86 C5C2     		.ascii	"\305\302"
 7706 0f88 C5C5     		.ascii	"\305\305"
 7707 0f8a C5C9     		.ascii	"\305\311"
 7708 0f8c C5D1     		.ascii	"\305\321"
 7709 0f8e C5D7     		.ascii	"\305\327"
 7710 0f90 C5E1     		.ascii	"\305\341"
 7711 0f92 C5F7     		.ascii	"\305\367"
 7712 0f94 C641     		.ascii	"\306A"
 7713 0f96 C649     		.ascii	"\306I"
 7714 0f98 C661     		.ascii	"\306a"
 7715 0f9a C681     		.ascii	"\306\201"
 7716 0f9c C682     		.ascii	"\306\202"
 7717 0f9e C685     		.ascii	"\306\205"
 7718 0fa0 C689     		.ascii	"\306\211"
 7719 0fa2 C691     		.ascii	"\306\221"
 7720 0fa4 C693     		.ascii	"\306\223"
 7721 0fa6 C695     		.ascii	"\306\225"
 7722 0fa8 C697     		.ascii	"\306\227"
 7723 0faa C6A1     		.ascii	"\306\241"
 7724 0fac C6A5     		.ascii	"\306\245"
 7725 0fae C6A9     		.ascii	"\306\251"
 7726 0fb0 C6B7     		.ascii	"\306\267"
 7727 0fb2 C6C1     		.ascii	"\306\301"
 7728 0fb4 C6D7     		.ascii	"\306\327"
 7729 0fb6 C6E1     		.ascii	"\306\341"
 7730 0fb8 C6E2     		.ascii	"\306\342"
 7731 0fba C6E5     		.ascii	"\306\345"
 7732 0fbc C6E9     		.ascii	"\306\351"
 7733 0fbe 2020     		.ascii	"  "
 7734 0fc0 2020     		.ascii	"  "
 7735 0fc2 C6F1     		.ascii	"\306\361"
 7736 0fc4 C6F3     		.ascii	"\306\363"
 7737 0fc6 C6F5     		.ascii	"\306\365"
 7738 0fc8 C6F7     		.ascii	"\306\367"
 7739 0fca C741     		.ascii	"\307A"
 7740 0fcc C745     		.ascii	"\307E"
 7741 0fce C749     		.ascii	"\307I"
 7742 0fd0 C751     		.ascii	"\307Q"
 7743 0fd2 C761     		.ascii	"\307a"
 7744 0fd4 C762     		.ascii	"\307b"
 7745 0fd6 C765     		.ascii	"\307e"
 7746 0fd8 C769     		.ascii	"\307i"
 7747 0fda C771     		.ascii	"\307q"
 7748 0fdc C773     		.ascii	"\307s"
 7749 0fde C777     		.ascii	"\307w"
 7750 0fe0 C7A1     		.ascii	"\307\241"
 7751 0fe2 C7A2     		.ascii	"\307\242"
 7752 0fe4 C7A5     		.ascii	"\307\245"
 7753 0fe6 C7A9     		.ascii	"\307\251"
 7754 0fe8 C7B1     		.ascii	"\307\261"
 7755 0fea C7B3     		.ascii	"\307\263"
 7756 0fec C7B5     		.ascii	"\307\265"
 7757 0fee C7B7     		.ascii	"\307\267"
 7758 0ff0 C861     		.ascii	"\310a"
 7759 0ff2 C862     		.ascii	"\310b"
 7760 0ff4 C865     		.ascii	"\310e"
 7761 0ff6 C869     		.ascii	"\310i"
 7762 0ff8 C86A     		.ascii	"\310j"
 7763 0ffa C871     		.ascii	"\310q"
 7764 0ffc C873     		.ascii	"\310s"
 7765 0ffe C875     		.ascii	"\310u"
 7766 1000 C876     		.ascii	"\310v"
 7767 1002 C877     		.ascii	"\310w"
 7768 1004 C881     		.ascii	"\310\201"
 7769 1006 C882     		.ascii	"\310\202"
 7770 1008 C885     		.ascii	"\310\205"
 7771 100a C889     		.ascii	"\310\211"
 7772 100c C891     		.ascii	"\310\221"
 7773 100e C893     		.ascii	"\310\223"
 7774 1010 C895     		.ascii	"\310\225"
 7775 1012 C896     		.ascii	"\310\226"
 7776 1014 C897     		.ascii	"\310\227"
 7777 1016 C8A1     		.ascii	"\310\241"
 7778 1018 C8B7     		.ascii	"\310\267"
 7779 101a C8E1     		.ascii	"\310\341"
 7780 101c C8E2     		.ascii	"\310\342"
 7781 101e C8E5     		.ascii	"\310\345"
 7782 1020 C8E9     		.ascii	"\310\351"
 7783 1022 C8EB     		.ascii	"\310\353"
 7784 1024 C8F1     		.ascii	"\310\361"
 7785 1026 C8F3     		.ascii	"\310\363"
 7786 1028 C8F5     		.ascii	"\310\365"
 7787 102a C8F6     		.ascii	"\310\366"
 7788 102c C8F7     		.ascii	"\310\367"
 7789 102e C941     		.ascii	"\311A"
 7790 1030 C942     		.ascii	"\311B"
 7791 1032 C945     		.ascii	"\311E"
 7792 1034 C949     		.ascii	"\311I"
 7793 1036 C951     		.ascii	"\311Q"
 7794 1038 C953     		.ascii	"\311S"
 7795 103a C955     		.ascii	"\311U"
 7796 103c C957     		.ascii	"\311W"
 7797 103e C961     		.ascii	"\311a"
 7798 1040 C965     		.ascii	"\311e"
 7799 1042 C976     		.ascii	"\311v"
 7800 1044 C981     		.ascii	"\311\201"
 7801 1046 C985     		.ascii	"\311\205"
 7802 1048 C9A1     		.ascii	"\311\241"
 7803 104a C9A2     		.ascii	"\311\242"
 7804 104c C9A5     		.ascii	"\311\245"
 7805 104e C9A9     		.ascii	"\311\251"
 7806 1050 C9B1     		.ascii	"\311\261"
 7807 1052 C9B3     		.ascii	"\311\263"
 7808 1054 C9B5     		.ascii	"\311\265"
 7809 1056 C9B7     		.ascii	"\311\267"
 7810 1058 C9BC     		.ascii	"\311\274"
 7811 105a C9C1     		.ascii	"\311\301"
 7812 105c C9C5     		.ascii	"\311\305"
 7813 105e C9E1     		.ascii	"\311\341"
 7814 1060 CA41     		.ascii	"\312A"
 7815 1062 CA45     		.ascii	"\312E"
 7816 1064 CA55     		.ascii	"\312U"
 7817 1066 CA57     		.ascii	"\312W"
 7818 1068 CA61     		.ascii	"\312a"
 7819 106a CA81     		.ascii	"\312\201"
 7820 106c CA82     		.ascii	"\312\202"
 7821 106e CA85     		.ascii	"\312\205"
 7822 1070 CA89     		.ascii	"\312\211"
 7823 1072 CA91     		.ascii	"\312\221"
 7824 1074 CA93     		.ascii	"\312\223"
 7825 1076 CA95     		.ascii	"\312\225"
 7826 1078 CA97     		.ascii	"\312\227"
 7827 107a CAA1     		.ascii	"\312\241"
 7828 107c CAB6     		.ascii	"\312\266"
 7829 107e 2020     		.ascii	"  "
 7830 1080 2020     		.ascii	"  "
 7831 1082 CAC1     		.ascii	"\312\301"
 7832 1084 CAE1     		.ascii	"\312\341"
 7833 1086 CAE2     		.ascii	"\312\342"
 7834 1088 CAE5     		.ascii	"\312\345"
 7835 108a CAE9     		.ascii	"\312\351"
 7836 108c CAF1     		.ascii	"\312\361"
 7837 108e CAF3     		.ascii	"\312\363"
 7838 1090 CAF7     		.ascii	"\312\367"
 7839 1092 CB41     		.ascii	"\313A"
 7840 1094 CB45     		.ascii	"\313E"
 7841 1096 CB49     		.ascii	"\313I"
 7842 1098 CB51     		.ascii	"\313Q"
 7843 109a CB57     		.ascii	"\313W"
 7844 109c CB61     		.ascii	"\313a"
 7845 109e CB62     		.ascii	"\313b"
 7846 10a0 CB65     		.ascii	"\313e"
 7847 10a2 CB68     		.ascii	"\313h"
 7848 10a4 CB69     		.ascii	"\313i"
 7849 10a6 CB6B     		.ascii	"\313k"
 7850 10a8 CB71     		.ascii	"\313q"
 7851 10aa CB73     		.ascii	"\313s"
 7852 10ac CB75     		.ascii	"\313u"
 7853 10ae CB81     		.ascii	"\313\201"
 7854 10b0 CB85     		.ascii	"\313\205"
 7855 10b2 CB89     		.ascii	"\313\211"
 7856 10b4 CB91     		.ascii	"\313\221"
 7857 10b6 CB93     		.ascii	"\313\223"
 7858 10b8 CBA1     		.ascii	"\313\241"
 7859 10ba CBA2     		.ascii	"\313\242"
 7860 10bc CBA5     		.ascii	"\313\245"
 7861 10be CBA9     		.ascii	"\313\251"
 7862 10c0 CBB1     		.ascii	"\313\261"
 7863 10c2 CBB3     		.ascii	"\313\263"
 7864 10c4 CBB5     		.ascii	"\313\265"
 7865 10c6 CBB7     		.ascii	"\313\267"
 7866 10c8 CC61     		.ascii	"\314a"
 7867 10ca CC62     		.ascii	"\314b"
 7868 10cc CC63     		.ascii	"\314c"
 7869 10ce CC65     		.ascii	"\314e"
 7870 10d0 CC69     		.ascii	"\314i"
 7871 10d2 CC6B     		.ascii	"\314k"
 7872 10d4 CC71     		.ascii	"\314q"
 7873 10d6 CC73     		.ascii	"\314s"
 7874 10d8 CC75     		.ascii	"\314u"
 7875 10da CC76     		.ascii	"\314v"
 7876 10dc CC77     		.ascii	"\314w"
 7877 10de CC7B     		.ascii	"\314{"
 7878 10e0 CC81     		.ascii	"\314\201"
 7879 10e2 CC82     		.ascii	"\314\202"
 7880 10e4 CC85     		.ascii	"\314\205"
 7881 10e6 CC89     		.ascii	"\314\211"
 7882 10e8 CC91     		.ascii	"\314\221"
 7883 10ea CC93     		.ascii	"\314\223"
 7884 10ec CC95     		.ascii	"\314\225"
 7885 10ee CC96     		.ascii	"\314\226"
 7886 10f0 CC97     		.ascii	"\314\227"
 7887 10f2 CCA1     		.ascii	"\314\241"
 7888 10f4 CCA2     		.ascii	"\314\242"
 7889 10f6 CCE1     		.ascii	"\314\341"
 7890 10f8 CCE2     		.ascii	"\314\342"
 7891 10fa CCE5     		.ascii	"\314\345"
 7892 10fc CCE9     		.ascii	"\314\351"
 7893 10fe CCF1     		.ascii	"\314\361"
 7894 1100 CCF3     		.ascii	"\314\363"
 7895 1102 CCF5     		.ascii	"\314\365"
 7896 1104 CCF6     		.ascii	"\314\366"
 7897 1106 CCF7     		.ascii	"\314\367"
 7898 1108 CD41     		.ascii	"\315A"
 7899 110a CD42     		.ascii	"\315B"
 7900 110c CD45     		.ascii	"\315E"
 7901 110e CD49     		.ascii	"\315I"
 7902 1110 CD51     		.ascii	"\315Q"
 7903 1112 CD53     		.ascii	"\315S"
 7904 1114 CD55     		.ascii	"\315U"
 7905 1116 CD57     		.ascii	"\315W"
 7906 1118 CD61     		.ascii	"\315a"
 7907 111a CD65     		.ascii	"\315e"
 7908 111c CD69     		.ascii	"\315i"
 7909 111e CD71     		.ascii	"\315q"
 7910 1120 CD73     		.ascii	"\315s"
 7911 1122 CD76     		.ascii	"\315v"
 7912 1124 CD77     		.ascii	"\315w"
 7913 1126 CD81     		.ascii	"\315\201"
 7914 1128 CD89     		.ascii	"\315\211"
 7915 112a CD93     		.ascii	"\315\223"
 7916 112c CD95     		.ascii	"\315\225"
 7917 112e CDA1     		.ascii	"\315\241"
 7918 1130 CDA2     		.ascii	"\315\242"
 7919 1132 CDA5     		.ascii	"\315\245"
 7920 1134 CDA9     		.ascii	"\315\251"
 7921 1136 CDB1     		.ascii	"\315\261"
 7922 1138 CDB3     		.ascii	"\315\263"
 7923 113a CDB5     		.ascii	"\315\265"
 7924 113c CDB7     		.ascii	"\315\267"
 7925 113e 2020     		.ascii	"  "
 7926 1140 2020     		.ascii	"  "
 7927 1142 CDC1     		.ascii	"\315\301"
 7928 1144 CDD7     		.ascii	"\315\327"
 7929 1146 CE41     		.ascii	"\316A"
 7930 1148 CE45     		.ascii	"\316E"
 7931 114a CE61     		.ascii	"\316a"
 7932 114c CE65     		.ascii	"\316e"
 7933 114e CE69     		.ascii	"\316i"
 7934 1150 CE73     		.ascii	"\316s"
 7935 1152 CE75     		.ascii	"\316u"
 7936 1154 CE81     		.ascii	"\316\201"
 7937 1156 CE82     		.ascii	"\316\202"
 7938 1158 CE85     		.ascii	"\316\205"
 7939 115a CE88     		.ascii	"\316\210"
 7940 115c CE89     		.ascii	"\316\211"
 7941 115e CE8B     		.ascii	"\316\213"
 7942 1160 CE91     		.ascii	"\316\221"
 7943 1162 CE93     		.ascii	"\316\223"
 7944 1164 CE95     		.ascii	"\316\225"
 7945 1166 CE97     		.ascii	"\316\227"
 7946 1168 CEA1     		.ascii	"\316\241"
 7947 116a CEB7     		.ascii	"\316\267"
 7948 116c CEE1     		.ascii	"\316\341"
 7949 116e CEE5     		.ascii	"\316\345"
 7950 1170 CEE9     		.ascii	"\316\351"
 7951 1172 CEF1     		.ascii	"\316\361"
 7952 1174 CEF5     		.ascii	"\316\365"
 7953 1176 CF41     		.ascii	"\317A"
 7954 1178 CF45     		.ascii	"\317E"
 7955 117a CF49     		.ascii	"\317I"
 7956 117c CF51     		.ascii	"\317Q"
 7957 117e CF55     		.ascii	"\317U"
 7958 1180 CF57     		.ascii	"\317W"
 7959 1182 CF61     		.ascii	"\317a"
 7960 1184 CF65     		.ascii	"\317e"
 7961 1186 CF69     		.ascii	"\317i"
 7962 1188 CF71     		.ascii	"\317q"
 7963 118a CF73     		.ascii	"\317s"
 7964 118c CF75     		.ascii	"\317u"
 7965 118e CFA1     		.ascii	"\317\241"
 7966 1190 CFA2     		.ascii	"\317\242"
 7967 1192 CFA5     		.ascii	"\317\245"
 7968 1194 CFA9     		.ascii	"\317\251"
 7969 1196 CFB1     		.ascii	"\317\261"
 7970 1198 CFB3     		.ascii	"\317\263"
 7971 119a CFB5     		.ascii	"\317\265"
 7972 119c CFB7     		.ascii	"\317\267"
 7973 119e D061     		.ascii	"\320a"
 7974 11a0 D062     		.ascii	"\320b"
 7975 11a2 D065     		.ascii	"\320e"
 7976 11a4 D069     		.ascii	"\320i"
 7977 11a6 D06E     		.ascii	"\320n"
 7978 11a8 D071     		.ascii	"\320q"
 7979 11aa D073     		.ascii	"\320s"
 7980 11ac D075     		.ascii	"\320u"
 7981 11ae D077     		.ascii	"\320w"
 7982 11b0 D081     		.ascii	"\320\201"
 7983 11b2 D082     		.ascii	"\320\202"
 7984 11b4 D085     		.ascii	"\320\205"
 7985 11b6 D089     		.ascii	"\320\211"
 7986 11b8 D091     		.ascii	"\320\221"
 7987 11ba D093     		.ascii	"\320\223"
 7988 11bc D095     		.ascii	"\320\225"
 7989 11be D096     		.ascii	"\320\226"
 7990 11c0 D097     		.ascii	"\320\227"
 7991 11c2 D0A1     		.ascii	"\320\241"
 7992 11c4 D0B7     		.ascii	"\320\267"
 7993 11c6 D0E1     		.ascii	"\320\341"
 7994 11c8 D0E2     		.ascii	"\320\342"
 7995 11ca D0E5     		.ascii	"\320\345"
 7996 11cc D0E9     		.ascii	"\320\351"
 7997 11ce D0EB     		.ascii	"\320\353"
 7998 11d0 D0F1     		.ascii	"\320\361"
 7999 11d2 D0F3     		.ascii	"\320\363"
 8000 11d4 D0F5     		.ascii	"\320\365"
 8001 11d6 D0F7     		.ascii	"\320\367"
 8002 11d8 D141     		.ascii	"\321A"
 8003 11da D142     		.ascii	"\321B"
 8004 11dc D145     		.ascii	"\321E"
 8005 11de D149     		.ascii	"\321I"
 8006 11e0 D151     		.ascii	"\321Q"
 8007 11e2 D153     		.ascii	"\321S"
 8008 11e4 D155     		.ascii	"\321U"
 8009 11e6 D157     		.ascii	"\321W"
 8010 11e8 D161     		.ascii	"\321a"
 8011 11ea D162     		.ascii	"\321b"
 8012 11ec D165     		.ascii	"\321e"
 8013 11ee D169     		.ascii	"\321i"
 8014 11f0 D171     		.ascii	"\321q"
 8015 11f2 D173     		.ascii	"\321s"
 8016 11f4 D175     		.ascii	"\321u"
 8017 11f6 D176     		.ascii	"\321v"
 8018 11f8 D177     		.ascii	"\321w"
 8019 11fa D181     		.ascii	"\321\201"
 8020 11fc D185     		.ascii	"\321\205"
 8021 11fe 2020     		.ascii	"  "
 8022 1200 2020     		.ascii	"  "
 8023 1202 D189     		.ascii	"\321\211"
 8024 1204 D193     		.ascii	"\321\223"
 8025 1206 D1A1     		.ascii	"\321\241"
 8026 1208 D1A2     		.ascii	"\321\242"
 8027 120a D1A5     		.ascii	"\321\245"
 8028 120c D1A9     		.ascii	"\321\251"
 8029 120e D1AE     		.ascii	"\321\256"
 8030 1210 D1B1     		.ascii	"\321\261"
 8031 1212 D1B3     		.ascii	"\321\263"
 8032 1214 D1B5     		.ascii	"\321\265"
 8033 1216 D1B7     		.ascii	"\321\267"
 8034 1218 D1BB     		.ascii	"\321\273"
 8035 121a D1C1     		.ascii	"\321\301"
 8036 121c D1C2     		.ascii	"\321\302"
 8037 121e D1C5     		.ascii	"\321\305"
 8038 1220 D1C9     		.ascii	"\321\311"
 8039 1222 D1D5     		.ascii	"\321\325"
 8040 1224 D1D7     		.ascii	"\321\327"
 8041 1226 D1E1     		.ascii	"\321\341"
 8042 1228 D1E2     		.ascii	"\321\342"
 8043 122a D1E5     		.ascii	"\321\345"
 8044 122c D1F5     		.ascii	"\321\365"
 8045 122e D1F7     		.ascii	"\321\367"
 8046 1230 D241     		.ascii	"\322A"
 8047 1232 D242     		.ascii	"\322B"
 8048 1234 D245     		.ascii	"\322E"
 8049 1236 D249     		.ascii	"\322I"
 8050 1238 D253     		.ascii	"\322S"
 8051 123a D255     		.ascii	"\322U"
 8052 123c D257     		.ascii	"\322W"
 8053 123e D261     		.ascii	"\322a"
 8054 1240 D265     		.ascii	"\322e"
 8055 1242 D269     		.ascii	"\322i"
 8056 1244 D273     		.ascii	"\322s"
 8057 1246 D275     		.ascii	"\322u"
 8058 1248 D281     		.ascii	"\322\201"
 8059 124a D282     		.ascii	"\322\202"
 8060 124c D285     		.ascii	"\322\205"
 8061 124e D289     		.ascii	"\322\211"
 8062 1250 D28E     		.ascii	"\322\216"
 8063 1252 D291     		.ascii	"\322\221"
 8064 1254 D295     		.ascii	"\322\225"
 8065 1256 D297     		.ascii	"\322\227"
 8066 1258 D2A1     		.ascii	"\322\241"
 8067 125a D2A5     		.ascii	"\322\245"
 8068 125c D2A9     		.ascii	"\322\251"
 8069 125e D2B1     		.ascii	"\322\261"
 8070 1260 D2B7     		.ascii	"\322\267"
 8071 1262 D2C1     		.ascii	"\322\301"
 8072 1264 D2C2     		.ascii	"\322\302"
 8073 1266 D2C5     		.ascii	"\322\305"
 8074 1268 D2C9     		.ascii	"\322\311"
 8075 126a D2D7     		.ascii	"\322\327"
 8076 126c D2E1     		.ascii	"\322\341"
 8077 126e D2E2     		.ascii	"\322\342"
 8078 1270 D2E5     		.ascii	"\322\345"
 8079 1272 D2E9     		.ascii	"\322\351"
 8080 1274 D2F1     		.ascii	"\322\361"
 8081 1276 D2F3     		.ascii	"\322\363"
 8082 1278 D2F5     		.ascii	"\322\365"
 8083 127a D2F7     		.ascii	"\322\367"
 8084 127c D341     		.ascii	"\323A"
 8085 127e D342     		.ascii	"\323B"
 8086 1280 D345     		.ascii	"\323E"
 8087 1282 D349     		.ascii	"\323I"
 8088 1284 D351     		.ascii	"\323Q"
 8089 1286 D355     		.ascii	"\323U"
 8090 1288 D357     		.ascii	"\323W"
 8091 128a D361     		.ascii	"\323a"
 8092 128c D362     		.ascii	"\323b"
 8093 128e D365     		.ascii	"\323e"
 8094 1290 D367     		.ascii	"\323g"
 8095 1292 D368     		.ascii	"\323h"
 8096 1294 D369     		.ascii	"\323i"
 8097 1296 D36A     		.ascii	"\323j"
 8098 1298 D371     		.ascii	"\323q"
 8099 129a D373     		.ascii	"\323s"
 8100 129c D375     		.ascii	"\323u"
 8101 129e D377     		.ascii	"\323w"
 8102 12a0 D37B     		.ascii	"\323{"
 8103 12a2 D381     		.ascii	"\323\201"
 8104 12a4 D385     		.ascii	"\323\205"
 8105 12a6 D389     		.ascii	"\323\211"
 8106 12a8 D391     		.ascii	"\323\221"
 8107 12aa D393     		.ascii	"\323\223"
 8108 12ac D397     		.ascii	"\323\227"
 8109 12ae D3A1     		.ascii	"\323\241"
 8110 12b0 D3A2     		.ascii	"\323\242"
 8111 12b2 D3A5     		.ascii	"\323\245"
 8112 12b4 D3A9     		.ascii	"\323\251"
 8113 12b6 D3B1     		.ascii	"\323\261"
 8114 12b8 D3B3     		.ascii	"\323\263"
 8115 12ba D3B5     		.ascii	"\323\265"
 8116 12bc D3B7     		.ascii	"\323\267"
 8117 12be 2020     		.ascii	"  "
 8118              		.section	.rodata.eng_font,"a"
 8119              		.set	.LANCHOR4,. + 0
 8122              	eng_font:
 8123 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8123      00000000 
 8123      00000000 
 8123      00
 8124 000d 000000   		.ascii	"\000\000\000"
 8125 0010 000010BA 		.ascii	"\000\000\020\272T\202\252\202\326\376\252D8\000\000"
 8125      5482AA82 
 8125      D6FEAA44 
 8125      380000
 8126 001f 00       		.ascii	"\000"
 8127 0020 000000AA 		.ascii	"\000\000\000\252|\376\326\376|(T|8\000\000\000"
 8127      7CFED6FE 
 8127      7C28547C 
 8127      38000000 
 8128 0030 00000000 		.ascii	"\000\000\000\000l\376\376\376\376|8\020\000\000\000"
 8128      6CFEFEFE 
 8128      FE7C3810 
 8128      000000
 8129 003f 00       		.ascii	"\000"
 8130 0040 00000000 		.ascii	"\000\000\000\000\0208|\376\376|8\020\000\000\000\000"
 8130      10387CFE 
 8130      FE7C3810 
 8130      00000000 
 8131 0050 00000038 		.ascii	"\000\000\000888\356\356\356\376\0208|\000\000\000"
 8131      3838EEEE 
 8131      EEFE1038 
 8131      7C000000 
 8132 0060 00000010 		.ascii	"\000\000\000\020\0208|\376\376\376l\020|\000\000\000"
 8132      10387CFE 
 8132      FEFE6C10 
 8132      7C000000 
 8133 0070 00000000 		.ascii	"\000\000\000\000\000\0008|||8\000\000\000\000\000"
 8133      0000387C 
 8133      7C7C3800 
 8133      00000000 
 8134 0080 0000FEFE 		.ascii	"\000\000\376\376\376\376\356\306\202\306\356\376\376"
 8134      FEFEEEC6 
 8134      82C6EEFE 
 8134      FE
 8135 008d FEFE00   		.ascii	"\376\376\000"
 8136 0090 00000000 		.ascii	"\000\000\000\000\000<fffff<\000\000\000\000"
 8136      003C6666 
 8136      6666663C 
 8136      00000000 
 8137 00a0 0000FEFE 		.ascii	"\000\000\376\376\376\376\306\272\272\272\306\376\376"
 8137      FEFEC6BA 
 8137      BABAC6FE 
 8137      FE
 8138 00ad FEFE00   		.ascii	"\376\376\000"
 8139 00b0 0000007E 		.ascii	"\000\000\000~\016\0322x\314\314\314\314x\000\000\000"
 8139      0E1A3278 
 8139      CCCCCCCC 
 8139      78000000 
 8140 00c0 0000003C 		.ascii	"\000\000\000<ffff<\030~\030\030\000\000\000"
 8140      66666666 
 8140      3C187E18 
 8140      18000000 
 8141 00d0 00000030 		.ascii	"\000\000\00008<6666t\360\360\340\000\000"
 8141      383C3636 
 8141      363674F0 
 8141      F0E00000 
 8142 00e0 0000007E 		.ascii	"\000\000\000~f~fffn\356\354\300\000\000\000"
 8142      667E6666 
 8142      666EEEEC 
 8142      C0000000 
 8143 00f0 00000000 		.ascii	"\000\000\000\000\020\222|l\326l|\222\020\000\000\000"
 8143      10927C6C 
 8143      D66C7C92 
 8143      10000000 
 8144 0100 00000040 		.ascii	"\000\000\000@@`px~xp`@@\000\000"
 8144      40607078 
 8144      7E787060 
 8144      40400000 
 8145 0110 00000002 		.ascii	"\000\000\000\002\002\006\016\036~\036\016\006\002\002"
 8145      02060E1E 
 8145      7E1E0E06 
 8145      0202
 8146 011e 0000     		.ascii	"\000\000"
 8147 0120 00000018 		.ascii	"\000\000\000\030<~\030\030\030\030\030~<\030\000\000"
 8147      3C7E1818 
 8147      1818187E 
 8147      3C180000 
 8148 0130 0000006C 		.ascii	"\000\000\000llllllll\000ll\000\000"
 8148      6C6C6C6C 
 8148      6C6C6C00 
 8148      6C6C0000 
 8149 0140 0000007E 		.ascii	"\000\000\000~\366\366\366\366v66666\000\000"
 8149      F6F6F6F6 
 8149      76363636 
 8149      36360000 
 8150 0150 0000003C 		.ascii	"\000\000\000<ff8lf6\034ff<\000\000"
 8150      6666386C 
 8150      66361C66 
 8150      663C0000 
 8151 0160 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000~~~~\000\000"
 8151      00000000 
 8151      00007E7E 
 8151      7E7E0000 
 8152 0170 00000018 		.ascii	"\000\000\000\030<~\030\030\030\030~<\030~\000\000"
 8152      3C7E1818 
 8152      18187E3C 
 8152      187E0000 
 8153 0180 00000018 		.ascii	"\000\000\000\030<~\030\030\030\030\030\030\030\030\000"
 8153      3C7E1818 
 8153      18181818 
 8153      181800
 8154 018f 00       		.ascii	"\000"
 8155 0190 00000018 		.ascii	"\000\000\000\030\030\030\030\030\030\030\030~<\030\000"
 8155      18181818 
 8155      1818187E 
 8155      3C1800
 8156 019f 00       		.ascii	"\000"
 8157 01a0 00000000 		.ascii	"\000\000\000\000\000\000\010\014\376\014\010\000\000"
 8157      0000080C 
 8157      FE0C0800 
 8157      00
 8158 01ad 000000   		.ascii	"\000\000\000"
 8159 01b0 00000000 		.ascii	"\000\000\000\000\000\000 `\376` \000\000\000\000\000"
 8159      00002060 
 8159      FE602000 
 8159      00000000 
 8160 01c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000```~\000\000\000"
 8160      00000000 
 8160      00606060 
 8160      7E000000 
 8161 01d0 00000000 		.ascii	"\000\000\000\000\000\000$f\377f$\000\000\000\000\000"
 8161      00002466 
 8161      FF662400 
 8161      00000000 
 8162 01e0 00000000 		.ascii	"\000\000\000\000\020\02088||\376\376\376\000\000\000"
 8162      10103838 
 8162      7C7CFEFE 
 8162      FE000000 
 8163 01f0 00000000 		.ascii	"\000\000\000\000\376\376\376||88\020\020\000\000\000"
 8163      FEFEFE7C 
 8163      7C383810 
 8163      10000000 
 8164 0200 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8164      00000000 
 8164      00000000 
 8164      00
 8165 020d 000000   		.ascii	"\000\000\000"
 8166 0210 00000018 		.ascii	"\000\000\000\030\030\030\030\030\030\030\030\000\030"
 8166      18181818 
 8166      18181800 
 8166      18
 8167 021d 180000   		.ascii	"\030\000\000"
 8168 0220 006C6C6C 		.ascii	"\000lllH\000\000\000\000\000\000\000\000\000\000\000"
 8168      48000000 
 8168      00000000 
 8168      00000000 
 8169 0230 00000036 		.ascii	"\000\000\000666\377lll\376\330\330\330\000\000"
 8169      3636FF6C 
 8169      6C6CFED8 
 8169      D8D80000 
 8170 0240 00001010 		.ascii	"\000\000\020\020|\326\326\320|\026\326\326|\020\020"
 8170      7CD6D6D0 
 8170      7C16D6D6 
 8170      7C1010
 8171 024f 00       		.ascii	"\000"
 8172 0250 00000030 		.ascii	"\000\000\0000Y\323f\014\0300f\313\032\014\000\000"
 8172      59D3660C 
 8172      183066CB 
 8172      1A0C0000 
 8173 0260 00000038 		.ascii	"\000\000\0008lll8p\332\316\314\356z\000\000"
 8173      6C6C6C38 
 8173      70DACECC 
 8173      EE7A0000 
 8174 0270 00181818 		.ascii	"\000\030\030\0300\000\000\000\000\000\000\000\000\000"
 8174      30000000 
 8174      00000000 
 8174      0000
 8175 027e 0000     		.ascii	"\000\000"
 8176 0280 00000C18 		.ascii	"\000\000\014\0300```````0\030\014\000"
 8176      30606060 
 8176      60606060 
 8176      30180C00 
 8177 0290 00006030 		.ascii	"\000\000`0\030\014\014\014\014\014\014\014\0300`\000"
 8177      180C0C0C 
 8177      0C0C0C0C 
 8177      18306000 
 8178 02a0 00000000 		.ascii	"\000\000\000\000\000\030\333~<~\333\030\000\000\000"
 8178      0018DB7E 
 8178      3C7EDB18 
 8178      000000
 8179 02af 00       		.ascii	"\000"
 8180 02b0 00000000 		.ascii	"\000\000\000\000\030\030\030\030\377\030\030\030\030"
 8180      18181818 
 8180      FF181818 
 8180      18
 8181 02bd 000000   		.ascii	"\000\000\000"
 8182 02c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\030"
 8182      00000000 
 8182      00000000 
 8182      18
 8183 02cd 183000   		.ascii	"\0300\000"
 8184 02d0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\377\000\000\000\000"
 8184      00000000 
 8184      FF000000 
 8184      00
 8185 02dd 000000   		.ascii	"\000\000\000"
 8186 02e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\030"
 8186      00000000 
 8186      00000000 
 8186      18
 8187 02ed 180000   		.ascii	"\030\000\000"
 8188 02f0 00000006 		.ascii	"\000\000\000\006\006\014\014\030\03000``\300\000\000"
 8188      060C0C18 
 8188      18303060 
 8188      60C00000 
 8189 0300 00000018 		.ascii	"\000\000\000\030<fffffff<\030\000\000"
 8189      3C666666 
 8189      66666666 
 8189      3C180000 
 8190 0310 00000018 		.ascii	"\000\000\000\030\030x\030\030\030\030\030\030\030~\000"
 8190      18781818 
 8190      18181818 
 8190      187E00
 8191 031f 00       		.ascii	"\000"
 8192 0320 0000003C 		.ascii	"\000\000\000<ff\006\014\014\030\03000~\000\000"
 8192      6666060C 
 8192      0C181830 
 8192      307E0000 
 8193 0330 0000007E 		.ascii	"\000\000\000~\014\014\0308\014\006\006\006l8\000\000"
 8193      0C0C1838 
 8193      0C060606 
 8193      6C380000 
 8194 0340 00000018 		.ascii	"\000\000\000\030\03000ll\314\376\014\014\014\000\000"
 8194      1830306C 
 8194      6CCCFE0C 
 8194      0C0C0000 
 8195 0350 0000007C 		.ascii	"\000\000\000|```x\014\006\006\006\314x\000\000"
 8195      60606078 
 8195      0C060606 
 8195      CC780000 
 8196 0360 0000000C 		.ascii	"\000\000\000\014\0300`x\314\306\306\306l8\000\000"
 8196      18306078 
 8196      CCC6C6C6 
 8196      6C380000 
 8197 0370 0000007E 		.ascii	"\000\000\000~\006\006\006\014\014\030\030\030\030\030"
 8197      0606060C 
 8197      0C181818 
 8197      1818
 8198 037e 0000     		.ascii	"\000\000"
 8199 0380 00000038 		.ascii	"\000\000\0008l\306\306l8l\306\306l8\000\000"
 8199      6CC6C66C 
 8199      386CC6C6 
 8199      6C380000 
 8200 0390 00000038 		.ascii	"\000\000\0008l\306\306\306f<\014\0300`\000\000"
 8200      6CC6C6C6 
 8200      663C0C18 
 8200      30600000 
 8201 03a0 00000000 		.ascii	"\000\000\000\000\030\030\000\000\000\000\000\030\030"
 8201      18180000 
 8201      00000018 
 8201      18
 8202 03ad 000000   		.ascii	"\000\000\000"
 8203 03b0 00000000 		.ascii	"\000\000\000\000\030\030\000\000\000\000\000\030\030"
 8203      18180000 
 8203      00000018 
 8203      18
 8204 03bd 300000   		.ascii	"0\000\000"
 8205 03c0 00000006 		.ascii	"\000\000\000\006\014\0300`\300`0\030\014\006\000\000"
 8205      0C183060 
 8205      C0603018 
 8205      0C060000 
 8206 03d0 00000000 		.ascii	"\000\000\000\000\000\000\000\376\000\376\000\000\000"
 8206      000000FE 
 8206      00FE0000 
 8206      00
 8207 03dd 000000   		.ascii	"\000\000\000"
 8208 03e0 000000C0 		.ascii	"\000\000\000\300`0\030\014\006\014\0300`\300\000\000"
 8208      6030180C 
 8208      060C1830 
 8208      60C00000 
 8209 03f0 00000018 		.ascii	"\000\000\000\030<f\006\014\030\030\030\000\030\030\000"
 8209      3C66060C 
 8209      18181800 
 8209      181800
 8210 03ff 00       		.ascii	"\000"
 8211 0400 0000003C 		.ascii	"\000\000\000<f\306\336\366\366\366\336\300`>\000\000"
 8211      66C6DEF6 
 8211      F6F6DEC0 
 8211      603E0000 
 8212 0410 00000018 		.ascii	"\000\000\000\030<fff~fffff\000\000"
 8212      3C666666 
 8212      7E666666 
 8212      66660000 
 8213 0420 000000F8 		.ascii	"\000\000\000\370lfff|ffff|\000\000"
 8213      6C666666 
 8213      7C666666 
 8213      667C0000 
 8214 0430 0000003C 		.ascii	"\000\000\000<ff`````ff<\000\000"
 8214      66666060 
 8214      60606066 
 8214      663C0000 
 8215 0440 000000F8 		.ascii	"\000\000\000\370lffffffflx\000\000"
 8215      6C666666 
 8215      66666666 
 8215      6C780000 
 8216 0450 000000FE 		.ascii	"\000\000\000\376f```|```f~\000\000"
 8216      66606060 
 8216      7C606060 
 8216      667E0000 
 8217 0460 000000FE 		.ascii	"\000\000\000\376f```|````p\000\000"
 8217      66606060 
 8217      7C606060 
 8217      60700000 
 8218 0470 0000003C 		.ascii	"\000\000\000<ff```nfff<\000\000"
 8218      66666060 
 8218      606E6666 
 8218      663C0000 
 8219 0480 000000E6 		.ascii	"\000\000\000\346ffff~ffffg\000\000"
 8219      66666666 
 8219      7E666666 
 8219      66670000 
 8220 0490 0000003C 		.ascii	"\000\000\000<\030\030\030\030\030\030\030\030\030<\000"
 8220      18181818 
 8220      18181818 
 8220      183C00
 8221 049f 00       		.ascii	"\000"
 8222 04a0 0000003C 		.ascii	"\000\000\000<\030\030\030\030\030\030\030\030\030\030"
 8222      18181818 
 8222      18181818 
 8222      1818
 8223 04ae 30E0     		.ascii	"0\340"
 8224 04b0 000000E6 		.ascii	"\000\000\000\346fllxxllffg\000\000"
 8224      666C6C78 
 8224      786C6C66 
 8224      66670000 
 8225 04c0 000000E0 		.ascii	"\000\000\000\340````````f~\000\000"
 8225      60606060 
 8225      60606060 
 8225      667E0000 
 8226 04d0 000000C6 		.ascii	"\000\000\000\306\306\356\376\326\326\306\306\306\306"
 8226      C6EEFED6 
 8226      D6C6C6C6 
 8226      C6
 8227 04dd C60000   		.ascii	"\306\000\000"
 8228 04e0 000000E6 		.ascii	"\000\000\000\346ffvv~nnffg\000\000"
 8228      66667676 
 8228      7E6E6E66 
 8228      66670000 
 8229 04f0 00000038 		.ascii	"\000\000\0008l\306\306\306\306\306\306\306l8\000\000"
 8229      6CC6C6C6 
 8229      C6C6C6C6 
 8229      6C380000 
 8230 0500 000000FC 		.ascii	"\000\000\000\374ffflx````p\000\000"
 8230      6666666C 
 8230      78606060 
 8230      60700000 
 8231 0510 00000038 		.ascii	"\000\000\0008l\306\306\306\306\306\306l8n\004\000"
 8231      6CC6C6C6 
 8231      C6C6C66C 
 8231      386E0400 
 8232 0520 000000F8 		.ascii	"\000\000\000\370lfflxlfffg\000\000"
 8232      6C66666C 
 8232      786C6666 
 8232      66670000 
 8233 0530 0000003C 		.ascii	"\000\000\000<ff`0\030\014\006ff<\000\000"
 8233      66666030 
 8233      180C0666 
 8233      663C0000 
 8234 0540 000000FF 		.ascii	"\000\000\000\377\333\030\030\030\030\030\030\030\030"
 8234      DB181818 
 8234      18181818 
 8234      18
 8235 054d 3C0000   		.ascii	"<\000\000"
 8236 0550 000000E6 		.ascii	"\000\000\000\346ffffffffn;\000\000"
 8236      66666666 
 8236      66666666 
 8236      6E3B0000 
 8237 0560 000000CE 		.ascii	"\000\000\000\316\306\306\306\306\306\306\306\306l8\000"
 8237      C6C6C6C6 
 8237      C6C6C6C6 
 8237      6C3800
 8238 056f 00       		.ascii	"\000"
 8239 0570 000000CE 		.ascii	"\000\000\000\316\306\306\306\326\326\376\356\306\306"
 8239      C6C6C6D6 
 8239      D6FEEEC6 
 8239      C6
 8240 057d C60000   		.ascii	"\306\000\000"
 8241 0580 000000C3 		.ascii	"\000\000\000\303ff$<\030<$ff\303\000\000"
 8241      6666243C 
 8241      183C2466 
 8241      66C30000 
 8242 0590 000000C7 		.ascii	"\000\000\000\307\303ff<<\030\030\030\030<\000\000"
 8242      C366663C 
 8242      3C181818 
 8242      183C0000 
 8243 05a0 0000007F 		.ascii	"\000\000\000\177c\003\006\014\0300`\300\306\376\000"
 8243      6303060C 
 8243      183060C0 
 8243      C6FE00
 8244 05af 00       		.ascii	"\000"
 8245 05b0 0000003C 		.ascii	"\000\000\000<000000000<\000\000"
 8245      30303030 
 8245      30303030 
 8245      303C0000 
 8246 05c0 000000C0 		.ascii	"\000\000\000\300\300``00\030\030\014\014\006\000\000"
 8246      C0606030 
 8246      3018180C 
 8246      0C060000 
 8247 05d0 0000003C 		.ascii	"\000\000\000<\014\014\014\014\014\014\014\014\014<\000"
 8247      0C0C0C0C 
 8247      0C0C0C0C 
 8247      0C3C00
 8248 05df 00       		.ascii	"\000"
 8249 05e0 00000018 		.ascii	"\000\000\000\030<f\000\000\000\000\000\000\000\000\000"
 8249      3C660000 
 8249      00000000 
 8249      000000
 8250 05ef 00       		.ascii	"\000"
 8251 05f0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8251      00000000 
 8251      00000000 
 8251      00
 8252 05fd FF0000   		.ascii	"\377\000\000"
 8253 0600 00001818 		.ascii	"\000\000\030\030\030\014\000\000\000\000\000\000\000"
 8253      180C0000 
 8253      00000000 
 8253      00
 8254 060d 000000   		.ascii	"\000\000\000"
 8255 0610 00000000 		.ascii	"\000\000\000\000\000\000x\314\014|\314\314\314v\000"
 8255      000078CC 
 8255      0C7CCCCC 
 8255      CC7600
 8256 061f 00       		.ascii	"\000"
 8257 0620 000000E0 		.ascii	"\000\000\000\340``|ffffff<\000\000"
 8257      60607C66 
 8257      66666666 
 8257      663C0000 
 8258 0630 00000000 		.ascii	"\000\000\000\000\000\000|\306\300\300\300\300\306|\000"
 8258      00007CC6 
 8258      C0C0C0C0 
 8258      C67C00
 8259 063f 00       		.ascii	"\000"
 8260 0640 0000001C 		.ascii	"\000\000\000\034\014\014|\314\314\314\314\314\314~\000"
 8260      0C0C7CCC 
 8260      CCCCCCCC 
 8260      CC7E00
 8261 064f 00       		.ascii	"\000"
 8262 0650 00000000 		.ascii	"\000\000\000\000\000\000|\306\306\376\300\300\306|\000"
 8262      00007CC6 
 8262      C6FEC0C0 
 8262      C67C00
 8263 065f 00       		.ascii	"\000"
 8264 0660 0000001E 		.ascii	"\000\000\000\03620\376000000x\000\000"
 8264      3230FE30 
 8264      30303030 
 8264      30780000 
 8265 0670 00000000 		.ascii	"\000\000\000\000\000\006x\314\314\314x\300|\306\306"
 8265      000678CC 
 8265      CCCC78C0 
 8265      7CC6C6
 8266 067f 7C       		.ascii	"|"
 8267 0680 000000E0 		.ascii	"\000\000\000\340``|ffffffg\000\000"
 8267      60607C66 
 8267      66666666 
 8267      66670000 
 8268 0690 00000018 		.ascii	"\000\000\000\030\030\0008\030\030\030\030\030\030<\000"
 8268      18003818 
 8268      18181818 
 8268      183C00
 8269 069f 00       		.ascii	"\000"
 8270 06a0 00000018 		.ascii	"\000\000\000\030\030\0008\030\030\030\030\030\030\030"
 8270      18003818 
 8270      18181818 
 8270      1818
 8271 06ae 30E0     		.ascii	"0\340"
 8272 06b0 000000E0 		.ascii	"\000\000\000\340``llxxlfff\000\000"
 8272      60606C6C 
 8272      78786C66 
 8272      66660000 
 8273 06c0 00000038 		.ascii	"\000\000\0008\030\030\030\030\030\030\030\030\030<\000"
 8273      18181818 
 8273      18181818 
 8273      183C00
 8274 06cf 00       		.ascii	"\000"
 8275 06d0 00000000 		.ascii	"\000\000\000\000\000\000\356\333\333\333\333\333\333"
 8275      0000EEDB 
 8275      DBDBDBDB 
 8275      DB
 8276 06dd DB0000   		.ascii	"\333\000\000"
 8277 06e0 00000000 		.ascii	"\000\000\000\000\000\000\334ffffffg\000\000"
 8277      0000DC66 
 8277      66666666 
 8277      66670000 
 8278 06f0 00000000 		.ascii	"\000\000\000\000\000\000|\306\306\306\306\306\306|\000"
 8278      00007CC6 
 8278      C6C6C6C6 
 8278      C67C00
 8279 06ff 00       		.ascii	"\000"
 8280 0700 00000000 		.ascii	"\000\000\000\000\000\000\334ffffff|`p"
 8280      0000DC66 
 8280      66666666 
 8280      667C6070 
 8281 0710 00000000 		.ascii	"\000\000\000\000\000\000v\314\314\314\314\314\314|\014"
 8281      000076CC 
 8281      CCCCCCCC 
 8281      CC7C0C
 8282 071f 1C       		.ascii	"\034"
 8283 0720 00000000 		.ascii	"\000\000\000\000\000\000\334\366f````\360\000\000"
 8283      0000DCF6 
 8283      66606060 
 8283      60F00000 
 8284 0730 00000000 		.ascii	"\000\000\000\000\000\000|\306\300p\034\006\306|\000"
 8284      00007CC6 
 8284      C0701C06 
 8284      C67C00
 8285 073f 00       		.ascii	"\000"
 8286 0740 00000000 		.ascii	"\000\000\000\00000\376000002\036\000\000"
 8286      3030FE30 
 8286      30303030 
 8286      321E0000 
 8287 0750 00000000 		.ascii	"\000\000\000\000\000\000\346ffffff;\000\000"
 8287      0000E666 
 8287      66666666 
 8287      663B0000 
 8288 0760 00000000 		.ascii	"\000\000\000\000\000\000\316\306\306\306\306\306|8\000"
 8288      0000CEC6 
 8288      C6C6C6C6 
 8288      7C3800
 8289 076f 00       		.ascii	"\000"
 8290 0770 00000000 		.ascii	"\000\000\000\000\000\000\316\306\306\326\376\356\306"
 8290      0000CEC6 
 8290      C6D6FEEE 
 8290      C6
 8291 077d C60000   		.ascii	"\306\000\000"
 8292 0780 00000000 		.ascii	"\000\000\000\000\000\000\303f<\030\030<f\303\000\000"
 8292      0000C366 
 8292      3C18183C 
 8292      66C30000 
 8293 0790 00000000 		.ascii	"\000\000\000\000\000\000\307cc66<\030\0300\340"
 8293      0000C763 
 8293      6336363C 
 8293      181830E0 
 8294 07a0 00000000 		.ascii	"\000\000\000\000\000\000~f\006\014\0300f~\000\000"
 8294      00007E66 
 8294      060C1830 
 8294      667E0000 
 8295 07b0 00000C18 		.ascii	"\000\000\014\030\030\030\030\0300\030\030\030\030\030"
 8295      18181818 
 8295      30181818 
 8295      1818
 8296 07be 0C00     		.ascii	"\014\000"
 8297 07c0 00000018 		.ascii	"\000\000\000\030\030\030\030\000\000\000\030\030\030"
 8297      18181800 
 8297      00001818 
 8297      18
 8298 07cd 180000   		.ascii	"\030\000\000"
 8299 07d0 00003018 		.ascii	"\000\0000\030\030\030\030\030\014\030\030\030\030\030"
 8299      18181818 
 8299      0C181818 
 8299      1818
 8300 07de 3000     		.ascii	"0\000"
 8301 07e0 00000000 		.ascii	"\000\000\000\000\000\000\000p\333\016\000\000\000\000"
 8301      00000070 
 8301      DB0E0000 
 8301      0000
 8302 07ee 0000     		.ascii	"\000\000"
 8303 07f0 00000000 		.ascii	"\000\000\000\000\020\02088ll\306\306\376\000\000\000"
 8303      10103838 
 8303      6C6CC6C6 
 8303      FE000000 
 8304              		.section	.rodata.han_tbl,"a"
 8305              		.set	.LANCHOR5,. + 0
 8308              	han_tbl:
 8309 0000 00000102 		.ascii	"\000\000\001\002\003\004\005\006\007\010\011\012\013"
 8309      03040506 
 8309      0708090A 
 8309      0B
 8310 000d 0C0D0E0F 		.ascii	"\014\015\016\017\020\021\022\023\000\000\000\000\000"
 8310      10111213 
 8310      00000000 
 8310      00
 8311 001a 00000000 		.ascii	"\000\000\000\000\000\000"
 8311      0000
 8312 0020 00000001 		.ascii	"\000\000\000\001\002\003\004\005\000\000\006\007\010"
 8312      02030405 
 8312      00000607 
 8312      08
 8313 002d 090A0B00 		.ascii	"\011\012\013\000\000\014\015\016\017\020\021\000\000"
 8313      000C0D0E 
 8313      0F101100 
 8313      00
 8314 003a 12131415 		.ascii	"\022\023\024\025\000\000"
 8314      0000
 8315 0040 00000102 		.ascii	"\000\000\001\002\003\004\005\006\007\010\011\012\013"
 8315      03040506 
 8315      0708090A 
 8315      0B
 8316 004d 0C0D0E0F 		.ascii	"\014\015\016\017\020\000\021\022\023\024\025\026\027"
 8316      10001112 
 8316      13141516 
 8316      17
 8317 005a 18191A1B 		.ascii	"\030\031\032\033\000\000"
 8317      0000
 8318              		.section	.rodata.hangul_chosung_tbl,"a"
 8319              		.align	1
 8320              		.set	.LANCHOR3,. + 0
 8323              	hangul_chosung_tbl:
 8324 0000 0088     		.short	-30720
 8325 0002 008C     		.short	-29696
 8326 0004 0090     		.short	-28672
 8327 0006 0094     		.short	-27648
 8328 0008 0098     		.short	-26624
 8329 000a 009C     		.short	-25600
 8330 000c 00A0     		.short	-24576
 8331 000e 00A4     		.short	-23552
 8332 0010 00A8     		.short	-22528
 8333 0012 00AC     		.short	-21504
 8334 0014 00B0     		.short	-20480
 8335 0016 00B4     		.short	-19456
 8336 0018 00B8     		.short	-18432
 8337 001a 00BC     		.short	-17408
 8338 001c 00C0     		.short	-16384
 8339 001e 00C4     		.short	-15360
 8340 0020 00C8     		.short	-14336
 8341 0022 00CC     		.short	-13312
 8342 0024 00D0     		.short	-12288
 8343              		.section	.rodata.hangul_jongsung_tbl,"a"
 8344              		.align	1
 8345              		.set	.LANCHOR2,. + 0
 8348              	hangul_jongsung_tbl:
 8349 0000 0180     		.short	-32767
 8350 0002 0280     		.short	-32766
 8351 0004 0380     		.short	-32765
 8352 0006 0480     		.short	-32764
 8353 0008 0580     		.short	-32763
 8354 000a 0680     		.short	-32762
 8355 000c 0780     		.short	-32761
 8356 000e 0880     		.short	-32760
 8357 0010 0980     		.short	-32759
 8358 0012 0A80     		.short	-32758
 8359 0014 0B80     		.short	-32757
 8360 0016 0C80     		.short	-32756
 8361 0018 0D80     		.short	-32755
 8362 001a 0E80     		.short	-32754
 8363 001c 0F80     		.short	-32753
 8364 001e 1080     		.short	-32752
 8365 0020 1180     		.short	-32751
 8366 0022 1380     		.short	-32749
 8367 0024 1480     		.short	-32748
 8368 0026 1580     		.short	-32747
 8369 0028 1680     		.short	-32746
 8370 002a 1780     		.short	-32745
 8371 002c 1880     		.short	-32744
 8372 002e 1980     		.short	-32743
 8373 0030 1A80     		.short	-32742
 8374 0032 1B80     		.short	-32741
 8375 0034 1C80     		.short	-32740
 8376 0036 1D80     		.short	-32739
 8377              		.section	.rodata.hangul_jungsung_tbl,"a"
 8378              		.align	1
 8379              		.set	.LANCHOR1,. + 0
 8382              	hangul_jungsung_tbl:
 8383 0000 6080     		.short	-32672
 8384 0002 8080     		.short	-32640
 8385 0004 A080     		.short	-32608
 8386 0006 C080     		.short	-32576
 8387 0008 E080     		.short	-32544
 8388 000a 4081     		.short	-32448
 8389 000c 6081     		.short	-32416
 8390 000e 8081     		.short	-32384
 8391 0010 A081     		.short	-32352
 8392 0012 C081     		.short	-32320
 8393 0014 E081     		.short	-32288
 8394 0016 4082     		.short	-32192
 8395 0018 6082     		.short	-32160
 8396 001a 8082     		.short	-32128
 8397 001c A082     		.short	-32096
 8398 001e C082     		.short	-32064
 8399 0020 E082     		.short	-32032
 8400 0022 4083     		.short	-31936
 8401 0024 6083     		.short	-31904
 8402 0026 8083     		.short	-31872
 8403 0028 A083     		.short	-31840
 8404              		.section	.rodata.kor_font,"a"
 8407              	kor_font:
 8408 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8408      00000000 
 8408      00000000 
 8408      00
 8409 000d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8409      00000000 
 8409      00000000 
 8409      00
 8410 001a 00000000 		.ascii	"\000\000\000\000\000\000"
 8410      0000
 8411 0020 00000000 		.ascii	"\000\000\000\000\000\000?\200\001\200\001\200\003\000"
 8411      00003F80 
 8411      01800180 
 8411      0300
 8412 002e 06000C00 		.ascii	"\006\000\014\0000\000\000\000\000\000\000\000\000\000"
 8412      30000000 
 8412      00000000 
 8412      0000
 8413 003c 00000000 		.ascii	"\000\000\000\000"
 8414 0040 00000000 		.ascii	"\000\000\000\000\000\000\177\200\015\200\015\200\033"
 8414      00007F80 
 8414      0D800D80 
 8414      1B
 8415 004d 001B0036 		.ascii	"\000\033\0006\000H\000\000\000\000\000\000\000\000\000"
 8415      00480000 
 8415      00000000 
 8415      000000
 8416 005c 00000000 		.ascii	"\000\000\000\000"
 8417 0060 00000000 		.ascii	"\000\000\000\000\000\000p\0000\0000\0000\0000\0000\000"
 8417      00007000 
 8417      30003000 
 8417      30003000 
 8417      3000
 8418 0072 1FC00000 		.ascii	"\037\300\000\000\000\000\000\000\000\000\000\000\000"
 8418      00000000 
 8418      00000000 
 8418      00
 8419 007f 00       		.ascii	"\000"
 8420 0080 00000000 		.ascii	"\000\000\000\000\000\000\177\0000\0000\0000\0000\000"
 8420      00007F00 
 8420      30003000 
 8420      30003000 
 8421 0090 30001F80 		.ascii	"0\000\037\200\000\000\000\000\000\000\000\000\000\000"
 8421      00000000 
 8421      00000000 
 8421      0000
 8422 009e 0000     		.ascii	"\000\000"
 8423 00a0 00000000 		.ascii	"\000\000\000\000\000\000\177\2006\0006\0006\0006\000"
 8423      00007F80 
 8423      36003600 
 8423      36003600 
 8424 00b0 36001BC0 		.ascii	"6\000\033\300\000\000\000\000\000\000\000\000\000\000"
 8424      00000000 
 8424      00000000 
 8424      0000
 8425 00be 0000     		.ascii	"\000\000"
 8426 00c0 00000000 		.ascii	"\000\000\000\000\000\000?\200\001\200\001\200?\2000"
 8426      00003F80 
 8426      01800180 
 8426      3F8030
 8427 00cf 0030001F 		.ascii	"\0000\000\037\300\000\000\000\000\000\000\000\000\000"
 8427      C0000000 
 8427      00000000 
 8427      0000
 8428 00dd 000000   		.ascii	"\000\000\000"
 8429 00e0 00000000 		.ascii	"\000\000\000\000\000\000\177\2001\2001\2001\2001\200"
 8429      00007F80 
 8429      31803180 
 8429      31803180 
 8430 00f0 31803F80 		.ascii	"1\200?\200\000\000\000\000\000\000\000\000\000\000\000"
 8430      00000000 
 8430      00000000 
 8430      000000
 8431 00ff 00       		.ascii	"\000"
 8432 0100 00000000 		.ascii	"\000\000\000\000\000\000\003\200q\2001\200?\2001\200"
 8432      00000380 
 8432      71803180 
 8432      3F803180 
 8433 0110 31803F80 		.ascii	"1\200?\200\000\000\000\000\000\000\000\000\000\000\000"
 8433      00000000 
 8433      00000000 
 8433      000000
 8434 011f 00       		.ascii	"\000"
 8435 0120 00000000 		.ascii	"\000\000\000\000\000\000\003\200\355\200m\200\177\200"
 8435      00000380 
 8435      ED806D80 
 8435      7F80
 8436 012e 6D806D80 		.ascii	"m\200m\200\177\200\000\000\000\000\000\000\000\000\000"
 8436      7F800000 
 8436      00000000 
 8436      000000
 8437 013d 000000   		.ascii	"\000\000\000"
 8438 0140 00000000 		.ascii	"\000\000\000\000\016\000\006\000\006\000\006\000\016"
 8438      0E000600 
 8438      06000600 
 8438      0E
 8439 014d 000B0019 		.ascii	"\000\013\000\031\200`\300\000\000\000\000\000\000\000"
 8439      8060C000 
 8439      00000000 
 8439      0000
 8440 015b 00000000 		.ascii	"\000\000\000\000\000"
 8440      00
 8441 0160 00000000 		.ascii	"\000\000\000\000\000\0003\0003\0003\0003\000-\000m\200"
 8441      00003300 
 8441      33003300 
 8441      33002D00 
 8441      6D80
 8442 0172 CCC00000 		.ascii	"\314\300\000\000\000\000\000\000\000\000\000\000\000"
 8442      00000000 
 8442      00000000 
 8442      00
 8443 017f 00       		.ascii	"\000"
 8444 0180 00000000 		.ascii	"\000\000\000\000\000\000\036\0003\000a\200a\200a\200"
 8444      00001E00 
 8444      33006180 
 8444      61806180 
 8445 0190 33001E00 		.ascii	"3\000\036\000\000\000\000\000\000\000\000\000\000\000"
 8445      00000000 
 8445      00000000 
 8445      0000
 8446 019e 0000     		.ascii	"\000\000"
 8447 01a0 00000000 		.ascii	"\000\000\000\000\000\000\177\000\003\000\003\000\006"
 8447      00007F00 
 8447      03000300 
 8447      06
 8448 01ad 000C001B 		.ascii	"\000\014\000\033\000a\200\000\000\000\000\000\000\000"
 8448      00618000 
 8448      00000000 
 8448      0000
 8449 01bb 00000000 		.ascii	"\000\000\000\000\000"
 8449      00
 8450 01c0 00000000 		.ascii	"\000\000\000\000\000\000\177\200\015\200\015\200\033"
 8450      00007F80 
 8450      0D800D80 
 8450      1B
 8451 01cd 003F006D 		.ascii	"\000?\000m\200\330\300\000\000\000\000\000\000\000\000"
 8451      80D8C000 
 8451      00000000 
 8451      000000
 8452 01dc 00000000 		.ascii	"\000\000\000\000"
 8453 01e0 00000000 		.ascii	"\000\000\000\000\036\000\000\000\177\000\003\000\006"
 8453      1E000000 
 8453      7F000300 
 8453      06
 8454 01ed 000E001B 		.ascii	"\000\016\000\033\000a\200\000\000\000\000\000\000\000"
 8454      00618000 
 8454      00000000 
 8454      0000
 8455 01fb 00000000 		.ascii	"\000\000\000\000\000"
 8455      00
 8456 0200 00000000 		.ascii	"\000\000\000\000\000\000\177\200\001\200\177\200\003"
 8456      00007F80 
 8456      01807F80 
 8456      03
 8457 020d 0006000C 		.ascii	"\000\006\000\014\000p\000\000\000\000\000\000\000\000"
 8457      00700000 
 8457      00000000 
 8457      0000
 8458 021b 00000000 		.ascii	"\000\000\000\000\000"
 8458      00
 8459 0220 00000000 		.ascii	"\000\000\000\000\000\000\177\2000\0000\000?\2000\000"
 8459      00007F80 
 8459      30003000 
 8459      3F803000 
 8460 0230 30001FC0 		.ascii	"0\000\037\300\000\000\000\000\000\000\000\000\000\000"
 8460      00000000 
 8460      00000000 
 8460      0000
 8461 023e 0000     		.ascii	"\000\000"
 8462 0240 00000000 		.ascii	"\000\000\000\000\000\000\377\3003\0003\0003\0003\000"
 8462      0000FFC0 
 8462      33003300 
 8462      33003300 
 8463 0250 3300FFC0 		.ascii	"3\000\377\300\000\000\000\000\000\000\000\000\000\000"
 8463      00000000 
 8463      00000000 
 8463      0000
 8464 025e 0000     		.ascii	"\000\000"
 8465 0260 00000000 		.ascii	"\000\000\000\000\016\000\177\300\000\000\037\0001\200"
 8465      0E007FC0 
 8465      00001F00 
 8465      3180
 8466 026e 31803180 		.ascii	"1\2001\200\037\000\000\000\000\000\000\000\000\000\000"
 8466      1F000000 
 8466      00000000 
 8466      000000
 8467 027d 000000   		.ascii	"\000\000\000"
 8468 0280 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8468      00000000 
 8468      00000000 
 8468      00
 8469 028d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8469      00000000 
 8469      00000000 
 8469      00
 8470 029a 00000000 		.ascii	"\000\000\000\000\000\000"
 8470      0000
 8471 02a0 00000000 		.ascii	"\000\000\000\000\037\360\0000\0000\0000\0000\000 \000"
 8471      1FF00030 
 8471      00300030 
 8471      00300020 
 8471      00
 8472 02b1 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8472      00000000 
 8472      00000000 
 8472      00
 8473 02be 0000     		.ascii	"\000\000"
 8474 02c0 00000000 		.ascii	"\000\000\000\000\037\370\003\030\003\030\003\030\003"
 8474      1FF80318 
 8474      03180318 
 8474      03
 8475 02cd 18021000 		.ascii	"\030\002\020\000\000\000\000\000\000\000\000\000\000"
 8475      00000000 
 8475      00000000 
 8475      00
 8476 02da 00000000 		.ascii	"\000\000\000\000\000\000"
 8476      0000
 8477 02e0 00000000 		.ascii	"\000\000\000\0008\000\030\000\030\000\030\000\017\370"
 8477      38001800 
 8477      18001800 
 8477      0FF8
 8478 02ee 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8478      00000000 
 8478      00000000 
 8478      00
 8479 02fb 00000000 		.ascii	"\000\000\000\000\000"
 8479      00
 8480 0300 00000000 		.ascii	"\000\000\000\000?\360\030\000\030\000\030\000\017\360"
 8480      3FF01800 
 8480      18001800 
 8480      0FF0
 8481 030e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8481      00000000 
 8481      00000000 
 8481      00
 8482 031b 00000000 		.ascii	"\000\000\000\000\000"
 8482      00
 8483 0320 00000000 		.ascii	"\000\000\000\000?\370\030\300\030\300\030\300\017x\000"
 8483      3FF818C0 
 8483      18C018C0 
 8483      0F7800
 8484 032f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8484      00000000 
 8484      00000000 
 8484      00
 8485 033c 00000000 		.ascii	"\000\000\000\000"
 8486 0340 00000000 		.ascii	"\000\000\000\000\037\370\000\030\037\370\030\000\017"
 8486      1FF80018 
 8486      1FF81800 
 8486      0F
 8487 034d F8000000 		.ascii	"\370\000\000\000\000\000\000\000\000\000\000\000\000"
 8487      00000000 
 8487      00000000 
 8487      00
 8488 035a 00000000 		.ascii	"\000\000\000\000\000\000"
 8488      0000
 8489 0360 00000000 		.ascii	"\000\000\000\000?\360\0300\0300\0300\037\360\000\000"
 8489      3FF01830 
 8489      18301830 
 8489      1FF00000 
 8490 0370 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8490      00000000 
 8490      00000000 
 8490      00
 8491 037d 000000   		.ascii	"\000\000\000"
 8492 0380 00000000 		.ascii	"\000\000\000\0008p\0300\037\360\0300\037\360\000\000"
 8492      38701830 
 8492      1FF01830 
 8492      1FF00000 
 8493 0390 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8493      00000000 
 8493      00000000 
 8493      00
 8494 039d 000000   		.ascii	"\000\000\000"
 8495 03a0 00000000 		.ascii	"\000\000\000\0009\230\031\230\037\370\031\230\037\370"
 8495      39981998 
 8495      1FF81998 
 8495      1FF8
 8496 03ae 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8496      00000000 
 8496      00000000 
 8496      00
 8497 03bb 00000000 		.ascii	"\000\000\000\000\000"
 8497      00
 8498 03c0 00000000 		.ascii	"\000\000\000\000\003\200\001\200\003\300\0060\014\030"
 8498      03800180 
 8498      03C00630 
 8498      0C18
 8499 03ce 300C0000 		.ascii	"0\014\000\000\000\000\000\000\000\000\000\000\000\000"
 8499      00000000 
 8499      00000000 
 8499      0000
 8500 03dc 00000000 		.ascii	"\000\000\000\000"
 8501 03e0 00000000 		.ascii	"\000\000\000\000\014`\014`\016`\032\3601\230c\014\000"
 8501      0C600C60 
 8501      0E601AF0 
 8501      3198630C 
 8501      00
 8502 03f1 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8502      00000000 
 8502      00000000 
 8502      00
 8503 03fe 0000     		.ascii	"\000\000"
 8504 0400 00000000 		.ascii	"\000\000\000\000\017\340\0300\0300\0300\017\340\000"
 8504      0FE01830 
 8504      18301830 
 8504      0FE000
 8505 040f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8505      00000000 
 8505      00000000 
 8505      00
 8506 041c 00000000 		.ascii	"\000\000\000\000"
 8507 0420 00000000 		.ascii	"\000\000\000\000\037\360\000`\000\300\003`\014\0300"
 8507      1FF00060 
 8507      00C00360 
 8507      0C1830
 8508 042f 0C000000 		.ascii	"\014\000\000\000\000\000\000\000\000\000\000\000\000"
 8508      00000000 
 8508      00000000 
 8508      00
 8509 043c 00000000 		.ascii	"\000\000\000\000"
 8510 0440 00000000 		.ascii	"\000\000\000\000?\370\006`\016p\031\2301\214\000\000"
 8510      3FF80660 
 8510      0E701998 
 8510      318C0000 
 8511 0450 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8511      00000000 
 8511      00000000 
 8511      00
 8512 045d 000000   		.ascii	"\000\000\000"
 8513 0460 000003C0 		.ascii	"\000\000\003\300\000\000\037\370\001\300\003`\016\030"
 8513      00001FF8 
 8513      01C00360 
 8513      0E18
 8514 046e 300C0000 		.ascii	"0\014\000\000\000\000\000\000\000\000\000\000\000\000"
 8514      00000000 
 8514      00000000 
 8514      0000
 8515 047c 00000000 		.ascii	"\000\000\000\000"
 8516 0480 00000000 		.ascii	"\000\000\000\000\037\370\000\030\000\030\037\370\000"
 8516      1FF80018 
 8516      00181FF8 
 8516      00
 8517 048d 18001800 		.ascii	"\030\000\030\000\020\000\000\000\000\000\000\000\000"
 8517      10000000 
 8517      00000000 
 8517      00
 8518 049a 00000000 		.ascii	"\000\000\000\000\000\000"
 8518      0000
 8519 04a0 00000000 		.ascii	"\000\000\000\000?\370\030\000\037\370\030\000\017\370"
 8519      3FF81800 
 8519      1FF81800 
 8519      0FF8
 8520 04ae 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8520      00000000 
 8520      00000000 
 8520      00
 8521 04bb 00000000 		.ascii	"\000\000\000\000\000"
 8521      00
 8522 04c0 00000000 		.ascii	"\000\000\000\000\037\370\006`\006`\006`\037\370\000"
 8522      1FF80660 
 8522      06600660 
 8522      1FF800
 8523 04cf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8523      00000000 
 8523      00000000 
 8523      00
 8524 04dc 00000000 		.ascii	"\000\000\000\000"
 8525 04e0 000003C0 		.ascii	"\000\000\003\300\037\370\007\340\0140\0140\007\340\000"
 8525      1FF807E0 
 8525      0C300C30 
 8525      07E000
 8526 04ef 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8526      00000000 
 8526      00000000 
 8526      00
 8527 04fc 00000000 		.ascii	"\000\000\000\000"
 8528 0500 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8528      00000000 
 8528      00000000 
 8528      00
 8529 050d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8529      00000000 
 8529      00000000 
 8529      00
 8530 051a 00000000 		.ascii	"\000\000\000\000\000\000"
 8530      0000
 8531 0520 00000000 		.ascii	"\000\000\000\000\037\360\0000\0000\0000\0000\000 \000"
 8531      1FF00030 
 8531      00300030 
 8531      00300020 
 8531      00
 8532 0531 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8532      00000000 
 8532      00000000 
 8532      00
 8533 053e 0000     		.ascii	"\000\000"
 8534 0540 00000000 		.ascii	"\000\000\000\000\037\370\003\030\003\030\003\030\002"
 8534      1FF80318 
 8534      03180318 
 8534      02
 8535 054d 10000000 		.ascii	"\020\000\000\000\000\000\000\000\000\000\000\000\000"
 8535      00000000 
 8535      00000000 
 8535      00
 8536 055a 00000000 		.ascii	"\000\000\000\000\000\000"
 8536      0000
 8537 0560 00000000 		.ascii	"\000\000\000\0008\000\030\000\030\000\030\000\017\370"
 8537      38001800 
 8537      18001800 
 8537      0FF8
 8538 056e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8538      00000000 
 8538      00000000 
 8538      00
 8539 057b 00000000 		.ascii	"\000\000\000\000\000"
 8539      00
 8540 0580 00000000 		.ascii	"\000\000\000\000?\360\030\000\030\000\030\000\017\360"
 8540      3FF01800 
 8540      18001800 
 8540      0FF0
 8541 058e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8541      00000000 
 8541      00000000 
 8541      00
 8542 059b 00000000 		.ascii	"\000\000\000\000\000"
 8542      00
 8543 05a0 00000000 		.ascii	"\000\000\000\000?\370\030\300\030\300\030\300\017x\000"
 8543      3FF818C0 
 8543      18C018C0 
 8543      0F7800
 8544 05af 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8544      00000000 
 8544      00000000 
 8544      00
 8545 05bc 00000000 		.ascii	"\000\000\000\000"
 8546 05c0 00000000 		.ascii	"\000\000\000\000\037\370\000\030\037\370\030\000\017"
 8546      1FF80018 
 8546      1FF81800 
 8546      0F
 8547 05cd F8000000 		.ascii	"\370\000\000\000\000\000\000\000\000\000\000\000\000"
 8547      00000000 
 8547      00000000 
 8547      00
 8548 05da 00000000 		.ascii	"\000\000\000\000\000\000"
 8548      0000
 8549 05e0 00000000 		.ascii	"\000\000\000\000?\360\0300\0300\0300\037\360\000\000"
 8549      3FF01830 
 8549      18301830 
 8549      1FF00000 
 8550 05f0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8550      00000000 
 8550      00000000 
 8550      00
 8551 05fd 000000   		.ascii	"\000\000\000"
 8552 0600 00000000 		.ascii	"\000\000\000\0008p\0300\037\360\0300\037\360\000\000"
 8552      38701830 
 8552      1FF01830 
 8552      1FF00000 
 8553 0610 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8553      00000000 
 8553      00000000 
 8553      00
 8554 061d 000000   		.ascii	"\000\000\000"
 8555 0620 00000000 		.ascii	"\000\000\000\0009\230\031\230\037\370\031\230\037\370"
 8555      39981998 
 8555      1FF81998 
 8555      1FF8
 8556 062e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8556      00000000 
 8556      00000000 
 8556      00
 8557 063b 00000000 		.ascii	"\000\000\000\000\000"
 8557      00
 8558 0640 00000380 		.ascii	"\000\000\003\200\001\200\003\300\0060\014\0300\014\000"
 8558      018003C0 
 8558      06300C18 
 8558      300C00
 8559 064f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8559      00000000 
 8559      00000000 
 8559      00
 8560 065c 00000000 		.ascii	"\000\000\000\000"
 8561 0660 00000C60 		.ascii	"\000\000\014`\014`\016\340\032\2601\030a\014\000\000"
 8561      0C600EE0 
 8561      1AB03118 
 8561      610C0000 
 8562 0670 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8562      00000000 
 8562      00000000 
 8562      00
 8563 067d 000000   		.ascii	"\000\000\000"
 8564 0680 000007E0 		.ascii	"\000\000\007\340\0140\0140\0140\007\340\000\000\000"
 8564      0C300C30 
 8564      0C3007E0 
 8564      000000
 8565 068f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8565      00000000 
 8565      00000000 
 8565      00
 8566 069c 00000000 		.ascii	"\000\000\000\000"
 8567 06a0 00001FF0 		.ascii	"\000\000\037\360\000`\000\300\003`\014\0300\014\000"
 8567      006000C0 
 8567      03600C18 
 8567      300C00
 8568 06af 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8568      00000000 
 8568      00000000 
 8568      00
 8569 06bc 00000000 		.ascii	"\000\000\000\000"
 8570 06c0 00000000 		.ascii	"\000\000\000\000?\370\006`\016p\031\2301\214\000\000"
 8570      3FF80660 
 8570      0E701998 
 8570      318C0000 
 8571 06d0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8571      00000000 
 8571      00000000 
 8571      00
 8572 06dd 000000   		.ascii	"\000\000\000"
 8573 06e0 000003C0 		.ascii	"\000\000\003\300\037\370\001\300\003`\016\0300\014\000"
 8573      1FF801C0 
 8573      03600E18 
 8573      300C00
 8574 06ef 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8574      00000000 
 8574      00000000 
 8574      00
 8575 06fc 00000000 		.ascii	"\000\000\000\000"
 8576 0700 00000000 		.ascii	"\000\000\000\000\000\000\177\200\001\200\177\200\003"
 8576      00007F80 
 8576      01807F80 
 8576      03
 8577 070d 0006000C 		.ascii	"\000\006\000\014\000p\000\000\000\000\000\000\000\000"
 8577      00700000 
 8577      00000000 
 8577      0000
 8578 071b 00000000 		.ascii	"\000\000\000\000\000"
 8578      00
 8579 0720 00000000 		.ascii	"\000\000\000\000?\370\030\000\037\370\030\000\017\370"
 8579      3FF81800 
 8579      1FF81800 
 8579      0FF8
 8580 072e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8580      00000000 
 8580      00000000 
 8580      00
 8581 073b 00000000 		.ascii	"\000\000\000\000\000"
 8581      00
 8582 0740 00000000 		.ascii	"\000\000\000\000\037\370\006`\006`\006`\037\370\000"
 8582      1FF80660 
 8582      06600660 
 8582      1FF800
 8583 074f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8583      00000000 
 8583      00000000 
 8583      00
 8584 075c 00000000 		.ascii	"\000\000\000\000"
 8585 0760 000003C0 		.ascii	"\000\000\003\300\037\370\007\340\0140\0140\007\340\000"
 8585      1FF807E0 
 8585      0C300C30 
 8585      07E000
 8586 076f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8586      00000000 
 8586      00000000 
 8586      00
 8587 077c 00000000 		.ascii	"\000\000\000\000"
 8588 0780 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8588      00000000 
 8588      00000000 
 8588      00
 8589 078d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8589      00000000 
 8589      00000000 
 8589      00
 8590 079a 00000000 		.ascii	"\000\000\000\000\000\000"
 8590      0000
 8591 07a0 00000000 		.ascii	"\000\000\000\000?\200\001\200\001\200\001\200\001\200"
 8591      3F800180 
 8591      01800180 
 8591      0180
 8592 07ae 01000000 		.ascii	"\001\000\000\000\000\000\000\000\000\000\000\000\000"
 8592      00000000 
 8592      00000000 
 8592      00
 8593 07bb 00000000 		.ascii	"\000\000\000\000\000"
 8593      00
 8594 07c0 00000000 		.ascii	"\000\000\000\000?\300\014\300\014\300\014\300\014\300"
 8594      3FC00CC0 
 8594      0CC00CC0 
 8594      0CC0
 8595 07ce 08800000 		.ascii	"\010\200\000\000\000\000\000\000\000\000\000\000\000"
 8595      00000000 
 8595      00000000 
 8595      00
 8596 07db 00000000 		.ascii	"\000\000\000\000\000"
 8596      00
 8597 07e0 00000000 		.ascii	"\000\000\000\000p\0000\0000\0000\000\037\300\000\000"
 8597      70003000 
 8597      30003000 
 8597      1FC00000 
 8598 07f0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8598      00000000 
 8598      00000000 
 8598      00
 8599 07fd 000000   		.ascii	"\000\000\000"
 8600 0800 00000000 		.ascii	"\000\000\000\000\177\2000\0000\0000\000\037\200\000"
 8600      7F803000 
 8600      30003000 
 8600      1F8000
 8601 080f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8601      00000000 
 8601      00000000 
 8601      00
 8602 081c 00000000 		.ascii	"\000\000\000\000"
 8603 0820 00000000 		.ascii	"\000\000\000\000\177\3003\0003\0003\000\035\300\000"
 8603      7FC03300 
 8603      33003300 
 8603      1DC000
 8604 082f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8604      00000000 
 8604      00000000 
 8604      00
 8605 083c 00000000 		.ascii	"\000\000\000\000"
 8606 0840 00000000 		.ascii	"\000\000\000\000?\200\001\200?\2000\000\037\200\000"
 8606      3F800180 
 8606      3F803000 
 8606      1F8000
 8607 084f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8607      00000000 
 8607      00000000 
 8607      00
 8608 085c 00000000 		.ascii	"\000\000\000\000"
 8609 0860 00000000 		.ascii	"\000\000\000\000\177\2001\2001\2001\200?\200\000\000"
 8609      7F803180 
 8609      31803180 
 8609      3F800000 
 8610 0870 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8610      00000000 
 8610      00000000 
 8610      00
 8611 087d 000000   		.ascii	"\000\000\000"
 8612 0880 00000000 		.ascii	"\000\000\000\000s\2001\200?\2001\200?\200\000\000\000"
 8612      73803180 
 8612      3F803180 
 8612      3F800000 
 8612      00
 8613 0891 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8613      00000000 
 8613      00000000 
 8613      00
 8614 089e 0000     		.ascii	"\000\000"
 8615 08a0 00000000 		.ascii	"\000\000\000\000v\3006\300?\3006\300?\300\000\000\000"
 8615      76C036C0 
 8615      3FC036C0 
 8615      3FC00000 
 8615      00
 8616 08b1 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8616      00000000 
 8616      00000000 
 8616      00
 8617 08be 0000     		.ascii	"\000\000"
 8618 08c0 00000000 		.ascii	"\000\000\000\000\016\000\006\000\016\000\031\2000\300"
 8618      0E000600 
 8618      0E001980 
 8618      30C0
 8619 08ce 40600000 		.ascii	"@`\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8619      00000000 
 8619      00000000 
 8619      000000
 8620 08dd 000000   		.ascii	"\000\000\000"
 8621 08e0 00000000 		.ascii	"\000\000\000\000\031\200\031\200\031\200\037\2006\300"
 8621      19801980 
 8621      19801F80 
 8621      36C0
 8622 08ee 66600000 		.ascii	"f`\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8622      00000000 
 8622      00000000 
 8622      000000
 8623 08fd 000000   		.ascii	"\000\000\000"
 8624 0900 00000000 		.ascii	"\000\000\000\000\037\0001\2001\2001\200\037\000\000"
 8624      1F003180 
 8624      31803180 
 8624      1F0000
 8625 090f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8625      00000000 
 8625      00000000 
 8625      00
 8626 091c 00000000 		.ascii	"\000\000\000\000"
 8627 0920 00000000 		.ascii	"\000\000\000\000?\200\003\000\006\000\015\2000\300\000"
 8627      3F800300 
 8627      06000D80 
 8627      30C000
 8628 092f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8628      00000000 
 8628      00000000 
 8628      00
 8629 093c 00000000 		.ascii	"\000\000\000\000"
 8630 0940 00000000 		.ascii	"\000\000\000\000?\300\015\200\033\000?\200d\300\000"
 8630      3FC00D80 
 8630      1B003F80 
 8630      64C000
 8631 094f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8631      00000000 
 8631      00000000 
 8631      00
 8632 095c 00000000 		.ascii	"\000\000\000\000"
 8633 0960 00000000 		.ascii	"\000\000\000\000\016\000?\200\003\000\006\000\015\200"
 8633      0E003F80 
 8633      03000600 
 8633      0D80
 8634 096e 30C00000 		.ascii	"0\300\000\000\000\000\000\000\000\000\000\000\000\000"
 8634      00000000 
 8634      00000000 
 8634      0000
 8635 097c 00000000 		.ascii	"\000\000\000\000"
 8636 0980 00000000 		.ascii	"\000\000\000\000?\300\000\300?\300\000\300\000\300\000"
 8636      3FC000C0 
 8636      3FC000C0 
 8636      00C000
 8637 098f 80000000 		.ascii	"\200\000\000\000\000\000\000\000\000\000\000\000\000"
 8637      00000000 
 8637      00000000 
 8637      00
 8638 099c 00000000 		.ascii	"\000\000\000\000"
 8639 09a0 00000000 		.ascii	"\000\000\000\000\177\2000\000?\2000\000\037\200\000"
 8639      7F803000 
 8639      3F803000 
 8639      1F8000
 8640 09af 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8640      00000000 
 8640      00000000 
 8640      00
 8641 09bc 00000000 		.ascii	"\000\000\000\000"
 8642 09c0 00000000 		.ascii	"\000\000\000\000?\300\031\200\031\200\031\200?\300\000"
 8642      3FC01980 
 8642      19801980 
 8642      3FC000
 8643 09cf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8643      00000000 
 8643      00000000 
 8643      00
 8644 09dc 00000000 		.ascii	"\000\000\000\000"
 8645 09e0 00000E00 		.ascii	"\000\000\016\000\177\300\037\0001\2001\200\037\000\000"
 8645      7FC01F00 
 8645      31803180 
 8645      1F0000
 8646 09ef 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8646      00000000 
 8646      00000000 
 8646      00
 8647 09fc 00000000 		.ascii	"\000\000\000\000"
 8648 0a00 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8648      00000000 
 8648      00000000 
 8648      00
 8649 0a0d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8649      00000000 
 8649      00000000 
 8649      00
 8650 0a1a 00000000 		.ascii	"\000\000\000\000\000\000"
 8650      0000
 8651 0a20 00000000 		.ascii	"\000\000\000\000?\200\001\200\001\200\001\200\001\200"
 8651      3F800180 
 8651      01800180 
 8651      0180
 8652 0a2e 01000000 		.ascii	"\001\000\000\000\000\000\000\000\000\000\000\000\000"
 8652      00000000 
 8652      00000000 
 8652      00
 8653 0a3b 00000000 		.ascii	"\000\000\000\000\000"
 8653      00
 8654 0a40 00000000 		.ascii	"\000\000\000\000?\300\014\300\014\300\014\300\014\300"
 8654      3FC00CC0 
 8654      0CC00CC0 
 8654      0CC0
 8655 0a4e 08800000 		.ascii	"\010\200\000\000\000\000\000\000\000\000\000\000\000"
 8655      00000000 
 8655      00000000 
 8655      00
 8656 0a5b 00000000 		.ascii	"\000\000\000\000\000"
 8656      00
 8657 0a60 00000000 		.ascii	"\000\000\000\000p\0000\0000\0000\000\037\300\000\000"
 8657      70003000 
 8657      30003000 
 8657      1FC00000 
 8658 0a70 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8658      00000000 
 8658      00000000 
 8658      00
 8659 0a7d 000000   		.ascii	"\000\000\000"
 8660 0a80 00000000 		.ascii	"\000\000\000\000\177\2000\0000\0000\000\037\200\000"
 8660      7F803000 
 8660      30003000 
 8660      1F8000
 8661 0a8f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8661      00000000 
 8661      00000000 
 8661      00
 8662 0a9c 00000000 		.ascii	"\000\000\000\000"
 8663 0aa0 00000000 		.ascii	"\000\000\000\000\177\3003\0003\0003\000\035\300\000"
 8663      7FC03300 
 8663      33003300 
 8663      1DC000
 8664 0aaf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8664      00000000 
 8664      00000000 
 8664      00
 8665 0abc 00000000 		.ascii	"\000\000\000\000"
 8666 0ac0 00000000 		.ascii	"\000\000\000\000?\200\001\200?\2000\000\037\200\000"
 8666      3F800180 
 8666      3F803000 
 8666      1F8000
 8667 0acf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8667      00000000 
 8667      00000000 
 8667      00
 8668 0adc 00000000 		.ascii	"\000\000\000\000"
 8669 0ae0 00000000 		.ascii	"\000\000\000\000\177\2001\2001\2001\200?\200\000\000"
 8669      7F803180 
 8669      31803180 
 8669      3F800000 
 8670 0af0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8670      00000000 
 8670      00000000 
 8670      00
 8671 0afd 000000   		.ascii	"\000\000\000"
 8672 0b00 00000000 		.ascii	"\000\000\000\000s\2001\200?\2001\200?\200\000\000\000"
 8672      73803180 
 8672      3F803180 
 8672      3F800000 
 8672      00
 8673 0b11 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8673      00000000 
 8673      00000000 
 8673      00
 8674 0b1e 0000     		.ascii	"\000\000"
 8675 0b20 00000000 		.ascii	"\000\000\000\000v\3006\300?\3006\300?\300\000\000\000"
 8675      76C036C0 
 8675      3FC036C0 
 8675      3FC00000 
 8675      00
 8676 0b31 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8676      00000000 
 8676      00000000 
 8676      00
 8677 0b3e 0000     		.ascii	"\000\000"
 8678 0b40 00000000 		.ascii	"\000\000\000\000\016\000\006\000\016\000\031\2000\300"
 8678      0E000600 
 8678      0E001980 
 8678      30C0
 8679 0b4e 40600000 		.ascii	"@`\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8679      00000000 
 8679      00000000 
 8679      000000
 8680 0b5d 000000   		.ascii	"\000\000\000"
 8681 0b60 00000000 		.ascii	"\000\000\000\000\031\200\031\200\031\200\037\2006\300"
 8681      19801980 
 8681      19801F80 
 8681      36C0
 8682 0b6e 66600000 		.ascii	"f`\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8682      00000000 
 8682      00000000 
 8682      000000
 8683 0b7d 000000   		.ascii	"\000\000\000"
 8684 0b80 00000000 		.ascii	"\000\000\000\000\037\0001\2001\2001\200\037\000\000"
 8684      1F003180 
 8684      31803180 
 8684      1F0000
 8685 0b8f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8685      00000000 
 8685      00000000 
 8685      00
 8686 0b9c 00000000 		.ascii	"\000\000\000\000"
 8687 0ba0 00000000 		.ascii	"\000\000\000\000?\200\003\000\006\000\015\2000\300\000"
 8687      3F800300 
 8687      06000D80 
 8687      30C000
 8688 0baf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8688      00000000 
 8688      00000000 
 8688      00
 8689 0bbc 00000000 		.ascii	"\000\000\000\000"
 8690 0bc0 00000000 		.ascii	"\000\000\000\000?\300\015\200\033\000?\200d\300\000"
 8690      3FC00D80 
 8690      1B003F80 
 8690      64C000
 8691 0bcf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8691      00000000 
 8691      00000000 
 8691      00
 8692 0bdc 00000000 		.ascii	"\000\000\000\000"
 8693 0be0 00000000 		.ascii	"\000\000\000\000\016\000?\200\003\000\006\000\015\200"
 8693      0E003F80 
 8693      03000600 
 8693      0D80
 8694 0bee 30C00000 		.ascii	"0\300\000\000\000\000\000\000\000\000\000\000\000\000"
 8694      00000000 
 8694      00000000 
 8694      0000
 8695 0bfc 00000000 		.ascii	"\000\000\000\000"
 8696 0c00 00000000 		.ascii	"\000\000\000\000?\300\000\300?\300\000\300\000\300\000"
 8696      3FC000C0 
 8696      3FC000C0 
 8696      00C000
 8697 0c0f 80000000 		.ascii	"\200\000\000\000\000\000\000\000\000\000\000\000\000"
 8697      00000000 
 8697      00000000 
 8697      00
 8698 0c1c 00000000 		.ascii	"\000\000\000\000"
 8699 0c20 00000000 		.ascii	"\000\000\000\000\177\2000\000?\2000\000\037\200\000"
 8699      7F803000 
 8699      3F803000 
 8699      1F8000
 8700 0c2f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8700      00000000 
 8700      00000000 
 8700      00
 8701 0c3c 00000000 		.ascii	"\000\000\000\000"
 8702 0c40 00000000 		.ascii	"\000\000\000\000?\300\031\200\031\200\031\200?\300\000"
 8702      3FC01980 
 8702      19801980 
 8702      3FC000
 8703 0c4f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8703      00000000 
 8703      00000000 
 8703      00
 8704 0c5c 00000000 		.ascii	"\000\000\000\000"
 8705 0c60 00000E00 		.ascii	"\000\000\016\000\177\300\037\0001\2001\200\037\000\000"
 8705      7FC01F00 
 8705      31803180 
 8705      1F0000
 8706 0c6f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8706      00000000 
 8706      00000000 
 8706      00
 8707 0c7c 00000000 		.ascii	"\000\000\000\000"
 8708 0c80 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8708      00000000 
 8708      00000000 
 8708      00
 8709 0c8d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8709      00000000 
 8709      00000000 
 8709      00
 8710 0c9a 00000000 		.ascii	"\000\000\000\000\000\000"
 8710      0000
 8711 0ca0 00000000 		.ascii	"\000\000\000\000?\200\001\200\001\200\003\000\006\000"
 8711      3F800180 
 8711      01800300 
 8711      0600
 8712 0cae 0C003000 		.ascii	"\014\0000\000\000\000\000\000\000\000\000\000\000\000"
 8712      00000000 
 8712      00000000 
 8712      0000
 8713 0cbc 00000000 		.ascii	"\000\000\000\000"
 8714 0cc0 00000000 		.ascii	"\000\000\000\000\177\200\015\200\015\200\033\000\033"
 8714      7F800D80 
 8714      0D801B00 
 8714      1B
 8715 0ccd 00360048 		.ascii	"\0006\000H\000\000\000\000\000\000\000\000\000\000\000"
 8715      00000000 
 8715      00000000 
 8715      000000
 8716 0cdc 00000000 		.ascii	"\000\000\000\000"
 8717 0ce0 00000000 		.ascii	"\000\000\000\000p\0000\0000\0000\0000\000\037\200\000"
 8717      70003000 
 8717      30003000 
 8717      30001F80 
 8717      00
 8718 0cf1 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8718      00000000 
 8718      00000000 
 8718      00
 8719 0cfe 0000     		.ascii	"\000\000"
 8720 0d00 00000000 		.ascii	"\000\000\000\000\177\0000\0000\0000\0000\000\037\200"
 8720      7F003000 
 8720      30003000 
 8720      30001F80 
 8721 0d10 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8721      00000000 
 8721      00000000 
 8721      00
 8722 0d1d 000000   		.ascii	"\000\000\000"
 8723 0d20 00000000 		.ascii	"\000\000\000\000\177\2006\0006\0006\0006\000\033\300"
 8723      7F803600 
 8723      36003600 
 8723      36001BC0 
 8724 0d30 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8724      00000000 
 8724      00000000 
 8724      00
 8725 0d3d 000000   		.ascii	"\000\000\000"
 8726 0d40 00000000 		.ascii	"\000\000\000\000?\200\001\200\001\200?\2000\0000\000"
 8726      3F800180 
 8726      01803F80 
 8726      30003000 
 8727 0d50 1FC00000 		.ascii	"\037\300\000\000\000\000\000\000\000\000\000\000\000"
 8727      00000000 
 8727      00000000 
 8727      00
 8728 0d5d 000000   		.ascii	"\000\000\000"
 8729 0d60 00000000 		.ascii	"\000\000\000\000\177\2001\2001\2001\2001\200?\200\000"
 8729      7F803180 
 8729      31803180 
 8729      31803F80 
 8729      00
 8730 0d71 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8730      00000000 
 8730      00000000 
 8730      00
 8731 0d7e 0000     		.ascii	"\000\000"
 8732 0d80 00000000 		.ascii	"\000\000\000\000s\2001\200?\2001\2001\200?\200\000\000"
 8732      73803180 
 8732      3F803180 
 8732      31803F80 
 8732      0000
 8733 0d92 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8733      00000000 
 8733      00000000 
 8733      00
 8734 0d9f 00       		.ascii	"\000"
 8735 0da0 00000000 		.ascii	"\000\000\000\000\355\200m\200\177\200m\200m\200\177"
 8735      ED806D80 
 8735      7F806D80 
 8735      6D807F
 8736 0daf 80000000 		.ascii	"\200\000\000\000\000\000\000\000\000\000\000\000\000"
 8736      00000000 
 8736      00000000 
 8736      00
 8737 0dbc 00000000 		.ascii	"\000\000\000\000"
 8738 0dc0 00000000 		.ascii	"\000\000\000\000\016\000\006\000\006\000\016\000\013"
 8738      0E000600 
 8738      06000E00 
 8738      0B
 8739 0dcd 00198060 		.ascii	"\000\031\200`\300\000\000\000\000\000\000\000\000\000"
 8739      C0000000 
 8739      00000000 
 8739      0000
 8740 0ddb 00000000 		.ascii	"\000\000\000\000\000"
 8740      00
 8741 0de0 00000000 		.ascii	"\000\000\000\000\033\000\033\000\033\000\025\0005\200"
 8741      1B001B00 
 8741      1B001500 
 8741      3580
 8742 0dee 64C00000 		.ascii	"d\300\000\000\000\000\000\000\000\000\000\000\000\000"
 8742      00000000 
 8742      00000000 
 8742      0000
 8743 0dfc 00000000 		.ascii	"\000\000\000\000"
 8744 0e00 00000000 		.ascii	"\000\000\000\000\037\0001\2001\2001\2001\200\037\000"
 8744      1F003180 
 8744      31803180 
 8744      31801F00 
 8745 0e10 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8745      00000000 
 8745      00000000 
 8745      00
 8746 0e1d 000000   		.ascii	"\000\000\000"
 8747 0e20 00000000 		.ascii	"\000\000\000\000?\200\001\200\003\000\006\000\015\200"
 8747      3F800180 
 8747      03000600 
 8747      0D80
 8748 0e2e 30C00000 		.ascii	"0\300\000\000\000\000\000\000\000\000\000\000\000\000"
 8748      00000000 
 8748      00000000 
 8748      0000
 8749 0e3c 00000000 		.ascii	"\000\000\000\000"
 8750 0e40 00000000 		.ascii	"\000\000\000\000\177\200\015\200\015\200\033\000?\000"
 8750      7F800D80 
 8750      0D801B00 
 8750      3F00
 8751 0e4e 6D8018C0 		.ascii	"m\200\030\300\000\000\000\000\000\000\000\000\000\000"
 8751      00000000 
 8751      00000000 
 8751      0000
 8752 0e5c 00000000 		.ascii	"\000\000\000\000"
 8753 0e60 00000000 		.ascii	"\000\000\000\000\034\000\177\000\003\000\006\000\016"
 8753      1C007F00 
 8753      03000600 
 8753      0E
 8754 0e6d 001B0061 		.ascii	"\000\033\000a\200\000\000\000\000\000\000\000\000\000"
 8754      80000000 
 8754      00000000 
 8754      0000
 8755 0e7b 00000000 		.ascii	"\000\000\000\000\000"
 8755      00
 8756 0e80 00000000 		.ascii	"\000\000\000\000?\200\001\200?\200\003\000\006\000\014"
 8756      3F800180 
 8756      3F800300 
 8756      06000C
 8757 0e8f 00300000 		.ascii	"\0000\000\000\000\000\000\000\000\000\000\000\000\000"
 8757      00000000 
 8757      00000000 
 8757      0000
 8758 0e9d 000000   		.ascii	"\000\000\000"
 8759 0ea0 00000000 		.ascii	"\000\000\000\000\177\0000\0000\000?\0000\0000\000\037"
 8759      7F003000 
 8759      30003F00 
 8759      30003000 
 8759      1F
 8760 0eb1 80000000 		.ascii	"\200\000\000\000\000\000\000\000\000\000\000\000\000"
 8760      00000000 
 8760      00000000 
 8760      00
 8761 0ebe 0000     		.ascii	"\000\000"
 8762 0ec0 00000000 		.ascii	"\000\000\000\000\177\3003\0003\0003\0003\000\177\300"
 8762      7FC03300 
 8762      33003300 
 8762      33007FC0 
 8763 0ed0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8763      00000000 
 8763      00000000 
 8763      00
 8764 0edd 000000   		.ascii	"\000\000\000"
 8765 0ee0 00000C00 		.ascii	"\000\000\014\000\177\200\036\0003\0003\0003\000\036"
 8765      7F801E00 
 8765      33003300 
 8765      33001E
 8766 0eef 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8766      00000000 
 8766      00000000 
 8766      00
 8767 0efc 00000000 		.ascii	"\000\000\000\000"
 8768 0f00 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8768      00000000 
 8768      00000000 
 8768      00
 8769 0f0d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8769      00000000 
 8769      00000000 
 8769      00
 8770 0f1a 00000000 		.ascii	"\000\000\000\000\000\000"
 8770      0000
 8771 0f20 00000000 		.ascii	"\000\000\000\000\037\370\000\030\000\030\000\030\000"
 8771      1FF80018 
 8771      00180018 
 8771      00
 8772 0f2d 10000000 		.ascii	"\020\000\000\000\000\000\000\000\000\000\000\000\000"
 8772      00000000 
 8772      00000000 
 8772      00
 8773 0f3a 00000000 		.ascii	"\000\000\000\000\000\000"
 8773      0000
 8774 0f40 00000000 		.ascii	"\000\000\000\000?\370\006\030\006\030\006\030\004\020"
 8774      3FF80618 
 8774      06180618 
 8774      0410
 8775 0f4e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8775      00000000 
 8775      00000000 
 8775      00
 8776 0f5b 00000000 		.ascii	"\000\000\000\000\000"
 8776      00
 8777 0f60 00000000 		.ascii	"\000\000\000\0008\000\030\000\030\000\017\370\000\000"
 8777      38001800 
 8777      18000FF8 
 8777      0000
 8778 0f6e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8778      00000000 
 8778      00000000 
 8778      00
 8779 0f7b 00000000 		.ascii	"\000\000\000\000\000"
 8779      00
 8780 0f80 00000000 		.ascii	"\000\000\000\000?\370\030\000\030\000\017\370\000\000"
 8780      3FF81800 
 8780      18000FF8 
 8780      0000
 8781 0f8e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8781      00000000 
 8781      00000000 
 8781      00
 8782 0f9b 00000000 		.ascii	"\000\000\000\000\000"
 8782      00
 8783 0fa0 00000000 		.ascii	"\000\000\000\000?\370\030\300\030\300\017x\000\000\000"
 8783      3FF818C0 
 8783      18C00F78 
 8783      000000
 8784 0faf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8784      00000000 
 8784      00000000 
 8784      00
 8785 0fbc 00000000 		.ascii	"\000\000\000\000"
 8786 0fc0 00000000 		.ascii	"\000\000\000\000\037\370\000\030\037\370\030\000\017"
 8786      1FF80018 
 8786      1FF81800 
 8786      0F
 8787 0fcd F8000000 		.ascii	"\370\000\000\000\000\000\000\000\000\000\000\000\000"
 8787      00000000 
 8787      00000000 
 8787      00
 8788 0fda 00000000 		.ascii	"\000\000\000\000\000\000"
 8788      0000
 8789 0fe0 00000000 		.ascii	"\000\000\000\000\037\370\014\030\014\030\017\370\000"
 8789      1FF80C18 
 8789      0C180FF8 
 8789      00
 8790 0fed 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8790      00000000 
 8790      00000000 
 8790      00
 8791 0ffa 00000000 		.ascii	"\000\000\000\000\000\000"
 8791      0000
 8792 1000 00000000 		.ascii	"\000\000\000\00088\030\030\037\370\030\030\037\370\000"
 8792      38381818 
 8792      1FF81818 
 8792      1FF800
 8793 100f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8793      00000000 
 8793      00000000 
 8793      00
 8794 101c 00000000 		.ascii	"\000\000\000\000"
 8795 1020 00000000 		.ascii	"\000\000\000\0009\230\031\230\037\370\031\230\037\370"
 8795      39981998 
 8795      1FF81998 
 8795      1FF8
 8796 102e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8796      00000000 
 8796      00000000 
 8796      00
 8797 103b 00000000 		.ascii	"\000\000\000\000\000"
 8797      00
 8798 1040 00000380 		.ascii	"\000\000\003\200\001\200\003\300\0060\014\0300\014\000"
 8798      018003C0 
 8798      06300C18 
 8798      300C00
 8799 104f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8799      00000000 
 8799      00000000 
 8799      00
 8800 105c 00000000 		.ascii	"\000\000\000\000"
 8801 1060 00000C60 		.ascii	"\000\000\014`\014`\016`\033\3601\230a\214\000\000\000"
 8801      0C600E60 
 8801      1BF03198 
 8801      618C0000 
 8801      00
 8802 1071 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8802      00000000 
 8802      00000000 
 8802      00
 8803 107e 0000     		.ascii	"\000\000"
 8804 1080 00000000 		.ascii	"\000\000\000\000\007\340\0140\0140\0140\007\340\000"
 8804      07E00C30 
 8804      0C300C30 
 8804      07E000
 8805 108f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8805      00000000 
 8805      00000000 
 8805      00
 8806 109c 00000000 		.ascii	"\000\000\000\000"
 8807 10a0 00000000 		.ascii	"\000\000\000\000\037\360\000`\000\300\003`\034\030\000"
 8807      1FF00060 
 8807      00C00360 
 8807      1C1800
 8808 10af 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8808      00000000 
 8808      00000000 
 8808      00
 8809 10bc 00000000 		.ascii	"\000\000\000\000"
 8810 10c0 00000000 		.ascii	"\000\000\000\000?\370\006`\016p\031\2301\214\000\000"
 8810      3FF80660 
 8810      0E701998 
 8810      318C0000 
 8811 10d0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8811      00000000 
 8811      00000000 
 8811      00
 8812 10dd 000000   		.ascii	"\000\000\000"
 8813 10e0 000001C0 		.ascii	"\000\000\001\300\037\370\001\300\003`\0060\030\014\000"
 8813      1FF801C0 
 8813      03600630 
 8813      180C00
 8814 10ef 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8814      00000000 
 8814      00000000 
 8814      00
 8815 10fc 00000000 		.ascii	"\000\000\000\000"
 8816 1100 00000000 		.ascii	"\000\000\000\000\037\370\000\030\037\370\000\030\000"
 8816      1FF80018 
 8816      1FF80018 
 8816      00
 8817 110d 10000000 		.ascii	"\020\000\000\000\000\000\000\000\000\000\000\000\000"
 8817      00000000 
 8817      00000000 
 8817      00
 8818 111a 00000000 		.ascii	"\000\000\000\000\000\000"
 8818      0000
 8819 1120 00000000 		.ascii	"\000\000\000\000?\370\030\000\037\370\030\000\017\370"
 8819      3FF81800 
 8819      1FF81800 
 8819      0FF8
 8820 112e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8820      00000000 
 8820      00000000 
 8820      00
 8821 113b 00000000 		.ascii	"\000\000\000\000\000"
 8821      00
 8822 1140 00000000 		.ascii	"\000\000\000\000\037\370\006`\006`\006`\037\370\000"
 8822      1FF80660 
 8822      06600660 
 8822      1FF800
 8823 114f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8823      00000000 
 8823      00000000 
 8823      00
 8824 115c 00000000 		.ascii	"\000\000\000\000"
 8825 1160 000003C0 		.ascii	"\000\000\003\300\037\370\007\340\0140\0140\007\340\000"
 8825      1FF807E0 
 8825      0C300C30 
 8825      07E000
 8826 116f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8826      00000000 
 8826      00000000 
 8826      00
 8827 117c 00000000 		.ascii	"\000\000\000\000"
 8828 1180 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8828      00000000 
 8828      00000000 
 8828      00
 8829 118d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8829      00000000 
 8829      00000000 
 8829      00
 8830 119a 00000000 		.ascii	"\000\000\000\000\000\000"
 8830      0000
 8831 11a0 00000000 		.ascii	"\000\000\000\000?\200\001\200\001\200\001\200\001\000"
 8831      3F800180 
 8831      01800180 
 8831      0100
 8832 11ae 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8832      00000000 
 8832      00000000 
 8832      00
 8833 11bb 00000000 		.ascii	"\000\000\000\000\000"
 8833      00
 8834 11c0 00000000 		.ascii	"\000\000\000\000\177\200\031\200\031\200\031\200\021"
 8834      7F801980 
 8834      19801980 
 8834      11
 8835 11cd 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8835      00000000 
 8835      00000000 
 8835      00
 8836 11da 00000000 		.ascii	"\000\000\000\000\000\000"
 8836      0000
 8837 11e0 00000000 		.ascii	"\000\000\000\000p\0000\0000\0000\000\037\200\000\000"
 8837      70003000 
 8837      30003000 
 8837      1F800000 
 8838 11f0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8838      00000000 
 8838      00000000 
 8838      00
 8839 11fd 000000   		.ascii	"\000\000\000"
 8840 1200 00000000 		.ascii	"\000\000\000\000\177\2000\0000\0000\000\037\200\000"
 8840      7F803000 
 8840      30003000 
 8840      1F8000
 8841 120f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8841      00000000 
 8841      00000000 
 8841      00
 8842 121c 00000000 		.ascii	"\000\000\000\000"
 8843 1220 00000000 		.ascii	"\000\000\000\000\177\3003\0003\0003\000\035\300\000"
 8843      7FC03300 
 8843      33003300 
 8843      1DC000
 8844 122f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8844      00000000 
 8844      00000000 
 8844      00
 8845 123c 00000000 		.ascii	"\000\000\000\000"
 8846 1240 00000000 		.ascii	"\000\000\000\000?\200\001\200?\2000\000\037\200\000"
 8846      3F800180 
 8846      3F803000 
 8846      1F8000
 8847 124f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8847      00000000 
 8847      00000000 
 8847      00
 8848 125c 00000000 		.ascii	"\000\000\000\000"
 8849 1260 00000000 		.ascii	"\000\000\000\000\177\2001\2001\2001\200?\200\000\000"
 8849      7F803180 
 8849      31803180 
 8849      3F800000 
 8850 1270 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8850      00000000 
 8850      00000000 
 8850      00
 8851 127d 000000   		.ascii	"\000\000\000"
 8852 1280 00000000 		.ascii	"\000\000\000\000s\2001\200?\2001\200?\200\000\000\000"
 8852      73803180 
 8852      3F803180 
 8852      3F800000 
 8852      00
 8853 1291 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8853      00000000 
 8853      00000000 
 8853      00
 8854 129e 0000     		.ascii	"\000\000"
 8855 12a0 00000000 		.ascii	"\000\000\000\000v\3006\300?\3006\300?\300\000\000\000"
 8855      76C036C0 
 8855      3FC036C0 
 8855      3FC00000 
 8855      00
 8856 12b1 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8856      00000000 
 8856      00000000 
 8856      00
 8857 12be 0000     		.ascii	"\000\000"
 8858 12c0 00000E00 		.ascii	"\000\000\016\000\006\000\016\000\031\2000\300@@\000"
 8858      06000E00 
 8858      198030C0 
 8858      404000
 8859 12cf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8859      00000000 
 8859      00000000 
 8859      00
 8860 12dc 00000000 		.ascii	"\000\000\000\000"
 8861 12e0 00000000 		.ascii	"\000\000\000\000\031\200\031\200\037\2006\300f`\000"
 8861      19801980 
 8861      1F8036C0 
 8861      666000
 8862 12ef 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8862      00000000 
 8862      00000000 
 8862      00
 8863 12fc 00000000 		.ascii	"\000\000\000\000"
 8864 1300 00000000 		.ascii	"\000\000\000\000\037\0001\2001\2001\200\037\000\000"
 8864      1F003180 
 8864      31803180 
 8864      1F0000
 8865 130f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8865      00000000 
 8865      00000000 
 8865      00
 8866 131c 00000000 		.ascii	"\000\000\000\000"
 8867 1320 00000000 		.ascii	"\000\000\000\000?\200\003\000\006\000\031\200`\300\000"
 8867      3F800300 
 8867      06001980 
 8867      60C000
 8868 132f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8868      00000000 
 8868      00000000 
 8868      00
 8869 133c 00000000 		.ascii	"\000\000\000\000"
 8870 1340 00000000 		.ascii	"\000\000\000\000\177\300\015\200\033\000?\200d\300\000"
 8870      7FC00D80 
 8870      1B003F80 
 8870      64C000
 8871 134f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8871      00000000 
 8871      00000000 
 8871      00
 8872 135c 00000000 		.ascii	"\000\000\000\000"
 8873 1360 00000E00 		.ascii	"\000\000\016\000\177\200\003\000\006\000\031\200`\300"
 8873      7F800300 
 8873      06001980 
 8873      60C0
 8874 136e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8874      00000000 
 8874      00000000 
 8874      00
 8875 137b 00000000 		.ascii	"\000\000\000\000\000"
 8875      00
 8876 1380 00000000 		.ascii	"\000\000\000\000?\200\001\200?\200\001\200\001\200\001"
 8876      3F800180 
 8876      3F800180 
 8876      018001
 8877 138f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8877      00000000 
 8877      00000000 
 8877      00
 8878 139c 00000000 		.ascii	"\000\000\000\000"
 8879 13a0 00000000 		.ascii	"\000\000\000\000\177\2000\000?\2000\000\037\200\000"
 8879      7F803000 
 8879      3F803000 
 8879      1F8000
 8880 13af 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8880      00000000 
 8880      00000000 
 8880      00
 8881 13bc 00000000 		.ascii	"\000\000\000\000"
 8882 13c0 00000000 		.ascii	"\000\000\000\000\177\2003\0003\0003\000\177\200\000"
 8882      7F803300 
 8882      33003300 
 8882      7F8000
 8883 13cf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8883      00000000 
 8883      00000000 
 8883      00
 8884 13dc 00000000 		.ascii	"\000\000\000\000"
 8885 13e0 00000E00 		.ascii	"\000\000\016\000\177\300\037\0001\2001\200\037\000\000"
 8885      7FC01F00 
 8885      31803180 
 8885      1F0000
 8886 13ef 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8886      00000000 
 8886      00000000 
 8886      00
 8887 13fc 00000000 		.ascii	"\000\000\000\000"
 8888 1400 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8888      00000000 
 8888      00000000 
 8888      00
 8889 140d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8889      00000000 
 8889      00000000 
 8889      00
 8890 141a 00000000 		.ascii	"\000\000\000\000\000\000"
 8890      0000
 8891 1420 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\030\000\030\000\037"
 8891      00180018 
 8891      00180018 
 8891      001F
 8892 142e 00180018 		.ascii	"\000\030\000\030\000\030\000\030\000\030\000\030\000"
 8892      00180018 
 8892      00180018 
 8892      00
 8893 143b 18001000 		.ascii	"\030\000\020\000\000"
 8893      00
 8894 1440 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\0006\000>\0006\0006"
 8894      00760036 
 8894      00360036 
 8894      003E0036 
 8894      0036
 8895 1452 00360036 		.ascii	"\0006\0006\0006\0006\000&\000\004\000\000"
 8895      00360036 
 8895      00260004 
 8895      0000
 8896 1460 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\030\000\037\000\030"
 8896      00180018 
 8896      0018001F 
 8896      0018
 8897 146e 0018001F 		.ascii	"\000\030\000\037\000\030\000\030\000\030\000\030\000"
 8897      00180018 
 8897      00180018 
 8897      00
 8898 147b 18001000 		.ascii	"\030\000\020\000\000"
 8898      00
 8899 1480 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\000>\0006\0006\000>"
 8899      00760036 
 8899      0036003E 
 8899      00360036 
 8899      003E
 8900 1492 00360036 		.ascii	"\0006\0006\0006\0006\000&\000\004\000\000"
 8900      00360036 
 8900      00260004 
 8900      0000
 8901 14a0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8901      000C000C 
 8901      000C000C 
 8901      00
 8902 14ad 7C000C00 		.ascii	"|\000\014\000\014\000\014\000\014\000\014\000\014\000"
 8902      0C000C00 
 8902      0C000C00 
 8902      0C00
 8903 14bb 0C000800 		.ascii	"\014\000\010\000\000"
 8903      00
 8904 14c0 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\0006\000\366\0006\000"
 8904      00760036 
 8904      00360036 
 8904      00F60036 
 8904      00
 8905 14d1 36003600 		.ascii	"6\0006\0006\0006\0006\000&\000\004\000\000"
 8905      36003600 
 8905      36002600 
 8905      040000
 8906 14e0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000|\000\014"
 8906      000C000C 
 8906      000C007C 
 8906      000C
 8907 14ee 007C000C 		.ascii	"\000|\000\014\000\014\000\014\000\014\000\014\000\014"
 8907      000C000C 
 8907      000C000C 
 8907      000C
 8908 14fc 00080000 		.ascii	"\000\010\000\000"
 8909 1500 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\001\366\0006\001\366"
 8909      00760036 
 8909      003601F6 
 8909      003601F6 
 8910 1510 00360036 		.ascii	"\0006\0006\0006\0006\0006\000&\000\004\000\000"
 8910      00360036 
 8910      00360026 
 8910      00040000 
 8911 1520 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8911      00000000 
 8911      00000000 
 8911      00
 8912 152d 00000001 		.ascii	"\000\000\000\001\200\001\200\001\200\177\376\000\000"
 8912      80018001 
 8912      807FFE00 
 8912      00
 8913 153a 00000000 		.ascii	"\000\000\000\000\000\000"
 8913      0000
 8914 1540 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\030\000\030\000\030"
 8914      00180018 
 8914      00180018 
 8914      0018
 8915 154e 001F0C18 		.ascii	"\000\037\014\030\014\030\177\330\000\030\000\030\000"
 8915      0C187FD8 
 8915      00180018 
 8915      00
 8916 155b 18001000 		.ascii	"\030\000\020\000\000"
 8916      00
 8917 1560 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\0006\000>\0006\0306"
 8917      00760036 
 8917      00360036 
 8917      003E0036 
 8917      1836
 8918 1572 18367FB6 		.ascii	"\0306\177\266\0006\0006\000&\000\004\000\000"
 8918      00360036 
 8918      00260004 
 8918      0000
 8919 1580 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8919      000C000C 
 8919      000C000C 
 8919      00
 8920 158d 0C000C0C 		.ascii	"\014\000\014\014\014\014\014\177\354\000\014\000\014"
 8920      0C0C0C7F 
 8920      EC000C00 
 8920      0C
 8921 159a 000C0008 		.ascii	"\000\014\000\010\000\000"
 8921      0000
 8922 15a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8922      00000000 
 8922      00000000 
 8922      00
 8923 15ad 0000000C 		.ascii	"\000\000\000\014\340\014`\014`\177\376\000\000\000\000"
 8923      E00C600C 
 8923      607FFE00 
 8923      000000
 8924 15bc 00000000 		.ascii	"\000\000\000\000"
 8925 15c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8925      00000000 
 8925      00000000 
 8925      00
 8926 15cd 0000007F 		.ascii	"\000\000\000\177\376\001\200\001\200\001\200\001\200"
 8926      FE018001 
 8926      80018001 
 8926      80
 8927 15da 01800100 		.ascii	"\001\200\001\000\000\000"
 8927      0000
 8928 15e0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8928      000C000C 
 8928      000C000C 
 8928      00
 8929 15ed 0C000C7F 		.ascii	"\014\000\014\177\354\006\014\006|\006\014\006\014\004"
 8929      EC060C06 
 8929      7C060C06 
 8929      0C04
 8930 15fb 0C000800 		.ascii	"\014\000\010\000\000"
 8930      00
 8931 1600 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\0006\0006\0006\177\266"
 8931      00760036 
 8931      00360036 
 8931      00360036 
 8931      7FB6
 8932 1612 0C360DF6 		.ascii	"\0146\015\366\0146\0146\010&\000\004\000\000"
 8932      0C360C36 
 8932      08260004 
 8932      0000
 8933 1620 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8933      000C000C 
 8933      000C000C 
 8933      00
 8934 162d 0C000C7F 		.ascii	"\014\000\014\177\354\006\014\006\014\006\014\006\014"
 8934      EC060C06 
 8934      0C060C06 
 8934      0C
 8935 163a 040C0008 		.ascii	"\004\014\000\010\000\000"
 8935      0000
 8936 1640 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8936      00000000 
 8936      00000000 
 8936      00
 8937 164d 0000007F 		.ascii	"\000\000\000\177\376\006`\006`\006`\006`\006`\004@\000"
 8937      FE066006 
 8937      60066006 
 8937      60066004 
 8937      4000
 8938 165f 00       		.ascii	"\000"
 8939 1660 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8939      00000000 
 8939      00000000 
 8939      00
 8940 166d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\177\376\000\000"
 8940      00000000 
 8940      007FFE00 
 8940      00
 8941 167a 00000000 		.ascii	"\000\000\000\000\000\000"
 8941      0000
 8942 1680 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8942      000C000C 
 8942      000C000C 
 8942      00
 8943 168d 0C000C00 		.ascii	"\014\000\014\000\014\000\354\177\014\000\014\000\014"
 8943      0C00EC7F 
 8943      0C000C00 
 8943      0C
 8944 169a 000C0008 		.ascii	"\000\014\000\010\000\000"
 8944      0000
 8945 16a0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8945      000C000C 
 8945      000C000C 
 8945      00
 8946 16ad 0C000C00 		.ascii	"\014\000\014\000\014\000\014\000\014\000\014\000\014"
 8946      0C000C00 
 8946      0C000C00 
 8946      0C
 8947 16ba 000C0008 		.ascii	"\000\014\000\010\000\000"
 8947      0000
 8948 16c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8948      00000000 
 8948      00000000 
 8948      00
 8949 16cd 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8949      00000000 
 8949      00000000 
 8949      00
 8950 16da 00000000 		.ascii	"\000\000\000\000\000\000"
 8950      0000
 8951 16e0 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\030\000\030\000\037"
 8951      00180018 
 8951      00180018 
 8951      001F
 8952 16ee 00180018 		.ascii	"\000\030\000\030\000\030\000\030\000\030\000\030\000"
 8952      00180018 
 8952      00180018 
 8952      00
 8953 16fb 18001000 		.ascii	"\030\000\020\000\000"
 8953      00
 8954 1700 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\0006\000>\0006\0006"
 8954      00760036 
 8954      00360036 
 8954      003E0036 
 8954      0036
 8955 1712 00360036 		.ascii	"\0006\0006\0006\0006\000&\000\004\000\000"
 8955      00360036 
 8955      00260004 
 8955      0000
 8956 1720 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\030\000\037\000\030"
 8956      00180018 
 8956      0018001F 
 8956      0018
 8957 172e 0018001F 		.ascii	"\000\030\000\037\000\030\000\030\000\030\000\030\000"
 8957      00180018 
 8957      00180018 
 8957      00
 8958 173b 18001000 		.ascii	"\030\000\020\000\000"
 8958      00
 8959 1740 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\000>\0006\0006\000>"
 8959      00760036 
 8959      0036003E 
 8959      00360036 
 8959      003E
 8960 1752 00360036 		.ascii	"\0006\0006\0006\0006\000&\000\004\000\000"
 8960      00360036 
 8960      00260004 
 8960      0000
 8961 1760 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8961      000C000C 
 8961      000C000C 
 8961      00
 8962 176d 7C000C00 		.ascii	"|\000\014\000\014\000\014\000\014\000\014\000\014\000"
 8962      0C000C00 
 8962      0C000C00 
 8962      0C00
 8963 177b 0C000800 		.ascii	"\014\000\010\000\000"
 8963      00
 8964 1780 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\0006\000v\0006\0006"
 8964      00760036 
 8964      00360036 
 8964      00760036 
 8964      0036
 8965 1792 00360036 		.ascii	"\0006\0006\0006\0006\000&\000\004\000\000"
 8965      00360036 
 8965      00260004 
 8965      0000
 8966 17a0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000|\000\014"
 8966      000C000C 
 8966      000C007C 
 8966      000C
 8967 17ae 007C000C 		.ascii	"\000|\000\014\000\014\000\014\000\014\000\014\000\014"
 8967      000C000C 
 8967      000C000C 
 8967      000C
 8968 17bc 00080000 		.ascii	"\000\010\000\000"
 8969 17c0 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\000v\0006\000v\0006"
 8969      00760036 
 8969      00360076 
 8969      00360076 
 8969      0036
 8970 17d2 00360036 		.ascii	"\0006\0006\0006\0006\000&\000\004\000\000"
 8970      00360036 
 8970      00260004 
 8970      0000
 8971 17e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8971      00000000 
 8971      00000000 
 8971      00
 8972 17ed 00000001 		.ascii	"\000\000\000\001\200\001\200\001\200\177\376\000\000"
 8972      80018001 
 8972      807FFE00 
 8972      00
 8973 17fa 00000000 		.ascii	"\000\000\000\000\000\000"
 8973      0000
 8974 1800 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\030\000\030\000\030"
 8974      00180018 
 8974      00180018 
 8974      0018
 8975 180e 001F0C18 		.ascii	"\000\037\014\030\014\030\177\330\000\030\000\030\000"
 8975      0C187FD8 
 8975      00180018 
 8975      00
 8976 181b 18001000 		.ascii	"\030\000\020\000\000"
 8976      00
 8977 1820 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\0006\000>\0006\0146"
 8977      00760036 
 8977      00360036 
 8977      003E0036 
 8977      0C36
 8978 1832 0C367FB6 		.ascii	"\0146\177\266\0006\0006\000&\000\004\000\000"
 8978      00360036 
 8978      00260004 
 8978      0000
 8979 1840 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8979      000C000C 
 8979      000C000C 
 8979      00
 8980 184d 0C000C0C 		.ascii	"\014\000\014\014\014\014\014\177\354\000\014\000\014"
 8980      0C0C0C7F 
 8980      EC000C00 
 8980      0C
 8981 185a 000C0008 		.ascii	"\000\014\000\010\000\000"
 8981      0000
 8982 1860 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8982      00000000 
 8982      00000000 
 8982      00
 8983 186d 00000006 		.ascii	"\000\000\000\006`\006`\006`\177\376\000\000\000\000"
 8983      60066006 
 8983      607FFE00 
 8983      000000
 8984 187c 00000000 		.ascii	"\000\000\000\000"
 8985 1880 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8985      00000000 
 8985      00000000 
 8985      00
 8986 188d 0000007F 		.ascii	"\000\000\000\177\376\001\200\001\200\001\200\001\200"
 8986      FE018001 
 8986      80018001 
 8986      80
 8987 189a 01800100 		.ascii	"\001\200\001\000\000\000"
 8987      0000
 8988 18a0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8988      000C000C 
 8988      000C000C 
 8988      00
 8989 18ad 0C000C7F 		.ascii	"\014\000\014\177\354\006\014\006|\006\014\006\014\004"
 8989      EC060C06 
 8989      7C060C06 
 8989      0C04
 8990 18bb 0C000800 		.ascii	"\014\000\010\000\000"
 8990      00
 8991 18c0 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\0006\0006\0006\177\266"
 8991      00760036 
 8991      00360036 
 8991      00360036 
 8991      7FB6
 8992 18d2 0C360DF6 		.ascii	"\0146\015\366\0146\0306\000&\000\004\000\000"
 8992      0C361836 
 8992      00260004 
 8992      0000
 8993 18e0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 8993      000C000C 
 8993      000C000C 
 8993      00
 8994 18ed 0C000C7F 		.ascii	"\014\000\014\177\354\006\014\006\014\006\014\006\014"
 8994      EC060C06 
 8994      0C060C06 
 8994      0C
 8995 18fa 040C0008 		.ascii	"\004\014\000\010\000\000"
 8995      0000
 8996 1900 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8996      00000000 
 8996      00000000 
 8996      00
 8997 190d 0000007F 		.ascii	"\000\000\000\177\376\006`\006`\006`\006`\006`\004@\000"
 8997      FE066006 
 8997      60066006 
 8997      60066004 
 8997      4000
 8998 191f 00       		.ascii	"\000"
 8999 1920 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 8999      00000000 
 8999      00000000 
 8999      00
 9000 192d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\177\376\000\000"
 9000      00000000 
 9000      007FFE00 
 9000      00
 9001 193a 00000000 		.ascii	"\000\000\000\000\000\000"
 9001      0000
 9002 1940 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 9002      000C000C 
 9002      000C000C 
 9002      00
 9003 194d 0C000C00 		.ascii	"\014\000\014\000\014\000\354\177\014\000\014\000\014"
 9003      0C00EC7F 
 9003      0C000C00 
 9003      0C
 9004 195a 000C0008 		.ascii	"\000\014\000\010\000\000"
 9004      0000
 9005 1960 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 9005      000C000C 
 9005      000C000C 
 9005      00
 9006 196d 0C000C00 		.ascii	"\014\000\014\000\014\000\014\000\014\000\014\000\014"
 9006      0C000C00 
 9006      0C000C00 
 9006      0C
 9007 197a 000C0008 		.ascii	"\000\014\000\010\000\000"
 9007      0000
 9008 1980 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9008      00000000 
 9008      00000000 
 9008      00
 9009 198d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9009      00000000 
 9009      00000000 
 9009      00
 9010 199a 00000000 		.ascii	"\000\000\000\000\000\000"
 9010      0000
 9011 19a0 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\030\000\037\000\030"
 9011      00180018 
 9011      0018001F 
 9011      0018
 9012 19ae 00180018 		.ascii	"\000\030\000\030\000\020\000\000\000\000\000\000\000"
 9012      00100000 
 9012      00000000 
 9012      00
 9013 19bb 00000000 		.ascii	"\000\000\000\000\000"
 9013      00
 9014 19c0 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\000>\0006\0006\0006"
 9014      00760036 
 9014      0036003E 
 9014      00360036 
 9014      0036
 9015 19d2 00240000 		.ascii	"\000$\000\000\000\000\000\000\000\000\000\000\000\000"
 9015      00000000 
 9015      00000000 
 9015      0000
 9016 19e0 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\037\000\030\000\037"
 9016      00180018 
 9016      001F0018 
 9016      001F
 9017 19ee 00180018 		.ascii	"\000\030\000\030\000\020\000\000\000\000\000\000\000"
 9017      00100000 
 9017      00000000 
 9017      00
 9018 19fb 00000000 		.ascii	"\000\000\000\000\000"
 9018      00
 9019 1a00 0000000E 		.ascii	"\000\000\000\016\000v\0006\000>\0006\000>\0006\0006"
 9019      00760036 
 9019      003E0036 
 9019      003E0036 
 9019      0036
 9020 1a12 00240000 		.ascii	"\000$\000\000\000\000\000\000\000\000\000\000\000\000"
 9020      00000000 
 9020      00000000 
 9020      0000
 9021 1a20 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\374\000"
 9021      000C000C 
 9021      000C00FC 
 9021      00
 9022 1a2d 0C000C00 		.ascii	"\014\000\014\000\014\000\010\000\000\000\000\000\000"
 9022      0C000800 
 9022      00000000 
 9022      00
 9023 1a3a 00000000 		.ascii	"\000\000\000\000\000\000"
 9023      0000
 9024 1a40 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\000\366\0006\0006\000"
 9024      00760036 
 9024      003600F6 
 9024      00360036 
 9024      00
 9025 1a51 36002400 		.ascii	"6\000$\000\000\000\000\000\000\000\000\000\000\000\000"
 9025      00000000 
 9025      00000000 
 9025      000000
 9026 1a60 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000|\000\014\000|\000"
 9026      000C000C 
 9026      007C000C 
 9026      007C00
 9027 1a6f 0C000C00 		.ascii	"\014\000\014\000\010\000\000\000\000\000\000\000\000"
 9027      08000000 
 9027      00000000 
 9027      00
 9028 1a7c 00000000 		.ascii	"\000\000\000\000"
 9029 1a80 0000000E 		.ascii	"\000\000\000\016\000v\0006\000\366\0006\000\366\000"
 9029      00760036 
 9029      00F60036 
 9029      00F600
 9030 1a8f 36003600 		.ascii	"6\0006\000$\000\000\000\000\000\000\000\000\000\000"
 9030      24000000 
 9030      00000000 
 9030      000000
 9031 1a9e 0000     		.ascii	"\000\000"
 9032 1aa0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\001"
 9032      00000000 
 9032      00000000 
 9032      01
 9033 1aad 8001807F 		.ascii	"\200\001\200\177\376\000\000\000\000\000\000\000\000"
 9033      FE000000 
 9033      00000000 
 9033      00
 9034 1aba 00000000 		.ascii	"\000\000\000\000\000\000"
 9034      0000
 9035 1ac0 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\030\000\037\014\030"
 9035      00180018 
 9035      0018001F 
 9035      0C18
 9036 1ace 0C187FD8 		.ascii	"\014\030\177\330\000\020\000\000\000\000\000\000\000"
 9036      00100000 
 9036      00000000 
 9036      00
 9037 1adb 00000000 		.ascii	"\000\000\000\000\000"
 9037      00
 9038 1ae0 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\000>\0306\0306\177\246"
 9038      00760036 
 9038      0036003E 
 9038      18361836 
 9038      7FA6
 9039 1af2 00040000 		.ascii	"\000\004\000\000\000\000\000\000\000\000\000\000\000"
 9039      00000000 
 9039      00000000 
 9039      00
 9040 1aff 00       		.ascii	"\000"
 9041 1b00 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\014"
 9041      000C000C 
 9041      000C000C 
 9041      0C
 9042 1b0d 0C0C0C7F 		.ascii	"\014\014\014\177\354\000\010\000\000\000\000\000\000"
 9042      EC000800 
 9042      00000000 
 9042      00
 9043 1b1a 00000000 		.ascii	"\000\000\000\000\000\000"
 9043      0000
 9044 1b20 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\014"
 9044      00000000 
 9044      00000000 
 9044      0C
 9045 1b2d 600C607F 		.ascii	"`\014`\177\376\000\000\000\000\000\000\000\000\000\000"
 9045      FE000000 
 9045      00000000 
 9045      000000
 9046 1b3c 00000000 		.ascii	"\000\000\000\000"
 9047 1b40 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9047      00000000 
 9047      00000000 
 9047      00
 9048 1b4d 007FFE01 		.ascii	"\000\177\376\001\200\001\000\000\000\000\000\000\000"
 9048      80010000 
 9048      00000000 
 9048      00
 9049 1b5a 00000000 		.ascii	"\000\000\000\000\000\000"
 9049      0000
 9050 1b60 00000000 		.ascii	"\000\000\000\000\000\034\000\014\000\014\000\014\177"
 9050      001C000C 
 9050      000C000C 
 9050      7F
 9051 1b6d EC060C06 		.ascii	"\354\006\014\006|\006\014\004\010\000\000\000\000\000"
 9051      7C060C04 
 9051      08000000 
 9051      0000
 9052 1b7b 00000000 		.ascii	"\000\000\000\000\000"
 9052      00
 9053 1b80 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\0006\000\366\0006\177"
 9053      00760036 
 9053      00360036 
 9053      00F60036 
 9053      7F
 9054 1b91 B60C3608 		.ascii	"\266\0146\010$\000\000\000\000\000\000\000\000\000\000"
 9054      24000000 
 9054      00000000 
 9054      000000
 9055 1ba0 0000000E 		.ascii	"\000\000\000\016\000\006\000\006\000\006\000\006\000"
 9055      00060006 
 9055      00060006 
 9055      00
 9056 1bad 063FE606 		.ascii	"\006?\346\006\006\006\004\000\000\000\000\000\000\000"
 9056      06060400 
 9056      00000000 
 9056      0000
 9057 1bbb 00000000 		.ascii	"\000\000\000\000\000"
 9057      00
 9058 1bc0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9058      00000000 
 9058      00000000 
 9058      00
 9059 1bcd 0000007F 		.ascii	"\000\000\000\177\376\006`\000\000\000\000\000\000\000"
 9059      FE066000 
 9059      00000000 
 9059      0000
 9060 1bdb 00000000 		.ascii	"\000\000\000\000\000"
 9060      00
 9061 1be0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9061      00000000 
 9061      00000000 
 9061      00
 9062 1bed 0000007F 		.ascii	"\000\000\000\177\376\000\000\000\000\000\000\000\000"
 9062      FE000000 
 9062      00000000 
 9062      00
 9063 1bfa 00000000 		.ascii	"\000\000\000\000\000\000"
 9063      0000
 9064 1c00 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 9064      000C000C 
 9064      000C000C 
 9064      00
 9065 1c0d 0C000C7F 		.ascii	"\014\000\014\177\354\000\010\000\000\000\000\000\000"
 9065      EC000800 
 9065      00000000 
 9065      00
 9066 1c1a 00000000 		.ascii	"\000\000\000\000\000\000"
 9066      0000
 9067 1c20 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 9067      000C000C 
 9067      000C000C 
 9067      00
 9068 1c2d 0C000C00 		.ascii	"\014\000\014\000\014\000\010\000\000\000\000\000\000"
 9068      0C000800 
 9068      00000000 
 9068      00
 9069 1c3a 00000000 		.ascii	"\000\000\000\000\000\000"
 9069      0000
 9070 1c40 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9070      00000000 
 9070      00000000 
 9070      00
 9071 1c4d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9071      00000000 
 9071      00000000 
 9071      00
 9072 1c5a 00000000 		.ascii	"\000\000\000\000\000\000"
 9072      0000
 9073 1c60 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\030\000\037\000\030"
 9073      00180018 
 9073      0018001F 
 9073      0018
 9074 1c6e 00180018 		.ascii	"\000\030\000\030\000\020\000\000\000\000\000\000\000"
 9074      00100000 
 9074      00000000 
 9074      00
 9075 1c7b 00000000 		.ascii	"\000\000\000\000\000"
 9075      00
 9076 1c80 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\000>\0006\0006\0006"
 9076      00760036 
 9076      0036003E 
 9076      00360036 
 9076      0036
 9077 1c92 00240000 		.ascii	"\000$\000\000\000\000\000\000\000\000\000\000\000\000"
 9077      00000000 
 9077      00000000 
 9077      0000
 9078 1ca0 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\037\000\030\000\037"
 9078      00180018 
 9078      001F0018 
 9078      001F
 9079 1cae 00180018 		.ascii	"\000\030\000\030\000\020\000\000\000\000\000\000\000"
 9079      00100000 
 9079      00000000 
 9079      00
 9080 1cbb 00000000 		.ascii	"\000\000\000\000\000"
 9080      00
 9081 1cc0 0000000E 		.ascii	"\000\000\000\016\000v\0006\000>\0006\000>\0006\0006"
 9081      00760036 
 9081      003E0036 
 9081      003E0036 
 9081      0036
 9082 1cd2 00240000 		.ascii	"\000$\000\000\000\000\000\000\000\000\000\000\000\000"
 9082      00000000 
 9082      00000000 
 9082      0000
 9083 1ce0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000|\000\014"
 9083      000C000C 
 9083      000C007C 
 9083      000C
 9084 1cee 000C000C 		.ascii	"\000\014\000\014\000\010\000\000\000\000\000\000\000"
 9084      00080000 
 9084      00000000 
 9084      00
 9085 1cfb 00000000 		.ascii	"\000\000\000\000\000"
 9085      00
 9086 1d00 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\000v\0006\0006\0006"
 9086      00760036 
 9086      00360076 
 9086      00360036 
 9086      0036
 9087 1d12 00240000 		.ascii	"\000$\000\000\000\000\000\000\000\000\000\000\000\000"
 9087      00000000 
 9087      00000000 
 9087      0000
 9088 1d20 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000|\000\014\000|\000"
 9088      000C000C 
 9088      007C000C 
 9088      007C00
 9089 1d2f 0C000C00 		.ascii	"\014\000\014\000\010\000\000\000\000\000\000\000\000"
 9089      08000000 
 9089      00000000 
 9089      00
 9090 1d3c 00000000 		.ascii	"\000\000\000\000"
 9091 1d40 0000000E 		.ascii	"\000\000\000\016\000v\0006\000v\0006\000v\0006\0006"
 9091      00760036 
 9091      00760036 
 9091      00760036 
 9091      0036
 9092 1d52 00240000 		.ascii	"\000$\000\000\000\000\000\000\000\000\000\000\000\000"
 9092      00000000 
 9092      00000000 
 9092      0000
 9093 1d60 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\001"
 9093      00000000 
 9093      00000000 
 9093      01
 9094 1d6d 8001807F 		.ascii	"\200\001\200\177\376\000\000\000\000\000\000\000\000"
 9094      FE000000 
 9094      00000000 
 9094      00
 9095 1d7a 00000000 		.ascii	"\000\000\000\000\000\000"
 9095      0000
 9096 1d80 00000038 		.ascii	"\000\000\0008\000\030\000\030\000\030\000\037\014\030"
 9096      00180018 
 9096      0018001F 
 9096      0C18
 9097 1d8e 0C187FD8 		.ascii	"\014\030\177\330\000\020\000\000\000\000\000\000\000"
 9097      00100000 
 9097      00000000 
 9097      00
 9098 1d9b 00000000 		.ascii	"\000\000\000\000\000"
 9098      00
 9099 1da0 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\000>\0146\0146\177\246"
 9099      00760036 
 9099      0036003E 
 9099      0C360C36 
 9099      7FA6
 9100 1db2 00040000 		.ascii	"\000\004\000\000\000\000\000\000\000\000\000\000\000"
 9100      00000000 
 9100      00000000 
 9100      00
 9101 1dbf 00       		.ascii	"\000"
 9102 1dc0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\014"
 9102      000C000C 
 9102      000C000C 
 9102      0C
 9103 1dcd 0C0C0C7F 		.ascii	"\014\014\014\177\354\000\010\000\000\000\000\000\000"
 9103      EC000800 
 9103      00000000 
 9103      00
 9104 1dda 00000000 		.ascii	"\000\000\000\000\000\000"
 9104      0000
 9105 1de0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\006"
 9105      00000000 
 9105      00000000 
 9105      06
 9106 1ded 6006607F 		.ascii	"`\006`\177\376\000\000\000\000\000\000\000\000\000\000"
 9106      FE000000 
 9106      00000000 
 9106      000000
 9107 1dfc 00000000 		.ascii	"\000\000\000\000"
 9108 1e00 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9108      00000000 
 9108      00000000 
 9108      00
 9109 1e0d 0000007F 		.ascii	"\000\000\000\177\376\001\200\000\000\000\000\000\000"
 9109      FE018000 
 9109      00000000 
 9109      00
 9110 1e1a 00000000 		.ascii	"\000\000\000\000\000\000"
 9110      0000
 9111 1e20 0000000E 		.ascii	"\000\000\000\016\000\006\000\006\000\006\000\006\000"
 9111      00060006 
 9111      00060006 
 9111      00
 9112 1e2d 063FE606 		.ascii	"\006?\346\006\036\006\006\000\000\000\000\000\000\000"
 9112      1E060600 
 9112      00000000 
 9112      0000
 9113 1e3b 00000000 		.ascii	"\000\000\000\000\000"
 9113      00
 9114 1e40 0000000E 		.ascii	"\000\000\000\016\000v\0006\0006\000\366\0006\177\266"
 9114      00760036 
 9114      003600F6 
 9114      00367FB6 
 9115 1e50 0C360824 		.ascii	"\0146\010$\000\000\000\000\000\000\000\000\000\000\000"
 9115      00000000 
 9115      00000000 
 9115      000000
 9116 1e5f 00       		.ascii	"\000"
 9117 1e60 0000000E 		.ascii	"\000\000\000\016\000\006\000\006\000\006\000\006\000"
 9117      00060006 
 9117      00060006 
 9117      00
 9118 1e6d 063FE606 		.ascii	"\006?\346\006\006\006\004\000\000\000\000\000\000\000"
 9118      06060400 
 9118      00000000 
 9118      0000
 9119 1e7b 00000000 		.ascii	"\000\000\000\000\000"
 9119      00
 9120 1e80 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9120      00000000 
 9120      00000000 
 9120      00
 9121 1e8d 0000007F 		.ascii	"\000\000\000\177\376\006`\000\000\000\000\000\000\000"
 9121      FE066000 
 9121      00000000 
 9121      0000
 9122 1e9b 00000000 		.ascii	"\000\000\000\000\000"
 9122      00
 9123 1ea0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9123      00000000 
 9123      00000000 
 9123      00
 9124 1ead 0000007F 		.ascii	"\000\000\000\177\376\000\000\000\000\000\000\000\000"
 9124      FE000000 
 9124      00000000 
 9124      00
 9125 1eba 00000000 		.ascii	"\000\000\000\000\000\000"
 9125      0000
 9126 1ec0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 9126      000C000C 
 9126      000C000C 
 9126      00
 9127 1ecd 0C000C7F 		.ascii	"\014\000\014\177\354\000\010\000\000\000\000\000\000"
 9127      EC000800 
 9127      00000000 
 9127      00
 9128 1eda 00000000 		.ascii	"\000\000\000\000\000\000"
 9128      0000
 9129 1ee0 0000001C 		.ascii	"\000\000\000\034\000\014\000\014\000\014\000\014\000"
 9129      000C000C 
 9129      000C000C 
 9129      00
 9130 1eed 0C000C00 		.ascii	"\014\000\014\000\014\000\010\000\000\000\000\000\000"
 9130      0C000800 
 9130      00000000 
 9130      00
 9131 1efa 00000000 		.ascii	"\000\000\000\000\000\000"
 9131      0000
 9132 1f00 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9132      00000000 
 9132      00000000 
 9132      00
 9133 1f0d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9133      00000000 
 9133      00000000 
 9133      00
 9134 1f1a 00000000 		.ascii	"\000\000\000\000\000\000"
 9134      0000
 9135 1f20 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9135      00000000 
 9135      00000000 
 9135      00
 9136 1f2d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\370\000\030\000\030"
 9136      0000000F 
 9136      F8001800 
 9136      18
 9137 1f3a 00180010 		.ascii	"\000\030\000\020\000\000"
 9137      0000
 9138 1f40 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9138      00000000 
 9138      00000000 
 9138      00
 9139 1f4d 00000000 		.ascii	"\000\000\000\000\000\000\000\037\370\003\030\003\030"
 9139      0000001F 
 9139      F8031803 
 9139      18
 9140 1f5a 03180210 		.ascii	"\003\030\002\020\000\000"
 9140      0000
 9141 1f60 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9141      00000000 
 9141      00000000 
 9141      00
 9142 1f6d 00000000 		.ascii	"\000\000\000\000\000\000\000\0370\0030\0038\003l\002"
 9142      0000001F 
 9142      30033003 
 9142      38036C02 
 9143 1f7d CC0000   		.ascii	"\314\000\000"
 9144 1f80 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9144      00000000 
 9144      00000000 
 9144      00
 9145 1f8d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\000\003\000\003\000"
 9145      00000007 
 9145      00030003 
 9145      00
 9146 1f9a 030001FC 		.ascii	"\003\000\001\374\000\000"
 9146      0000
 9147 1fa0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9147      00000000 
 9147      00000000 
 9147      00
 9148 1fad 00000000 		.ascii	"\000\000\000\000\000\000\000\034\374\0140\0140\014x"
 9148      0000001C 
 9148      FC0C300C 
 9148      300C78
 9149 1fbc 07CC0000 		.ascii	"\007\314\000\000"
 9150 1fc0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9150      00000000 
 9150      00000000 
 9150      00
 9151 1fcd 00000000 		.ascii	"\000\000\000\000\000\000\000\0340\014\374\014x\014\314"
 9151      0000001C 
 9151      300CFC0C 
 9151      780CCC
 9152 1fdc 07780000 		.ascii	"\007x\000\000"
 9153 1fe0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9153      00000000 
 9153      00000000 
 9153      00
 9154 1fed 00000000 		.ascii	"\000\000\000\000\000\000\000\017\370\006\000\006\000"
 9154      0000000F 
 9154      F8060006 
 9154      00
 9155 1ffa 060003F8 		.ascii	"\006\000\003\370\000\000"
 9155      0000
 9156 2000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9156      00000000 
 9156      00000000 
 9156      00
 9157 200d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\370\000\030\017\370"
 9157      0000000F 
 9157      F800180F 
 9157      F8
 9158 201a 0C0007F8 		.ascii	"\014\000\007\370\000\000"
 9158      0000
 9159 2020 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9159      00000000 
 9159      00000000 
 9159      00
 9160 202d 00000000 		.ascii	"\000\000\000\000\000\000\000\037x\003\030\037\030\030"
 9160      0000001F 
 9160      7803181F 
 9160      1818
 9161 203b 180F1000 		.ascii	"\030\017\020\000\000"
 9161      00
 9162 2040 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9162      00000000 
 9162      00000000 
 9162      00
 9163 204d 00000000 		.ascii	"\000\000\000\000\000\000\000\037|\003l\037l\030l\017"
 9163      0000001F 
 9163      7C036C1F 
 9163      6C186C0F 
 9164 205d 7C0000   		.ascii	"|\000\000"
 9165 2060 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9165      00000000 
 9165      00000000 
 9165      00
 9166 206d 00000000 		.ascii	"\000\000\000\000\000\000\000\037l\003l\037|\030l\017"
 9166      0000001F 
 9166      6C036C1F 
 9166      7C186C0F 
 9167 207d 7C0000   		.ascii	"|\000\000"
 9168 2080 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9168      00000000 
 9168      00000000 
 9168      00
 9169 208d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\230\001\230\017\230"
 9169      0000000F 
 9169      9801980F 
 9169      98
 9170 209a 0C3C07A6 		.ascii	"\014<\007\246\000\000"
 9170      0000
 9171 20a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9171      00000000 
 9171      00000000 
 9171      00
 9172 20ad 00000000 		.ascii	"\000\000\000\000\000\000\000\037|\003`\037|\030`\017"
 9172      0000001F 
 9172      7C03601F 
 9172      7C18600F 
 9173 20bd 7C0000   		.ascii	"|\000\000"
 9174 20c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9174      00000000 
 9174      00000000 
 9174      00
 9175 20cd 00000000 		.ascii	"\000\000\000\000\000\000\000\036\376\003l\037l\030l"
 9175      0000001E 
 9175      FE036C1F 
 9175      6C186C
 9176 20dc 0EFE0000 		.ascii	"\016\376\000\000"
 9177 20e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9177      00000000 
 9177      00000000 
 9177      00
 9178 20ed 00000000 		.ascii	"\000\000\000\000\000\000\000\037\030\003~\037<\030f"
 9178      0000001F 
 9178      18037E1F 
 9178      3C1866
 9179 20fc 0F3C0000 		.ascii	"\017<\000\000"
 9180 2100 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9180      00000000 
 9180      00000000 
 9180      00
 9181 210d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\370\006\030\006\030"
 9181      0000000F 
 9181      F8061806 
 9181      18
 9182 211a 061807F8 		.ascii	"\006\030\007\370\000\000"
 9182      0000
 9183 2120 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9183      00000000 
 9183      00000000 
 9183      00
 9184 212d 00000000 		.ascii	"\000\000\000\000\000\000\000\0168\006\030\007\370\006"
 9184      0000000E 
 9184      38061807 
 9184      F806
 9185 213b 1807F800 		.ascii	"\030\007\370\000\000"
 9185      00
 9186 2140 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9186      00000000 
 9186      00000000 
 9186      00
 9187 214d 00000000 		.ascii	"\000\000\000\000\000\000\000\015\230\015\230\017\230"
 9187      0000000D 
 9187      980D980F 
 9187      98
 9188 215a 0DBE0FE6 		.ascii	"\015\276\017\346\000\000"
 9188      0000
 9189 2160 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9189      00000000 
 9189      00000000 
 9189      00
 9190 216d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\300\000\300\001\260"
 9190      00000000 
 9190      C000C001 
 9190      B0
 9191 217a 03180C0C 		.ascii	"\003\030\014\014\000\000"
 9191      0000
 9192 2180 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9192      00000000 
 9192      00000000 
 9192      00
 9193 218d 00000000 		.ascii	"\000\000\000\000\000\000\000\0030\0030\007\370\014\314"
 9193      00000003 
 9193      30033007 
 9193      F80CCC
 9194 219c 19860000 		.ascii	"\031\206\000\000"
 9195 21a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9195      00000000 
 9195      00000000 
 9195      00
 9196 21ad 00000000 		.ascii	"\000\000\000\000\000\000\000\003\360\006\030\006\030"
 9196      00000003 
 9196      F0061806 
 9196      18
 9197 21ba 061803F0 		.ascii	"\006\030\003\360\000\000"
 9197      0000
 9198 21c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9198      00000000 
 9198      00000000 
 9198      00
 9199 21cd 00000000 		.ascii	"\000\000\000\000\000\000\000\017\374\000\300\001\340"
 9199      0000000F 
 9199      FC00C001 
 9199      E0
 9200 21da 03300C0C 		.ascii	"\0030\014\014\000\000"
 9200      0000
 9201 21e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9201      00000000 
 9201      00000000 
 9201      00
 9202 21ed 00000000 		.ascii	"\000\000\000\000\000\000\000\000\300\017\374\001\340"
 9202      00000000 
 9202      C00FFC01 
 9202      E0
 9203 21fa 03300C0C 		.ascii	"\0030\014\014\000\000"
 9203      0000
 9204 2200 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9204      00000000 
 9204      00000000 
 9204      00
 9205 220d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\370\000\030\007\370"
 9205      00000007 
 9205      F8001807 
 9205      F8
 9206 221a 00180010 		.ascii	"\000\030\000\020\000\000"
 9206      0000
 9207 2220 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9207      00000000 
 9207      00000000 
 9207      00
 9208 222d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\370\006\000\007\370"
 9208      0000000F 
 9208      F8060007 
 9208      F8
 9209 223a 060003F8 		.ascii	"\006\000\003\370\000\000"
 9209      0000
 9210 2240 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9210      00000000 
 9210      00000000 
 9210      00
 9211 224d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\374\0030\0030\0030"
 9211      0000000F 
 9211      FC033003 
 9211      300330
 9212 225c 0FFC0000 		.ascii	"\017\374\000\000"
 9213 2260 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9213      00000000 
 9213      00000000 
 9213      00
 9214 226d 00000000 		.ascii	"\000\000\000\000\000\000\000\001\340\017\374\003\360"
 9214      00000001 
 9214      E00FFC03 
 9214      F0
 9215 227a 061803F0 		.ascii	"\006\030\003\360\000\000"
 9215      0000
 9216 2280 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9216      00000000 
 9216      00000000 
 9216      00
 9217 228d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9217      00000000 
 9217      00000000 
 9217      00
 9218 229a 00000000 		.ascii	"\000\000\000\000\000\000"
 9218      0000
 9219 22a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9219      00000000 
 9219      00000000 
 9219      00
 9220 22ad 00000000 		.ascii	"\000\000\000\000\000\000\000\007\374\000\014\000\014"
 9220      00000007 
 9220      FC000C00 
 9220      0C
 9221 22ba 000C0008 		.ascii	"\000\014\000\010\000\000"
 9221      0000
 9222 22c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9222      00000000 
 9222      00000000 
 9222      00
 9223 22cd 00000000 		.ascii	"\000\000\000\000\000\000\000\017\374\001\214\001\214"
 9223      0000000F 
 9223      FC018C01 
 9223      8C
 9224 22da 018C0108 		.ascii	"\001\214\001\010\000\000"
 9224      0000
 9225 22e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9225      00000000 
 9225      00000000 
 9225      00
 9226 22ed 00000000 		.ascii	"\000\000\000\000\000\000\000\0370\0030\0038\003l\002"
 9226      0000001F 
 9226      30033003 
 9226      38036C02 
 9227 22fd CC0000   		.ascii	"\314\000\000"
 9228 2300 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9228      00000000 
 9228      00000000 
 9228      00
 9229 230d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\000\003\000\003\000"
 9229      00000007 
 9229      00030003 
 9229      00
 9230 231a 030001FC 		.ascii	"\003\000\001\374\000\000"
 9230      0000
 9231 2320 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9231      00000000 
 9231      00000000 
 9231      00
 9232 232d 00000000 		.ascii	"\000\000\000\000\000\000\000\016~\006\030\006\030\006"
 9232      0000000E 
 9232      7E061806 
 9232      1806
 9233 233b 3C03E600 		.ascii	"<\003\346\000\000"
 9233      00
 9234 2340 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9234      00000000 
 9234      00000000 
 9234      00
 9235 234d 00000000 		.ascii	"\000\000\000\000\000\000\000\016\030\006~\006<\006f"
 9235      0000000E 
 9235      18067E06 
 9235      3C0666
 9236 235c 03BC0000 		.ascii	"\003\274\000\000"
 9237 2360 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9237      00000000 
 9237      00000000 
 9237      00
 9238 236d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\374\003\000\003\000"
 9238      00000007 
 9238      FC030003 
 9238      00
 9239 237a 030001FC 		.ascii	"\003\000\001\374\000\000"
 9239      0000
 9240 2380 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9240      00000000 
 9240      00000000 
 9240      00
 9241 238d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\374\000\014\007\374"
 9241      00000007 
 9241      FC000C07 
 9241      FC
 9242 239a 060003FC 		.ascii	"\006\000\003\374\000\000"
 9242      0000
 9243 23a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9243      00000000 
 9243      00000000 
 9243      00
 9244 23ad 00000000 		.ascii	"\000\000\000\000\000\000\000\017\274\001\214\017\214"
 9244      0000000F 
 9244      BC018C0F 
 9244      8C
 9245 23ba 0C0C0788 		.ascii	"\014\014\007\210\000\000"
 9245      0000
 9246 23c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9246      00000000 
 9246      00000000 
 9246      00
 9247 23cd 00000000 		.ascii	"\000\000\000\000\000\000\000\037|\003l\037l\030l\017"
 9247      0000001F 
 9247      7C036C1F 
 9247      6C186C0F 
 9248 23dd 7C0000   		.ascii	"|\000\000"
 9249 23e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9249      00000000 
 9249      00000000 
 9249      00
 9250 23ed 00000000 		.ascii	"\000\000\000\000\000\000\000\037l\003l\037|\030l\017"
 9250      0000001F 
 9250      6C036C1F 
 9250      7C186C0F 
 9251 23fd 7C0000   		.ascii	"|\000\000"
 9252 2400 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9252      00000000 
 9252      00000000 
 9252      00
 9253 240d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\230\001\230\017\230"
 9253      0000000F 
 9253      9801980F 
 9253      98
 9254 241a 0C3C07A6 		.ascii	"\014<\007\246\000\000"
 9254      0000
 9255 2420 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9255      00000000 
 9255      00000000 
 9255      00
 9256 242d 00000000 		.ascii	"\000\000\000\000\000\000\000\037|\003`\037|\030`\017"
 9256      0000001F 
 9256      7C03601F 
 9256      7C18600F 
 9257 243d 7C0000   		.ascii	"|\000\000"
 9258 2440 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9258      00000000 
 9258      00000000 
 9258      00
 9259 244d 00000000 		.ascii	"\000\000\000\000\000\000\000\036\376\003l\037l\030l"
 9259      0000001E 
 9259      FE036C1F 
 9259      6C186C
 9260 245c 0EFE0000 		.ascii	"\016\376\000\000"
 9261 2460 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9261      00000000 
 9261      00000000 
 9261      00
 9262 246d 00000000 		.ascii	"\000\000\000\000\000\000\000\037\030\003~\037<\030f"
 9262      0000001F 
 9262      18037E1F 
 9262      3C1866
 9263 247c 0F3C0000 		.ascii	"\017<\000\000"
 9264 2480 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9264      00000000 
 9264      00000000 
 9264      00
 9265 248d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\374\003\014\003\014"
 9265      00000007 
 9265      FC030C03 
 9265      0C
 9266 249a 030C03FC 		.ascii	"\003\014\003\374\000\000"
 9266      0000
 9267 24a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9267      00000000 
 9267      00000000 
 9267      00
 9268 24ad 00000000 		.ascii	"\000\000\000\000\000\000\000\007\034\003\014\003\374"
 9268      00000007 
 9268      1C030C03 
 9268      FC
 9269 24ba 030C03FC 		.ascii	"\003\014\003\374\000\000"
 9269      0000
 9270 24c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9270      00000000 
 9270      00000000 
 9270      00
 9271 24cd 00000000 		.ascii	"\000\000\000\000\000\000\000\015\230\015\230\017\230"
 9271      0000000D 
 9271      980D980F 
 9271      98
 9272 24da 0DBE0FE6 		.ascii	"\015\276\017\346\000\000"
 9272      0000
 9273 24e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9273      00000000 
 9273      00000000 
 9273      00
 9274 24ed 00000000 		.ascii	"\000\000\000\000\000\000\000\000\300\000\300\001\260"
 9274      00000000 
 9274      C000C001 
 9274      B0
 9275 24fa 03180C0C 		.ascii	"\003\030\014\014\000\000"
 9275      0000
 9276 2500 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9276      00000000 
 9276      00000000 
 9276      00
 9277 250d 00000000 		.ascii	"\000\000\000\000\000\000\000\001\230\001\230\003\374"
 9277      00000001 
 9277      98019803 
 9277      FC
 9278 251a 06660CC3 		.ascii	"\006f\014\303\000\000"
 9278      0000
 9279 2520 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9279      00000000 
 9279      00000000 
 9279      00
 9280 252d 00000000 		.ascii	"\000\000\000\000\000\000\000\001\370\003\014\003\014"
 9280      00000001 
 9280      F8030C03 
 9280      0C
 9281 253a 030C01F8 		.ascii	"\003\014\001\370\000\000"
 9281      0000
 9282 2540 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9282      00000000 
 9282      00000000 
 9282      00
 9283 254d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\374\000\300\001\340"
 9283      0000000F 
 9283      FC00C001 
 9283      E0
 9284 255a 03300C0C 		.ascii	"\0030\014\014\000\000"
 9284      0000
 9285 2560 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9285      00000000 
 9285      00000000 
 9285      00
 9286 256d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\300\017\374\001\340"
 9286      00000000 
 9286      C00FFC01 
 9286      E0
 9287 257a 03300C0C 		.ascii	"\0030\014\014\000\000"
 9287      0000
 9288 2580 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9288      00000000 
 9288      00000000 
 9288      00
 9289 258d 00000000 		.ascii	"\000\000\000\000\000\000\000\003\374\000\014\003\374"
 9289      00000003 
 9289      FC000C03 
 9289      FC
 9290 259a 000C0008 		.ascii	"\000\014\000\010\000\000"
 9290      0000
 9291 25a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9291      00000000 
 9291      00000000 
 9291      00
 9292 25ad 00000000 		.ascii	"\000\000\000\000\000\000\000\007\374\003\000\003\374"
 9292      00000007 
 9292      FC030003 
 9292      FC
 9293 25ba 030001FC 		.ascii	"\003\000\001\374\000\000"
 9293      0000
 9294 25c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9294      00000000 
 9294      00000000 
 9294      00
 9295 25cd 00000000 		.ascii	"\000\000\000\000\000\000\000\017\374\0030\0030\0030"
 9295      0000000F 
 9295      FC033003 
 9295      300330
 9296 25dc 0FFC0000 		.ascii	"\017\374\000\000"
 9297 25e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9297      00000000 
 9297      00000000 
 9297      00
 9298 25ed 00000000 		.ascii	"\000\000\000\000\000\000\000\000\360\007\376\001\370"
 9298      00000000 
 9298      F007FE01 
 9298      F8
 9299 25fa 030C01F8 		.ascii	"\003\014\001\370\000\000"
 9299      0000
 9300 2600 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9300      00000000 
 9300      00000000 
 9300      00
 9301 260d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9301      00000000 
 9301      00000000 
 9301      00
 9302 261a 00000000 		.ascii	"\000\000\000\000\000\000"
 9302      0000
 9303 2620 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9303      00000000 
 9303      00000000 
 9303      00
 9304 262d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\376\000\006\000\006"
 9304      00000007 
 9304      FE000600 
 9304      06
 9305 263a 00060004 		.ascii	"\000\006\000\004\000\000"
 9305      0000
 9306 2640 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9306      00000000 
 9306      00000000 
 9306      00
 9307 264d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\376\000\306\000\306"
 9307      0000000F 
 9307      FE00C600 
 9307      C6
 9308 265a 00C60084 		.ascii	"\000\306\000\204\000\000"
 9308      0000
 9309 2660 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9309      00000000 
 9309      00000000 
 9309      00
 9310 266d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\230\001\230\001\234"
 9310      0000000F 
 9310      98019801 
 9310      9C
 9311 267a 01B60166 		.ascii	"\001\266\001f\000\000"
 9311      0000
 9312 2680 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9312      00000000 
 9312      00000000 
 9312      00
 9313 268d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\000\003\000\003\000"
 9313      00000007 
 9313      00030003 
 9313      00
 9314 269a 030001FE 		.ascii	"\003\000\001\376\000\000"
 9314      0000
 9315 26a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9315      00000000 
 9315      00000000 
 9315      00
 9316 26ad 00000000 		.ascii	"\000\000\000\000\000\000\000\034~\014\030\014\030\014"
 9316      0000001C 
 9316      7E0C180C 
 9316      180C
 9317 26bb 3C076600 		.ascii	"<\007f\000\000"
 9317      00
 9318 26c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9318      00000000 
 9318      00000000 
 9318      00
 9319 26cd 00000000 		.ascii	"\000\000\000\000\000\000\000\034\030\014~\014<\014f"
 9319      0000001C 
 9319      180C7E0C 
 9319      3C0C66
 9320 26dc 07BC0000 		.ascii	"\007\274\000\000"
 9321 26e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9321      00000000 
 9321      00000000 
 9321      00
 9322 26ed 00000000 		.ascii	"\000\000\000\000\000\000\000\007\374\003\000\003\000"
 9322      00000007 
 9322      FC030003 
 9322      00
 9323 26fa 030001FC 		.ascii	"\003\000\001\374\000\000"
 9323      0000
 9324 2700 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9324      00000000 
 9324      00000000 
 9324      00
 9325 270d 00000000 		.ascii	"\000\000\000\000\000\000\000\003\376\000\006\003\376"
 9325      00000003 
 9325      FE000603 
 9325      FE
 9326 271a 030001FE 		.ascii	"\003\000\001\376\000\000"
 9326      0000
 9327 2720 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9327      00000000 
 9327      00000000 
 9327      00
 9328 272d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\336\000\306\007\306"
 9328      00000007 
 9328      DE00C607 
 9328      C6
 9329 273a 060603C4 		.ascii	"\006\006\003\304\000\000"
 9329      0000
 9330 2740 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9330      00000000 
 9330      00000000 
 9330      00
 9331 274d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\276\001\266\017\266"
 9331      0000000F 
 9331      BE01B60F 
 9331      B6
 9332 275a 0C3607BE 		.ascii	"\0146\007\276\000\000"
 9332      0000
 9333 2760 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9333      00000000 
 9333      00000000 
 9333      00
 9334 276d 00000000 		.ascii	"\000\000\000\000\000\000\000\017\266\001\266\017\276"
 9334      0000000F 
 9334      B601B60F 
 9334      BE
 9335 277a 0C3607BE 		.ascii	"\0146\007\276\000\000"
 9335      0000
 9336 2780 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9336      00000000 
 9336      00000000 
 9336      00
 9337 278d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\314\000\314\007\314"
 9337      00000007 
 9337      CC00CC07 
 9337      CC
 9338 279a 061E03D3 		.ascii	"\006\036\003\323\000\000"
 9338      0000
 9339 27a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9339      00000000 
 9339      00000000 
 9339      00
 9340 27ad 00000000 		.ascii	"\000\000\000\000\000\000\000\017\276\001\260\017\276"
 9340      0000000F 
 9340      BE01B00F 
 9340      BE
 9341 27ba 0C3007BE 		.ascii	"\0140\007\276\000\000"
 9341      0000
 9342 27c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9342      00000000 
 9342      00000000 
 9342      00
 9343 27cd 00000000 		.ascii	"\000\000\000\000\000\000\000\036\376\003l\037l\030l"
 9343      0000001E 
 9343      FE036C1F 
 9343      6C186C
 9344 27dc 0EFE0000 		.ascii	"\016\376\000\000"
 9345 27e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9345      00000000 
 9345      00000000 
 9345      00
 9346 27ed 00000000 		.ascii	"\000\000\000\000\000\000\000\037\030\003~\037<\030f"
 9346      0000001F 
 9346      18037E1F 
 9346      3C1866
 9347 27fc 0F3C0000 		.ascii	"\017<\000\000"
 9348 2800 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9348      00000000 
 9348      00000000 
 9348      00
 9349 280d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\376\003\006\003\006"
 9349      00000007 
 9349      FE030603 
 9349      06
 9350 281a 030603FE 		.ascii	"\003\006\003\376\000\000"
 9350      0000
 9351 2820 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9351      00000000 
 9351      00000000 
 9351      00
 9352 282d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\016\003\006\003\376"
 9352      00000007 
 9352      0E030603 
 9352      FE
 9353 283a 030603FE 		.ascii	"\003\006\003\376\000\000"
 9353      0000
 9354 2840 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9354      00000000 
 9354      00000000 
 9354      00
 9355 284d 00000000 		.ascii	"\000\000\000\000\000\000\000\015\230\015\230\017\230"
 9355      0000000D 
 9355      980D980F 
 9355      98
 9356 285a 0DBE0FE6 		.ascii	"\015\276\017\346\000\000"
 9356      0000
 9357 2860 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9357      00000000 
 9357      00000000 
 9357      00
 9358 286d 00000000 		.ascii	"\000\000\000\000\000\000\000\000`\000`\000\330\001\214"
 9358      00000000 
 9358      60006000 
 9358      D8018C
 9359 287c 06060000 		.ascii	"\006\006\000\000"
 9360 2880 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9360      00000000 
 9360      00000000 
 9360      00
 9361 288d 00000000 		.ascii	"\000\000\000\000\000\000\000\001\230\001\230\003\374"
 9361      00000001 
 9361      98019803 
 9361      FC
 9362 289a 06660CC3 		.ascii	"\006f\014\303\000\000"
 9362      0000
 9363 28a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9363      00000000 
 9363      00000000 
 9363      00
 9364 28ad 00000000 		.ascii	"\000\000\000\000\000\000\000\000\374\001\206\001\206"
 9364      00000000 
 9364      FC018601 
 9364      86
 9365 28ba 018600FC 		.ascii	"\001\206\000\374\000\000"
 9365      0000
 9366 28c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9366      00000000 
 9366      00000000 
 9366      00
 9367 28cd 00000000 		.ascii	"\000\000\000\000\000\000\000\007\376\000`\000\360\001"
 9367      00000007 
 9367      FE006000 
 9367      F001
 9368 28db 98060600 		.ascii	"\230\006\006\000\000"
 9368      00
 9369 28e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9369      00000000 
 9369      00000000 
 9369      00
 9370 28ed 00000000 		.ascii	"\000\000\000\000\000\000\000\000`\007\376\000\360\001"
 9370      00000000 
 9370      6007FE00 
 9370      F001
 9371 28fb 98060600 		.ascii	"\230\006\006\000\000"
 9371      00
 9372 2900 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9372      00000000 
 9372      00000000 
 9372      00
 9373 290d 00000000 		.ascii	"\000\000\000\000\000\000\000\003\376\000\006\003\376"
 9373      00000003 
 9373      FE000603 
 9373      FE
 9374 291a 00060004 		.ascii	"\000\006\000\004\000\000"
 9374      0000
 9375 2920 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9375      00000000 
 9375      00000000 
 9375      00
 9376 292d 00000000 		.ascii	"\000\000\000\000\000\000\000\003\376\001\200\001\376"
 9376      00000003 
 9376      FE018001 
 9376      FE
 9377 293a 018000FE 		.ascii	"\001\200\000\376\000\000"
 9377      0000
 9378 2940 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9378      00000000 
 9378      00000000 
 9378      00
 9379 294d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\376\001\230\001\230"
 9379      00000007 
 9379      FE019801 
 9379      98
 9380 295a 019807FE 		.ascii	"\001\230\007\376\000\000"
 9380      0000
 9381 2960 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9381      00000000 
 9381      00000000 
 9381      00
 9382 296d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\360\007\376\001\370"
 9382      00000000 
 9382      F007FE01 
 9382      F8
 9383 297a 030C01F8 		.ascii	"\003\014\001\370\000\000"
 9383      0000
 9384 2980 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9384      00000000 
 9384      00000000 
 9384      00
 9385 298d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9385      00000000 
 9385      00000000 
 9385      00
 9386 299a 00000000 		.ascii	"\000\000\000\000\000\000"
 9386      0000
 9387 29a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9387      00000000 
 9387      00000000 
 9387      00
 9388 29ad 00000000 		.ascii	"\000\000\000\000\000\000\000\037\370\000\030\000\030"
 9388      0000001F 
 9388      F8001800 
 9388      18
 9389 29ba 00180010 		.ascii	"\000\030\000\020\000\000"
 9389      0000
 9390 29c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9390      00000000 
 9390      00000000 
 9390      00
 9391 29cd 00000000 		.ascii	"\000\000\000\000\000\000\000>\370\006\030\006\030\006"
 9391      0000003E 
 9391      F8061806 
 9391      1806
 9392 29db 18041000 		.ascii	"\030\004\020\000\000"
 9392      00
 9393 29e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9393      00000000 
 9393      00000000 
 9393      00
 9394 29ed 00000000 		.ascii	"\000\000\000\000\000\000\000\017\314\000\314\000\316"
 9394      0000000F 
 9394      CC00CC00 
 9394      CE
 9395 29fa 00DB00B3 		.ascii	"\000\333\000\263\000\000"
 9395      0000
 9396 2a00 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9396      00000000 
 9396      00000000 
 9396      00
 9397 2a0d 00000000 		.ascii	"\000\000\000\000\000\000\0008\000\030\000\030\000\030"
 9397      00000038 
 9397      00180018 
 9397      0018
 9398 2a1b 000FF800 		.ascii	"\000\017\370\000\000"
 9398      00
 9399 2a20 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9399      00000000 
 9399      00000000 
 9399      00
 9400 2a2d 00000000 		.ascii	"\000\000\000\000\000\000\0008\374\0300\0300\030x\016"
 9400      00000038 
 9400      FC183018 
 9400      3018780E 
 9401 2a3d CC0000   		.ascii	"\314\000\000"
 9402 2a40 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9402      00000000 
 9402      00000000 
 9402      00
 9403 2a4d 00000000 		.ascii	"\000\000\000\000\000\000\00080\030\374\030x\030\314"
 9403      00000038 
 9403      3018FC18 
 9403      7818CC
 9404 2a5c 0F780000 		.ascii	"\017x\000\000"
 9405 2a60 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9405      00000000 
 9405      00000000 
 9405      00
 9406 2a6d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000?\370\030\000\030"
 9406      00000000 
 9406      003FF818 
 9406      0018
 9407 2a7b 000FF800 		.ascii	"\000\017\370\000\000"
 9407      00
 9408 2a80 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9408      00000000 
 9408      00000000 
 9408      00
 9409 2a8d 00000000 		.ascii	"\000\000\000\000\000\000\000\037\370\000\030\037\370"
 9409      0000001F 
 9409      F800181F 
 9409      F8
 9410 2a9a 18000FF8 		.ascii	"\030\000\017\370\000\000"
 9410      0000
 9411 2aa0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9411      00000000 
 9411      00000000 
 9411      00
 9412 2aad 00000000 		.ascii	"\000\000\000\000\000\000\000\037|\003\014\037\014\030"
 9412      0000001F 
 9412      7C030C1F 
 9412      0C18
 9413 2abb 0C0F0800 		.ascii	"\014\017\010\000\000"
 9413      00
 9414 2ac0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9414      00000000 
 9414      00000000 
 9414      00
 9415 2acd 00000000 		.ascii	"\000\000\000\000\000\000\000>\374\006\314>\3140\314"
 9415      0000003E 
 9415      FC06CC3E 
 9415      CC30CC
 9416 2adc 1EFC0000 		.ascii	"\036\374\000\000"
 9417 2ae0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9417      00000000 
 9417      00000000 
 9417      00
 9418 2aed 00000000 		.ascii	"\000\000\000\000\000\000\000\037l\003l\037|\030l\017"
 9418      0000001F 
 9418      6C036C1F 
 9418      7C186C0F 
 9419 2afd 7C0000   		.ascii	"|\000\000"
 9420 2b00 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9420      00000000 
 9420      00000000 
 9420      00
 9421 2b0d 00000000 		.ascii	"\000\000\000\000\000\000\000\037\030\003\030\037\030"
 9421      0000001F 
 9421      1803181F 
 9421      18
 9422 2b1a 183C0F66 		.ascii	"\030<\017f\000\000"
 9422      0000
 9423 2b20 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9423      00000000 
 9423      00000000 
 9423      00
 9424 2b2d 00000000 		.ascii	"\000\000\000\000\000\000\000\037|\003`\037|\030`\017"
 9424      0000001F 
 9424      7C03601F 
 9424      7C18600F 
 9425 2b3d 7C0000   		.ascii	"|\000\000"
 9426 2b40 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9426      00000000 
 9426      00000000 
 9426      00
 9427 2b4d 00000000 		.ascii	"\000\000\000\000\000\000\000\036\376\003l\037l\030l"
 9427      0000001E 
 9427      FE036C1F 
 9427      6C186C
 9428 2b5c 0EFE0000 		.ascii	"\016\376\000\000"
 9429 2b60 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9429      00000000 
 9429      00000000 
 9429      00
 9430 2b6d 00000000 		.ascii	"\000\000\000\000\000\000\000>0\006\374>x0\314\036x\000"
 9430      0000003E 
 9430      3006FC3E 
 9430      7830CC1E 
 9430      7800
 9431 2b7f 00       		.ascii	"\000"
 9432 2b80 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9432      00000000 
 9432      00000000 
 9432      00
 9433 2b8d 00000000 		.ascii	"\000\000\000\000\000\000\000\037\370\014\030\014\030"
 9433      0000001F 
 9433      F80C180C 
 9433      18
 9434 2b9a 0C180FF8 		.ascii	"\014\030\017\370\000\000"
 9434      0000
 9435 2ba0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9435      00000000 
 9435      00000000 
 9435      00
 9436 2bad 00000000 		.ascii	"\000\000\000\000\000\000\00088\030\030\037\370\030\030"
 9436      00000038 
 9436      3818181F 
 9436      F81818
 9437 2bbc 1FF80000 		.ascii	"\037\370\000\000"
 9438 2bc0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9438      00000000 
 9438      00000000 
 9438      00
 9439 2bcd 00000000 		.ascii	"\000\000\000\000\000\000\000\0330\0330\0370\033|\037"
 9439      0000001B 
 9439      301B301F 
 9439      301B7C1F 
 9440 2bdd CC0000   		.ascii	"\314\000\000"
 9441 2be0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9441      00000000 
 9441      00000000 
 9441      00
 9442 2bed 00000000 		.ascii	"\000\000\000\000\000\000\000\001\200\001\200\003`\006"
 9442      00000001 
 9442      80018003 
 9442      6006
 9443 2bfb 30181800 		.ascii	"0\030\030\000\000"
 9443      00
 9444 2c00 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9444      00000000 
 9444      00000000 
 9444      00
 9445 2c0d 00000000 		.ascii	"\000\000\000\000\000\000\000\0140\0140\036x3\314a\206"
 9445      0000000C 
 9445      300C301E 
 9445      7833CC61 
 9445      86
 9446 2c1e 0000     		.ascii	"\000\000"
 9447 2c20 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9447      00000000 
 9447      00000000 
 9447      00
 9448 2c2d 00000000 		.ascii	"\000\000\000\000\000\000\000\007\340\0140\0140\0140"
 9448      00000007 
 9448      E00C300C 
 9448      300C30
 9449 2c3c 07E00000 		.ascii	"\007\340\000\000"
 9450 2c40 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9450      00000000 
 9450      00000000 
 9450      00
 9451 2c4d 00000000 		.ascii	"\000\000\000\000\000\000\000\037\370\001\200\003\300"
 9451      0000001F 
 9451      F8018003 
 9451      C0
 9452 2c5a 06601818 		.ascii	"\006`\030\030\000\000"
 9452      0000
 9453 2c60 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9453      00000000 
 9453      00000000 
 9453      00
 9454 2c6d 00000000 		.ascii	"\000\000\000\000\000\000\000\001\200\037\370\003\300"
 9454      00000001 
 9454      801FF803 
 9454      C0
 9455 2c7a 06601818 		.ascii	"\006`\030\030\000\000"
 9455      0000
 9456 2c80 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9456      00000000 
 9456      00000000 
 9456      00
 9457 2c8d 00000000 		.ascii	"\000\000\000\000\000\000\000\037\370\000\030\037\370"
 9457      0000001F 
 9457      F800181F 
 9457      F8
 9458 2c9a 00180010 		.ascii	"\000\030\000\020\000\000"
 9458      0000
 9459 2ca0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9459      00000000 
 9459      00000000 
 9459      00
 9460 2cad 00000000 		.ascii	"\000\000\000\000\000\000\000\037\370\014\000\017\370"
 9460      0000001F 
 9460      F80C000F 
 9460      F8
 9461 2cba 0C0007F8 		.ascii	"\014\000\007\370\000\000"
 9461      0000
 9462 2cc0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9462      00000000 
 9462      00000000 
 9462      00
 9463 2ccd 00000000 		.ascii	"\000\000\000\000\000\000\000\037\370\006`\006`\006`"
 9463      0000001F 
 9463      F8066006 
 9463      600660
 9464 2cdc 1FF80000 		.ascii	"\037\370\000\000"
 9465 2ce0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 9465      00000000 
 9465      00000000 
 9465      00
 9466 2ced 00000000 		.ascii	"\000\000\000\000\000\000\000\003\300\037\370\007\340"
 9466      00000003 
 9466      C01FF807 
 9466      E0
 9467 2cfa 0C3007E0 		.ascii	"\0140\007\340\000\000"
 9467      0000
 9468              		.section	.rodata.loc1,"a"
 9469              		.align	1
 9470              		.set	.LANCHOR6,. + 0
 9473              	loc1:
 9474 0000 0000     		.short	0
 9475 0002 1400     		.short	20
 9476 0004 2800     		.short	40
 9477 0006 3C00     		.short	60
 9478 0008 5000     		.short	80
 9479 000a 6400     		.short	100
 9480 000c 7800     		.short	120
 9481 000e 8C00     		.short	140
 9482              		.section	.rodata.loc2,"a"
 9483              		.align	1
 9484              		.set	.LANCHOR7,. + 0
 9487              	loc2:
 9488 0000 A000     		.short	160
 9489 0002 B600     		.short	182
 9490 0004 CC00     		.short	204
 9491 0006 E200     		.short	226
 9492              		.section	.rodata.loc3,"a"
 9493              		.align	1
 9494              		.set	.LANCHOR8,. + 0
 9497              	loc3:
 9498 0000 F800     		.short	248
 9499 0002 1401     		.short	276
 9500 0004 3001     		.short	304
 9501 0006 4C01     		.short	332
 9502              		.section	.rodata.s_bit,"a"
 9503              		.set	.LANCHOR0,. + 0
 9506              	s_bit:
 9507 0000 80402010 		.ascii	"\200@ \020\010\004\002\001"
 9507      08040201 
 9508              		.text
 9509              	.Letext0:
 9510              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eabi
 9511              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 9512              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 9513              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 9514              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eabi
 9515              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 9516              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 9517              		.file 9 "c:\\project\\stm32fx_lib\\stm32f1x_iolib\\include\\core.h"
 9518              		.file 10 "/project/stm32fx_lib/stm32f1x_iolib/include/cmsis/stm32f1xx.h"
 9519              		.file 11 "/project/stm32fx_lib/stm32f1x_iolib/include/gpio.h"
 9520              		.file 12 "font.h"
 9521              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 9522              		.file 14 "userdefs.h"
 9523              		.file 15 "/project/stm32fx_lib/stm32f1x_iolib/include/fundefs.h"
 9524              		.file 16 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 lcd.c
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:16     .text.lcd_data_port_input:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:24     .text.lcd_data_port_input:00000000 lcd_data_port_input
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:49     .text.lcd_data_port_input:00000014 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:54     .text.lcd_data_port_output:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:61     .text.lcd_data_port_output:00000000 lcd_data_port_output
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:85     .text.lcd_data_port_output:00000014 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:90     .text.lcd_data_write:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:97     .text.lcd_data_write:00000000 lcd_data_write
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:114    .text.lcd_data_write:00000008 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:119    .text.lcd_data_read:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:126    .text.lcd_data_read:00000000 lcd_data_read
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:143    .text.lcd_data_read:00000008 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:148    .text.lcd_cs_hi:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:155    .text.lcd_cs_hi:00000000 lcd_cs_hi
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:170    .text.lcd_cs_hi:0000000c $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:175    .text.lcd_cs_lo:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:182    .text.lcd_cs_lo:00000000 lcd_cs_lo
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:197    .text.lcd_cs_lo:0000000c $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:202    .text.lcd_rs_hi:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:209    .text.lcd_rs_hi:00000000 lcd_rs_hi
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:224    .text.lcd_rs_hi:0000000c $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:229    .text.lcd_rs_lo:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:236    .text.lcd_rs_lo:00000000 lcd_rs_lo
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:251    .text.lcd_rs_lo:0000000c $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:256    .text.lcd_wr_hi:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:263    .text.lcd_wr_hi:00000000 lcd_wr_hi
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:278    .text.lcd_wr_hi:0000000c $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:283    .text.lcd_wr_lo:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:290    .text.lcd_wr_lo:00000000 lcd_wr_lo
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:305    .text.lcd_wr_lo:0000000c $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:310    .text.lcd_rd_hi:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:317    .text.lcd_rd_hi:00000000 lcd_rd_hi
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:332    .text.lcd_rd_hi:0000000c $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:337    .text.lcd_rd_lo:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:344    .text.lcd_rd_lo:00000000 lcd_rd_lo
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:359    .text.lcd_rd_lo:0000000c $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:364    .text.lcd_wr_data:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:371    .text.lcd_wr_data:00000000 lcd_wr_data
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:423    .text.lcd_wr_data:00000020 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:428    .text.lcd_wr_register:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:435    .text.lcd_wr_register:00000000 lcd_wr_register
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:487    .text.lcd_wr_register:00000020 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:492    .text.lcd_write_register:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:499    .text.lcd_write_register:00000000 lcd_write_register
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:531    .text.lcd_read_register:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:538    .text.lcd_read_register:00000000 lcd_read_register
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:598    .text.lcd_read_register:0000002c $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:603    .text.lcd_read_data:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:610    .text.lcd_read_data:00000000 lcd_read_data
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:666    .text.lcd_read_data:00000028 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:671    .text.lcd_write_ram_prepare:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:678    .text.lcd_write_ram_prepare:00000000 lcd_write_ram_prepare
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:693    .text.lcd_write_ram:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:700    .text.lcd_write_ram:00000000 lcd_write_ram
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:716    .text.lcd_bgr_to_rgb:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:723    .text.lcd_bgr_to_rgb:00000000 lcd_bgr_to_rgb
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:753    .text.lcd_set_cursor:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:760    .text.lcd_set_cursor:00000000 lcd_set_cursor
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:831    .text.lcd_set_cursor:0000003c $d
                            *COM*:00000002 device_code
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:838    .text.lcd_get_pixel:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:845    .text.lcd_get_pixel:00000000 lcd_get_pixel
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:925    .text.lcd_get_pixel:00000040 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:930    .text.lcd_display_on:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:937    .text.lcd_display_on:00000000 lcd_display_on
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:953    .text.lcd_display_off:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:960    .text.lcd_display_off:00000000 lcd_display_off
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:976    .text.lcd_delay:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:983    .text.lcd_delay:00000000 lcd_delay
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:999    .text.lcd_window_max:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:1006   .text.lcd_window_max:00000000 lcd_window_max
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:1096   .text.lcd_window_max:0000005c $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:1101   .text.lcd_set_pixel:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:1108   .text.lcd_set_pixel:00000000 lcd_set_pixel
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:1142   .text.lcd_set_pixel:00000018 $d
                            *COM*:00000002 foreground_color
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:1147   .text.lcd_clear:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:1154   .text.lcd_clear:00000000 lcd_clear
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:1204   .text.lcd_init:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:1211   .text.lcd_init:00000000 lcd_init
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:1831   .text.lcd_init:00000380 $d
                            *COM*:00000002 maxx
                            *COM*:00000002 maxy
                            *COM*:00000002 ax
                            *COM*:00000002 ay
                            *COM*:00000002 page
                            *COM*:00000002 eng_mode
                            *COM*:00000001 hangul_mode
                            *COM*:00000002 max_col
                            *COM*:00000002 max_row
                            *COM*:00000002 background_color
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:1848   .text.lcd_init:000003b8 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:2851   .text.lcd_fill:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:2858   .text.lcd_fill:00000000 lcd_fill
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:2975   .text.lcd_draw_line:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:2982   .text.lcd_draw_line:00000000 lcd_draw_line
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:3182   .text.draw_apple_logo:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:3189   .text.draw_apple_logo:00000000 draw_apple_logo
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:3802   .text.lcd_draw_rectangle:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:3809   .text.lcd_draw_rectangle:00000000 lcd_draw_rectangle
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:3872   .text.lcd_draw_circle:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:3879   .text.lcd_draw_circle:00000000 lcd_draw_circle
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4050   .text.set_color:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4057   .text.set_color:00000000 set_color
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4074   .text.set_color:00000008 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4079   .text.set_background_color:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4086   .text.set_background_color:00000000 set_background_color
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4103   .text.set_background_color:00000008 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4108   .text.set_pixel:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4115   .text.set_pixel:00000000 set_pixel
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4154   .text.set_pixel:00000014 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4159   .text.out_lcd:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4166   .text.out_lcd:00000000 out_lcd
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4236   .text.out_lcd:00000040 $d
                            *COM*:00000002 tx
                            *COM*:00000002 ty
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4245   .text.uni_to_kssm2:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4252   .text.uni_to_kssm2:00000000 uni_to_kssm2
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4321   .text.uni_to_kssm2:00000044 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4328   .text.uni_to_kssm:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4335   .text.uni_to_kssm:00000000 uni_to_kssm
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4458   .text.ks5601_to_kssm:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4465   .text.ks5601_to_kssm:00000000 ks5601_to_kssm
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4531   .text.ks5601_to_kssm:00000038 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:5717   .rodata.KS_CODE:00000000 KS_CODE
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4536   .text.put_eng:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4543   .text.put_eng:00000000 put_eng
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4750   .text.put_eng:000000d0 $d
                            *COM*:00000020 dumy_data
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4767   .text.put_han:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4774   .text.put_han:00000000 put_han
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4842   .text.put_han:00000034 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4863   .text.put_han:00000048 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4897   .text.put_han:00000070 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:4919   .text.put_han:0000009a $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:5244   .text.put_han:0000020c $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:5266   .text.put_han:00000260 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:5279   .text.put_han:0000026c $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:8407   .rodata.kor_font:00000000 kor_font
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:5297   .text.put_engxy:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:5304   .text.put_engxy:00000000 put_engxy
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:5331   .text.put_engxy:00000010 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:5337   .text.put_hanxy:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:5344   .text.put_hanxy:00000000 put_hanxy
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:5405   .text.put_hanxy:00000030 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:5411   .text.lput_char:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:5418   .text.lput_char:00000000 lput_char
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:5501   .text.lput_char_xy:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:5508   .text.lput_char_xy:00000000 lput_char_xy
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:5603   .text.lput_char_xy:00000044 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:5609   .text.lcd_printf:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:5616   .text.lcd_printf:00000000 lcd_printf
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:5681   .text.lcd_printf:00000030 $d
                            *COM*:00000100 buff
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:8348   .rodata.hangul_jongsung_tbl:00000000 hangul_jongsung_tbl
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:8382   .rodata.hangul_jungsung_tbl:00000000 hangul_jungsung_tbl
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:8323   .rodata.hangul_chosung_tbl:00000000 hangul_chosung_tbl
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:9497   .rodata.loc3:00000000 loc3
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:9487   .rodata.loc2:00000000 loc2
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:9473   .rodata.loc1:00000000 loc1
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:8308   .rodata.han_tbl:00000000 han_tbl
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:9506   .rodata.s_bit:00000000 s_bit
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:8122   .rodata.eng_font:00000000 eng_font
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:8319   .rodata.hangul_chosung_tbl:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:8344   .rodata.hangul_jongsung_tbl:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:8378   .rodata.hangul_jungsung_tbl:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:9469   .rodata.loc1:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:9483   .rodata.loc2:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccQLOzJf.s:9493   .rodata.loc3:00000000 $d

UNDEFINED SYMBOLS
GPIO_SetBits
GPIO_ResetBits
wait_ms
GPIO_Init_Pin
strlen
vsprintf
