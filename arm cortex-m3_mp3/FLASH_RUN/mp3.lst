   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"mp3.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.hex2dec,"ax",%progbits
  16              		.align	1
  17              		.global	hex2dec
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	hex2dec:
  25              	.LVL0:
  26              	.LFB32:
  27              		.file 1 "mp3.c"
   1:mp3.c         **** /********************************************************************************/
   2:mp3.c         **** /* mp3.c                                                                        */
   3:mp3.c         **** /* STM32F103VET6                                                                */
   4:mp3.c         **** /* (Lee ChangWoo HL2IRW  hl2irw@kpu.ac.kr 011-726-6860)                 	*/
   5:mp3.c         **** /* stm32f103ve_mp3								*/
   6:mp3.c         **** /********************************************************************************/
   7:mp3.c         **** #include "hwdefs.h"
   8:mp3.c         **** #include "mp3.h"
   9:mp3.c         **** #include <stdint.h>
  10:mp3.c         **** #include <stdio.h>
  11:mp3.c         **** #include <stdarg.h>
  12:mp3.c         **** #include <stdlib.h>
  13:mp3.c         **** #include <string.h>
  14:mp3.c         **** #include "ff.h"			/* FatFs configurations and declarations */
  15:mp3.c         **** #include "diskio.h"		/* Declarations of low level disk I/O functions */
  16:mp3.c         **** 
  17:mp3.c         **** 
  18:mp3.c         **** struct farme
  19:mp3.c         **** {
  20:mp3.c         ****       unsigned char mp3name[65];
  21:mp3.c         ****       unsigned char mp3time[20];
  22:mp3.c         ****       unsigned char mp3format[20];
  23:mp3.c         **** };
  24:mp3.c         **** 
  25:mp3.c         **** 
  26:mp3.c         **** ID3V1 ID3V1_Buf;
  27:mp3.c         **** unsigned short f_kbps = 0xffff;
  28:mp3.c         **** float propos = 0;
  29:mp3.c         **** unsigned short timetemp = 0;
  30:mp3.c         **** const char *music_extend [4] = {"MP3","WMA","WAV","MID"};
  31:mp3.c         **** struct farme mp3;
  32:mp3.c         **** unsigned char lrc_buffer[7000];
  33:mp3.c         **** unsigned char tag_table[512];
  34:mp3.c         **** unsigned short lrc_tag_cnt = 0;
  35:mp3.c         **** unsigned short music_number;
  36:mp3.c         **** unsigned char lrc_tag_type = 0;
  37:mp3.c         **** lyric_struct lyric;
  38:mp3.c         **** unsigned char bt30ms = 0;
  39:mp3.c         **** unsigned char spedate [14] = {0};
  40:mp3.c         **** unsigned char lrc_data[512];
  41:mp3.c         **** unsigned char lrc[80];
  42:mp3.c         **** unsigned char buffer[1024];
  43:mp3.c         **** unsigned int datasize = 0;
  44:mp3.c         **** unsigned char ftemp,fdx,buffer_read;
  45:mp3.c         **** unsigned char mp3_flag,new_play;
  46:mp3.c         **** int seek_value;
  47:mp3.c         **** 
  48:mp3.c         **** FATFS fs;
  49:mp3.c         **** FIL fsrc,fap,fii;
  50:mp3.c         **** FRESULT res;
  51:mp3.c         **** unsigned int bw,br;
  52:mp3.c         **** FILINFO fno;
  53:mp3.c         **** DIR dirs;
  54:mp3.c         **** 
  55:mp3.c         **** extern volatile unsigned char play_mp3,volume_flag;
  56:mp3.c         **** extern volatile unsigned short second,volume;
  57:mp3.c         **** 
  58:mp3.c         **** 
  59:mp3.c         **** struct FileList {
  60:mp3.c         ****       char filename[150];
  61:mp3.c         ****       struct FileList *next;
  62:mp3.c         ****       struct FileList *back;
  63:mp3.c         **** };
  64:mp3.c         **** 
  65:mp3.c         **** typedef struct FileList dnode;
  66:mp3.c         **** typedef dnode *dlink;
  67:mp3.c         **** dlink head;
  68:mp3.c         **** 
  69:mp3.c         **** 
  70:mp3.c         **** 
  71:mp3.c         **** char hex2dec (const char ch)
  72:mp3.c         **** {
  28              		.loc 1 72 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  73:mp3.c         ****       if (ch <= '9') return (ch - '0');
  33              		.loc 1 73 7 view .LVU1
  34              		.loc 1 73 10 is_stmt 0 view .LVU2
  35 0000 3928     		cmp	r0, #57
  36 0002 02D8     		bhi	.L2
  37              		.loc 1 73 22 is_stmt 1 discriminator 1 view .LVU3
  38              		.loc 1 73 33 is_stmt 0 discriminator 1 view .LVU4
  39 0004 3038     		subs	r0, r0, #48
  40              	.LVL1:
  41              	.L6:
  74:mp3.c         ****       if (ch >= 'a' && ch <= 'f') return (ch - 'a' + 10);
  42              		.loc 1 74 52 discriminator 1 view .LVU5
  43 0006 C0B2     		uxtb	r0, r0
  44 0008 7047     		bx	lr
  45              	.LVL2:
  46              	.L2:
  47              		.loc 1 74 7 is_stmt 1 view .LVU6
  48              		.loc 1 74 10 is_stmt 0 view .LVU7
  49 000a A0F16103 		sub	r3, r0, #97
  50 000e 052B     		cmp	r3, #5
  51 0010 01D8     		bhi	.L4
  52              		.loc 1 74 35 is_stmt 1 discriminator 1 view .LVU8
  53              		.loc 1 74 52 is_stmt 0 discriminator 1 view .LVU9
  54 0012 5738     		subs	r0, r0, #87
  55              	.LVL3:
  56              		.loc 1 74 52 discriminator 1 view .LVU10
  57 0014 F7E7     		b	.L6
  58              	.LVL4:
  59              	.L4:
  75:mp3.c         ****       if (ch >= 'A' && ch <= 'F') return (ch - 'A' + 10);
  60              		.loc 1 75 7 is_stmt 1 view .LVU11
  61              		.loc 1 75 10 is_stmt 0 view .LVU12
  62 0016 A0F14103 		sub	r3, r0, #65
  63 001a 052B     		cmp	r3, #5
  64 001c 01D8     		bhi	.L5
  65              		.loc 1 75 35 is_stmt 1 discriminator 1 view .LVU13
  66              		.loc 1 75 52 is_stmt 0 discriminator 1 view .LVU14
  67 001e 3738     		subs	r0, r0, #55
  68              	.LVL5:
  69              		.loc 1 75 52 discriminator 1 view .LVU15
  70 0020 F1E7     		b	.L6
  71              	.LVL6:
  72              	.L5:
  76:mp3.c         ****       return 0;
  73              		.loc 1 76 14 view .LVU16
  74 0022 0020     		movs	r0, #0
  75              	.LVL7:
  77:mp3.c         **** }
  76              		.loc 1 77 1 view .LVU17
  77 0024 7047     		bx	lr
  78              		.cfi_endproc
  79              	.LFE32:
  81              		.section	.text.dec2hex,"ax",%progbits
  82              		.align	1
  83              		.global	dec2hex
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu softvfp
  89              	dec2hex:
  90              	.LVL8:
  91              	.LFB33:
  78:mp3.c         **** 
  79:mp3.c         **** 
  80:mp3.c         **** char dec2hex (const char ch)
  81:mp3.c         **** {
  92              		.loc 1 81 1 is_stmt 1 view -0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  82:mp3.c         ****       if (ch <= 9) return (ch + '0');
  97              		.loc 1 82 7 view .LVU19
  98              		.loc 1 82 10 is_stmt 0 view .LVU20
  99 0000 0928     		cmp	r0, #9
 100 0002 02D8     		bhi	.L8
 101              		.loc 1 82 20 is_stmt 1 discriminator 1 view .LVU21
 102              		.loc 1 82 31 is_stmt 0 discriminator 1 view .LVU22
 103 0004 3030     		adds	r0, r0, #48
 104              	.LVL9:
 105              	.L11:
 106              	.LBB100:
 107              	.LBB101:
  83:mp3.c         ****       if (ch >= 10 && ch <= 15) return (ch + 'A' - 10);
 108              		.loc 1 83 50 view .LVU23
 109 0006 C0B2     		uxtb	r0, r0
 110 0008 7047     		bx	lr
 111              	.LVL10:
 112              	.L8:
 113              		.loc 1 83 50 view .LVU24
 114              	.LBE101:
 115              	.LBI100:
  80:mp3.c         **** {
 116              		.loc 1 80 6 is_stmt 1 view .LVU25
 117              	.LBB102:
 118              		.loc 1 83 7 view .LVU26
 119              		.loc 1 83 10 is_stmt 0 view .LVU27
 120 000a A0F10A03 		sub	r3, r0, #10
 121 000e 052B     		cmp	r3, #5
 122 0010 01D8     		bhi	.L10
 123              		.loc 1 83 33 is_stmt 1 view .LVU28
 124              		.loc 1 83 50 is_stmt 0 view .LVU29
 125 0012 3730     		adds	r0, r0, #55
 126              	.LVL11:
 127              		.loc 1 83 50 view .LVU30
 128 0014 F7E7     		b	.L11
 129              	.LVL12:
 130              	.L10:
  84:mp3.c         ****       return 0;
 131              		.loc 1 84 14 view .LVU31
 132 0016 0020     		movs	r0, #0
 133              	.LVL13:
 134              		.loc 1 84 14 view .LVU32
 135              	.LBE102:
 136              	.LBE100:
  85:mp3.c         **** }
 137              		.loc 1 85 1 view .LVU33
 138 0018 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE33:
 142              		.global	__aeabi_ui2f
 143              		.global	__aeabi_fdiv
 144              		.global	__aeabi_fcmpgt
 145              		.global	__aeabi_i2f
 146              		.global	__aeabi_fmul
 147              		.global	__aeabi_f2uiz
 148              		.section	.rodata.mp3_prog_bar.str1.1,"aMS",%progbits,1
 149              	.LC0:
 150 0000 504C4159 		.ascii	"PLAY \000"
 150      2000
 151              		.section	.text.mp3_prog_bar,"ax",%progbits
 152              		.align	1
 153              		.global	mp3_prog_bar
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu softvfp
 159              	mp3_prog_bar:
 160              	.LVL14:
 161              	.LFB34:
  86:mp3.c         **** 
  87:mp3.c         **** 
  88:mp3.c         **** void mp3_prog_bar (unsigned int pos,unsigned int lenth)
  89:mp3.c         **** {
 162              		.loc 1 89 1 is_stmt 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 32
 165              		@ frame_needed = 0, uses_anonymous_args = 0
  90:mp3.c         ****       static unsigned short playtime = 0;
 166              		.loc 1 90 7 view .LVU35
  91:mp3.c         ****       char dig0,dig1,dig2,dig3;
 167              		.loc 1 91 7 view .LVU36
  92:mp3.c         ****       unsigned short time = 0;
 168              		.loc 1 92 7 view .LVU37
  93:mp3.c         ****       char buff[32];
 169              		.loc 1 93 7 view .LVU38
  94:mp3.c         ****       if (f_kbps == 0xffff) {
 170              		.loc 1 94 7 view .LVU39
 171              		.loc 1 94 10 is_stmt 0 view .LVU40
 172 0000 4FF6FF73 		movw	r3, #65535
  89:mp3.c         ****       static unsigned short playtime = 0;
 173              		.loc 1 89 1 view .LVU41
 174 0004 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 175              		.cfi_def_cfa_offset 28
 176              		.cfi_offset 4, -28
 177              		.cfi_offset 5, -24
 178              		.cfi_offset 6, -20
 179              		.cfi_offset 7, -16
 180              		.cfi_offset 8, -12
 181              		.cfi_offset 9, -8
 182              		.cfi_offset 14, -4
 183              		.loc 1 94 18 view .LVU42
 184 0008 794F     		ldr	r7, .L33
  89:mp3.c         ****       static unsigned short playtime = 0;
 185              		.loc 1 89 1 view .LVU43
 186 000a 0546     		mov	r5, r0
 187              		.loc 1 94 10 view .LVU44
 188 000c 3A88     		ldrh	r2, [r7]
  89:mp3.c         ****       static unsigned short playtime = 0;
 189              		.loc 1 89 1 view .LVU45
 190 000e 0C46     		mov	r4, r1
 191              		.loc 1 94 10 view .LVU46
 192 0010 9A42     		cmp	r2, r3
  89:mp3.c         ****       static unsigned short playtime = 0;
 193              		.loc 1 89 1 view .LVU47
 194 0012 89B0     		sub	sp, sp, #36
 195              		.cfi_def_cfa_offset 64
 196              		.loc 1 94 10 view .LVU48
 197 0014 05D1     		bne	.L13
  95:mp3.c         **** 	 playtime = 0;
 198              		.loc 1 95 3 is_stmt 1 view .LVU49
 199              		.loc 1 95 12 is_stmt 0 view .LVU50
 200 0016 0022     		movs	r2, #0
 201 0018 764B     		ldr	r3, .L33+4
 202 001a 1A80     		strh	r2, [r3]	@ movhi
  96:mp3.c         **** 	 f_kbps = get_head_info();
 203              		.loc 1 96 3 is_stmt 1 view .LVU51
 204              		.loc 1 96 12 is_stmt 0 view .LVU52
 205 001c FFF7FEFF 		bl	get_head_info
 206              	.LVL15:
 207              		.loc 1 96 10 view .LVU53
 208 0020 3880     		strh	r0, [r7]	@ movhi
 209              	.L13:
  97:mp3.c         ****       }
  98:mp3.c         ****       if (lenth) {
 210              		.loc 1 98 7 is_stmt 1 view .LVU54
 211              		.loc 1 98 10 is_stmt 0 view .LVU55
 212 0022 002C     		cmp	r4, #0
 213 0024 00F0D480 		beq	.L12
 214              	.LVL16:
 215              	.LBB105:
 216              	.LBI105:
  88:mp3.c         **** {
 217              		.loc 1 88 6 is_stmt 1 view .LVU56
 218              	.LBB106:
  99:mp3.c         **** 	 propos = (float)pos / lenth;
 219              		.loc 1 99 3 view .LVU57
 220              		.loc 1 99 23 is_stmt 0 view .LVU58
 221 0028 2046     		mov	r0, r4
 222 002a FFF7FEFF 		bl	__aeabi_ui2f
 223              	.LVL17:
 224 002e 0646     		mov	r6, r0
 225              		.loc 1 99 12 view .LVU59
 226 0030 2846     		mov	r0, r5
 227 0032 FFF7FEFF 		bl	__aeabi_ui2f
 228              	.LVL18:
 100:mp3.c         **** 	 if (propos > 1) propos = 1;
 229              		.loc 1 100 6 view .LVU60
 230 0036 4FF07E59 		mov	r9, #1065353216
  99:mp3.c         **** 	 propos = (float)pos / lenth;
 231              		.loc 1 99 23 view .LVU61
 232 003a 3146     		mov	r1, r6
 233 003c FFF7FEFF 		bl	__aeabi_fdiv
 234              	.LVL19:
 235              		.loc 1 100 6 view .LVU62
 236 0040 4946     		mov	r1, r9
  99:mp3.c         **** 	 propos = (float)pos / lenth;
 237              		.loc 1 99 23 view .LVU63
 238 0042 8046     		mov	r8, r0
 239              		.loc 1 100 3 is_stmt 1 view .LVU64
 240              		.loc 1 100 6 is_stmt 0 view .LVU65
 241 0044 FFF7FEFF 		bl	__aeabi_fcmpgt
 242              	.LVL20:
 243 0048 6B4D     		ldr	r5, .L33+8
 244              	.LVL21:
 245              		.loc 1 100 6 view .LVU66
 246 004a 0028     		cmp	r0, #0
 247 004c 40F0B080 		bne	.L15
  99:mp3.c         **** 	 propos = (float)pos / lenth;
 248              		.loc 1 99 10 view .LVU67
 249 0050 C5F80080 		str	r8, [r5]	@ float
 250              	.L16:
 101:mp3.c         ****       } else {
 102:mp3.c         ****       	 return;
 103:mp3.c         ****       }
 104:mp3.c         ****       if (f_kbps) {
 251              		.loc 1 104 7 is_stmt 1 view .LVU68
 252              		.loc 1 104 11 is_stmt 0 view .LVU69
 253 0054 3B88     		ldrh	r3, [r7]
 254              		.loc 1 104 10 view .LVU70
 255 0056 002B     		cmp	r3, #0
 256 0058 00F0AD80 		beq	.L17
 105:mp3.c         **** 	 time = (lenth / f_kbps) / 125;
 257              		.loc 1 105 3 is_stmt 1 view .LVU71
 258              	.LVL22:
 106:mp3.c         **** 	 time = propos * time;
 259              		.loc 1 106 3 view .LVU72
 105:mp3.c         **** 	 time = (lenth / f_kbps) / 125;
 260              		.loc 1 105 17 is_stmt 0 view .LVU73
 261 005c B4FBF3F3 		udiv	r3, r4, r3
 262              	.LVL23:
 105:mp3.c         **** 	 time = (lenth / f_kbps) / 125;
 263              		.loc 1 105 27 view .LVU74
 264 0060 7D20     		movs	r0, #125
 265 0062 B3FBF0F0 		udiv	r0, r3, r0
 266              		.loc 1 106 17 view .LVU75
 267 0066 80B2     		uxth	r0, r0
 268 0068 FFF7FEFF 		bl	__aeabi_i2f
 269              	.LVL24:
 270              		.loc 1 106 17 view .LVU76
 271 006c 2968     		ldr	r1, [r5]	@ float
 272 006e FFF7FEFF 		bl	__aeabi_fmul
 273              	.LVL25:
 274              		.loc 1 106 8 view .LVU77
 275 0072 FFF7FEFF 		bl	__aeabi_f2uiz
 276              	.LVL26:
 277 0076 80B2     		uxth	r0, r0
 278              	.LVL27:
 279              	.L18:
 107:mp3.c         ****       } else {
 108:mp3.c         ****          time = get_decode_time();
 109:mp3.c         ****       }
 110:mp3.c         ****       if (time != playtime) {
 280              		.loc 1 110 7 is_stmt 1 view .LVU78
 281              		.loc 1 110 16 is_stmt 0 view .LVU79
 282 0078 DFF87881 		ldr	r8, .L33+4
 283              		.loc 1 110 10 view .LVU80
 284 007c B8F80030 		ldrh	r3, [r8]
 285 0080 8342     		cmp	r3, r0
 286 0082 00F0A580 		beq	.L12
 111:mp3.c         **** 	 time = (((float)lenth / f_kbps) / 125) * propos;
 287              		.loc 1 111 3 is_stmt 1 view .LVU81
 288              		.loc 1 111 25 is_stmt 0 view .LVU82
 289 0086 3888     		ldrh	r0, [r7]
 290              	.LVL28:
 291              		.loc 1 111 25 view .LVU83
 292 0088 FFF7FEFF 		bl	__aeabi_i2f
 293              	.LVL29:
 294 008c 0146     		mov	r1, r0
 295 008e 3046     		mov	r0, r6
 296 0090 FFF7FEFF 		bl	__aeabi_fdiv
 297              	.LVL30:
 298              		.loc 1 111 35 view .LVU84
 299 0094 5949     		ldr	r1, .L33+12
 300 0096 FFF7FEFF 		bl	__aeabi_fdiv
 301              	.LVL31:
 302              		.loc 1 111 42 view .LVU85
 303 009a 2968     		ldr	r1, [r5]	@ float
 304 009c FFF7FEFF 		bl	__aeabi_fmul
 305              	.LVL32:
 306              		.loc 1 111 8 view .LVU86
 307 00a0 FFF7FEFF 		bl	__aeabi_f2uiz
 308              	.LVL33:
 112:mp3.c         **** 	 playtime = time;
 113:mp3.c         **** 	 if (new_play) {
 309              		.loc 1 113 7 view .LVU87
 310 00a4 564E     		ldr	r6, .L33+16
 111:mp3.c         **** 	 time = (((float)lenth / f_kbps) / 125) * propos;
 311              		.loc 1 111 8 view .LVU88
 312 00a6 85B2     		uxth	r5, r0
 313              	.LVL34:
 112:mp3.c         **** 	 playtime = time;
 314              		.loc 1 112 3 is_stmt 1 view .LVU89
 315              		.loc 1 113 6 is_stmt 0 view .LVU90
 316 00a8 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 112:mp3.c         **** 	 playtime = time;
 317              		.loc 1 112 12 view .LVU91
 318 00aa A8F80050 		strh	r5, [r8]	@ movhi
 319              		.loc 1 113 3 is_stmt 1 view .LVU92
 320              		.loc 1 113 6 is_stmt 0 view .LVU93
 321 00ae 23B1     		cbz	r3, .L21
 114:mp3.c         **** 	    lput_char_xy(2,2,"PLAY ");
 322              		.loc 1 114 6 is_stmt 1 view .LVU94
 323 00b0 0221     		movs	r1, #2
 324 00b2 544A     		ldr	r2, .L33+20
 325 00b4 0846     		mov	r0, r1
 326 00b6 FFF7FEFF 		bl	lput_char_xy
 327              	.LVL35:
 328              	.L21:
 115:mp3.c         **** 	 }
 116:mp3.c         **** 	 if (time >= 3600) time = 3599;
 329              		.loc 1 116 3 view .LVU95
 330 00ba 40F60F60 		movw	r0, #3599
 331 00be A842     		cmp	r0, r5
 332 00c0 28BF     		it	cs
 333 00c2 2846     		movcs	r0, r5
 334              	.LVL36:
 117:mp3.c         **** 	 dig3 = (time / 600);
 335              		.loc 1 117 3 view .LVU96
 118:mp3.c         **** 	 dig2 = ((time / 60) % 10);
 336              		.loc 1 118 3 view .LVU97
 119:mp3.c         **** 	 dig1 = ((time % 60) / 10);
 337              		.loc 1 119 3 view .LVU98
 338              		.loc 1 119 8 is_stmt 0 view .LVU99
 339 00c4 3C22     		movs	r2, #60
 117:mp3.c         **** 	 dig3 = (time / 600);
 340              		.loc 1 117 8 view .LVU100
 341 00c6 4FF41673 		mov	r3, #600
 342              		.loc 1 119 8 view .LVU101
 343 00ca B0FBF2F1 		udiv	r1, r0, r2
 344 00ce 02FB1102 		mls	r2, r2, r1, r0
 117:mp3.c         **** 	 dig3 = (time / 600);
 345              		.loc 1 117 8 view .LVU102
 346 00d2 B0FBF3F0 		udiv	r0, r0, r3
 347              	.LVL37:
 120:mp3.c         **** 	 dig0 = ((time % 60) % 10);	 
 121:mp3.c         **** 	 buff[0] = dec2hex(dig3);
 348              		.loc 1 121 13 view .LVU103
 349 00d6 C0B2     		uxtb	r0, r0
 119:mp3.c         **** 	 dig1 = ((time % 60) / 10);
 350              		.loc 1 119 8 view .LVU104
 351 00d8 92B2     		uxth	r2, r2
 352              	.LVL38:
 120:mp3.c         **** 	 dig0 = ((time % 60) % 10);	 
 353              		.loc 1 120 3 is_stmt 1 view .LVU105
 354              		.loc 1 121 3 view .LVU106
 118:mp3.c         **** 	 dig1 = ((time % 60) / 10);
 355              		.loc 1 118 8 is_stmt 0 view .LVU107
 356 00da 0A25     		movs	r5, #10
 357              	.LVL39:
 358              		.loc 1 121 13 view .LVU108
 359 00dc FFF7FEFF 		bl	dec2hex
 360              	.LVL40:
 361              		.loc 1 121 11 view .LVU109
 362 00e0 8DF80000 		strb	r0, [sp]
 122:mp3.c         **** 	 buff[1] = dec2hex(dig2);
 363              		.loc 1 122 3 is_stmt 1 view .LVU110
 118:mp3.c         **** 	 dig1 = ((time % 60) / 10);
 364              		.loc 1 118 8 is_stmt 0 view .LVU111
 365 00e4 B1FBF5F0 		udiv	r0, r1, r5
 366 00e8 05FB1010 		mls	r0, r5, r0, r1
 367              		.loc 1 122 13 view .LVU112
 368 00ec C0B2     		uxtb	r0, r0
 369 00ee FFF7FEFF 		bl	dec2hex
 370              	.LVL41:
 119:mp3.c         **** 	 dig0 = ((time % 60) % 10);	 
 371              		.loc 1 119 8 view .LVU113
 372 00f2 B2FBF5F1 		udiv	r1, r2, r5
 123:mp3.c         **** 	 buff[2] = ':';
 373              		.loc 1 123 11 view .LVU114
 374 00f6 3A23     		movs	r3, #58
 122:mp3.c         **** 	 buff[1] = dec2hex(dig2);
 375              		.loc 1 122 11 view .LVU115
 376 00f8 8DF80100 		strb	r0, [sp, #1]
 377              		.loc 1 123 3 is_stmt 1 view .LVU116
 124:mp3.c         **** 	 buff[3] = dec2hex(dig1);
 378              		.loc 1 124 13 is_stmt 0 view .LVU117
 379 00fc C8B2     		uxtb	r0, r1
 123:mp3.c         **** 	 buff[2] = ':';
 380              		.loc 1 123 11 view .LVU118
 381 00fe 8DF80230 		strb	r3, [sp, #2]
 382              		.loc 1 124 3 is_stmt 1 view .LVU119
 383              		.loc 1 124 13 is_stmt 0 view .LVU120
 384 0102 FFF7FEFF 		bl	dec2hex
 385              	.LVL42:
 386              		.loc 1 124 11 view .LVU121
 387 0106 8DF80300 		strb	r0, [sp, #3]
 125:mp3.c         **** 	 buff[4] = dec2hex(dig0);
 388              		.loc 1 125 3 is_stmt 1 view .LVU122
 120:mp3.c         **** 	 buff[0] = dec2hex(dig3);
 389              		.loc 1 120 8 is_stmt 0 view .LVU123
 390 010a 05FB1120 		mls	r0, r5, r1, r2
 391              		.loc 1 125 13 view .LVU124
 392 010e C0B2     		uxtb	r0, r0
 393 0110 FFF7FEFF 		bl	dec2hex
 394              	.LVL43:
 126:mp3.c         **** 	 buff[5] = '/';
 395              		.loc 1 126 11 view .LVU125
 396 0114 2F23     		movs	r3, #47
 397 0116 8DF80530 		strb	r3, [sp, #5]
 127:mp3.c         **** 	 if (new_play == 0) {
 398              		.loc 1 127 6 view .LVU126
 399 011a 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 125:mp3.c         **** 	 buff[5] = '/';
 400              		.loc 1 125 11 view .LVU127
 401 011c 8DF80400 		strb	r0, [sp, #4]
 126:mp3.c         **** 	 buff[5] = '/';
 402              		.loc 1 126 3 is_stmt 1 view .LVU128
 403              		.loc 1 127 3 view .LVU129
 404              		.loc 1 127 6 is_stmt 0 view .LVU130
 405 0120 002B     		cmp	r3, #0
 406 0122 4BD0     		beq	.L22
 407              	.LVL44:
 408              	.L25:
 128:mp3.c         **** 	    buff[6] = 0;
 129:mp3.c         **** 	    lput_char_xy(7,2,buff);
 130:mp3.c         **** 	 }
 131:mp3.c         **** 	 if (new_play) {
 132:mp3.c         **** 	    if (f_kbps) time = (lenth / f_kbps) / 125;else time = 0;
 409              		.loc 1 132 6 is_stmt 1 view .LVU131
 410              		.loc 1 132 10 is_stmt 0 view .LVU132
 411 0124 3888     		ldrh	r0, [r7]
 412              		.loc 1 132 9 view .LVU133
 413 0126 0028     		cmp	r0, #0
 414 0128 55D1     		bne	.L23
 415              	.LVL45:
 416              	.L24:
 133:mp3.c         **** 	    if (time >= 3600) time = 3599;
 134:mp3.c         **** 	    dig3 = (time / 600);
 417              		.loc 1 134 6 is_stmt 1 view .LVU134
 135:mp3.c         **** 	    dig2 = ((time / 60) % 10);
 418              		.loc 1 135 6 view .LVU135
 136:mp3.c         **** 	    dig1 = ((time % 60) / 10);
 419              		.loc 1 136 6 view .LVU136
 420              		.loc 1 136 11 is_stmt 0 view .LVU137
 421 012a 3C22     		movs	r2, #60
 134:mp3.c         **** 	    dig2 = ((time / 60) % 10);
 422              		.loc 1 134 11 view .LVU138
 423 012c 4FF41673 		mov	r3, #600
 424              		.loc 1 136 11 view .LVU139
 425 0130 B0FBF2F1 		udiv	r1, r0, r2
 426 0134 02FB1102 		mls	r2, r2, r1, r0
 134:mp3.c         **** 	    dig2 = ((time / 60) % 10);
 427              		.loc 1 134 11 view .LVU140
 428 0138 B0FBF3F0 		udiv	r0, r0, r3
 429              	.LVL46:
 137:mp3.c         **** 	    dig0 = ((time % 60) % 10);	    	
 138:mp3.c         **** 	    buff[6] = dec2hex(dig3);
 430              		.loc 1 138 16 view .LVU141
 431 013c C0B2     		uxtb	r0, r0
 136:mp3.c         **** 	    dig0 = ((time % 60) % 10);	    	
 432              		.loc 1 136 11 view .LVU142
 433 013e 92B2     		uxth	r2, r2
 434              	.LVL47:
 137:mp3.c         **** 	    dig0 = ((time % 60) % 10);	    	
 435              		.loc 1 137 6 is_stmt 1 view .LVU143
 436              		.loc 1 138 6 view .LVU144
 437              		.loc 1 138 16 is_stmt 0 view .LVU145
 438 0140 FFF7FEFF 		bl	dec2hex
 439              	.LVL48:
 135:mp3.c         **** 	    dig1 = ((time % 60) / 10);
 440              		.loc 1 135 11 view .LVU146
 441 0144 4FF00A08 		mov	r8, #10
 442 0148 89B2     		uxth	r1, r1
 443              		.loc 1 138 16 view .LVU147
 444 014a 0546     		mov	r5, r0
 445              		.loc 1 138 14 view .LVU148
 446 014c 8DF80600 		strb	r0, [sp, #6]
 139:mp3.c         **** 	    buff[7] = dec2hex(dig2);
 447              		.loc 1 139 6 is_stmt 1 view .LVU149
 135:mp3.c         **** 	    dig1 = ((time % 60) / 10);
 448              		.loc 1 135 11 is_stmt 0 view .LVU150
 449 0150 B1FBF8F0 		udiv	r0, r1, r8
 450 0154 08FB1010 		mls	r0, r8, r0, r1
 451              		.loc 1 139 16 view .LVU151
 452 0158 C0B2     		uxtb	r0, r0
 453 015a FFF7FEFF 		bl	dec2hex
 454              	.LVL49:
 136:mp3.c         **** 	    dig0 = ((time % 60) % 10);	    	
 455              		.loc 1 136 11 view .LVU152
 456 015e B2FBF8F7 		udiv	r7, r2, r8
 140:mp3.c         **** 	    buff[8] = ':';
 457              		.loc 1 140 14 view .LVU153
 458 0162 3A23     		movs	r3, #58
 139:mp3.c         **** 	    buff[7] = dec2hex(dig2);
 459              		.loc 1 139 16 view .LVU154
 460 0164 0446     		mov	r4, r0
 139:mp3.c         **** 	    buff[7] = dec2hex(dig2);
 461              		.loc 1 139 14 view .LVU155
 462 0166 8DF80700 		strb	r0, [sp, #7]
 463              		.loc 1 140 6 is_stmt 1 view .LVU156
 141:mp3.c         **** 	    buff[9] = dec2hex(dig1);
 464              		.loc 1 141 16 is_stmt 0 view .LVU157
 465 016a F8B2     		uxtb	r0, r7
 140:mp3.c         **** 	    buff[8] = ':';
 466              		.loc 1 140 14 view .LVU158
 467 016c 8DF80830 		strb	r3, [sp, #8]
 468              		.loc 1 141 6 is_stmt 1 view .LVU159
 469              		.loc 1 141 16 is_stmt 0 view .LVU160
 470 0170 FFF7FEFF 		bl	dec2hex
 471              	.LVL50:
 472 0174 0146     		mov	r1, r0
 473              		.loc 1 141 14 view .LVU161
 474 0176 8DF80900 		strb	r0, [sp, #9]
 142:mp3.c         **** 	    buff[10] = dec2hex(dig0);
 475              		.loc 1 142 6 is_stmt 1 view .LVU162
 137:mp3.c         **** 	    buff[6] = dec2hex(dig3);
 476              		.loc 1 137 11 is_stmt 0 view .LVU163
 477 017a 08FB1720 		mls	r0, r8, r7, r2
 478              		.loc 1 142 17 view .LVU164
 479 017e C0B2     		uxtb	r0, r0
 480 0180 FFF7FEFF 		bl	dec2hex
 481              	.LVL51:
 143:mp3.c         **** 	    buff[11] = 0;
 482              		.loc 1 143 15 view .LVU165
 483 0184 0027     		movs	r7, #0
 144:mp3.c         **** 	    mp3.mp3time[6] = dec2hex(dig3);
 484              		.loc 1 144 21 view .LVU166
 485 0186 204B     		ldr	r3, .L33+24
 142:mp3.c         **** 	    buff[11] = 0;
 486              		.loc 1 142 15 view .LVU167
 487 0188 8DF80A00 		strb	r0, [sp, #10]
 143:mp3.c         **** 	    buff[11] = 0;
 488              		.loc 1 143 6 is_stmt 1 view .LVU168
 145:mp3.c         ****             mp3.mp3time[7] = dec2hex(dig2);
 146:mp3.c         ****             mp3.mp3time[9] = dec2hex(dig1);
 489              		.loc 1 146 28 is_stmt 0 view .LVU169
 490 018c 83F84A10 		strb	r1, [r3, #74]
 147:mp3.c         ****             mp3.mp3time[10] = dec2hex(dig0);
 491              		.loc 1 147 29 view .LVU170
 492 0190 83F84B00 		strb	r0, [r3, #75]
 148:mp3.c         ****             lput_char_xy(13,2,buff+6);
 493              		.loc 1 148 13 view .LVU171
 494 0194 0221     		movs	r1, #2
 495 0196 0D20     		movs	r0, #13
 496 0198 0DF10602 		add	r2, sp, #6
 497              	.LVL52:
 143:mp3.c         **** 	    mp3.mp3time[6] = dec2hex(dig3);
 498              		.loc 1 143 15 view .LVU172
 499 019c 8DF80B70 		strb	r7, [sp, #11]
 144:mp3.c         ****             mp3.mp3time[7] = dec2hex(dig2);
 500              		.loc 1 144 6 is_stmt 1 view .LVU173
 144:mp3.c         ****             mp3.mp3time[7] = dec2hex(dig2);
 501              		.loc 1 144 21 is_stmt 0 view .LVU174
 502 01a0 83F84750 		strb	r5, [r3, #71]
 145:mp3.c         ****             mp3.mp3time[9] = dec2hex(dig1);
 503              		.loc 1 145 13 is_stmt 1 view .LVU175
 145:mp3.c         ****             mp3.mp3time[9] = dec2hex(dig1);
 504              		.loc 1 145 28 is_stmt 0 view .LVU176
 505 01a4 83F84840 		strb	r4, [r3, #72]
 146:mp3.c         ****             mp3.mp3time[10] = dec2hex(dig0);
 506              		.loc 1 146 13 is_stmt 1 view .LVU177
 147:mp3.c         ****             lput_char_xy(13,2,buff+6);
 507              		.loc 1 147 13 view .LVU178
 508              		.loc 1 148 13 view .LVU179
 509 01a8 FFF7FEFF 		bl	lput_char_xy
 510              	.LVL53:
 149:mp3.c         ****             new_play = 0;
 511              		.loc 1 149 13 view .LVU180
 512              		.loc 1 149 22 is_stmt 0 view .LVU181
 513 01ac 3770     		strb	r7, [r6]
 514              	.LVL54:
 515              		.loc 1 149 22 view .LVU182
 516 01ae 0FE0     		b	.L12
 517              	.LVL55:
 518              	.L15:
 100:mp3.c         ****       } else {
 519              		.loc 1 100 19 is_stmt 1 view .LVU183
 100:mp3.c         ****       } else {
 520              		.loc 1 100 26 is_stmt 0 view .LVU184
 521 01b0 C5F80090 		str	r9, [r5]	@ float
 522 01b4 4EE7     		b	.L16
 523              	.L17:
 108:mp3.c         ****       }
 524              		.loc 1 108 10 is_stmt 1 view .LVU185
 108:mp3.c         ****       }
 525              		.loc 1 108 17 is_stmt 0 view .LVU186
 526 01b6 FFF7FEFF 		bl	get_decode_time
 527              	.LVL56:
 108:mp3.c         ****       }
 528              		.loc 1 108 17 view .LVU187
 529 01ba 5DE7     		b	.L18
 530              	.LVL57:
 531              	.L22:
 128:mp3.c         **** 	    lput_char_xy(7,2,buff);
 532              		.loc 1 128 6 is_stmt 1 view .LVU188
 129:mp3.c         **** 	 }
 533              		.loc 1 129 6 is_stmt 0 view .LVU189
 534 01bc 6A46     		mov	r2, sp
 535              	.LVL58:
 129:mp3.c         **** 	 }
 536              		.loc 1 129 6 view .LVU190
 537 01be 0221     		movs	r1, #2
 538 01c0 0720     		movs	r0, #7
 128:mp3.c         **** 	    lput_char_xy(7,2,buff);
 539              		.loc 1 128 14 view .LVU191
 540 01c2 8DF80630 		strb	r3, [sp, #6]
 129:mp3.c         **** 	 }
 541              		.loc 1 129 6 is_stmt 1 view .LVU192
 542 01c6 FFF7FEFF 		bl	lput_char_xy
 543              	.LVL59:
 131:mp3.c         **** 	    if (f_kbps) time = (lenth / f_kbps) / 125;else time = 0;
 544              		.loc 1 131 3 view .LVU193
 131:mp3.c         **** 	    if (f_kbps) time = (lenth / f_kbps) / 125;else time = 0;
 545              		.loc 1 131 6 is_stmt 0 view .LVU194
 546 01ca 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 547 01cc 002B     		cmp	r3, #0
 548 01ce A9D1     		bne	.L25
 549              	.LVL60:
 550              	.L12:
 131:mp3.c         **** 	    if (f_kbps) time = (lenth / f_kbps) / 125;else time = 0;
 551              		.loc 1 131 6 view .LVU195
 552              	.LBE106:
 553              	.LBE105:
 150:mp3.c         ****          }
 151:mp3.c         ****       }
 152:mp3.c         **** }
 554              		.loc 1 152 1 view .LVU196
 555 01d0 09B0     		add	sp, sp, #36
 556              		.cfi_remember_state
 557              		.cfi_def_cfa_offset 28
 558              		@ sp needed
 559 01d2 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 560              	.LVL61:
 561              	.L23:
 562              		.cfi_restore_state
 563              	.LBB108:
 564              	.LBB107:
 132:mp3.c         **** 	    if (time >= 3600) time = 3599;
 565              		.loc 1 132 18 is_stmt 1 view .LVU197
 133:mp3.c         **** 	    dig3 = (time / 600);
 566              		.loc 1 133 6 view .LVU198
 132:mp3.c         **** 	    if (time >= 3600) time = 3599;
 567              		.loc 1 132 32 is_stmt 0 view .LVU199
 568 01d6 B4FBF0F0 		udiv	r0, r4, r0
 569              	.LVL62:
 132:mp3.c         **** 	    if (time >= 3600) time = 3599;
 570              		.loc 1 132 42 view .LVU200
 571 01da 7D24     		movs	r4, #125
 572              	.LVL63:
 132:mp3.c         **** 	    if (time >= 3600) time = 3599;
 573              		.loc 1 132 42 view .LVU201
 574 01dc B0FBF4F0 		udiv	r0, r0, r4
 575 01e0 40F60F61 		movw	r1, #3599
 132:mp3.c         **** 	    if (time >= 3600) time = 3599;
 576              		.loc 1 132 42 view .LVU202
 577 01e4 80B2     		uxth	r0, r0
 578 01e6 8842     		cmp	r0, r1
 579 01e8 28BF     		it	cs
 580 01ea 0846     		movcs	r0, r1
 581 01ec 9DE7     		b	.L24
 582              	.L34:
 583 01ee 00BF     		.align	2
 584              	.L33:
 585 01f0 00000000 		.word	.LANCHOR0
 586 01f4 00000000 		.word	.LANCHOR1
 587 01f8 00000000 		.word	.LANCHOR2
 588 01fc 0000FA42 		.word	1123680256
 589 0200 00000000 		.word	new_play
 590 0204 00000000 		.word	.LC0
 591 0208 00000000 		.word	mp3
 592              	.LBE107:
 593              	.LBE108:
 594              		.cfi_endproc
 595              	.LFE34:
 597              		.section	.rodata.resume_music.str1.1,"aMS",%progbits,1
 598              	.LC1:
 599 0000 303A2F4D 		.ascii	"0:/Music/\000"
 599      75736963 
 599      2F00
 600              		.section	.text.resume_music,"ax",%progbits
 601              		.align	1
 602              		.global	resume_music
 603              		.syntax unified
 604              		.thumb
 605              		.thumb_func
 606              		.fpu softvfp
 608              	resume_music:
 609              	.LVL64:
 610              	.LFB36:
 153:mp3.c         **** 
 154:mp3.c         **** 
 155:mp3.c         **** void filtrate_music (void)
 156:mp3.c         **** {
 157:mp3.c         ****       BOOL flag;
 158:mp3.c         ****       unsigned char temp[69];
 159:mp3.c         ****       unsigned char temp1[35],a;
 160:mp3.c         ****       unsigned short i,j,k,l;
 161:mp3.c         ****       unsigned short m;
 162:mp3.c         ****       music_number = find_music();
 163:mp3.c         ****       for (i=1;i<=music_number;i++) {
 164:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 165:mp3.c         ****           if (i < 10) {
 166:mp3.c         ****              temp[0] = 0x30;
 167:mp3.c         ****              temp[1] = 0x30;
 168:mp3.c         ****              temp[2] = 0x30 + i;
 169:mp3.c         ****              temp[3] = 0x2e;
 170:mp3.c         ****           } else if (i < 100) {
 171:mp3.c         ****              temp[0] = 0x30;
 172:mp3.c         ****              temp[1] = 0x30 + i / 10;
 173:mp3.c         ****              temp[2] = 0x30 + i % 10;
 174:mp3.c         ****              temp[3] = 0x2e;
 175:mp3.c         ****           } else {
 176:mp3.c         ****              temp[0] = 0x30 + i / 100;
 177:mp3.c         ****              temp[1] = 0x30 + i / 10;
 178:mp3.c         ****              temp[2] = 0x30 + i % 10;
 179:mp3.c         ****              temp[3] = 0x2e;
 180:mp3.c         ****           }
 181:mp3.c         **** 	  strcpy((char *)&temp[4],(char *)head->filename);
 182:mp3.c         ****   	  strcpy((char *)head->filename,(char *)temp);
 183:mp3.c         **** 	  l = strlen(head->filename);
 184:mp3.c         **** 	  for (k=0;k<4;k++) head->filename[l - 4 + k] = 0;
 185:mp3.c         **** 	  if (i != music_number) head = head->next;
 186:mp3.c         ****       }
 187:mp3.c         ****       i = music_number;
 188:mp3.c         ****       while ((i--) && (head->back != NULL)) head = head->back;
 189:mp3.c         ****       i = music_number;
 190:mp3.c         ****       while (i--) {
 191:mp3.c         **** 	    m = strlen(head->filename);
 192:mp3.c         **** 	    for (k=0;k<35;k++) temp1[k] = 0;
 193:mp3.c         **** 	    if (m > 23) {
 194:mp3.c         **** 	       if (head->filename[22] < 0x80) {
 195:mp3.c         **** 	          strcpy((char *)temp1,(char *)&head->filename[23]);
 196:mp3.c         **** 	          head->filename[23] = 0x2e;
 197:mp3.c         **** 	          head->filename[24] = 0x2e;
 198:mp3.c         **** 	          head->filename[25] = 0x2e;
 199:mp3.c         **** 	          head->filename[26] = 0;
 200:mp3.c         **** 	          head->filename[27] = 1;
 201:mp3.c         **** 	          strcpy((char *)&head->filename[28],(char *)temp1);
 202:mp3.c         **** 	       } else {
 203:mp3.c         **** 	          a = 0;
 204:mp3.c         **** 	          while (1) {
 205:mp3.c         ****                         if (head->filename[a] < 0x80) a++;else a += 2;
 206:mp3.c         **** 	    	        if (a == 23) {
 207:mp3.c         **** 	    	           flag = 1;
 208:mp3.c         **** 	    	           break;
 209:mp3.c         **** 	    	        } else if (a == 24) {
 210:mp3.c         **** 	    	           flag = 0;
 211:mp3.c         **** 	    	           break;
 212:mp3.c         **** 	    	        }
 213:mp3.c         **** 	          }
 214:mp3.c         **** 	          if (flag == 1) {
 215:mp3.c         **** 	    	     strcpy((char *)temp1,(char *)&head->filename[23]);
 216:mp3.c         **** 	    	     head->filename[23] = 0x2e;
 217:mp3.c         **** 	    	     head->filename[24] = 0x2e;
 218:mp3.c         **** 	    	     head->filename[25] = 0x2e;
 219:mp3.c         **** 	    	     head->filename[26] = 0;
 220:mp3.c         **** 	    	     head->filename[27] = 1;
 221:mp3.c         **** 	    	     strcpy((char *)&head->filename[28],(char *)temp1);
 222:mp3.c         **** 	          } else {
 223:mp3.c         **** 	    	     strcpy((char *)temp1,(char *)&head->filename[22]);
 224:mp3.c         **** 	    	     head->filename[22] = 0x20;
 225:mp3.c         **** 	    	     head->filename[23] = 0x2e;
 226:mp3.c         **** 	    	     head->filename[24] = 0x2e;
 227:mp3.c         **** 	    	     head->filename[25] = 0x2e;
 228:mp3.c         **** 	    	     head->filename[26] = 0;
 229:mp3.c         **** 	    	     head->filename[27] = 0;
 230:mp3.c         **** 	    	     strcpy((char *)&head->filename[28],(char *)temp1);
 231:mp3.c         **** 	          }
 232:mp3.c         **** 	       }
 233:mp3.c         **** 	    }
 234:mp3.c         **** 	    if (i != 0) head = head->next;
 235:mp3.c         ****       }
 236:mp3.c         ****       i = music_number;
 237:mp3.c         ****       while ((i--) && (head->back != NULL)) head = head->back;
 238:mp3.c         **** }
 239:mp3.c         **** 
 240:mp3.c         **** 
 241:mp3.c         **** void resume_music (unsigned char *name)
 242:mp3.c         **** {
 611              		.loc 1 242 1 is_stmt 1 view -0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 120
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 243:mp3.c         ****       unsigned char a,temp[35] = {0};
 615              		.loc 1 243 7 view .LVU204
 242:mp3.c         ****       unsigned char a,temp[35] = {0};
 616              		.loc 1 242 1 is_stmt 0 view .LVU205
 617 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 618              		.cfi_def_cfa_offset 24
 619              		.cfi_offset 4, -24
 620              		.cfi_offset 5, -20
 621              		.cfi_offset 6, -16
 622              		.cfi_offset 7, -12
 623              		.cfi_offset 8, -8
 624              		.cfi_offset 14, -4
 625              		.loc 1 243 23 view .LVU206
 626 0004 0025     		movs	r5, #0
 242:mp3.c         ****       unsigned char a,temp[35] = {0};
 627              		.loc 1 242 1 view .LVU207
 628 0006 9EB0     		sub	sp, sp, #120
 629              		.cfi_def_cfa_offset 144
 630              		.loc 1 243 23 view .LVU208
 631 0008 1F22     		movs	r2, #31
 632 000a 2946     		mov	r1, r5
 242:mp3.c         ****       unsigned char a,temp[35] = {0};
 633              		.loc 1 242 1 view .LVU209
 634 000c 0446     		mov	r4, r0
 635              		.loc 1 243 23 view .LVU210
 636 000e 05A8     		add	r0, sp, #20
 637              	.LVL65:
 638              		.loc 1 243 23 view .LVU211
 639 0010 0495     		str	r5, [sp, #16]
 640 0012 FFF7FEFF 		bl	memset
 641              	.LVL66:
 244:mp3.c         ****       unsigned char temp1[65] = {0};
 642              		.loc 1 244 7 is_stmt 1 view .LVU212
 643              		.loc 1 244 21 is_stmt 0 view .LVU213
 644 0016 3D22     		movs	r2, #61
 645 0018 2946     		mov	r1, r5
 646 001a 0EA8     		add	r0, sp, #56
 647 001c 0D95     		str	r5, [sp, #52]
 648 001e FFF7FEFF 		bl	memset
 649              	.LVL67:
 245:mp3.c         ****       unsigned char record[] = {"0:/Music/"};
 650              		.loc 1 245 7 is_stmt 1 view .LVU214
 651              		.loc 1 245 21 is_stmt 0 view .LVU215
 652 0022 A04A     		ldr	r2, .L62
 653 0024 01AB     		add	r3, sp, #4
 654 0026 1068     		ldr	r0, [r2]	@ unaligned
 655 0028 5168     		ldr	r1, [r2, #4]	@ unaligned
 656 002a 1289     		ldrh	r2, [r2, #8]	@ unaligned
 657 002c 03C3     		stmia	r3!, {r0, r1}
 658 002e 1A80     		strh	r2, [r3]	@ unaligned
 246:mp3.c         ****       for (a=0;a<65;a++) temp1[a] = 0;
 659              		.loc 1 246 7 is_stmt 1 view .LVU216
 660              	.LVL68:
 661              		.loc 1 246 16 view .LVU217
 245:mp3.c         ****       unsigned char record[] = {"0:/Music/"};
 662              		.loc 1 245 21 is_stmt 0 view .LVU218
 663 0030 4122     		movs	r2, #65
 664 0032 0DAB     		add	r3, sp, #52
 665              	.LVL69:
 666              	.L36:
 667              		.loc 1 246 26 is_stmt 1 discriminator 3 view .LVU219
 668 0034 013A     		subs	r2, r2, #1
 669              		.loc 1 246 7 is_stmt 0 discriminator 3 view .LVU220
 670 0036 12F0FF02 		ands	r2, r2, #255
 671              		.loc 1 246 35 discriminator 3 view .LVU221
 672 003a 03F8015B 		strb	r5, [r3], #1
 673              	.LVL70:
 674              		.loc 1 246 21 is_stmt 1 discriminator 3 view .LVU222
 675              		.loc 1 246 16 discriminator 3 view .LVU223
 676              		.loc 1 246 7 is_stmt 0 discriminator 3 view .LVU224
 677 003e F9D1     		bne	.L36
 678 0040 04A9     		add	r1, sp, #16
 679              		.loc 1 246 7 view .LVU225
 680 0042 2323     		movs	r3, #35
 681              	.LVL71:
 682              		.loc 1 246 7 view .LVU226
 683 0044 0E46     		mov	r6, r1
 684              	.L37:
 685              	.LVL72:
 247:mp3.c         ****       for (a=0;a<35;a++) temp[a] = 0;
 686              		.loc 1 247 26 is_stmt 1 discriminator 3 view .LVU227
 687 0046 013B     		subs	r3, r3, #1
 688              		.loc 1 247 7 is_stmt 0 discriminator 3 view .LVU228
 689 0048 13F0FF03 		ands	r3, r3, #255
 690              		.loc 1 247 34 discriminator 3 view .LVU229
 691 004c 01F8012B 		strb	r2, [r1], #1
 692              	.LVL73:
 693              		.loc 1 247 21 is_stmt 1 discriminator 3 view .LVU230
 694              		.loc 1 247 16 discriminator 3 view .LVU231
 695              		.loc 1 247 7 is_stmt 0 discriminator 3 view .LVU232
 696 0050 F9D1     		bne	.L37
 697 0052 9549     		ldr	r1, .L62+4
 698              	.LVL74:
 699              		.loc 1 247 7 view .LVU233
 700 0054 4125     		movs	r5, #65
 701 0056 0A46     		mov	r2, r1
 702              	.L38:
 703              	.LVL75:
 248:mp3.c         ****       for (a=0;a<65;a++) mp3.mp3name[a] = 0;
 704              		.loc 1 248 26 is_stmt 1 discriminator 3 view .LVU234
 705 0058 013D     		subs	r5, r5, #1
 706              		.loc 1 248 7 is_stmt 0 discriminator 3 view .LVU235
 707 005a 15F0FF05 		ands	r5, r5, #255
 708              		.loc 1 248 41 discriminator 3 view .LVU236
 709 005e 01F8013B 		strb	r3, [r1], #1
 710              	.LVL76:
 711              		.loc 1 248 21 is_stmt 1 discriminator 3 view .LVU237
 712              		.loc 1 248 16 discriminator 3 view .LVU238
 713              		.loc 1 248 7 is_stmt 0 discriminator 3 view .LVU239
 714 0062 F9D1     		bne	.L38
 249:mp3.c         ****       mp3.mp3name[0] = name[0];
 715              		.loc 1 249 7 is_stmt 1 view .LVU240
 716              		.loc 1 249 28 is_stmt 0 view .LVU241
 717 0064 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 718              		.loc 1 249 22 view .LVU242
 719 0066 1370     		strb	r3, [r2]
 250:mp3.c         ****       mp3.mp3name[1] = name[1];
 720              		.loc 1 250 7 is_stmt 1 view .LVU243
 721              		.loc 1 250 22 is_stmt 0 view .LVU244
 722 0068 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 723 006a 5370     		strb	r3, [r2, #1]
 251:mp3.c         ****       mp3.mp3name[2] = name[2];
 724              		.loc 1 251 7 is_stmt 1 view .LVU245
 725              		.loc 1 251 22 is_stmt 0 view .LVU246
 726 006c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 727 006e 9370     		strb	r3, [r2, #2]
 252:mp3.c         ****       mp3.mp3name[3] = name[3];
 728              		.loc 1 252 7 is_stmt 1 view .LVU247
 729              		.loc 1 252 22 is_stmt 0 view .LVU248
 730 0070 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 731 0072 D370     		strb	r3, [r2, #3]
 253:mp3.c         ****       if (name[25] == 0x2e && name[26] == 0) {
 732              		.loc 1 253 7 is_stmt 1 view .LVU249
 733              		.loc 1 253 10 is_stmt 0 view .LVU250
 734 0074 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 735 0076 2E2B     		cmp	r3, #46
 736 0078 40F0D080 		bne	.L39
 737              		.loc 1 253 28 discriminator 1 view .LVU251
 738 007c A37E     		ldrb	r3, [r4, #26]	@ zero_extendqisi2
 739 007e 002B     		cmp	r3, #0
 740 0080 40F0CC80 		bne	.L39
 254:mp3.c         **** 	 if (name[27] == 1) {
 741              		.loc 1 254 3 is_stmt 1 view .LVU252
 742              		.loc 1 254 11 is_stmt 0 view .LVU253
 743 0084 E37E     		ldrb	r3, [r4, #27]	@ zero_extendqisi2
 744              		.loc 1 254 6 view .LVU254
 745 0086 012B     		cmp	r3, #1
 746 0088 71D1     		bne	.L40
 255:mp3.c         **** 	    strcpy((char *)temp,(char *)&name[28]);
 747              		.loc 1 255 6 is_stmt 1 view .LVU255
 748 008a 3046     		mov	r0, r6
 749 008c 04F11C01 		add	r1, r4, #28
 750              	.LVL77:
 751              		.loc 1 255 6 is_stmt 0 view .LVU256
 752 0090 FFF7FEFF 		bl	strcpy
 753              	.LVL78:
 256:mp3.c         **** 	    for (a=23;a<65;a++)	name[a] = 0;
 754              		.loc 1 256 6 is_stmt 1 view .LVU257
 755              		.loc 1 256 16 view .LVU258
 756 0094 04F14007 		add	r7, r4, #64
 757 0098 04F11603 		add	r3, r4, #22
 758              	.LVL79:
 759              	.L41:
 760              		.loc 1 256 26 discriminator 3 view .LVU259
 761              		.loc 1 256 34 is_stmt 0 discriminator 3 view .LVU260
 762 009c 03F8015F 		strb	r5, [r3, #1]!
 763              		.loc 1 256 21 is_stmt 1 discriminator 3 view .LVU261
 764              		.loc 1 256 16 discriminator 3 view .LVU262
 765              		.loc 1 256 6 is_stmt 0 discriminator 3 view .LVU263
 766 00a0 BB42     		cmp	r3, r7
 767 00a2 FBD1     		bne	.L41
 257:mp3.c         **** 	    strcpy((char *)&name[23],(char *)temp);
 768              		.loc 1 257 6 is_stmt 1 view .LVU264
 769 00a4 3146     		mov	r1, r6
 770 00a6 04F11700 		add	r0, r4, #23
 771 00aa FFF7FEFF 		bl	strcpy
 772              	.LVL80:
 258:mp3.c         **** 	    strcpy((char *)temp1,(char *)&name[4]);
 773              		.loc 1 258 6 view .LVU265
 774 00ae 211D     		adds	r1, r4, #4
 775 00b0 0DA8     		add	r0, sp, #52
 776 00b2 FFF7FEFF 		bl	strcpy
 777              	.LVL81:
 259:mp3.c         **** 	    a = strlen((char *)temp1);
 778              		.loc 1 259 6 view .LVU266
 779              		.loc 1 259 10 is_stmt 0 view .LVU267
 780 00b6 0DA8     		add	r0, sp, #52
 781 00b8 FFF7FEFF 		bl	strlen
 782              	.LVL82:
 260:mp3.c         **** 	    strcpy((char *)lrc,(char *)temp1);
 783              		.loc 1 260 6 view .LVU268
 784 00bc 7B4B     		ldr	r3, .L62+8
 259:mp3.c         **** 	    a = strlen((char *)temp1);
 785              		.loc 1 259 10 view .LVU269
 786 00be 0646     		mov	r6, r0
 259:mp3.c         **** 	    a = strlen((char *)temp1);
 787              		.loc 1 259 8 view .LVU270
 788 00c0 C5B2     		uxtb	r5, r0
 789              	.LVL83:
 790              		.loc 1 260 6 is_stmt 1 view .LVU271
 791 00c2 0DA9     		add	r1, sp, #52
 792 00c4 1846     		mov	r0, r3
 793 00c6 FFF7FEFF 		bl	strcpy
 794              	.LVL84:
 261:mp3.c         **** 	    temp1[a] = '.';
 795              		.loc 1 261 15 is_stmt 0 view .LVU272
 796 00ca 4FF02E0C 		mov	ip, #46
 262:mp3.c         **** 	    temp1[a + 1] = 'm';
 797              		.loc 1 262 19 view .LVU273
 798 00ce 6D21     		movs	r1, #109
 260:mp3.c         **** 	    strcpy((char *)lrc,(char *)temp1);
 799              		.loc 1 260 6 view .LVU274
 800 00d0 0346     		mov	r3, r0
 261:mp3.c         **** 	    temp1[a] = '.';
 801              		.loc 1 261 6 is_stmt 1 view .LVU275
 263:mp3.c         **** 	    temp1[a + 2] = 'p';
 802              		.loc 1 263 19 is_stmt 0 view .LVU276
 803 00d2 4FF0700E 		mov	lr, #112
 261:mp3.c         **** 	    temp1[a] = '.';
 804              		.loc 1 261 15 view .LVU277
 805 00d6 1EAA     		add	r2, sp, #120
 806 00d8 3244     		add	r2, r2, r6
 807 00da 02F844CC 		strb	ip, [r2, #-68]
 262:mp3.c         **** 	    temp1[a + 1] = 'm';
 808              		.loc 1 262 6 is_stmt 1 view .LVU278
 262:mp3.c         **** 	    temp1[a + 1] = 'm';
 809              		.loc 1 262 14 is_stmt 0 view .LVU279
 810 00de 701C     		adds	r0, r6, #1
 262:mp3.c         **** 	    temp1[a + 1] = 'm';
 811              		.loc 1 262 19 view .LVU280
 812 00e0 1EAA     		add	r2, sp, #120
 813 00e2 0244     		add	r2, r2, r0
 814 00e4 02F8441C 		strb	r1, [r2, #-68]
 815              		.loc 1 263 6 is_stmt 1 view .LVU281
 816              		.loc 1 263 14 is_stmt 0 view .LVU282
 817 00e8 B11C     		adds	r1, r6, #2
 818              		.loc 1 263 19 view .LVU283
 819 00ea 1EAA     		add	r2, sp, #120
 820 00ec 0A44     		add	r2, r2, r1
 264:mp3.c         **** 	    temp1[a + 3] = '3';
 265:mp3.c         **** 	    lrc[a] = '.';
 821              		.loc 1 265 13 view .LVU284
 822 00ee 03F806C0 		strb	ip, [r3, r6]
 263:mp3.c         **** 	    temp1[a + 2] = 'p';
 823              		.loc 1 263 19 view .LVU285
 824 00f2 02F844EC 		strb	lr, [r2, #-68]
 264:mp3.c         **** 	    temp1[a + 3] = '3';
 825              		.loc 1 264 6 is_stmt 1 view .LVU286
 264:mp3.c         **** 	    temp1[a + 3] = '3';
 826              		.loc 1 264 14 is_stmt 0 view .LVU287
 827 00f6 F21C     		adds	r2, r6, #3
 266:mp3.c         **** 	    lrc[a + 1] = 'l';
 828              		.loc 1 266 17 view .LVU288
 829 00f8 6C26     		movs	r6, #108
 830 00fa 1E54     		strb	r6, [r3, r0]
 267:mp3.c         **** 	    lrc[a + 2] = 'r';
 831              		.loc 1 267 17 view .LVU289
 832 00fc 7220     		movs	r0, #114
 833 00fe 5854     		strb	r0, [r3, r1]
 268:mp3.c         **** 	    lrc[a + 3] = 'c';
 834              		.loc 1 268 17 view .LVU290
 835 0100 6321     		movs	r1, #99
 264:mp3.c         **** 	    lrc[a] = '.';
 836              		.loc 1 264 19 view .LVU291
 837 0102 4FF03308 		mov	r8, #51
 838              		.loc 1 268 17 view .LVU292
 839 0106 9954     		strb	r1, [r3, r2]
 269:mp3.c         **** 	    a = a + 4;
 270:mp3.c         **** 	    while (a < 55) temp1[a++] = 0;
 840              		.loc 1 270 32 view .LVU293
 841 0108 0021     		movs	r1, #0
 264:mp3.c         **** 	    lrc[a] = '.';
 842              		.loc 1 264 19 view .LVU294
 843 010a 0DF1780E 		add	lr, sp, #120
 844 010e 9644     		add	lr, lr, r2
 269:mp3.c         **** 	    a = a + 4;
 845              		.loc 1 269 8 view .LVU295
 846 0110 2B1D     		adds	r3, r5, #4
 264:mp3.c         **** 	    lrc[a] = '.';
 847              		.loc 1 264 19 view .LVU296
 848 0112 0EF8448C 		strb	r8, [lr, #-68]
 265:mp3.c         **** 	    lrc[a + 1] = 'l';
 849              		.loc 1 265 6 is_stmt 1 view .LVU297
 266:mp3.c         **** 	    lrc[a + 2] = 'r';
 850              		.loc 1 266 6 view .LVU298
 267:mp3.c         **** 	    lrc[a + 3] = 'c';
 851              		.loc 1 267 6 view .LVU299
 268:mp3.c         **** 	    a = a + 4;
 852              		.loc 1 268 6 view .LVU300
 269:mp3.c         **** 	    while (a < 55) temp1[a++] = 0;
 853              		.loc 1 269 6 view .LVU301
 854              	.LVL85:
 855              		.loc 1 270 6 view .LVU302
 856 0116 DBB2     		uxtb	r3, r3
 857              	.LVL86:
 858              	.L42:
 859              		.loc 1 270 12 discriminator 1 view .LVU303
 860 0118 DAB2     		uxtb	r2, r3
 861 011a 362A     		cmp	r2, #54
 862 011c 23D9     		bls	.L43
 271:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 863              		.loc 1 271 33 is_stmt 0 view .LVU304
 864 011e 0022     		movs	r2, #0
 865 0120 631E     		subs	r3, r4, #1
 866              	.LVL87:
 867              	.L44:
 868              		.loc 1 271 25 is_stmt 1 discriminator 3 view .LVU305
 869              		.loc 1 271 33 is_stmt 0 discriminator 3 view .LVU306
 870 0122 03F8012F 		strb	r2, [r3, #1]!
 871              		.loc 1 271 20 is_stmt 1 discriminator 3 view .LVU307
 872              		.loc 1 271 15 discriminator 3 view .LVU308
 873              		.loc 1 271 6 is_stmt 0 discriminator 3 view .LVU309
 874 0126 BB42     		cmp	r3, r7
 875 0128 FBD1     		bne	.L44
 876              	.L50:
 272:mp3.c         **** 	    strcpy((char *)name,(char *)record);
 877              		.loc 1 272 6 is_stmt 1 view .LVU310
 878 012a 01A9     		add	r1, sp, #4
 879 012c 2046     		mov	r0, r4
 880 012e FFF7FEFF 		bl	strcpy
 881              	.LVL88:
 273:mp3.c         **** 	    strcpy((char *)&name[9],(char *)temp1);
 882              		.loc 1 273 6 view .LVU311
 883 0132 0DA9     		add	r1, sp, #52
 884 0134 04F10900 		add	r0, r4, #9
 885 0138 FFF7FEFF 		bl	strcpy
 886              	.LVL89:
 274:mp3.c         **** 	    strcpy((char *)&mp3.mp3name[4],(char *)temp1);
 887              		.loc 1 274 6 view .LVU312
 888 013c 5C48     		ldr	r0, .L62+12
 889 013e 0DA9     		add	r1, sp, #52
 890 0140 FFF7FEFF 		bl	strcpy
 891              	.LVL90:
 892              	.L45:
 275:mp3.c         **** 	 } else if (name[27] == 0) {
 276:mp3.c         **** 	    strcpy((char *)temp,(char *)&name[28]);
 277:mp3.c         **** 	    for (a=22;a<65;a++) name[a] = 0;
 278:mp3.c         **** 	    strcpy((char *)&name[22],(char *)temp);
 279:mp3.c         **** 	    strcpy((char *)temp1,(char *)&name[4]);
 280:mp3.c         **** 	    a = strlen((char *)temp1);
 281:mp3.c         **** 	    strcpy((char *)lrc,(char *)temp1);
 282:mp3.c         **** 	    temp1[a] = '.';
 283:mp3.c         **** 	    temp1[a + 1] = 'm';
 284:mp3.c         **** 	    temp1[a + 2] = 'p';
 285:mp3.c         **** 	    temp1[a + 3] = '3';
 286:mp3.c         **** 	    lrc[a] = '.';
 287:mp3.c         **** 	    lrc[a + 1] = 'l';
 288:mp3.c         **** 	    lrc[a + 2] = 'r';
 289:mp3.c         **** 	    lrc[a + 3] = 'c';
 290:mp3.c         **** 	    a = a + 4;
 291:mp3.c         **** 	    while (a < 55) temp1[a++] = 0;
 292:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 293:mp3.c         **** 	    strcpy((char *)name,(char *)record);
 294:mp3.c         **** 	    strcpy((char *)&name[9],(char *)temp1);
 295:mp3.c         **** 	    strcpy((char *)&mp3.mp3name[4],(char *)temp1);
 296:mp3.c         **** 	 }
 297:mp3.c         ****       } else {
 298:mp3.c         **** 	 strcpy((char *)temp1,(char *)&name[4]);
 299:mp3.c         **** 	 a = strlen((char *)temp1);
 300:mp3.c         ****          strcpy((char *)lrc,(char *)temp1);
 301:mp3.c         **** 	 temp1[a] = '.';
 302:mp3.c         **** 	 temp1[a + 1] = 'm';
 303:mp3.c         **** 	 temp1[a + 2] = 'p';
 304:mp3.c         **** 	 temp1[a + 3] = '3';
 305:mp3.c         **** 	 lrc[a] = '.';
 306:mp3.c         **** 	 lrc[a + 1] = 'l';
 307:mp3.c         **** 	 lrc[a + 2] = 'r';
 308:mp3.c         **** 	 lrc[a + 3] = 'c';
 309:mp3.c         **** 	 a = a + 4;
 310:mp3.c         ****          while (a < 55) temp1[a++] = 0;
 311:mp3.c         **** 	 for (a=0;a<65;a++) name[a] = 0;
 312:mp3.c         **** 	 strcpy((char *)name,(char *)record);
 313:mp3.c         **** 	 strcpy((char *)&name[9],(char *)temp1);
 314:mp3.c         **** 	 strcpy((char *)&mp3.mp3name[4],(char *)temp1);
 315:mp3.c         ****       }
 316:mp3.c         ****       a = strlen((char *)mp3.mp3name);
 893              		.loc 1 316 7 view .LVU313
 894              		.loc 1 316 11 is_stmt 0 view .LVU314
 895 0144 584C     		ldr	r4, .L62+4
 896              	.LVL91:
 897              		.loc 1 316 11 view .LVU315
 898 0146 2046     		mov	r0, r4
 899 0148 FFF7FEFF 		bl	strlen
 900              	.LVL92:
 317:mp3.c         ****       mp3.mp3name[a - 1] = 0;
 901              		.loc 1 317 7 is_stmt 1 view .LVU316
 902              		.loc 1 317 26 is_stmt 0 view .LVU317
 903 014c 0023     		movs	r3, #0
 904 014e 2044     		add	r0, r0, r4
 905              	.LVL93:
 906              		.loc 1 317 26 view .LVU318
 907 0150 00F8013C 		strb	r3, [r0, #-1]
 318:mp3.c         ****       mp3.mp3name[a - 2] = 0;
 908              		.loc 1 318 7 is_stmt 1 view .LVU319
 909              		.loc 1 318 26 is_stmt 0 view .LVU320
 910 0154 00F8023C 		strb	r3, [r0, #-2]
 319:mp3.c         ****       mp3.mp3name[a - 3] = 0;
 911              		.loc 1 319 7 is_stmt 1 view .LVU321
 912              		.loc 1 319 26 is_stmt 0 view .LVU322
 913 0158 00F8033C 		strb	r3, [r0, #-3]
 320:mp3.c         ****       mp3.mp3name[a - 4] = 0;
 914              		.loc 1 320 7 is_stmt 1 view .LVU323
 915              		.loc 1 320 26 is_stmt 0 view .LVU324
 916 015c 00F8043C 		strb	r3, [r0, #-4]
 321:mp3.c         **** }
 917              		.loc 1 321 1 view .LVU325
 918 0160 1EB0     		add	sp, sp, #120
 919              		.cfi_remember_state
 920              		.cfi_def_cfa_offset 24
 921              		@ sp needed
 922 0162 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 923              	.LVL94:
 924              	.L43:
 925              		.cfi_restore_state
 270:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 926              		.loc 1 270 21 is_stmt 1 discriminator 2 view .LVU326
 270:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 927              		.loc 1 270 32 is_stmt 0 discriminator 2 view .LVU327
 928 0166 0DAA     		add	r2, sp, #52
 929 0168 D154     		strb	r1, [r2, r3]
 930 016a 0133     		adds	r3, r3, #1
 931              	.LVL95:
 270:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 932              		.loc 1 270 32 discriminator 2 view .LVU328
 933 016c D4E7     		b	.L42
 934              	.LVL96:
 935              	.L40:
 275:mp3.c         **** 	    strcpy((char *)temp,(char *)&name[28]);
 936              		.loc 1 275 10 is_stmt 1 view .LVU329
 275:mp3.c         **** 	    strcpy((char *)temp,(char *)&name[28]);
 937              		.loc 1 275 13 is_stmt 0 view .LVU330
 938 016e 002B     		cmp	r3, #0
 939 0170 E8D1     		bne	.L45
 276:mp3.c         **** 	    for (a=22;a<65;a++) name[a] = 0;
 940              		.loc 1 276 6 is_stmt 1 view .LVU331
 941 0172 3046     		mov	r0, r6
 942 0174 04F11C01 		add	r1, r4, #28
 943              	.LVL97:
 276:mp3.c         **** 	    for (a=22;a<65;a++) name[a] = 0;
 944              		.loc 1 276 6 is_stmt 0 view .LVU332
 945 0178 FFF7FEFF 		bl	strcpy
 946              	.LVL98:
 277:mp3.c         **** 	    strcpy((char *)&name[22],(char *)temp);
 947              		.loc 1 277 6 is_stmt 1 view .LVU333
 277:mp3.c         **** 	    strcpy((char *)&name[22],(char *)temp);
 948              		.loc 1 277 16 view .LVU334
 949 017c 04F14007 		add	r7, r4, #64
 950 0180 04F11503 		add	r3, r4, #21
 951              	.LVL99:
 952              	.L46:
 277:mp3.c         **** 	    strcpy((char *)&name[22],(char *)temp);
 953              		.loc 1 277 26 discriminator 3 view .LVU335
 277:mp3.c         **** 	    strcpy((char *)&name[22],(char *)temp);
 954              		.loc 1 277 34 is_stmt 0 discriminator 3 view .LVU336
 955 0184 03F8015F 		strb	r5, [r3, #1]!
 277:mp3.c         **** 	    strcpy((char *)&name[22],(char *)temp);
 956              		.loc 1 277 21 is_stmt 1 discriminator 3 view .LVU337
 277:mp3.c         **** 	    strcpy((char *)&name[22],(char *)temp);
 957              		.loc 1 277 16 discriminator 3 view .LVU338
 277:mp3.c         **** 	    strcpy((char *)&name[22],(char *)temp);
 958              		.loc 1 277 6 is_stmt 0 discriminator 3 view .LVU339
 959 0188 BB42     		cmp	r3, r7
 960 018a FBD1     		bne	.L46
 278:mp3.c         **** 	    strcpy((char *)temp1,(char *)&name[4]);
 961              		.loc 1 278 6 is_stmt 1 view .LVU340
 962 018c 3146     		mov	r1, r6
 963 018e 04F11600 		add	r0, r4, #22
 964 0192 FFF7FEFF 		bl	strcpy
 965              	.LVL100:
 279:mp3.c         **** 	    a = strlen((char *)temp1);
 966              		.loc 1 279 6 view .LVU341
 967 0196 211D     		adds	r1, r4, #4
 968 0198 0DA8     		add	r0, sp, #52
 969 019a FFF7FEFF 		bl	strcpy
 970              	.LVL101:
 280:mp3.c         **** 	    strcpy((char *)lrc,(char *)temp1);
 971              		.loc 1 280 6 view .LVU342
 280:mp3.c         **** 	    strcpy((char *)lrc,(char *)temp1);
 972              		.loc 1 280 10 is_stmt 0 view .LVU343
 973 019e 0DA8     		add	r0, sp, #52
 974 01a0 FFF7FEFF 		bl	strlen
 975              	.LVL102:
 281:mp3.c         **** 	    temp1[a] = '.';
 976              		.loc 1 281 6 view .LVU344
 977 01a4 414B     		ldr	r3, .L62+8
 280:mp3.c         **** 	    strcpy((char *)lrc,(char *)temp1);
 978              		.loc 1 280 10 view .LVU345
 979 01a6 0646     		mov	r6, r0
 280:mp3.c         **** 	    strcpy((char *)lrc,(char *)temp1);
 980              		.loc 1 280 8 view .LVU346
 981 01a8 C5B2     		uxtb	r5, r0
 982              	.LVL103:
 281:mp3.c         **** 	    temp1[a] = '.';
 983              		.loc 1 281 6 is_stmt 1 view .LVU347
 984 01aa 0DA9     		add	r1, sp, #52
 985 01ac 1846     		mov	r0, r3
 986 01ae FFF7FEFF 		bl	strcpy
 987              	.LVL104:
 282:mp3.c         **** 	    temp1[a + 1] = 'm';
 988              		.loc 1 282 15 is_stmt 0 view .LVU348
 989 01b2 4FF02E0C 		mov	ip, #46
 283:mp3.c         **** 	    temp1[a + 2] = 'p';
 990              		.loc 1 283 19 view .LVU349
 991 01b6 6D21     		movs	r1, #109
 281:mp3.c         **** 	    temp1[a] = '.';
 992              		.loc 1 281 6 view .LVU350
 993 01b8 0346     		mov	r3, r0
 282:mp3.c         **** 	    temp1[a + 1] = 'm';
 994              		.loc 1 282 6 is_stmt 1 view .LVU351
 284:mp3.c         **** 	    temp1[a + 3] = '3';
 995              		.loc 1 284 19 is_stmt 0 view .LVU352
 996 01ba 4FF0700E 		mov	lr, #112
 282:mp3.c         **** 	    temp1[a + 1] = 'm';
 997              		.loc 1 282 15 view .LVU353
 998 01be 1EAA     		add	r2, sp, #120
 999 01c0 3244     		add	r2, r2, r6
 1000 01c2 02F844CC 		strb	ip, [r2, #-68]
 283:mp3.c         **** 	    temp1[a + 2] = 'p';
 1001              		.loc 1 283 6 is_stmt 1 view .LVU354
 283:mp3.c         **** 	    temp1[a + 2] = 'p';
 1002              		.loc 1 283 14 is_stmt 0 view .LVU355
 1003 01c6 701C     		adds	r0, r6, #1
 283:mp3.c         **** 	    temp1[a + 2] = 'p';
 1004              		.loc 1 283 19 view .LVU356
 1005 01c8 1EAA     		add	r2, sp, #120
 1006 01ca 0244     		add	r2, r2, r0
 1007 01cc 02F8441C 		strb	r1, [r2, #-68]
 284:mp3.c         **** 	    temp1[a + 3] = '3';
 1008              		.loc 1 284 6 is_stmt 1 view .LVU357
 284:mp3.c         **** 	    temp1[a + 3] = '3';
 1009              		.loc 1 284 14 is_stmt 0 view .LVU358
 1010 01d0 B11C     		adds	r1, r6, #2
 284:mp3.c         **** 	    temp1[a + 3] = '3';
 1011              		.loc 1 284 19 view .LVU359
 1012 01d2 1EAA     		add	r2, sp, #120
 1013 01d4 0A44     		add	r2, r2, r1
 286:mp3.c         **** 	    lrc[a + 1] = 'l';
 1014              		.loc 1 286 13 view .LVU360
 1015 01d6 03F806C0 		strb	ip, [r3, r6]
 284:mp3.c         **** 	    temp1[a + 3] = '3';
 1016              		.loc 1 284 19 view .LVU361
 1017 01da 02F844EC 		strb	lr, [r2, #-68]
 285:mp3.c         **** 	    lrc[a] = '.';
 1018              		.loc 1 285 6 is_stmt 1 view .LVU362
 285:mp3.c         **** 	    lrc[a] = '.';
 1019              		.loc 1 285 14 is_stmt 0 view .LVU363
 1020 01de F21C     		adds	r2, r6, #3
 287:mp3.c         **** 	    lrc[a + 2] = 'r';
 1021              		.loc 1 287 17 view .LVU364
 1022 01e0 6C26     		movs	r6, #108
 1023 01e2 1E54     		strb	r6, [r3, r0]
 288:mp3.c         **** 	    lrc[a + 3] = 'c';
 1024              		.loc 1 288 17 view .LVU365
 1025 01e4 7220     		movs	r0, #114
 1026 01e6 5854     		strb	r0, [r3, r1]
 289:mp3.c         **** 	    a = a + 4;
 1027              		.loc 1 289 17 view .LVU366
 1028 01e8 6321     		movs	r1, #99
 285:mp3.c         **** 	    lrc[a] = '.';
 1029              		.loc 1 285 19 view .LVU367
 1030 01ea 4FF03308 		mov	r8, #51
 289:mp3.c         **** 	    a = a + 4;
 1031              		.loc 1 289 17 view .LVU368
 1032 01ee 9954     		strb	r1, [r3, r2]
 291:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 1033              		.loc 1 291 32 view .LVU369
 1034 01f0 0021     		movs	r1, #0
 285:mp3.c         **** 	    lrc[a] = '.';
 1035              		.loc 1 285 19 view .LVU370
 1036 01f2 0DF1780E 		add	lr, sp, #120
 1037 01f6 9644     		add	lr, lr, r2
 290:mp3.c         **** 	    while (a < 55) temp1[a++] = 0;
 1038              		.loc 1 290 8 view .LVU371
 1039 01f8 2B1D     		adds	r3, r5, #4
 285:mp3.c         **** 	    lrc[a] = '.';
 1040              		.loc 1 285 19 view .LVU372
 1041 01fa 0EF8448C 		strb	r8, [lr, #-68]
 286:mp3.c         **** 	    lrc[a + 1] = 'l';
 1042              		.loc 1 286 6 is_stmt 1 view .LVU373
 287:mp3.c         **** 	    lrc[a + 2] = 'r';
 1043              		.loc 1 287 6 view .LVU374
 288:mp3.c         **** 	    lrc[a + 3] = 'c';
 1044              		.loc 1 288 6 view .LVU375
 289:mp3.c         **** 	    a = a + 4;
 1045              		.loc 1 289 6 view .LVU376
 290:mp3.c         **** 	    while (a < 55) temp1[a++] = 0;
 1046              		.loc 1 290 6 view .LVU377
 1047              	.LVL105:
 291:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 1048              		.loc 1 291 6 view .LVU378
 1049 01fe DBB2     		uxtb	r3, r3
 1050              	.LVL106:
 1051              	.L47:
 291:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 1052              		.loc 1 291 12 discriminator 1 view .LVU379
 1053 0200 DAB2     		uxtb	r2, r3
 1054 0202 362A     		cmp	r2, #54
 1055 0204 06D9     		bls	.L48
 292:mp3.c         **** 	    strcpy((char *)name,(char *)record);
 1056              		.loc 1 292 33 is_stmt 0 view .LVU380
 1057 0206 0022     		movs	r2, #0
 1058 0208 631E     		subs	r3, r4, #1
 1059              	.LVL107:
 1060              	.L49:
 292:mp3.c         **** 	    strcpy((char *)name,(char *)record);
 1061              		.loc 1 292 25 is_stmt 1 discriminator 3 view .LVU381
 292:mp3.c         **** 	    strcpy((char *)name,(char *)record);
 1062              		.loc 1 292 33 is_stmt 0 discriminator 3 view .LVU382
 1063 020a 03F8012F 		strb	r2, [r3, #1]!
 292:mp3.c         **** 	    strcpy((char *)name,(char *)record);
 1064              		.loc 1 292 20 is_stmt 1 discriminator 3 view .LVU383
 292:mp3.c         **** 	    strcpy((char *)name,(char *)record);
 1065              		.loc 1 292 15 discriminator 3 view .LVU384
 292:mp3.c         **** 	    strcpy((char *)name,(char *)record);
 1066              		.loc 1 292 6 is_stmt 0 discriminator 3 view .LVU385
 1067 020e BB42     		cmp	r3, r7
 1068 0210 FBD1     		bne	.L49
 1069 0212 8AE7     		b	.L50
 1070              	.LVL108:
 1071              	.L48:
 291:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 1072              		.loc 1 291 21 is_stmt 1 discriminator 2 view .LVU386
 291:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 1073              		.loc 1 291 32 is_stmt 0 discriminator 2 view .LVU387
 1074 0214 0DAA     		add	r2, sp, #52
 1075 0216 D154     		strb	r1, [r2, r3]
 1076 0218 0133     		adds	r3, r3, #1
 1077              	.LVL109:
 291:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 1078              		.loc 1 291 32 discriminator 2 view .LVU388
 1079 021a F1E7     		b	.L47
 1080              	.LVL110:
 1081              	.L39:
 298:mp3.c         **** 	 a = strlen((char *)temp1);
 1082              		.loc 1 298 3 is_stmt 1 view .LVU389
 1083 021c 211D     		adds	r1, r4, #4
 1084              	.LVL111:
 298:mp3.c         **** 	 a = strlen((char *)temp1);
 1085              		.loc 1 298 3 is_stmt 0 view .LVU390
 1086 021e 0DA8     		add	r0, sp, #52
 1087 0220 FFF7FEFF 		bl	strcpy
 1088              	.LVL112:
 299:mp3.c         ****          strcpy((char *)lrc,(char *)temp1);
 1089              		.loc 1 299 3 is_stmt 1 view .LVU391
 299:mp3.c         ****          strcpy((char *)lrc,(char *)temp1);
 1090              		.loc 1 299 7 is_stmt 0 view .LVU392
 1091 0224 0DA8     		add	r0, sp, #52
 1092 0226 FFF7FEFF 		bl	strlen
 1093              	.LVL113:
 300:mp3.c         **** 	 temp1[a] = '.';
 1094              		.loc 1 300 10 view .LVU393
 1095 022a 204B     		ldr	r3, .L62+8
 299:mp3.c         ****          strcpy((char *)lrc,(char *)temp1);
 1096              		.loc 1 299 7 view .LVU394
 1097 022c 0646     		mov	r6, r0
 299:mp3.c         ****          strcpy((char *)lrc,(char *)temp1);
 1098              		.loc 1 299 5 view .LVU395
 1099 022e C5B2     		uxtb	r5, r0
 1100              	.LVL114:
 300:mp3.c         **** 	 temp1[a] = '.';
 1101              		.loc 1 300 10 is_stmt 1 view .LVU396
 1102 0230 0DA9     		add	r1, sp, #52
 1103 0232 1846     		mov	r0, r3
 1104 0234 FFF7FEFF 		bl	strcpy
 1105              	.LVL115:
 301:mp3.c         **** 	 temp1[a + 1] = 'm';
 1106              		.loc 1 301 12 is_stmt 0 view .LVU397
 1107 0238 2E27     		movs	r7, #46
 302:mp3.c         **** 	 temp1[a + 2] = 'p';
 1108              		.loc 1 302 16 view .LVU398
 1109 023a 6D21     		movs	r1, #109
 300:mp3.c         **** 	 temp1[a] = '.';
 1110              		.loc 1 300 10 view .LVU399
 1111 023c 0346     		mov	r3, r0
 301:mp3.c         **** 	 temp1[a + 1] = 'm';
 1112              		.loc 1 301 3 is_stmt 1 view .LVU400
 303:mp3.c         **** 	 temp1[a + 3] = '3';
 1113              		.loc 1 303 16 is_stmt 0 view .LVU401
 1114 023e 4FF0700C 		mov	ip, #112
 301:mp3.c         **** 	 temp1[a + 1] = 'm';
 1115              		.loc 1 301 12 view .LVU402
 1116 0242 1EAA     		add	r2, sp, #120
 1117 0244 3244     		add	r2, r2, r6
 1118 0246 02F8447C 		strb	r7, [r2, #-68]
 302:mp3.c         **** 	 temp1[a + 2] = 'p';
 1119              		.loc 1 302 3 is_stmt 1 view .LVU403
 302:mp3.c         **** 	 temp1[a + 2] = 'p';
 1120              		.loc 1 302 11 is_stmt 0 view .LVU404
 1121 024a 701C     		adds	r0, r6, #1
 302:mp3.c         **** 	 temp1[a + 2] = 'p';
 1122              		.loc 1 302 16 view .LVU405
 1123 024c 1EAA     		add	r2, sp, #120
 1124 024e 0244     		add	r2, r2, r0
 1125 0250 02F8441C 		strb	r1, [r2, #-68]
 303:mp3.c         **** 	 temp1[a + 3] = '3';
 1126              		.loc 1 303 3 is_stmt 1 view .LVU406
 303:mp3.c         **** 	 temp1[a + 3] = '3';
 1127              		.loc 1 303 11 is_stmt 0 view .LVU407
 1128 0254 B11C     		adds	r1, r6, #2
 303:mp3.c         **** 	 temp1[a + 3] = '3';
 1129              		.loc 1 303 16 view .LVU408
 1130 0256 1EAA     		add	r2, sp, #120
 1131 0258 0A44     		add	r2, r2, r1
 305:mp3.c         **** 	 lrc[a + 1] = 'l';
 1132              		.loc 1 305 10 view .LVU409
 1133 025a 9F55     		strb	r7, [r3, r6]
 303:mp3.c         **** 	 temp1[a + 3] = '3';
 1134              		.loc 1 303 16 view .LVU410
 1135 025c 02F844CC 		strb	ip, [r2, #-68]
 304:mp3.c         **** 	 lrc[a] = '.';
 1136              		.loc 1 304 3 is_stmt 1 view .LVU411
 304:mp3.c         **** 	 lrc[a] = '.';
 1137              		.loc 1 304 11 is_stmt 0 view .LVU412
 1138 0260 F21C     		adds	r2, r6, #3
 306:mp3.c         **** 	 lrc[a + 2] = 'r';
 1139              		.loc 1 306 14 view .LVU413
 1140 0262 6C26     		movs	r6, #108
 1141 0264 1E54     		strb	r6, [r3, r0]
 307:mp3.c         **** 	 lrc[a + 3] = 'c';
 1142              		.loc 1 307 14 view .LVU414
 1143 0266 7220     		movs	r0, #114
 1144 0268 5854     		strb	r0, [r3, r1]
 308:mp3.c         **** 	 a = a + 4;
 1145              		.loc 1 308 14 view .LVU415
 1146 026a 6321     		movs	r1, #99
 304:mp3.c         **** 	 lrc[a] = '.';
 1147              		.loc 1 304 16 view .LVU416
 1148 026c 4FF0330E 		mov	lr, #51
 308:mp3.c         **** 	 a = a + 4;
 1149              		.loc 1 308 14 view .LVU417
 1150 0270 9954     		strb	r1, [r3, r2]
 310:mp3.c         **** 	 for (a=0;a<65;a++) name[a] = 0;
 1151              		.loc 1 310 36 view .LVU418
 1152 0272 0021     		movs	r1, #0
 304:mp3.c         **** 	 lrc[a] = '.';
 1153              		.loc 1 304 16 view .LVU419
 1154 0274 0DF1780C 		add	ip, sp, #120
 1155 0278 9444     		add	ip, ip, r2
 309:mp3.c         ****          while (a < 55) temp1[a++] = 0;
 1156              		.loc 1 309 5 view .LVU420
 1157 027a 2B1D     		adds	r3, r5, #4
 304:mp3.c         **** 	 lrc[a] = '.';
 1158              		.loc 1 304 16 view .LVU421
 1159 027c 0CF844EC 		strb	lr, [ip, #-68]
 305:mp3.c         **** 	 lrc[a + 1] = 'l';
 1160              		.loc 1 305 3 is_stmt 1 view .LVU422
 306:mp3.c         **** 	 lrc[a + 2] = 'r';
 1161              		.loc 1 306 3 view .LVU423
 307:mp3.c         **** 	 lrc[a + 3] = 'c';
 1162              		.loc 1 307 3 view .LVU424
 308:mp3.c         **** 	 a = a + 4;
 1163              		.loc 1 308 3 view .LVU425
 309:mp3.c         ****          while (a < 55) temp1[a++] = 0;
 1164              		.loc 1 309 3 view .LVU426
 1165              	.LVL116:
 310:mp3.c         **** 	 for (a=0;a<65;a++) name[a] = 0;
 1166              		.loc 1 310 10 view .LVU427
 1167 0280 DBB2     		uxtb	r3, r3
 1168              	.LVL117:
 1169              	.L51:
 310:mp3.c         **** 	 for (a=0;a<65;a++) name[a] = 0;
 1170              		.loc 1 310 16 discriminator 1 view .LVU428
 1171 0282 DAB2     		uxtb	r2, r3
 1172 0284 362A     		cmp	r2, #54
 1173 0286 08D9     		bls	.L52
 311:mp3.c         **** 	 strcpy((char *)name,(char *)record);
 1174              		.loc 1 311 30 is_stmt 0 view .LVU429
 1175 0288 0021     		movs	r1, #0
 1176 028a 631E     		subs	r3, r4, #1
 1177              	.LVL118:
 311:mp3.c         **** 	 strcpy((char *)name,(char *)record);
 1178              		.loc 1 311 30 view .LVU430
 1179 028c 04F14002 		add	r2, r4, #64
 1180              	.LVL119:
 1181              	.L53:
 311:mp3.c         **** 	 strcpy((char *)name,(char *)record);
 1182              		.loc 1 311 22 is_stmt 1 discriminator 3 view .LVU431
 311:mp3.c         **** 	 strcpy((char *)name,(char *)record);
 1183              		.loc 1 311 30 is_stmt 0 discriminator 3 view .LVU432
 1184 0290 03F8011F 		strb	r1, [r3, #1]!
 311:mp3.c         **** 	 strcpy((char *)name,(char *)record);
 1185              		.loc 1 311 17 is_stmt 1 discriminator 3 view .LVU433
 311:mp3.c         **** 	 strcpy((char *)name,(char *)record);
 1186              		.loc 1 311 12 discriminator 3 view .LVU434
 311:mp3.c         **** 	 strcpy((char *)name,(char *)record);
 1187              		.loc 1 311 3 is_stmt 0 discriminator 3 view .LVU435
 1188 0294 9342     		cmp	r3, r2
 1189 0296 FBD1     		bne	.L53
 1190 0298 47E7     		b	.L50
 1191              	.LVL120:
 1192              	.L52:
 310:mp3.c         **** 	 for (a=0;a<65;a++) name[a] = 0;
 1193              		.loc 1 310 25 is_stmt 1 discriminator 2 view .LVU436
 310:mp3.c         **** 	 for (a=0;a<65;a++) name[a] = 0;
 1194              		.loc 1 310 36 is_stmt 0 discriminator 2 view .LVU437
 1195 029a 0DAA     		add	r2, sp, #52
 1196 029c D154     		strb	r1, [r2, r3]
 1197 029e 0133     		adds	r3, r3, #1
 1198              	.LVL121:
 310:mp3.c         **** 	 for (a=0;a<65;a++) name[a] = 0;
 1199              		.loc 1 310 36 discriminator 2 view .LVU438
 1200 02a0 EFE7     		b	.L51
 1201              	.L63:
 1202 02a2 00BF     		.align	2
 1203              	.L62:
 1204 02a4 00000000 		.word	.LC1
 1205 02a8 00000000 		.word	mp3
 1206 02ac 00000000 		.word	lrc
 1207 02b0 04000000 		.word	mp3+4
 1208              		.cfi_endproc
 1209              	.LFE36:
 1211              		.section	.rodata.find_music.str1.1,"aMS",%progbits,1
 1212              	.LC2:
 1213 0000 303A2F4D 		.ascii	"0:/Music\000"
 1213      75736963 
 1213      00
 1214              		.section	.text.find_music,"ax",%progbits
 1215              		.align	1
 1216              		.global	find_music
 1217              		.syntax unified
 1218              		.thumb
 1219              		.thumb_func
 1220              		.fpu softvfp
 1222              	find_music:
 1223              	.LFB37:
 322:mp3.c         **** 
 323:mp3.c         **** 
 324:mp3.c         **** unsigned char find_music (void)
 325:mp3.c         **** {
 1224              		.loc 1 325 1 is_stmt 1 view -0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 0
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 326:mp3.c         ****       dlink before = 0;
 1228              		.loc 1 326 7 view .LVU440
 1229              	.LVL122:
 327:mp3.c         ****       dlink new_node;
 1230              		.loc 1 327 7 view .LVU441
 328:mp3.c         ****       unsigned char file = 0, i;
 1231              		.loc 1 328 7 view .LVU442
 329:mp3.c         ****       char *fn;
 1232              		.loc 1 329 7 view .LVU443
 330:mp3.c         **** #if _USE_LFN
 331:mp3.c         ****       static char lfn[_MAX_LFN * (_DF1S ? 2 : 1) + 1];
 332:mp3.c         ****       fno.lfname = lfn;
 333:mp3.c         ****       fno.lfsize = sizeof(lfn);
 334:mp3.c         **** #endif
 335:mp3.c         ****       res = f_opendir(&dirs, "0:/Music");
 1233              		.loc 1 335 7 view .LVU444
 325:mp3.c         ****       dlink before = 0;
 1234              		.loc 1 325 1 is_stmt 0 view .LVU445
 1235 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1236              		.cfi_def_cfa_offset 32
 1237              		.cfi_offset 4, -32
 1238              		.cfi_offset 5, -28
 1239              		.cfi_offset 6, -24
 1240              		.cfi_offset 7, -20
 1241              		.cfi_offset 8, -16
 1242              		.cfi_offset 9, -12
 1243              		.cfi_offset 10, -8
 1244              		.cfi_offset 14, -4
 1245              		.loc 1 335 13 view .LVU446
 1246 0004 3049     		ldr	r1, .L88
 1247 0006 3148     		ldr	r0, .L88+4
 1248 0008 FFF7FEFF 		bl	f_opendir
 1249              	.LVL123:
 1250              		.loc 1 335 11 view .LVU447
 1251 000c 304B     		ldr	r3, .L88+8
 1252              		.loc 1 335 13 view .LVU448
 1253 000e 0446     		mov	r4, r0
 1254              		.loc 1 335 11 view .LVU449
 1255 0010 1870     		strb	r0, [r3]
 336:mp3.c         ****       if (res == FR_OK) {
 1256              		.loc 1 336 7 is_stmt 1 view .LVU450
 1257              		.loc 1 336 10 is_stmt 0 view .LVU451
 1258 0012 0028     		cmp	r0, #0
 1259 0014 4FD0     		beq	.L72
 1260              	.L70:
 337:mp3.c         ****          while ((f_readdir(&dirs, &fno) == FR_OK) && fno.fname[0]) {
 338:mp3.c         **** #if _USE_LFN
 339:mp3.c         ****                fn = *fno.lfname ? fno.lfname : fno.fname;
 340:mp3.c         **** #else
 341:mp3.c         ****                fn = fno.fname;
 342:mp3.c         **** #endif
 343:mp3.c         **** 	       i = strlen(fn);
 344:mp3.c         **** 	       if (strcasecmp(&fn[i-3],music_extend[0]) == 0 || strcasecmp(&fn[i-3],music_extend[1]) == 0 
 345:mp3.c         **** 	          file++;
 346:mp3.c         **** 	          if (file == 1) {
 347:mp3.c         **** 		     head = (dlink)malloc(sizeof(dnode));
 348:mp3.c         **** 		     if (!head) return 0;
 349:mp3.c         **** 		     strcpy(head->filename,fn);
 350:mp3.c         **** 		     head->next = NULL;
 351:mp3.c         **** 		     head->back = NULL;
 352:mp3.c         **** 		     before = head;
 353:mp3.c         ****                   } else {
 354:mp3.c         **** 		     new_node = (dlink)malloc(sizeof(dnode));
 355:mp3.c         **** 		     if (!new_node) return 0;
 356:mp3.c         ****                      strcpy(new_node->filename,fn);
 357:mp3.c         ****                      new_node->next = NULL;
 358:mp3.c         **** 		     new_node->back = before;
 359:mp3.c         **** 		     before->next = new_node;
 360:mp3.c         **** 		     before = new_node;
 361:mp3.c         **** 	          }
 362:mp3.c         **** 	       }
 363:mp3.c         **** 	       //lcd_printf(2,3+file," %s ",fn);
 364:mp3.c         ****          }
 365:mp3.c         **** 	 return file;
 366:mp3.c         ****       }
 367:mp3.c         ****       return 0;
 1261              		.loc 1 367 14 view .LVU452
 1262 0016 0024     		movs	r4, #0
 1263              	.L66:
 368:mp3.c         **** }
 1264              		.loc 1 368 1 view .LVU453
 1265 0018 2046     		mov	r0, r4
 1266 001a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1267              	.LVL124:
 1268              	.L71:
 1269              	.LBB111:
 1270              	.LBB112:
 341:mp3.c         **** #endif
 1271              		.loc 1 341 16 is_stmt 1 view .LVU454
 343:mp3.c         **** 	       if (strcasecmp(&fn[i-3],music_extend[0]) == 0 || strcasecmp(&fn[i-3],music_extend[1]) == 0 
 1272              		.loc 1 343 9 view .LVU455
 343:mp3.c         **** 	       if (strcasecmp(&fn[i-3],music_extend[0]) == 0 || strcasecmp(&fn[i-3],music_extend[1]) == 0 
 1273              		.loc 1 343 13 is_stmt 0 view .LVU456
 1274 001e 2D48     		ldr	r0, .L88+12
 1275              	.LVL125:
 343:mp3.c         **** 	       if (strcasecmp(&fn[i-3],music_extend[0]) == 0 || strcasecmp(&fn[i-3],music_extend[1]) == 0 
 1276              		.loc 1 343 13 view .LVU457
 1277 0020 FFF7FEFF 		bl	strlen
 1278              	.LVL126:
 344:mp3.c         **** 	          file++;
 1279              		.loc 1 344 9 is_stmt 1 view .LVU458
 344:mp3.c         **** 	          file++;
 1280              		.loc 1 344 13 is_stmt 0 view .LVU459
 1281 0024 DFF8B8A0 		ldr	r10, .L88+24
 344:mp3.c         **** 	          file++;
 1282              		.loc 1 344 27 view .LVU460
 1283 0028 C61E     		subs	r6, r0, #3
 344:mp3.c         **** 	          file++;
 1284              		.loc 1 344 24 view .LVU461
 1285 002a 3E44     		add	r6, r6, r7
 344:mp3.c         **** 	          file++;
 1286              		.loc 1 344 13 view .LVU462
 1287 002c 3046     		mov	r0, r6
 1288              	.LVL127:
 344:mp3.c         **** 	          file++;
 1289              		.loc 1 344 13 view .LVU463
 1290 002e DAF80010 		ldr	r1, [r10]
 1291 0032 FFF7FEFF 		bl	strcasecmp
 1292              	.LVL128:
 344:mp3.c         **** 	          file++;
 1293              		.loc 1 344 12 view .LVU464
 1294 0036 88B1     		cbz	r0, .L67
 344:mp3.c         **** 	          file++;
 1295              		.loc 1 344 58 view .LVU465
 1296 0038 3046     		mov	r0, r6
 1297 003a DAF80410 		ldr	r1, [r10, #4]
 1298 003e FFF7FEFF 		bl	strcasecmp
 1299              	.LVL129:
 344:mp3.c         **** 	          file++;
 1300              		.loc 1 344 55 view .LVU466
 1301 0042 58B1     		cbz	r0, .L67
 344:mp3.c         **** 	          file++;
 1302              		.loc 1 344 103 view .LVU467
 1303 0044 3046     		mov	r0, r6
 1304 0046 DAF80810 		ldr	r1, [r10, #8]
 1305 004a FFF7FEFF 		bl	strcasecmp
 1306              	.LVL130:
 344:mp3.c         **** 	          file++;
 1307              		.loc 1 344 100 view .LVU468
 1308 004e 28B1     		cbz	r0, .L67
 344:mp3.c         **** 	          file++;
 1309              		.loc 1 344 148 view .LVU469
 1310 0050 3046     		mov	r0, r6
 1311 0052 DAF80C10 		ldr	r1, [r10, #12]
 1312 0056 FFF7FEFF 		bl	strcasecmp
 1313              	.LVL131:
 344:mp3.c         **** 	          file++;
 1314              		.loc 1 344 145 view .LVU470
 1315 005a 90B9     		cbnz	r0, .L65
 1316              	.L67:
 345:mp3.c         **** 	          if (file == 1) {
 1317              		.loc 1 345 12 is_stmt 1 view .LVU471
 345:mp3.c         **** 	          if (file == 1) {
 1318              		.loc 1 345 16 is_stmt 0 view .LVU472
 1319 005c 0134     		adds	r4, r4, #1
 1320              	.LVL132:
 345:mp3.c         **** 	          if (file == 1) {
 1321              		.loc 1 345 16 view .LVU473
 1322 005e E4B2     		uxtb	r4, r4
 1323              	.LVL133:
 346:mp3.c         **** 		     head = (dlink)malloc(sizeof(dnode));
 1324              		.loc 1 346 12 is_stmt 1 view .LVU474
 346:mp3.c         **** 		     head = (dlink)malloc(sizeof(dnode));
 1325              		.loc 1 346 15 is_stmt 0 view .LVU475
 1326 0060 012C     		cmp	r4, #1
 347:mp3.c         **** 		     if (!head) return 0;
 1327              		.loc 1 347 22 view .LVU476
 1328 0062 4FF0A000 		mov	r0, #160
 346:mp3.c         **** 		     head = (dlink)malloc(sizeof(dnode));
 1329              		.loc 1 346 15 view .LVU477
 1330 0066 17D1     		bne	.L69
 347:mp3.c         **** 		     if (!head) return 0;
 1331              		.loc 1 347 8 is_stmt 1 view .LVU478
 347:mp3.c         **** 		     if (!head) return 0;
 1332              		.loc 1 347 22 is_stmt 0 view .LVU479
 1333 0068 FFF7FEFF 		bl	malloc
 1334              	.LVL134:
 347:mp3.c         **** 		     if (!head) return 0;
 1335              		.loc 1 347 13 view .LVU480
 1336 006c 1A4B     		ldr	r3, .L88+16
 347:mp3.c         **** 		     if (!head) return 0;
 1337              		.loc 1 347 22 view .LVU481
 1338 006e 0546     		mov	r5, r0
 1339              	.LVL135:
 347:mp3.c         **** 		     if (!head) return 0;
 1340              		.loc 1 347 13 view .LVU482
 1341 0070 1860     		str	r0, [r3]
 348:mp3.c         **** 		     strcpy(head->filename,fn);
 1342              		.loc 1 348 8 is_stmt 1 view .LVU483
 348:mp3.c         **** 		     strcpy(head->filename,fn);
 1343              		.loc 1 348 11 is_stmt 0 view .LVU484
 1344 0072 0028     		cmp	r0, #0
 1345 0074 CFD0     		beq	.L70
 349:mp3.c         **** 		     head->next = NULL;
 1346              		.loc 1 349 8 is_stmt 1 view .LVU485
 1347 0076 3946     		mov	r1, r7
 1348 0078 FFF7FEFF 		bl	strcpy
 1349              	.LVL136:
 350:mp3.c         **** 		     head->back = NULL;
 1350              		.loc 1 350 8 view .LVU486
 350:mp3.c         **** 		     head->back = NULL;
 1351              		.loc 1 350 19 is_stmt 0 view .LVU487
 1352 007c 0023     		movs	r3, #0
 351:mp3.c         **** 		     before = head;
 1353              		.loc 1 351 19 view .LVU488
 1354 007e C5E92633 		strd	r3, r3, [r5, #152]
 352:mp3.c         ****                   } else {
 1355              		.loc 1 352 8 is_stmt 1 view .LVU489
 1356              	.LVL137:
 1357              	.L65:
 337:mp3.c         **** #if _USE_LFN
 1358              		.loc 1 337 16 view .LVU490
 337:mp3.c         **** #if _USE_LFN
 1359              		.loc 1 337 18 is_stmt 0 view .LVU491
 1360 0082 4846     		mov	r0, r9
 1361 0084 1549     		ldr	r1, .L88+20
 1362 0086 FFF7FEFF 		bl	f_readdir
 1363              	.LVL138:
 337:mp3.c         **** #if _USE_LFN
 1364              		.loc 1 337 16 view .LVU492
 1365 008a 0028     		cmp	r0, #0
 1366 008c C4D1     		bne	.L66
 337:mp3.c         **** #if _USE_LFN
 1367              		.loc 1 337 51 view .LVU493
 1368 008e 98F80930 		ldrb	r3, [r8, #9]	@ zero_extendqisi2
 1369 0092 002B     		cmp	r3, #0
 1370 0094 C3D1     		bne	.L71
 1371 0096 BFE7     		b	.L66
 1372              	.LVL139:
 1373              	.L69:
 354:mp3.c         **** 		     if (!new_node) return 0;
 1374              		.loc 1 354 8 is_stmt 1 view .LVU494
 354:mp3.c         **** 		     if (!new_node) return 0;
 1375              		.loc 1 354 26 is_stmt 0 view .LVU495
 1376 0098 FFF7FEFF 		bl	malloc
 1377              	.LVL140:
 355:mp3.c         ****                      strcpy(new_node->filename,fn);
 1378              		.loc 1 355 8 is_stmt 1 view .LVU496
 355:mp3.c         ****                      strcpy(new_node->filename,fn);
 1379              		.loc 1 355 11 is_stmt 0 view .LVU497
 1380 009c 0646     		mov	r6, r0
 1381 009e 0028     		cmp	r0, #0
 1382 00a0 B9D0     		beq	.L70
 356:mp3.c         ****                      new_node->next = NULL;
 1383              		.loc 1 356 22 is_stmt 1 view .LVU498
 1384 00a2 3946     		mov	r1, r7
 1385 00a4 FFF7FEFF 		bl	strcpy
 1386              	.LVL141:
 357:mp3.c         **** 		     new_node->back = before;
 1387              		.loc 1 357 22 view .LVU499
 357:mp3.c         **** 		     new_node->back = before;
 1388              		.loc 1 357 37 is_stmt 0 view .LVU500
 1389 00a8 0023     		movs	r3, #0
 358:mp3.c         **** 		     before->next = new_node;
 1390              		.loc 1 358 23 view .LVU501
 1391 00aa C6E92635 		strd	r3, r5, [r6, #152]
 359:mp3.c         **** 		     before = new_node;
 1392              		.loc 1 359 8 is_stmt 1 view .LVU502
 359:mp3.c         **** 		     before = new_node;
 1393              		.loc 1 359 21 is_stmt 0 view .LVU503
 1394 00ae C5F89860 		str	r6, [r5, #152]
 360:mp3.c         **** 	          }
 1395              		.loc 1 360 8 is_stmt 1 view .LVU504
 1396              	.LVL142:
 359:mp3.c         **** 		     before = new_node;
 1397              		.loc 1 359 21 is_stmt 0 view .LVU505
 1398 00b2 3546     		mov	r5, r6
 1399 00b4 E5E7     		b	.L65
 1400              	.LVL143:
 1401              	.L72:
 337:mp3.c         **** #if _USE_LFN
 1402              		.loc 1 337 18 view .LVU506
 1403 00b6 DFF82480 		ldr	r8, .L88+20
 326:mp3.c         ****       dlink new_node;
 1404              		.loc 1 326 13 view .LVU507
 1405 00ba 0546     		mov	r5, r0
 337:mp3.c         **** #if _USE_LFN
 1406              		.loc 1 337 18 view .LVU508
 1407 00bc DFF80C90 		ldr	r9, .L88+4
 343:mp3.c         **** 	       if (strcasecmp(&fn[i-3],music_extend[0]) == 0 || strcasecmp(&fn[i-3],music_extend[1]) == 0 
 1408              		.loc 1 343 13 view .LVU509
 1409 00c0 08F10907 		add	r7, r8, #9
 1410 00c4 DDE7     		b	.L65
 1411              	.L89:
 1412 00c6 00BF     		.align	2
 1413              	.L88:
 1414 00c8 00000000 		.word	.LC2
 1415 00cc 00000000 		.word	dirs
 1416 00d0 00000000 		.word	res
 1417 00d4 09000000 		.word	fno+9
 1418 00d8 00000000 		.word	head
 1419 00dc 00000000 		.word	fno
 1420 00e0 00000000 		.word	.LANCHOR3
 1421              	.LBE112:
 1422              	.LBE111:
 1423              		.cfi_endproc
 1424              	.LFE37:
 1426              		.section	.text.filtrate_music,"ax",%progbits
 1427              		.align	1
 1428              		.global	filtrate_music
 1429              		.syntax unified
 1430              		.thumb
 1431              		.thumb_func
 1432              		.fpu softvfp
 1434              	filtrate_music:
 1435              	.LFB35:
 156:mp3.c         ****       BOOL flag;
 1436              		.loc 1 156 1 is_stmt 1 view -0
 1437              		.cfi_startproc
 1438              		@ args = 0, pretend = 0, frame = 112
 1439              		@ frame_needed = 0, uses_anonymous_args = 0
 157:mp3.c         ****       unsigned char temp[69];
 1440              		.loc 1 157 7 view .LVU511
 158:mp3.c         ****       unsigned char temp1[35],a;
 1441              		.loc 1 158 7 view .LVU512
 159:mp3.c         ****       unsigned short i,j,k,l;
 1442              		.loc 1 159 7 view .LVU513
 160:mp3.c         ****       unsigned short m;
 1443              		.loc 1 160 7 view .LVU514
 161:mp3.c         ****       music_number = find_music();
 1444              		.loc 1 161 7 view .LVU515
 162:mp3.c         ****       for (i=1;i<=music_number;i++) {
 1445              		.loc 1 162 7 view .LVU516
 156:mp3.c         ****       BOOL flag;
 1446              		.loc 1 156 1 is_stmt 0 view .LVU517
 1447 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1448              		.cfi_def_cfa_offset 32
 1449              		.cfi_offset 4, -32
 1450              		.cfi_offset 5, -28
 1451              		.cfi_offset 6, -24
 1452              		.cfi_offset 7, -20
 1453              		.cfi_offset 8, -16
 1454              		.cfi_offset 9, -12
 1455              		.cfi_offset 10, -8
 1456              		.cfi_offset 14, -4
 1457 0004 9CB0     		sub	sp, sp, #112
 1458              		.cfi_def_cfa_offset 144
 162:mp3.c         ****       for (i=1;i<=music_number;i++) {
 1459              		.loc 1 162 22 view .LVU518
 1460 0006 FFF7FEFF 		bl	find_music
 1461              	.LVL144:
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1462              		.loc 1 163 13 view .LVU519
 1463 000a 0124     		movs	r4, #1
 162:mp3.c         ****       for (i=1;i<=music_number;i++) {
 1464              		.loc 1 162 20 view .LVU520
 1465 000c 654D     		ldr	r5, .L149
 181:mp3.c         ****   	  strcpy((char *)head->filename,(char *)temp);
 1466              		.loc 1 181 40 view .LVU521
 1467 000e 664F     		ldr	r7, .L149+4
 162:mp3.c         ****       for (i=1;i<=music_number;i++) {
 1468              		.loc 1 162 22 view .LVU522
 1469 0010 2880     		strh	r0, [r5]	@ movhi
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1470              		.loc 1 163 7 is_stmt 1 view .LVU523
 1471              	.LVL145:
 1472              	.L91:
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1473              		.loc 1 163 16 discriminator 1 view .LVU524
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1474              		.loc 1 163 17 is_stmt 0 discriminator 1 view .LVU525
 1475 0012 2E88     		ldrh	r6, [r5]
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1476              		.loc 1 163 7 discriminator 1 view .LVU526
 1477 0014 A642     		cmp	r6, r4
 1478 0016 1AD2     		bcs	.L98
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1479              		.loc 1 163 17 view .LVU527
 1480 0018 3346     		mov	r3, r6
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1481              		.loc 1 163 7 view .LVU528
 1482 001a 0021     		movs	r1, #0
 1483 001c 624D     		ldr	r5, .L149+4
 1484 001e 2A68     		ldr	r2, [r5]
 1485              	.LVL146:
 1486              	.L102:
 188:mp3.c         ****       i = music_number;
 1487              		.loc 1 188 13 is_stmt 1 discriminator 1 view .LVU529
 188:mp3.c         ****       i = music_number;
 1488              		.loc 1 188 13 is_stmt 0 discriminator 1 view .LVU530
 1489 0020 002B     		cmp	r3, #0
 1490 0022 65D1     		bne	.L99
 1491              	.LVL147:
 1492              	.L145:
 188:mp3.c         ****       i = music_number;
 1493              		.loc 1 188 13 discriminator 1 view .LVU531
 1494 0024 01B1     		cbz	r1, .L100
 1495 0026 2A60     		str	r2, [r5]
 1496              	.L100:
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1497              		.loc 1 163 17 view .LVU532
 1498 0028 3746     		mov	r7, r6
 190:mp3.c         **** 	    m = strlen(head->filename);
 1499              		.loc 1 190 13 view .LVU533
 1500 002a 4FF6FF79 		movw	r9, #65535
 217:mp3.c         **** 	    	     head->filename[25] = 0x2e;
 1501              		.loc 1 217 31 view .LVU534
 1502 002e DFF87C81 		ldr	r8, .L149+8
 1503              	.L101:
 1504              	.LVL148:
 190:mp3.c         **** 	    m = strlen(head->filename);
 1505              		.loc 1 190 13 is_stmt 1 view .LVU535
 190:mp3.c         **** 	    m = strlen(head->filename);
 1506              		.loc 1 190 15 is_stmt 0 view .LVU536
 1507 0032 013F     		subs	r7, r7, #1
 1508              	.LVL149:
 190:mp3.c         **** 	    m = strlen(head->filename);
 1509              		.loc 1 190 15 view .LVU537
 1510 0034 BFB2     		uxth	r7, r7
 1511              	.LVL150:
 190:mp3.c         **** 	    m = strlen(head->filename);
 1512              		.loc 1 190 13 view .LVU538
 1513 0036 4F45     		cmp	r7, r9
 1514 0038 2C68     		ldr	r4, [r5]
 1515 003a 62D1     		bne	.L111
 1516 003c 0023     		movs	r3, #0
 1517              	.LVL151:
 1518              	.L114:
 237:mp3.c         **** }
 1519              		.loc 1 237 13 is_stmt 1 discriminator 1 view .LVU539
 237:mp3.c         **** }
 1520              		.loc 1 237 13 is_stmt 0 discriminator 1 view .LVU540
 1521 003e 002E     		cmp	r6, #0
 1522 0040 40F0A680 		bne	.L112
 1523              	.LVL152:
 1524              	.L148:
 237:mp3.c         **** }
 1525              		.loc 1 237 13 discriminator 1 view .LVU541
 1526 0044 03B1     		cbz	r3, .L90
 1527 0046 2C60     		str	r4, [r5]
 1528              	.L90:
 238:mp3.c         **** 
 1529              		.loc 1 238 1 view .LVU542
 1530 0048 1CB0     		add	sp, sp, #112
 1531              		.cfi_remember_state
 1532              		.cfi_def_cfa_offset 32
 1533              		@ sp needed
 1534 004a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1535              	.LVL153:
 1536              	.L98:
 1537              		.cfi_restore_state
 238:mp3.c         **** 
 1538              		.loc 1 238 1 view .LVU543
 1539 004e 0AAA     		add	r2, sp, #40
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1540              		.loc 1 163 7 view .LVU544
 1541 0050 4523     		movs	r3, #69
 1542 0052 1646     		mov	r6, r2
 164:mp3.c         ****           if (i < 10) {
 1543              		.loc 1 164 38 view .LVU545
 1544 0054 0021     		movs	r1, #0
 1545              	.L92:
 1546              	.LVL154:
 164:mp3.c         ****           if (i < 10) {
 1547              		.loc 1 164 30 is_stmt 1 discriminator 3 view .LVU546
 1548 0056 013B     		subs	r3, r3, #1
 1549 0058 9BB2     		uxth	r3, r3
 164:mp3.c         ****           if (i < 10) {
 1550              		.loc 1 164 38 is_stmt 0 discriminator 3 view .LVU547
 1551 005a 02F8011B 		strb	r1, [r2], #1
 1552              	.LVL155:
 164:mp3.c         ****           if (i < 10) {
 1553              		.loc 1 164 25 is_stmt 1 discriminator 3 view .LVU548
 164:mp3.c         ****           if (i < 10) {
 1554              		.loc 1 164 20 discriminator 3 view .LVU549
 164:mp3.c         ****           if (i < 10) {
 1555              		.loc 1 164 11 is_stmt 0 discriminator 3 view .LVU550
 1556 005e 002B     		cmp	r3, #0
 1557 0060 F9D1     		bne	.L92
 165:mp3.c         ****              temp[0] = 0x30;
 1558              		.loc 1 165 11 is_stmt 1 view .LVU551
 165:mp3.c         ****              temp[0] = 0x30;
 1559              		.loc 1 165 14 is_stmt 0 view .LVU552
 1560 0062 092C     		cmp	r4, #9
 1561 0064 2CD8     		bhi	.L93
 166:mp3.c         ****              temp[1] = 0x30;
 1562              		.loc 1 166 14 is_stmt 1 view .LVU553
 167:mp3.c         ****              temp[2] = 0x30 + i;
 1563              		.loc 1 167 14 view .LVU554
 166:mp3.c         ****              temp[1] = 0x30;
 1564              		.loc 1 166 22 is_stmt 0 view .LVU555
 1565 0066 43F23003 		movw	r3, #12336
 1566 006a ADF82830 		strh	r3, [sp, #40]	@ movhi
 168:mp3.c         ****              temp[3] = 0x2e;
 1567              		.loc 1 168 14 is_stmt 1 view .LVU556
 168:mp3.c         ****              temp[3] = 0x2e;
 1568              		.loc 1 168 29 is_stmt 0 view .LVU557
 1569 006e 04F13003 		add	r3, r4, #48
 1570              	.LVL156:
 1571              	.L142:
 178:mp3.c         ****              temp[3] = 0x2e;
 1572              		.loc 1 178 14 is_stmt 1 view .LVU558
 178:mp3.c         ****              temp[3] = 0x2e;
 1573              		.loc 1 178 22 is_stmt 0 view .LVU559
 1574 0072 8DF82A30 		strb	r3, [sp, #42]
 179:mp3.c         ****           }
 1575              		.loc 1 179 14 is_stmt 1 view .LVU560
 179:mp3.c         ****           }
 1576              		.loc 1 179 22 is_stmt 0 view .LVU561
 1577 0076 2E23     		movs	r3, #46
 181:mp3.c         ****   	  strcpy((char *)head->filename,(char *)temp);
 1578              		.loc 1 181 36 view .LVU562
 1579 0078 D7F80080 		ldr	r8, [r7]
 181:mp3.c         ****   	  strcpy((char *)head->filename,(char *)temp);
 1580              		.loc 1 181 4 view .LVU563
 1581 007c 0BA8     		add	r0, sp, #44
 1582 007e 4146     		mov	r1, r8
 179:mp3.c         ****           }
 1583              		.loc 1 179 22 view .LVU564
 1584 0080 8DF82B30 		strb	r3, [sp, #43]
 181:mp3.c         ****   	  strcpy((char *)head->filename,(char *)temp);
 1585              		.loc 1 181 4 is_stmt 1 view .LVU565
 1586 0084 FFF7FEFF 		bl	strcpy
 1587              	.LVL157:
 182:mp3.c         **** 	  l = strlen(head->filename);
 1588              		.loc 1 182 6 view .LVU566
 1589 0088 3146     		mov	r1, r6
 1590 008a 4046     		mov	r0, r8
 1591 008c FFF7FEFF 		bl	strcpy
 1592              	.LVL158:
 183:mp3.c         **** 	  for (k=0;k<4;k++) head->filename[l - 4 + k] = 0;
 1593              		.loc 1 183 4 view .LVU567
 183:mp3.c         **** 	  for (k=0;k<4;k++) head->filename[l - 4 + k] = 0;
 1594              		.loc 1 183 19 is_stmt 0 view .LVU568
 1595 0090 3E68     		ldr	r6, [r7]
 183:mp3.c         **** 	  for (k=0;k<4;k++) head->filename[l - 4 + k] = 0;
 1596              		.loc 1 183 8 view .LVU569
 1597 0092 3046     		mov	r0, r6
 1598 0094 FFF7FEFF 		bl	strlen
 1599              	.LVL159:
 184:mp3.c         **** 	  if (i != music_number) head = head->next;
 1600              		.loc 1 184 4 is_stmt 1 view .LVU570
 184:mp3.c         **** 	  if (i != music_number) head = head->next;
 1601              		.loc 1 184 13 view .LVU571
 184:mp3.c         **** 	  if (i != music_number) head = head->next;
 1602              		.loc 1 184 48 is_stmt 0 view .LVU572
 1603 0098 0022     		movs	r2, #0
 1604 009a 80B2     		uxth	r0, r0
 1605              	.LVL160:
 184:mp3.c         **** 	  if (i != music_number) head = head->next;
 1606              		.loc 1 184 48 view .LVU573
 1607 009c 031F     		subs	r3, r0, #4
 1608 009e 3344     		add	r3, r3, r6
 1609 00a0 3044     		add	r0, r0, r6
 1610              	.LVL161:
 1611              	.L96:
 184:mp3.c         **** 	  if (i != music_number) head = head->next;
 1612              		.loc 1 184 22 is_stmt 1 discriminator 3 view .LVU574
 184:mp3.c         **** 	  if (i != music_number) head = head->next;
 1613              		.loc 1 184 48 is_stmt 0 discriminator 3 view .LVU575
 1614 00a2 03F8012B 		strb	r2, [r3], #1
 184:mp3.c         **** 	  if (i != music_number) head = head->next;
 1615              		.loc 1 184 17 is_stmt 1 discriminator 3 view .LVU576
 184:mp3.c         **** 	  if (i != music_number) head = head->next;
 1616              		.loc 1 184 13 discriminator 3 view .LVU577
 184:mp3.c         **** 	  if (i != music_number) head = head->next;
 1617              		.loc 1 184 4 is_stmt 0 discriminator 3 view .LVU578
 1618 00a6 9842     		cmp	r0, r3
 1619 00a8 FBD1     		bne	.L96
 185:mp3.c         ****       }
 1620              		.loc 1 185 4 is_stmt 1 view .LVU579
 185:mp3.c         ****       }
 1621              		.loc 1 185 7 is_stmt 0 view .LVU580
 1622 00aa 2B88     		ldrh	r3, [r5]
 1623 00ac A342     		cmp	r3, r4
 185:mp3.c         ****       }
 1624              		.loc 1 185 27 is_stmt 1 view .LVU581
 185:mp3.c         ****       }
 1625              		.loc 1 185 32 is_stmt 0 view .LVU582
 1626 00ae 18BF     		it	ne
 1627 00b0 D6F89830 		ldrne	r3, [r6, #152]
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1628              		.loc 1 163 33 view .LVU583
 1629 00b4 04F10104 		add	r4, r4, #1
 1630              	.LVL162:
 185:mp3.c         ****       }
 1631              		.loc 1 185 32 view .LVU584
 1632 00b8 18BF     		it	ne
 1633 00ba 3B60     		strne	r3, [r7]
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1634              		.loc 1 163 32 is_stmt 1 view .LVU585
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1635              		.loc 1 163 33 is_stmt 0 view .LVU586
 1636 00bc A4B2     		uxth	r4, r4
 1637              	.LVL163:
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1638              		.loc 1 163 33 view .LVU587
 1639 00be A8E7     		b	.L91
 1640              	.LVL164:
 1641              	.L93:
 170:mp3.c         ****              temp[0] = 0x30;
 1642              		.loc 1 170 18 is_stmt 1 view .LVU588
 1643 00c0 0A22     		movs	r2, #10
 1644              	.LVL165:
 170:mp3.c         ****              temp[0] = 0x30;
 1645              		.loc 1 170 18 is_stmt 0 view .LVU589
 1646 00c2 B4FBF2F3 		udiv	r3, r4, r2
 170:mp3.c         ****              temp[0] = 0x30;
 1647              		.loc 1 170 21 view .LVU590
 1648 00c6 632C     		cmp	r4, #99
 171:mp3.c         ****              temp[1] = 0x30 + i / 10;
 1649              		.loc 1 171 14 is_stmt 1 view .LVU591
 1650 00c8 03F13001 		add	r1, r3, #48
 1651 00cc 02FB1343 		mls	r3, r2, r3, r4
 176:mp3.c         ****              temp[1] = 0x30 + i / 10;
 1652              		.loc 1 176 29 is_stmt 0 view .LVU592
 1653 00d0 86BF     		itte	hi
 1654 00d2 6422     		movhi	r2, #100
 1655 00d4 B4FBF2F2 		udivhi	r2, r4, r2
 171:mp3.c         ****              temp[1] = 0x30 + i / 10;
 1656              		.loc 1 171 22 view .LVU593
 1657 00d8 3022     		movls	r2, #48
 176:mp3.c         ****              temp[1] = 0x30 + i / 10;
 1658              		.loc 1 176 14 is_stmt 1 view .LVU594
 1659 00da C9B2     		uxtb	r1, r1
 1660 00dc 03F13003 		add	r3, r3, #48
 176:mp3.c         ****              temp[1] = 0x30 + i / 10;
 1661              		.loc 1 176 29 is_stmt 0 view .LVU595
 1662 00e0 88BF     		it	hi
 1663 00e2 3032     		addhi	r2, r2, #48
 1664 00e4 DBB2     		uxtb	r3, r3
 176:mp3.c         ****              temp[1] = 0x30 + i / 10;
 1665              		.loc 1 176 22 view .LVU596
 1666 00e6 8DF82820 		strb	r2, [sp, #40]
 177:mp3.c         ****              temp[2] = 0x30 + i % 10;
 1667              		.loc 1 177 14 is_stmt 1 view .LVU597
 177:mp3.c         ****              temp[2] = 0x30 + i % 10;
 1668              		.loc 1 177 22 is_stmt 0 view .LVU598
 1669 00ea 8DF82910 		strb	r1, [sp, #41]
 1670 00ee C0E7     		b	.L142
 1671              	.LVL166:
 1672              	.L99:
 188:mp3.c         ****       i = music_number;
 1673              		.loc 1 188 28 discriminator 2 view .LVU599
 1674 00f0 D2F89C00 		ldr	r0, [r2, #156]
 1675 00f4 013B     		subs	r3, r3, #1
 1676              	.LVL167:
 188:mp3.c         ****       i = music_number;
 1677              		.loc 1 188 28 discriminator 2 view .LVU600
 1678 00f6 9BB2     		uxth	r3, r3
 188:mp3.c         ****       i = music_number;
 1679              		.loc 1 188 20 discriminator 2 view .LVU601
 1680 00f8 0028     		cmp	r0, #0
 1681 00fa 93D0     		beq	.L145
 1682 00fc 0121     		movs	r1, #1
 1683 00fe 0246     		mov	r2, r0
 1684 0100 8EE7     		b	.L102
 1685              	.LVL168:
 1686              	.L111:
 191:mp3.c         **** 	    for (k=0;k<35;k++) temp1[k] = 0;
 1687              		.loc 1 191 6 is_stmt 1 view .LVU602
 191:mp3.c         **** 	    for (k=0;k<35;k++) temp1[k] = 0;
 1688              		.loc 1 191 10 is_stmt 0 view .LVU603
 1689 0102 2046     		mov	r0, r4
 1690 0104 FFF7FEFF 		bl	strlen
 1691              	.LVL169:
 1692 0108 01A9     		add	r1, sp, #4
 191:mp3.c         **** 	    for (k=0;k<35;k++) temp1[k] = 0;
 1693              		.loc 1 191 8 view .LVU604
 1694 010a 2323     		movs	r3, #35
 1695 010c 0A46     		mov	r2, r1
 192:mp3.c         **** 	    if (m > 23) {
 1696              		.loc 1 192 34 view .LVU605
 1697 010e 4FF0000C 		mov	ip, #0
 191:mp3.c         **** 	    for (k=0;k<35;k++) temp1[k] = 0;
 1698              		.loc 1 191 8 view .LVU606
 1699 0112 80B2     		uxth	r0, r0
 1700              	.LVL170:
 192:mp3.c         **** 	    if (m > 23) {
 1701              		.loc 1 192 6 is_stmt 1 view .LVU607
 192:mp3.c         **** 	    if (m > 23) {
 1702              		.loc 1 192 15 view .LVU608
 1703              	.L103:
 192:mp3.c         **** 	    if (m > 23) {
 1704              		.loc 1 192 25 discriminator 3 view .LVU609
 1705 0114 013B     		subs	r3, r3, #1
 1706 0116 9BB2     		uxth	r3, r3
 192:mp3.c         **** 	    if (m > 23) {
 1707              		.loc 1 192 34 is_stmt 0 discriminator 3 view .LVU610
 1708 0118 01F801CB 		strb	ip, [r1], #1
 1709              	.LVL171:
 192:mp3.c         **** 	    if (m > 23) {
 1710              		.loc 1 192 20 is_stmt 1 discriminator 3 view .LVU611
 192:mp3.c         **** 	    if (m > 23) {
 1711              		.loc 1 192 15 discriminator 3 view .LVU612
 192:mp3.c         **** 	    if (m > 23) {
 1712              		.loc 1 192 6 is_stmt 0 discriminator 3 view .LVU613
 1713 011c 002B     		cmp	r3, #0
 1714 011e F9D1     		bne	.L103
 193:mp3.c         **** 	       if (head->filename[22] < 0x80) {
 1715              		.loc 1 193 6 is_stmt 1 view .LVU614
 193:mp3.c         **** 	       if (head->filename[22] < 0x80) {
 1716              		.loc 1 193 9 is_stmt 0 view .LVU615
 1717 0120 1728     		cmp	r0, #23
 1718 0122 13D9     		bls	.L104
 194:mp3.c         **** 	          strcpy((char *)temp1,(char *)&head->filename[23]);
 1719              		.loc 1 194 9 is_stmt 1 view .LVU616
 194:mp3.c         **** 	          strcpy((char *)temp1,(char *)&head->filename[23]);
 1720              		.loc 1 194 12 is_stmt 0 view .LVU617
 1721 0124 94F91610 		ldrsb	r1, [r4, #22]
 1722              	.LVL172:
 194:mp3.c         **** 	          strcpy((char *)temp1,(char *)&head->filename[23]);
 1723              		.loc 1 194 12 view .LVU618
 1724 0128 04F11C0A 		add	r10, r4, #28
 1725 012c 0029     		cmp	r1, #0
 1726 012e 14DB     		blt	.L105
 1727              	.L107:
 1728              	.LVL173:
 214:mp3.c         **** 	    	     strcpy((char *)temp1,(char *)&head->filename[23]);
 1729              		.loc 1 214 12 is_stmt 1 view .LVU619
 215:mp3.c         **** 	    	     head->filename[23] = 0x2e;
 1730              		.loc 1 215 12 view .LVU620
 1731 0130 1046     		mov	r0, r2
 1732              	.LVL174:
 215:mp3.c         **** 	    	     head->filename[23] = 0x2e;
 1733              		.loc 1 215 12 is_stmt 0 view .LVU621
 1734 0132 04F11701 		add	r1, r4, #23
 1735 0136 FFF7FEFF 		bl	strcpy
 1736              	.LVL175:
 216:mp3.c         **** 	    	     head->filename[24] = 0x2e;
 1737              		.loc 1 216 31 view .LVU622
 1738 013a 2E23     		movs	r3, #46
 215:mp3.c         **** 	    	     head->filename[23] = 0x2e;
 1739              		.loc 1 215 12 view .LVU623
 1740 013c 0246     		mov	r2, r0
 216:mp3.c         **** 	    	     head->filename[24] = 0x2e;
 1741              		.loc 1 216 12 is_stmt 1 view .LVU624
 217:mp3.c         **** 	    	     head->filename[25] = 0x2e;
 1742              		.loc 1 217 12 view .LVU625
 218:mp3.c         **** 	    	     head->filename[26] = 0;
 1743              		.loc 1 218 12 view .LVU626
 219:mp3.c         **** 	    	     head->filename[27] = 1;
 1744              		.loc 1 219 12 view .LVU627
 220:mp3.c         **** 	    	     strcpy((char *)&head->filename[28],(char *)temp1);
 1745              		.loc 1 220 12 view .LVU628
 216:mp3.c         **** 	    	     head->filename[24] = 0x2e;
 1746              		.loc 1 216 31 is_stmt 0 view .LVU629
 1747 013e E375     		strb	r3, [r4, #23]
 217:mp3.c         **** 	    	     head->filename[25] = 0x2e;
 1748              		.loc 1 217 31 view .LVU630
 1749 0140 C4F81880 		str	r8, [r4, #24]
 221:mp3.c         **** 	          } else {
 1750              		.loc 1 221 12 is_stmt 1 view .LVU631
 1751              	.LVL176:
 1752              	.L146:
 230:mp3.c         **** 	          }
 1753              		.loc 1 230 12 view .LVU632
 1754 0144 1146     		mov	r1, r2
 1755 0146 5046     		mov	r0, r10
 1756 0148 FFF7FEFF 		bl	strcpy
 1757              	.LVL177:
 1758              	.L104:
 234:mp3.c         ****       }
 1759              		.loc 1 234 6 view .LVU633
 234:mp3.c         ****       }
 1760              		.loc 1 234 9 is_stmt 0 view .LVU634
 1761 014c 002F     		cmp	r7, #0
 1762 014e 3FF470AF 		beq	.L101
 234:mp3.c         ****       }
 1763              		.loc 1 234 18 is_stmt 1 discriminator 1 view .LVU635
 234:mp3.c         ****       }
 1764              		.loc 1 234 23 is_stmt 0 discriminator 1 view .LVU636
 1765 0152 D4F89830 		ldr	r3, [r4, #152]
 1766 0156 2B60     		str	r3, [r5]
 1767 0158 6BE7     		b	.L101
 1768              	.LVL178:
 1769              	.L105:
 204:mp3.c         ****                         if (head->filename[a] < 0x80) a++;else a += 2;
 1770              		.loc 1 204 12 is_stmt 1 view .LVU637
 205:mp3.c         **** 	    	        if (a == 23) {
 1771              		.loc 1 205 25 view .LVU638
 205:mp3.c         **** 	    	        if (a == 23) {
 1772              		.loc 1 205 28 is_stmt 0 view .LVU639
 1773 015a E156     		ldrsb	r1, [r4, r3]
 1774 015c 0029     		cmp	r1, #0
 1775 015e 04DB     		blt	.L106
 205:mp3.c         **** 	    	        if (a == 23) {
 1776              		.loc 1 205 55 is_stmt 1 discriminator 1 view .LVU640
 205:mp3.c         **** 	    	        if (a == 23) {
 1777              		.loc 1 205 56 is_stmt 0 discriminator 1 view .LVU641
 1778 0160 0133     		adds	r3, r3, #1
 1779              	.LVL179:
 205:mp3.c         **** 	    	        if (a == 23) {
 1780              		.loc 1 205 56 discriminator 1 view .LVU642
 1781 0162 DBB2     		uxtb	r3, r3
 1782              	.LVL180:
 206:mp3.c         **** 	    	           flag = 1;
 1783              		.loc 1 206 15 is_stmt 1 discriminator 1 view .LVU643
 206:mp3.c         **** 	    	           flag = 1;
 1784              		.loc 1 206 18 is_stmt 0 discriminator 1 view .LVU644
 1785 0164 172B     		cmp	r3, #23
 1786 0166 F8D1     		bne	.L105
 1787 0168 E2E7     		b	.L107
 1788              	.L106:
 205:mp3.c         **** 	    	        if (a == 23) {
 1789              		.loc 1 205 64 is_stmt 1 discriminator 2 view .LVU645
 205:mp3.c         **** 	    	        if (a == 23) {
 1790              		.loc 1 205 66 is_stmt 0 discriminator 2 view .LVU646
 1791 016a 0233     		adds	r3, r3, #2
 1792              	.LVL181:
 205:mp3.c         **** 	    	        if (a == 23) {
 1793              		.loc 1 205 66 discriminator 2 view .LVU647
 1794 016c DBB2     		uxtb	r3, r3
 1795              	.LVL182:
 206:mp3.c         **** 	    	           flag = 1;
 1796              		.loc 1 206 15 is_stmt 1 discriminator 2 view .LVU648
 206:mp3.c         **** 	    	           flag = 1;
 1797              		.loc 1 206 18 is_stmt 0 discriminator 2 view .LVU649
 1798 016e 172B     		cmp	r3, #23
 1799 0170 DED0     		beq	.L107
 209:mp3.c         **** 	    	           flag = 0;
 1800              		.loc 1 209 22 is_stmt 1 view .LVU650
 209:mp3.c         **** 	    	           flag = 0;
 1801              		.loc 1 209 25 is_stmt 0 view .LVU651
 1802 0172 182B     		cmp	r3, #24
 1803 0174 F1D1     		bne	.L105
 1804              	.LVL183:
 214:mp3.c         **** 	    	     strcpy((char *)temp1,(char *)&head->filename[23]);
 1805              		.loc 1 214 12 is_stmt 1 view .LVU652
 223:mp3.c         **** 	    	     head->filename[22] = 0x20;
 1806              		.loc 1 223 12 view .LVU653
 1807 0176 1046     		mov	r0, r2
 1808              	.LVL184:
 223:mp3.c         **** 	    	     head->filename[22] = 0x20;
 1809              		.loc 1 223 12 is_stmt 0 view .LVU654
 1810 0178 04F11601 		add	r1, r4, #22
 1811 017c FFF7FEFF 		bl	strcpy
 1812              	.LVL185:
 224:mp3.c         **** 	    	     head->filename[23] = 0x2e;
 1813              		.loc 1 224 31 view .LVU655
 1814 0180 42F62063 		movw	r3, #11808
 1815 0184 E382     		strh	r3, [r4, #22]	@ movhi
 226:mp3.c         **** 	    	     head->filename[25] = 0x2e;
 1816              		.loc 1 226 31 view .LVU656
 1817 0186 42F62E63 		movw	r3, #11822
 223:mp3.c         **** 	    	     head->filename[22] = 0x20;
 1818              		.loc 1 223 12 view .LVU657
 1819 018a 0246     		mov	r2, r0
 224:mp3.c         **** 	    	     head->filename[23] = 0x2e;
 1820              		.loc 1 224 12 is_stmt 1 view .LVU658
 225:mp3.c         **** 	    	     head->filename[24] = 0x2e;
 1821              		.loc 1 225 12 view .LVU659
 226:mp3.c         **** 	    	     head->filename[25] = 0x2e;
 1822              		.loc 1 226 12 view .LVU660
 227:mp3.c         **** 	    	     head->filename[26] = 0;
 1823              		.loc 1 227 12 view .LVU661
 228:mp3.c         **** 	    	     head->filename[27] = 0;
 1824              		.loc 1 228 12 view .LVU662
 229:mp3.c         **** 	    	     strcpy((char *)&head->filename[28],(char *)temp1);
 1825              		.loc 1 229 12 view .LVU663
 226:mp3.c         **** 	    	     head->filename[25] = 0x2e;
 1826              		.loc 1 226 31 is_stmt 0 view .LVU664
 1827 018c A361     		str	r3, [r4, #24]
 1828 018e D9E7     		b	.L146
 1829              	.LVL186:
 1830              	.L112:
 237:mp3.c         **** }
 1831              		.loc 1 237 28 discriminator 2 view .LVU665
 1832 0190 D4F89C20 		ldr	r2, [r4, #156]
 1833 0194 013E     		subs	r6, r6, #1
 1834              	.LVL187:
 237:mp3.c         **** }
 1835              		.loc 1 237 28 discriminator 2 view .LVU666
 1836 0196 B6B2     		uxth	r6, r6
 237:mp3.c         **** }
 1837              		.loc 1 237 20 discriminator 2 view .LVU667
 1838 0198 002A     		cmp	r2, #0
 1839 019a 3FF453AF 		beq	.L148
 1840 019e 0123     		movs	r3, #1
 1841 01a0 1446     		mov	r4, r2
 1842 01a2 4CE7     		b	.L114
 1843              	.L150:
 1844              		.align	2
 1845              	.L149:
 1846 01a4 00000000 		.word	music_number
 1847 01a8 00000000 		.word	head
 1848 01ac 2E2E0001 		.word	16789038
 1849              		.cfi_endproc
 1850              	.LFE35:
 1852              		.section	.rodata.mp3_name.str1.1,"aMS",%progbits,1
 1853              	.LC3:
 1854 0000 20257320 		.ascii	" %s \000"
 1854      00
 1855              		.section	.text.mp3_name,"ax",%progbits
 1856              		.align	1
 1857              		.global	mp3_name
 1858              		.syntax unified
 1859              		.thumb
 1860              		.thumb_func
 1861              		.fpu softvfp
 1863              	mp3_name:
 1864              	.LFB38:
 369:mp3.c         **** 
 370:mp3.c         **** 
 371:mp3.c         **** void mp3_name (void)
 372:mp3.c         **** {
 1865              		.loc 1 372 1 is_stmt 1 view -0
 1866              		.cfi_startproc
 1867              		@ args = 0, pretend = 0, frame = 48
 1868              		@ frame_needed = 0, uses_anonymous_args = 0
 373:mp3.c         ****       static unsigned char flag = 0,j = 0,count = 0;
 1869              		.loc 1 373 7 view .LVU669
 374:mp3.c         ****       unsigned char i,dig0,dig1,dig2;
 1870              		.loc 1 374 7 view .LVU670
 375:mp3.c         ****       unsigned char temp[48] = {0};
 1871              		.loc 1 375 7 view .LVU671
 372:mp3.c         ****       static unsigned char flag = 0,j = 0,count = 0;
 1872              		.loc 1 372 1 is_stmt 0 view .LVU672
 1873 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1874              		.cfi_def_cfa_offset 24
 1875              		.cfi_offset 4, -24
 1876              		.cfi_offset 5, -20
 1877              		.cfi_offset 6, -16
 1878              		.cfi_offset 7, -12
 1879              		.cfi_offset 8, -8
 1880              		.cfi_offset 14, -4
 1881              		.loc 1 375 21 view .LVU673
 1882 0004 0024     		movs	r4, #0
 372:mp3.c         ****       static unsigned char flag = 0,j = 0,count = 0;
 1883              		.loc 1 372 1 view .LVU674
 1884 0006 8CB0     		sub	sp, sp, #48
 1885              		.cfi_def_cfa_offset 72
 376:mp3.c         ****       if (flag == 0) {
 1886              		.loc 1 376 16 view .LVU675
 1887 0008 5E4D     		ldr	r5, .L178
 375:mp3.c         ****       unsigned char temp[48] = {0};
 1888              		.loc 1 375 21 view .LVU676
 1889 000a 2C22     		movs	r2, #44
 1890 000c 2146     		mov	r1, r4
 1891 000e 01A8     		add	r0, sp, #4
 1892 0010 0094     		str	r4, [sp]
 1893 0012 FFF7FEFF 		bl	memset
 1894              	.LVL188:
 1895              		.loc 1 376 7 is_stmt 1 view .LVU677
 1896              		.loc 1 376 16 is_stmt 0 view .LVU678
 1897 0016 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1898 0018 2F46     		mov	r7, r5
 1899              		.loc 1 376 10 view .LVU679
 1900 001a 002B     		cmp	r3, #0
 1901 001c 7FD1     		bne	.L152
 377:mp3.c         ****          if (count == 0) {
 1902              		.loc 1 377 10 is_stmt 1 view .LVU680
 1903              		.loc 1 377 20 is_stmt 0 view .LVU681
 1904 001e DFF88481 		ldr	r8, .L178+32
 1905 0022 98F80040 		ldrb	r4, [r8]	@ zero_extendqisi2
 1906 0026 4646     		mov	r6, r8
 1907              		.loc 1 377 13 view .LVU682
 1908 0028 002C     		cmp	r4, #0
 1909 002a 47D1     		bne	.L153
 378:mp3.c         ****             i = strlen((char *)mp3.mp3name);
 1910              		.loc 1 378 13 is_stmt 1 view .LVU683
 1911              		.loc 1 378 17 is_stmt 0 view .LVU684
 1912 002c 5648     		ldr	r0, .L178+4
 1913 002e FFF7FEFF 		bl	strlen
 1914              	.LVL189:
 379:mp3.c         ****             if (i > 18) {
 1915              		.loc 1 379 13 is_stmt 1 view .LVU685
 1916              		.loc 1 379 16 is_stmt 0 view .LVU686
 1917 0032 1228     		cmp	r0, #18
 1918 0034 544B     		ldr	r3, .L178+4
 1919 0036 37D9     		bls	.L175
 1920              	.LVL190:
 1921              	.L154:
 380:mp3.c         ****                i = 0;
 381:mp3.c         ****                while (1) {
 1922              		.loc 1 381 16 is_stmt 1 view .LVU687
 382:mp3.c         ****                      if (mp3.mp3name[i] < 0x80) i++;else i += 2;
 1923              		.loc 1 382 22 view .LVU688
 1924              		.loc 1 382 25 is_stmt 0 view .LVU689
 1925 0038 1A57     		ldrsb	r2, [r3, r4]
 1926 003a 002A     		cmp	r2, #0
 1927 003c 1EDB     		blt	.L156
 1928              		.loc 1 382 49 is_stmt 1 discriminator 1 view .LVU690
 1929              		.loc 1 382 50 is_stmt 0 discriminator 1 view .LVU691
 1930 003e 0134     		adds	r4, r4, #1
 1931              	.LVL191:
 1932              		.loc 1 382 50 discriminator 1 view .LVU692
 1933 0040 E4B2     		uxtb	r4, r4
 1934              	.LVL192:
 383:mp3.c         ****                      if (i == 18) {
 1935              		.loc 1 383 22 is_stmt 1 discriminator 1 view .LVU693
 1936              		.loc 1 383 25 is_stmt 0 discriminator 1 view .LVU694
 1937 0042 122C     		cmp	r4, #18
 1938 0044 F8D1     		bne	.L154
 1939              	.L157:
 384:mp3.c         ****                      	j = 1;
 1940              		.loc 1 384 23 is_stmt 1 view .LVU695
 1941              		.loc 1 384 25 is_stmt 0 view .LVU696
 1942 0046 0122     		movs	r2, #1
 1943 0048 504B     		ldr	r3, .L178+8
 1944 004a 1224     		movs	r4, #18
 1945              	.LVL193:
 1946              		.loc 1 384 25 view .LVU697
 1947 004c 1A70     		strb	r2, [r3]
 385:mp3.c         ****                      	break;
 1948              		.loc 1 385 23 is_stmt 1 view .LVU698
 386:mp3.c         ****                      } else if (i == 19) {
 387:mp3.c         ****                      	j = 0;
 388:mp3.c         ****                      	break;
 389:mp3.c         ****                      }
 390:mp3.c         ****                }
 391:mp3.c         ****                if (j == 1) {
 1949              		.loc 1 391 16 view .LVU699
 1950 004e 6A46     		mov	r2, sp
 1951 0050 1346     		mov	r3, r2
 1952 0052 4D49     		ldr	r1, .L178+4
 1953              	.L160:
 1954              	.LVL194:
 392:mp3.c         ****                   for (i=0;i<18;i++) temp[i] = mp3.mp3name[i];
 1955              		.loc 1 392 38 discriminator 3 view .LVU700
 1956              		.loc 1 392 59 is_stmt 0 discriminator 3 view .LVU701
 1957 0054 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 1958              	.LVL195:
 1959              		.loc 1 392 59 discriminator 3 view .LVU702
 1960 0058 013C     		subs	r4, r4, #1
 1961              		.loc 1 392 19 discriminator 3 view .LVU703
 1962 005a 14F0FF04 		ands	r4, r4, #255
 1963              		.loc 1 392 46 discriminator 3 view .LVU704
 1964 005e 02F8010B 		strb	r0, [r2], #1
 1965              		.loc 1 392 33 is_stmt 1 discriminator 3 view .LVU705
 1966              	.LVL196:
 1967              		.loc 1 392 28 discriminator 3 view .LVU706
 1968              		.loc 1 392 19 is_stmt 0 discriminator 3 view .LVU707
 1969 0062 F7D1     		bne	.L160
 1970              	.LVL197:
 1971              	.L176:
 393:mp3.c         ****                   lcd_printf(2,7," %s ",temp);
 394:mp3.c         ****                   flag = 0;
 395:mp3.c         ****                   count++;
 396:mp3.c         ****                } else {
 397:mp3.c         ****                   for (i=0;i<17;i++) temp[i] = mp3.mp3name[i];
 398:mp3.c         ****                   lcd_printf(2,7," %s ",temp);
 1972              		.loc 1 398 19 is_stmt 1 view .LVU708
 1973 0064 0721     		movs	r1, #7
 1974 0066 0220     		movs	r0, #2
 1975 0068 494A     		ldr	r2, .L178+12
 1976 006a FFF7FEFF 		bl	lcd_printf
 1977              	.LVL198:
 399:mp3.c         ****                   flag = 0;
 1978              		.loc 1 399 19 view .LVU709
 400:mp3.c         ****                   count++;
 1979              		.loc 1 400 24 is_stmt 0 view .LVU710
 1980 006e 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 399:mp3.c         ****                   flag = 0;
 1981              		.loc 1 399 24 view .LVU711
 1982 0070 3C70     		strb	r4, [r7]
 1983              		.loc 1 400 19 is_stmt 1 view .LVU712
 1984              		.loc 1 400 24 is_stmt 0 view .LVU713
 1985 0072 0133     		adds	r3, r3, #1
 1986 0074 3370     		strb	r3, [r6]
 1987              	.L151:
 401:mp3.c         ****                }
 402:mp3.c         ****             } else {
 403:mp3.c         ****                lcd_printf(2,7," %s ",mp3.mp3name);
 404:mp3.c         ****                flag = 1;
 405:mp3.c         ****                count = 0;
 406:mp3.c         ****             }
 407:mp3.c         ****          } else if (count == 1) {
 408:mp3.c         ****             if (j == 1) {
 409:mp3.c         ****                for (i=18;i<36;i++) temp[i-18] = mp3.mp3name[i];
 410:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 411:mp3.c         ****                flag = 1;
 412:mp3.c         ****                count = 0;
 413:mp3.c         ****                j = 0;
 414:mp3.c         ****             } else {
 415:mp3.c         ****                for (i=17;i<35;i++) temp[i-17] = mp3.mp3name[i];
 416:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 417:mp3.c         ****                flag = 1;
 418:mp3.c         ****                count = 0;
 419:mp3.c         ****             }
 420:mp3.c         ****          }
 421:mp3.c         ****       } else if (flag == 1) {
 422:mp3.c         ****       	 dig2 = (f_kbps / 100);
 423:mp3.c         ****       	 dig1 = ((f_kbps % 100) / 10);
 424:mp3.c         ****       	 dig0 = (f_kbps % 10);
 425:mp3.c         ****          mp3.mp3format[10] = dec2hex(dig2);
 426:mp3.c         ****          mp3.mp3format[11] = dec2hex(dig1);
 427:mp3.c         ****          mp3.mp3format[12] = dec2hex(dig0);
 428:mp3.c         ****          lcd_printf(2,8," %s ",mp3.mp3format);
 429:mp3.c         ****          flag++;
 430:mp3.c         ****       } else {
 431:mp3.c         ****          lcd_printf(2,9," %s ",mp3.mp3time);
 432:mp3.c         ****          flag = 0;
 433:mp3.c         ****       }
 434:mp3.c         **** }
 1988              		.loc 1 434 1 view .LVU714
 1989 0076 0CB0     		add	sp, sp, #48
 1990              		.cfi_remember_state
 1991              		.cfi_def_cfa_offset 24
 1992              		@ sp needed
 1993 0078 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1994              	.LVL199:
 1995              	.L156:
 1996              		.cfi_restore_state
 382:mp3.c         ****                      if (i == 18) {
 1997              		.loc 1 382 58 is_stmt 1 discriminator 2 view .LVU715
 382:mp3.c         ****                      if (i == 18) {
 1998              		.loc 1 382 60 is_stmt 0 discriminator 2 view .LVU716
 1999 007c 0234     		adds	r4, r4, #2
 2000              	.LVL200:
 382:mp3.c         ****                      if (i == 18) {
 2001              		.loc 1 382 60 discriminator 2 view .LVU717
 2002 007e E4B2     		uxtb	r4, r4
 2003              	.LVL201:
 383:mp3.c         ****                      	j = 1;
 2004              		.loc 1 383 22 is_stmt 1 discriminator 2 view .LVU718
 383:mp3.c         ****                      	j = 1;
 2005              		.loc 1 383 25 is_stmt 0 discriminator 2 view .LVU719
 2006 0080 122C     		cmp	r4, #18
 2007 0082 E0D0     		beq	.L157
 386:mp3.c         ****                      	j = 0;
 2008              		.loc 1 386 29 is_stmt 1 view .LVU720
 386:mp3.c         ****                      	j = 0;
 2009              		.loc 1 386 32 is_stmt 0 view .LVU721
 2010 0084 132C     		cmp	r4, #19
 2011 0086 D7D1     		bne	.L154
 387:mp3.c         ****                      	break;
 2012              		.loc 1 387 23 is_stmt 1 view .LVU722
 387:mp3.c         ****                      	break;
 2013              		.loc 1 387 25 is_stmt 0 view .LVU723
 2014 0088 0022     		movs	r2, #0
 2015 008a 404B     		ldr	r3, .L178+8
 2016 008c 1124     		movs	r4, #17
 2017              	.LVL202:
 387:mp3.c         ****                      	break;
 2018              		.loc 1 387 25 view .LVU724
 2019 008e 1A70     		strb	r2, [r3]
 388:mp3.c         ****                      }
 2020              		.loc 1 388 23 is_stmt 1 view .LVU725
 391:mp3.c         ****                   for (i=0;i<18;i++) temp[i] = mp3.mp3name[i];
 2021              		.loc 1 391 16 view .LVU726
 2022 0090 6A46     		mov	r2, sp
 2023 0092 1346     		mov	r3, r2
 2024 0094 3C49     		ldr	r1, .L178+4
 2025              	.L161:
 2026              	.LVL203:
 397:mp3.c         ****                   lcd_printf(2,7," %s ",temp);
 2027              		.loc 1 397 38 discriminator 3 view .LVU727
 397:mp3.c         ****                   lcd_printf(2,7," %s ",temp);
 2028              		.loc 1 397 59 is_stmt 0 discriminator 3 view .LVU728
 2029 0096 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 2030              	.LVL204:
 397:mp3.c         ****                   lcd_printf(2,7," %s ",temp);
 2031              		.loc 1 397 59 discriminator 3 view .LVU729
 2032 009a 013C     		subs	r4, r4, #1
 397:mp3.c         ****                   lcd_printf(2,7," %s ",temp);
 2033              		.loc 1 397 19 discriminator 3 view .LVU730
 2034 009c 14F0FF04 		ands	r4, r4, #255
 397:mp3.c         ****                   lcd_printf(2,7," %s ",temp);
 2035              		.loc 1 397 46 discriminator 3 view .LVU731
 2036 00a0 02F8010B 		strb	r0, [r2], #1
 397:mp3.c         ****                   lcd_printf(2,7," %s ",temp);
 2037              		.loc 1 397 33 is_stmt 1 discriminator 3 view .LVU732
 2038              	.LVL205:
 397:mp3.c         ****                   lcd_printf(2,7," %s ",temp);
 2039              		.loc 1 397 28 discriminator 3 view .LVU733
 397:mp3.c         ****                   lcd_printf(2,7," %s ",temp);
 2040              		.loc 1 397 19 is_stmt 0 discriminator 3 view .LVU734
 2041 00a4 F7D1     		bne	.L161
 2042 00a6 DDE7     		b	.L176
 2043              	.LVL206:
 2044              	.L175:
 403:mp3.c         ****                flag = 1;
 2045              		.loc 1 403 16 is_stmt 1 view .LVU735
 2046 00a8 0721     		movs	r1, #7
 2047 00aa 0220     		movs	r0, #2
 2048              	.LVL207:
 403:mp3.c         ****                flag = 1;
 2049              		.loc 1 403 16 is_stmt 0 view .LVU736
 2050 00ac 384A     		ldr	r2, .L178+12
 2051 00ae FFF7FEFF 		bl	lcd_printf
 2052              	.LVL208:
 404:mp3.c         ****                count = 0;
 2053              		.loc 1 404 16 is_stmt 1 view .LVU737
 404:mp3.c         ****                count = 0;
 2054              		.loc 1 404 21 is_stmt 0 view .LVU738
 2055 00b2 0123     		movs	r3, #1
 405:mp3.c         ****             }
 2056              		.loc 1 405 22 view .LVU739
 2057 00b4 88F80040 		strb	r4, [r8]
 404:mp3.c         ****                count = 0;
 2058              		.loc 1 404 21 view .LVU740
 2059 00b8 2B70     		strb	r3, [r5]
 405:mp3.c         ****             }
 2060              		.loc 1 405 16 is_stmt 1 view .LVU741
 2061 00ba DCE7     		b	.L151
 2062              	.L153:
 407:mp3.c         ****             if (j == 1) {
 2063              		.loc 1 407 17 view .LVU742
 407:mp3.c         ****             if (j == 1) {
 2064              		.loc 1 407 20 is_stmt 0 view .LVU743
 2065 00bc 012C     		cmp	r4, #1
 2066 00be DAD1     		bne	.L151
 408:mp3.c         ****                for (i=18;i<36;i++) temp[i-18] = mp3.mp3name[i];
 2067              		.loc 1 408 13 is_stmt 1 view .LVU744
 408:mp3.c         ****                for (i=18;i<36;i++) temp[i-18] = mp3.mp3name[i];
 2068              		.loc 1 408 19 is_stmt 0 view .LVU745
 2069 00c0 324D     		ldr	r5, .L178+8
 408:mp3.c         ****                for (i=18;i<36;i++) temp[i-18] = mp3.mp3name[i];
 2070              		.loc 1 408 16 view .LVU746
 2071 00c2 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 2072 00c4 012A     		cmp	r2, #1
 2073 00c6 15D1     		bne	.L163
 2074 00c8 6B46     		mov	r3, sp
 2075 00ca 1224     		movs	r4, #18
 2076 00cc 314A     		ldr	r2, .L178+16
 2077              	.L164:
 2078              	.LVL209:
 409:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2079              		.loc 1 409 36 is_stmt 1 discriminator 3 view .LVU747
 409:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2080              		.loc 1 409 60 is_stmt 0 discriminator 3 view .LVU748
 2081 00ce 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 2082              	.LVL210:
 409:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2083              		.loc 1 409 60 discriminator 3 view .LVU749
 2084 00d2 013C     		subs	r4, r4, #1
 409:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2085              		.loc 1 409 16 discriminator 3 view .LVU750
 2086 00d4 14F0FF04 		ands	r4, r4, #255
 409:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2087              		.loc 1 409 47 discriminator 3 view .LVU751
 2088 00d8 03F8011B 		strb	r1, [r3], #1
 409:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2089              		.loc 1 409 31 is_stmt 1 discriminator 3 view .LVU752
 2090              	.LVL211:
 409:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2091              		.loc 1 409 26 discriminator 3 view .LVU753
 409:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2092              		.loc 1 409 16 is_stmt 0 discriminator 3 view .LVU754
 2093 00dc F7D1     		bne	.L164
 410:mp3.c         ****                flag = 1;
 2094              		.loc 1 410 16 is_stmt 1 view .LVU755
 2095 00de 6B46     		mov	r3, sp
 2096 00e0 0721     		movs	r1, #7
 2097 00e2 0220     		movs	r0, #2
 2098 00e4 2A4A     		ldr	r2, .L178+12
 2099              	.LVL212:
 410:mp3.c         ****                flag = 1;
 2100              		.loc 1 410 16 is_stmt 0 view .LVU756
 2101 00e6 FFF7FEFF 		bl	lcd_printf
 2102              	.LVL213:
 411:mp3.c         ****                count = 0;
 2103              		.loc 1 411 16 is_stmt 1 view .LVU757
 411:mp3.c         ****                count = 0;
 2104              		.loc 1 411 21 is_stmt 0 view .LVU758
 2105 00ea 0123     		movs	r3, #1
 412:mp3.c         ****                j = 0;
 2106              		.loc 1 412 22 view .LVU759
 2107 00ec 3470     		strb	r4, [r6]
 411:mp3.c         ****                count = 0;
 2108              		.loc 1 411 21 view .LVU760
 2109 00ee 3B70     		strb	r3, [r7]
 412:mp3.c         ****                j = 0;
 2110              		.loc 1 412 16 is_stmt 1 view .LVU761
 413:mp3.c         ****             } else {
 2111              		.loc 1 413 16 view .LVU762
 2112              	.L177:
 432:mp3.c         ****       }
 2113              		.loc 1 432 10 view .LVU763
 432:mp3.c         ****       }
 2114              		.loc 1 432 15 is_stmt 0 view .LVU764
 2115 00f0 2C70     		strb	r4, [r5]
 2116              		.loc 1 434 1 view .LVU765
 2117 00f2 C0E7     		b	.L151
 2118              	.L163:
 2119 00f4 6B46     		mov	r3, sp
 408:mp3.c         ****                for (i=18;i<36;i++) temp[i-18] = mp3.mp3name[i];
 2120              		.loc 1 408 16 view .LVU766
 2121 00f6 1224     		movs	r4, #18
 2122 00f8 274A     		ldr	r2, .L178+20
 2123              	.L165:
 2124              	.LVL214:
 415:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2125              		.loc 1 415 36 is_stmt 1 discriminator 3 view .LVU767
 415:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2126              		.loc 1 415 60 is_stmt 0 discriminator 3 view .LVU768
 2127 00fa 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 2128              	.LVL215:
 415:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2129              		.loc 1 415 60 discriminator 3 view .LVU769
 2130 00fe 013C     		subs	r4, r4, #1
 415:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2131              		.loc 1 415 16 discriminator 3 view .LVU770
 2132 0100 14F0FF04 		ands	r4, r4, #255
 415:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2133              		.loc 1 415 47 discriminator 3 view .LVU771
 2134 0104 03F8011B 		strb	r1, [r3], #1
 415:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2135              		.loc 1 415 31 is_stmt 1 discriminator 3 view .LVU772
 2136              	.LVL216:
 415:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2137              		.loc 1 415 26 discriminator 3 view .LVU773
 415:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2138              		.loc 1 415 16 is_stmt 0 discriminator 3 view .LVU774
 2139 0108 F7D1     		bne	.L165
 416:mp3.c         ****                flag = 1;
 2140              		.loc 1 416 16 is_stmt 1 view .LVU775
 2141 010a 6B46     		mov	r3, sp
 2142 010c 0721     		movs	r1, #7
 2143 010e 0220     		movs	r0, #2
 2144 0110 1F4A     		ldr	r2, .L178+12
 2145              	.LVL217:
 416:mp3.c         ****                flag = 1;
 2146              		.loc 1 416 16 is_stmt 0 view .LVU776
 2147 0112 FFF7FEFF 		bl	lcd_printf
 2148              	.LVL218:
 417:mp3.c         ****                count = 0;
 2149              		.loc 1 417 16 is_stmt 1 view .LVU777
 417:mp3.c         ****                count = 0;
 2150              		.loc 1 417 21 is_stmt 0 view .LVU778
 2151 0116 0123     		movs	r3, #1
 418:mp3.c         ****             }
 2152              		.loc 1 418 22 view .LVU779
 2153 0118 3470     		strb	r4, [r6]
 417:mp3.c         ****                count = 0;
 2154              		.loc 1 417 21 view .LVU780
 2155 011a 3B70     		strb	r3, [r7]
 418:mp3.c         ****             }
 2156              		.loc 1 418 16 is_stmt 1 view .LVU781
 2157 011c ABE7     		b	.L151
 2158              	.L152:
 421:mp3.c         ****       	 dig2 = (f_kbps / 100);
 2159              		.loc 1 421 14 view .LVU782
 421:mp3.c         ****       	 dig2 = (f_kbps / 100);
 2160              		.loc 1 421 17 is_stmt 0 view .LVU783
 2161 011e 012B     		cmp	r3, #1
 2162 0120 29D1     		bne	.L166
 422:mp3.c         ****       	 dig1 = ((f_kbps % 100) / 10);
 2163              		.loc 1 422 9 is_stmt 1 view .LVU784
 422:mp3.c         ****       	 dig1 = ((f_kbps % 100) / 10);
 2164              		.loc 1 422 14 is_stmt 0 view .LVU785
 2165 0122 6426     		movs	r6, #100
 2166 0124 1D4B     		ldr	r3, .L178+24
 2167 0126 1C88     		ldrh	r4, [r3]
 2168              	.LVL219:
 423:mp3.c         ****       	 dig0 = (f_kbps % 10);
 2169              		.loc 1 423 9 is_stmt 1 view .LVU786
 424:mp3.c         ****          mp3.mp3format[10] = dec2hex(dig2);
 2170              		.loc 1 424 9 view .LVU787
 425:mp3.c         ****          mp3.mp3format[11] = dec2hex(dig1);
 2171              		.loc 1 425 10 view .LVU788
 422:mp3.c         ****       	 dig1 = ((f_kbps % 100) / 10);
 2172              		.loc 1 422 14 is_stmt 0 view .LVU789
 2173 0128 B4FBF6F2 		udiv	r2, r4, r6
 425:mp3.c         ****          mp3.mp3format[11] = dec2hex(dig1);
 2174              		.loc 1 425 30 view .LVU790
 2175 012c D0B2     		uxtb	r0, r2
 2176 012e FFF7FEFF 		bl	dec2hex
 2177              	.LVL220:
 425:mp3.c         ****          mp3.mp3format[11] = dec2hex(dig1);
 2178              		.loc 1 425 28 view .LVU791
 2179 0132 1549     		ldr	r1, .L178+4
 2180 0134 81F85F00 		strb	r0, [r1, #95]
 426:mp3.c         ****          mp3.mp3format[12] = dec2hex(dig0);
 2181              		.loc 1 426 10 is_stmt 1 view .LVU792
 423:mp3.c         ****       	 dig0 = (f_kbps % 10);
 2182              		.loc 1 423 14 is_stmt 0 view .LVU793
 2183 0138 06FB1240 		mls	r0, r6, r2, r4
 2184 013c 0A22     		movs	r2, #10
 2185 013e 80B2     		uxth	r0, r0
 2186 0140 B0FBF2F0 		udiv	r0, r0, r2
 426:mp3.c         ****          mp3.mp3format[12] = dec2hex(dig0);
 2187              		.loc 1 426 30 view .LVU794
 2188 0144 C0B2     		uxtb	r0, r0
 2189 0146 FFF7FEFF 		bl	dec2hex
 2190              	.LVL221:
 426:mp3.c         ****          mp3.mp3format[12] = dec2hex(dig0);
 2191              		.loc 1 426 28 view .LVU795
 2192 014a 81F86000 		strb	r0, [r1, #96]
 427:mp3.c         ****          lcd_printf(2,8," %s ",mp3.mp3format);
 2193              		.loc 1 427 10 is_stmt 1 view .LVU796
 424:mp3.c         ****          mp3.mp3format[10] = dec2hex(dig2);
 2194              		.loc 1 424 14 is_stmt 0 view .LVU797
 2195 014e B4FBF2F0 		udiv	r0, r4, r2
 2196 0152 02FB1040 		mls	r0, r2, r0, r4
 427:mp3.c         ****          lcd_printf(2,8," %s ",mp3.mp3format);
 2197              		.loc 1 427 30 view .LVU798
 2198 0156 C0B2     		uxtb	r0, r0
 2199 0158 FFF7FEFF 		bl	dec2hex
 2200              	.LVL222:
 428:mp3.c         ****          flag++;
 2201              		.loc 1 428 10 view .LVU799
 2202 015c 0C4A     		ldr	r2, .L178+12
 427:mp3.c         ****          lcd_printf(2,8," %s ",mp3.mp3format);
 2203              		.loc 1 427 28 view .LVU800
 2204 015e 81F86100 		strb	r0, [r1, #97]
 428:mp3.c         ****          flag++;
 2205              		.loc 1 428 10 is_stmt 1 view .LVU801
 2206 0162 01F15503 		add	r3, r1, #85
 2207 0166 0220     		movs	r0, #2
 2208 0168 0821     		movs	r1, #8
 2209 016a FFF7FEFF 		bl	lcd_printf
 2210              	.LVL223:
 429:mp3.c         ****       } else {
 2211              		.loc 1 429 10 view .LVU802
 429:mp3.c         ****       } else {
 2212              		.loc 1 429 14 is_stmt 0 view .LVU803
 2213 016e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 2214 0170 0133     		adds	r3, r3, #1
 2215 0172 2B70     		strb	r3, [r5]
 2216 0174 7FE7     		b	.L151
 2217              	.LVL224:
 2218              	.L166:
 431:mp3.c         ****          flag = 0;
 2219              		.loc 1 431 10 is_stmt 1 view .LVU804
 2220 0176 0921     		movs	r1, #9
 2221 0178 0220     		movs	r0, #2
 2222 017a 094B     		ldr	r3, .L178+28
 2223 017c 044A     		ldr	r2, .L178+12
 2224 017e FFF7FEFF 		bl	lcd_printf
 2225              	.LVL225:
 2226 0182 B5E7     		b	.L177
 2227              	.L179:
 2228              		.align	2
 2229              	.L178:
 2230 0184 00000000 		.word	.LANCHOR4
 2231 0188 00000000 		.word	mp3
 2232 018c 00000000 		.word	.LANCHOR6
 2233 0190 00000000 		.word	.LC3
 2234 0194 12000000 		.word	mp3+18
 2235 0198 11000000 		.word	mp3+17
 2236 019c 00000000 		.word	.LANCHOR0
 2237 01a0 41000000 		.word	mp3+65
 2238 01a4 00000000 		.word	.LANCHOR5
 2239              		.cfi_endproc
 2240              	.LFE38:
 2242              		.section	.text.read_byte_lrcbuf,"ax",%progbits
 2243              		.align	1
 2244              		.global	read_byte_lrcbuf
 2245              		.syntax unified
 2246              		.thumb
 2247              		.thumb_func
 2248              		.fpu softvfp
 2250              	read_byte_lrcbuf:
 2251              	.LVL226:
 2252              	.LFB40:
 435:mp3.c         **** 
 436:mp3.c         **** 
 437:mp3.c         **** unsigned char find_lrc (unsigned char *name)
 438:mp3.c         **** {
 439:mp3.c         ****       unsigned char i = 0;
 440:mp3.c         ****       unsigned short j;
 441:mp3.c         ****       unsigned char record[] = {"0:/lrc/"};
 442:mp3.c         ****       char *fn;
 443:mp3.c         **** #if _USE_LFN
 444:mp3.c         ****       static char lfn[_MAX_LFN * (_DF1S ? 2 : 1) + 1];
 445:mp3.c         ****       fno.lfname = lfn;
 446:mp3.c         ****       fno.lfsize = sizeof(lfn);
 447:mp3.c         **** #endif
 448:mp3.c         ****       lrc_read_init();
 449:mp3.c         ****       for (j=0;j<7000;j++) lrc_buffer[j] = 0;
 450:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 451:mp3.c         ****       for (j=0;j<512;j++) lrc_data[j] = 0;
 452:mp3.c         ****       res = f_opendir(&dirs,"0:/lrc");
 453:mp3.c         ****       while ((f_readdir(&dirs, &fno) == FR_OK) && fno.fname[0]) {
 454:mp3.c         **** #if _USE_LFN
 455:mp3.c         ****             fn = *fno.lfname ? fno.lfname : fno.fname;
 456:mp3.c         **** #else
 457:mp3.c         ****             fn = fno.fname;
 458:mp3.c         **** #endif
 459:mp3.c         ****             if (strcasecmp((char *)fn,(char *)name) == 0) {
 460:mp3.c         ****                strcpy((char *)fn,(char *)record);
 461:mp3.c         ****                strcpy((char *)&fn[7],(char *)name);
 462:mp3.c         ****                bw = f_open(&fap,fn,FA_OPEN_EXISTING | FA_READ);
 463:mp3.c         ****                if (bw) break;
 464:mp3.c         ****                get_tag();
 465:mp3.c         ****                if (i == 0) break;
 466:mp3.c         ****                init_tag();
 467:mp3.c         ****                copy_lrc_to_ram();
 468:mp3.c         ****                return 1;
 469:mp3.c         ****             }
 470:mp3.c         ****       }
 471:mp3.c         ****       return 0;
 472:mp3.c         **** }
 473:mp3.c         **** 
 474:mp3.c         **** 
 475:mp3.c         **** unsigned char read_byte_lrcbuf (unsigned short addr)
 476:mp3.c         **** {
 2253              		.loc 1 476 1 view -0
 2254              		.cfi_startproc
 2255              		@ args = 0, pretend = 0, frame = 0
 2256              		@ frame_needed = 0, uses_anonymous_args = 0
 2257              		@ link register save eliminated.
 477:mp3.c         ****       if (addr < 7000) return lrc_buffer[addr];else return 0xff;
 2258              		.loc 1 477 7 view .LVU806
 2259              		.loc 1 477 10 is_stmt 0 view .LVU807
 2260 0000 41F65733 		movw	r3, #6999
 2261 0004 9842     		cmp	r0, r3
 2262              		.loc 1 477 24 is_stmt 1 view .LVU808
 2263              		.loc 1 477 41 is_stmt 0 view .LVU809
 2264 0006 9ABF     		itte	ls
 2265 0008 014B     		ldrls	r3, .L183
 2266 000a 185C     		ldrbls	r0, [r3, r0]	@ zero_extendqisi2
 2267              	.LVL227:
 2268              		.loc 1 477 60 view .LVU810
 2269 000c FF20     		movhi	r0, #255
 478:mp3.c         **** }
 2270              		.loc 1 478 1 view .LVU811
 2271 000e 7047     		bx	lr
 2272              	.L184:
 2273              		.align	2
 2274              	.L183:
 2275 0010 00000000 		.word	lrc_buffer
 2276              		.cfi_endproc
 2277              	.LFE40:
 2279              		.section	.text.write_byte_lrcbuf,"ax",%progbits
 2280              		.align	1
 2281              		.global	write_byte_lrcbuf
 2282              		.syntax unified
 2283              		.thumb
 2284              		.thumb_func
 2285              		.fpu softvfp
 2287              	write_byte_lrcbuf:
 2288              	.LVL228:
 2289              	.LFB41:
 479:mp3.c         **** 
 480:mp3.c         **** 
 481:mp3.c         **** unsigned char write_byte_lrcbuf (unsigned short addr,unsigned char data)
 482:mp3.c         **** {
 2290              		.loc 1 482 1 is_stmt 1 view -0
 2291              		.cfi_startproc
 2292              		@ args = 0, pretend = 0, frame = 0
 2293              		@ frame_needed = 0, uses_anonymous_args = 0
 2294              		@ link register save eliminated.
 483:mp3.c         ****       if (addr < 7000) lrc_buffer[addr] = data;else return 0xff;
 2295              		.loc 1 483 7 view .LVU813
 2296              		.loc 1 483 10 is_stmt 0 view .LVU814
 2297 0000 41F65733 		movw	r3, #6999
 2298 0004 9842     		cmp	r0, r3
 2299              		.loc 1 483 24 is_stmt 1 view .LVU815
 2300              		.loc 1 483 41 is_stmt 0 view .LVU816
 2301 0006 9DBF     		ittte	ls
 2302 0008 024B     		ldrls	r3, .L188
 2303 000a 1954     		strbls	r1, [r3, r0]
 484:mp3.c         ****       return 1;
 2304              		.loc 1 484 7 is_stmt 1 view .LVU817
 2305              		.loc 1 484 14 is_stmt 0 view .LVU818
 2306 000c 0120     		movls	r0, #1
 2307              	.LVL229:
 483:mp3.c         ****       if (addr < 7000) lrc_buffer[addr] = data;else return 0xff;
 2308              		.loc 1 483 60 view .LVU819
 2309 000e FF20     		movhi	r0, #255
 485:mp3.c         **** }
 2310              		.loc 1 485 1 view .LVU820
 2311 0010 7047     		bx	lr
 2312              	.L189:
 2313 0012 00BF     		.align	2
 2314              	.L188:
 2315 0014 00000000 		.word	lrc_buffer
 2316              		.cfi_endproc
 2317              	.LFE41:
 2319              		.section	.text.lrc_read_init,"ax",%progbits
 2320              		.align	1
 2321              		.global	lrc_read_init
 2322              		.syntax unified
 2323              		.thumb
 2324              		.thumb_func
 2325              		.fpu softvfp
 2327              	lrc_read_init:
 2328              	.LFB43:
 486:mp3.c         **** 
 487:mp3.c         **** 
 488:mp3.c         **** void lyric_display_ctrl (void)
 489:mp3.c         **** {
 490:mp3.c         ****       static unsigned int time = 0;
 491:mp3.c         ****       static unsigned char ms = 0;
 492:mp3.c         ****       unsigned int t1;
 493:mp3.c         ****       if (!bt30ms) return;
 494:mp3.c         ****       ms += 3;
 495:mp3.c         ****       bt30ms = 0;
 496:mp3.c         ****       t1 = (((float)fsrc.fsize / f_kbps) / 125) * (propos);
 497:mp3.c         ****       if (t1 != time) {
 498:mp3.c         **** 	 time = t1;
 499:mp3.c         **** 	 ms = 0;
 500:mp3.c         **** 	 return;
 501:mp3.c         ****       }
 502:mp3.c         ****       if (((t1 == lyric.t_sec) && (ms >= lyric.t_ms)) || (t1 > lyric.t_sec)) {
 503:mp3.c         **** 	 read_lrc_file_data();
 504:mp3.c         ****       }
 505:mp3.c         **** }
 506:mp3.c         **** 
 507:mp3.c         **** 
 508:mp3.c         **** void lrc_read_init (void)
 509:mp3.c         **** {
 2329              		.loc 1 509 1 is_stmt 1 view -0
 2330              		.cfi_startproc
 2331              		@ args = 0, pretend = 0, frame = 0
 2332              		@ frame_needed = 0, uses_anonymous_args = 0
 2333              		@ link register save eliminated.
 510:mp3.c         ****       lyric.t_sec = 0;
 2334              		.loc 1 510 7 view .LVU822
 2335              		.loc 1 510 19 is_stmt 0 view .LVU823
 2336 0000 0022     		movs	r2, #0
 2337 0002 044B     		ldr	r3, .L191
 2338 0004 5A80     		strh	r2, [r3, #2]	@ movhi
 511:mp3.c         ****       lyric.t_ms = 0;
 2339              		.loc 1 511 7 is_stmt 1 view .LVU824
 2340              		.loc 1 511 18 is_stmt 0 view .LVU825
 2341 0006 1A71     		strb	r2, [r3, #4]
 512:mp3.c         ****       lyric.tagcnt = 0;
 2342              		.loc 1 512 7 is_stmt 1 view .LVU826
 2343              		.loc 1 512 20 is_stmt 0 view .LVU827
 2344 0008 1A72     		strb	r2, [r3, #8]
 513:mp3.c         ****       lyric.lrcoff = 0;
 2345              		.loc 1 513 7 is_stmt 1 view .LVU828
 2346              		.loc 1 513 20 is_stmt 0 view .LVU829
 2347 000a DA80     		strh	r2, [r3, #6]	@ movhi
 514:mp3.c         ****       lyric.first = 1;
 2348              		.loc 1 514 7 is_stmt 1 view .LVU830
 2349              		.loc 1 514 19 is_stmt 0 view .LVU831
 2350 000c 0122     		movs	r2, #1
 2351 000e 1A70     		strb	r2, [r3]
 515:mp3.c         **** }
 2352              		.loc 1 515 1 view .LVU832
 2353 0010 7047     		bx	lr
 2354              	.L192:
 2355 0012 00BF     		.align	2
 2356              	.L191:
 2357 0014 00000000 		.word	lyric
 2358              		.cfi_endproc
 2359              	.LFE43:
 2361              		.section	.text.read_lrc_file_data,"ax",%progbits
 2362              		.align	1
 2363              		.global	read_lrc_file_data
 2364              		.syntax unified
 2365              		.thumb
 2366              		.thumb_func
 2367              		.fpu softvfp
 2369              	read_lrc_file_data:
 2370              	.LFB44:
 516:mp3.c         **** 
 517:mp3.c         **** 
 518:mp3.c         **** void read_lrc_file_data (void)
 519:mp3.c         **** {
 2371              		.loc 1 519 1 is_stmt 1 view -0
 2372              		.cfi_startproc
 2373              		@ args = 0, pretend = 0, frame = 0
 2374              		@ frame_needed = 0, uses_anonymous_args = 0
 520:mp3.c         ****       unsigned char *lbuf = (unsigned char *)tag_table;
 2375              		.loc 1 520 7 view .LVU834
 2376              	.LVL230:
 521:mp3.c         ****       unsigned char c;
 2377              		.loc 1 521 7 view .LVU835
 522:mp3.c         ****       unsigned char cc;
 2378              		.loc 1 522 7 view .LVU836
 523:mp3.c         ****       unsigned short t;
 2379              		.loc 1 523 7 view .LVU837
 524:mp3.c         ****       if (lyric.tagcnt >= lrc_tag_cnt) return;
 2380              		.loc 1 524 7 view .LVU838
 519:mp3.c         ****       unsigned char *lbuf = (unsigned char *)tag_table;
 2381              		.loc 1 519 1 is_stmt 0 view .LVU839
 2382 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2383              		.cfi_def_cfa_offset 32
 2384              		.cfi_offset 3, -32
 2385              		.cfi_offset 4, -28
 2386              		.cfi_offset 5, -24
 2387              		.cfi_offset 6, -20
 2388              		.cfi_offset 7, -16
 2389              		.cfi_offset 8, -12
 2390              		.cfi_offset 9, -8
 2391              		.cfi_offset 14, -4
 2392              		.loc 1 524 16 view .LVU840
 2393 0004 554C     		ldr	r4, .L233
 2394              		.loc 1 524 10 view .LVU841
 2395 0006 564B     		ldr	r3, .L233+4
 2396 0008 227A     		ldrb	r2, [r4, #8]	@ zero_extendqisi2
 2397 000a 1B88     		ldrh	r3, [r3]
 2398 000c 9A42     		cmp	r2, r3
 2399 000e 80F08F80 		bcs	.L193
 2400              	.LBB129:
 2401              	.LBI129:
 518:mp3.c         **** {
 2402              		.loc 1 518 6 is_stmt 1 view .LVU842
 2403              	.LBB130:
 525:mp3.c         ****       lyric.t_sec = 0xffff;
 2404              		.loc 1 525 7 view .LVU843
 2405              		.loc 1 525 19 is_stmt 0 view .LVU844
 2406 0012 4FF6FF73 		movw	r3, #65535
 2407 0016 6380     		strh	r3, [r4, #2]	@ movhi
 526:mp3.c         ****       lyric.t_ms = 0;
 2408              		.loc 1 526 7 is_stmt 1 view .LVU845
 2409              		.loc 1 526 18 is_stmt 0 view .LVU846
 2410 0018 0023     		movs	r3, #0
 2411 001a 2371     		strb	r3, [r4, #4]
 527:mp3.c         ****       t = 0;
 2412              		.loc 1 527 7 is_stmt 1 view .LVU847
 2413              	.LVL231:
 528:mp3.c         ****       if (!lyric.first) {
 2414              		.loc 1 528 7 view .LVU848
 2415              		.loc 1 528 10 is_stmt 0 view .LVU849
 2416 001c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2417 001e 23BB     		cbnz	r3, .L198
 2418 0020 E688     		ldrh	r6, [r4, #6]
 2419              	.LBB131:
 2420              	.LBB132:
 477:mp3.c         **** }
 2421              		.loc 1 477 10 view .LVU850
 2422 0022 41F6573C 		movw	ip, #6999
 2423              	.LBE132:
 2424              	.LBE131:
 2425              		.loc 1 528 10 view .LVU851
 2426 0026 3246     		mov	r2, r6
 529:mp3.c         **** 	 while (1) {
 530:mp3.c         **** 	       c = read_byte_lrcbuf(lyric.lrcoff++);
 531:mp3.c         **** 	       if (c == '[') {
 532:mp3.c         **** 		  cc = read_byte_lrcbuf(lyric.lrcoff);
 533:mp3.c         **** 		  if (cc <= 9) {
 534:mp3.c         **** 		     lyric.lrcoff--;
 535:mp3.c         **** 		     break;
 536:mp3.c         **** 		  }
 537:mp3.c         **** 	       }
 538:mp3.c         **** 	       if (c == 0x0d || c == 0x0a || c== '\0') break;
 2427              		.loc 1 538 36 view .LVU852
 2428 0028 42F2014E 		movw	lr, #9217
 2429              	.LBB137:
 2430              	.LBB138:
 477:mp3.c         **** }
 2431              		.loc 1 477 10 view .LVU853
 2432 002c 41F65838 		movw	r8, #7000
 2433 0030 4C4D     		ldr	r5, .L233+8
 2434              	.LBE138:
 2435              	.LBE137:
 2436              	.LBB140:
 2437              	.LBB133:
 477:mp3.c         **** }
 2438              		.loc 1 477 41 view .LVU854
 2439 0032 4D4F     		ldr	r7, .L233+12
 2440              	.LVL232:
 2441              	.L197:
 477:mp3.c         **** }
 2442              		.loc 1 477 41 view .LVU855
 2443 0034 911B     		subs	r1, r2, r6
 2444              	.LBE133:
 2445              	.LBE140:
 530:mp3.c         **** 	       if (c == '[') {
 2446              		.loc 1 530 13 view .LVU856
 2447 0036 531C     		adds	r3, r2, #1
 2448              	.LBB141:
 2449              	.LBB134:
 477:mp3.c         **** }
 2450              		.loc 1 477 10 view .LVU857
 2451 0038 6245     		cmp	r2, ip
 2452 003a 89B2     		uxth	r1, r1
 2453              	.LVL233:
 477:mp3.c         **** }
 2454              		.loc 1 477 10 view .LVU858
 2455              	.LBE134:
 2456              	.LBE141:
 529:mp3.c         **** 	 while (1) {
 2457              		.loc 1 529 3 is_stmt 1 view .LVU859
 530:mp3.c         **** 	       if (c == '[') {
 2458              		.loc 1 530 9 view .LVU860
 530:mp3.c         **** 	       if (c == '[') {
 2459              		.loc 1 530 13 is_stmt 0 view .LVU861
 2460 003c 9BB2     		uxth	r3, r3
 2461              	.LVL234:
 2462              	.LBB142:
 2463              	.LBI131:
 475:mp3.c         **** {
 2464              		.loc 1 475 15 is_stmt 1 view .LVU862
 2465              	.LBB135:
 477:mp3.c         **** }
 2466              		.loc 1 477 7 view .LVU863
 477:mp3.c         **** }
 2467              		.loc 1 477 10 is_stmt 0 view .LVU864
 2468 003e 34D8     		bhi	.L213
 477:mp3.c         **** }
 2469              		.loc 1 477 24 is_stmt 1 view .LVU865
 477:mp3.c         **** }
 2470              		.loc 1 477 41 is_stmt 0 view .LVU866
 2471 0040 B85C     		ldrb	r0, [r7, r2]	@ zero_extendqisi2
 2472              	.LVL235:
 477:mp3.c         **** }
 2473              		.loc 1 477 41 view .LVU867
 2474              	.LBE135:
 2475              	.LBE142:
 531:mp3.c         **** 		  cc = read_byte_lrcbuf(lyric.lrcoff);
 2476              		.loc 1 531 9 is_stmt 1 view .LVU868
 531:mp3.c         **** 		  cc = read_byte_lrcbuf(lyric.lrcoff);
 2477              		.loc 1 531 12 is_stmt 0 view .LVU869
 2478 0042 5B28     		cmp	r0, #91
 2479 0044 29D1     		bne	.L200
 532:mp3.c         **** 		  if (cc <= 9) {
 2480              		.loc 1 532 5 is_stmt 1 view .LVU870
 2481              	.LVL236:
 2482              	.LBB143:
 2483              	.LBI137:
 475:mp3.c         **** {
 2484              		.loc 1 475 15 view .LVU871
 2485              	.LBB139:
 477:mp3.c         **** }
 2486              		.loc 1 477 7 view .LVU872
 477:mp3.c         **** }
 2487              		.loc 1 477 10 is_stmt 0 view .LVU873
 2488 0046 4345     		cmp	r3, r8
 2489 0048 30D0     		beq	.L199
 477:mp3.c         **** }
 2490              		.loc 1 477 24 is_stmt 1 view .LVU874
 2491              	.LVL237:
 477:mp3.c         **** }
 2492              		.loc 1 477 24 is_stmt 0 view .LVU875
 2493              	.LBE139:
 2494              	.LBE143:
 533:mp3.c         **** 		     lyric.lrcoff--;
 2495              		.loc 1 533 5 is_stmt 1 view .LVU876
 533:mp3.c         **** 		     lyric.lrcoff--;
 2496              		.loc 1 533 8 is_stmt 0 view .LVU877
 2497 004a 17F80390 		ldrb	r9, [r7, r3]	@ zero_extendqisi2
 2498 004e B9F1090F 		cmp	r9, #9
 2499 0052 2BD8     		bhi	.L199
 534:mp3.c         **** 		     break;
 2500              		.loc 1 534 8 is_stmt 1 view .LVU878
 534:mp3.c         **** 		     break;
 2501              		.loc 1 534 20 is_stmt 0 view .LVU879
 2502 0054 E280     		strh	r2, [r4, #6]	@ movhi
 535:mp3.c         **** 		  }
 2503              		.loc 1 535 8 is_stmt 1 view .LVU880
 2504              	.LVL238:
 2505              	.L201:
 539:mp3.c         **** 	       lbuf[t] = c;
 540:mp3.c         **** 	       t++;
 541:mp3.c         **** 	 }
 542:mp3.c         **** 	 lbuf[t] = '\0';
 2506              		.loc 1 542 3 view .LVU881
 2507              		.loc 1 542 11 is_stmt 0 view .LVU882
 2508 0056 0023     		movs	r3, #0
 543:mp3.c         ****          if (t > 2) lcd_printf(2,10," %s ",lbuf);
 2509              		.loc 1 543 13 view .LVU883
 2510 0058 0229     		cmp	r1, #2
 542:mp3.c         ****          if (t > 2) lcd_printf(2,10," %s ",lbuf);
 2511              		.loc 1 542 11 view .LVU884
 2512 005a 6B54     		strb	r3, [r5, r1]
 2513              		.loc 1 543 10 is_stmt 1 view .LVU885
 2514              		.loc 1 543 13 is_stmt 0 view .LVU886
 2515 005c 05D9     		bls	.L198
 2516              		.loc 1 543 21 is_stmt 1 view .LVU887
 2517 005e 0A21     		movs	r1, #10
 2518              	.LVL239:
 2519              		.loc 1 543 21 is_stmt 0 view .LVU888
 2520 0060 0220     		movs	r0, #2
 2521 0062 404B     		ldr	r3, .L233+8
 2522 0064 414A     		ldr	r2, .L233+16
 2523 0066 FFF7FEFF 		bl	lcd_printf
 2524              	.LVL240:
 2525              	.L198:
 544:mp3.c         ****       }
 545:mp3.c         ****       lyric.first = 0;
 2526              		.loc 1 545 7 is_stmt 1 view .LVU889
 2527              		.loc 1 545 19 is_stmt 0 view .LVU890
 2528 006a 0021     		movs	r1, #0
 546:mp3.c         ****       while (1) {
 547:mp3.c         **** 	    if (lyric.lrcoff > 7000) return;
 2529              		.loc 1 547 9 view .LVU891
 2530 006c 41F65837 		movw	r7, #7000
 545:mp3.c         ****       while (1) {
 2531              		.loc 1 545 19 view .LVU892
 2532 0070 8E46     		mov	lr, r1
 2533              	.LBB144:
 2534              	.LBB145:
 477:mp3.c         **** }
 2535              		.loc 1 477 10 view .LVU893
 2536 0072 41F65736 		movw	r6, #6999
 2537 0076 207A     		ldrb	r0, [r4, #8]	@ zero_extendqisi2
 2538 0078 6388     		ldrh	r3, [r4, #2]
 2539 007a E288     		ldrh	r2, [r4, #6]
 2540 007c 94F804C0 		ldrb	ip, [r4, #4]	@ zero_extendqisi2
 2541              	.LBE145:
 2542              	.LBE144:
 2543              	.LBB149:
 2544              	.LBB150:
 477:mp3.c         **** }
 2545              		.loc 1 477 41 view .LVU894
 2546 0080 394D     		ldr	r5, .L233+12
 2547              	.LBE150:
 2548              	.LBE149:
 545:mp3.c         ****       while (1) {
 2549              		.loc 1 545 19 view .LVU895
 2550 0082 2170     		strb	r1, [r4]
 2551              	.L203:
 546:mp3.c         ****       while (1) {
 2552              		.loc 1 546 7 is_stmt 1 view .LVU896
 2553              		.loc 1 547 6 view .LVU897
 2554              		.loc 1 547 9 is_stmt 0 view .LVU898
 2555 0084 BA42     		cmp	r2, r7
 2556 0086 1AD9     		bls	.L204
 2557 0088 BEF1000F 		cmp	lr, #0
 2558 008c 00D0     		beq	.L231
 2559 008e E280     		strh	r2, [r4, #6]	@ movhi
 2560              	.L231:
 2561 0090 0029     		cmp	r1, #0
 2562 0092 4DD0     		beq	.L193
 2563 0094 2072     		strb	r0, [r4, #8]
 2564 0096 6380     		strh	r3, [r4, #2]	@ movhi
 2565 0098 48E0     		b	.L232
 2566              	.LVL241:
 2567              	.L200:
 538:mp3.c         **** 	       lbuf[t] = c;
 2568              		.loc 1 538 9 is_stmt 1 view .LVU899
 538:mp3.c         **** 	       lbuf[t] = c;
 2569              		.loc 1 538 36 is_stmt 0 view .LVU900
 2570 009a 0D28     		cmp	r0, #13
 2571 009c 06D8     		bhi	.L199
 2572 009e 2EFA00F2 		lsr	r2, lr, r0
 2573 00a2 D207     		lsls	r2, r2, #31
 2574 00a4 02D5     		bpl	.L199
 2575 00a6 E380     		strh	r3, [r4, #6]	@ movhi
 2576 00a8 D5E7     		b	.L201
 2577              	.LVL242:
 2578              	.L213:
 2579              	.LBB153:
 2580              	.LBB136:
 477:mp3.c         **** }
 2581              		.loc 1 477 60 view .LVU901
 2582 00aa FF20     		movs	r0, #255
 2583              	.LVL243:
 2584              	.L199:
 477:mp3.c         **** }
 2585              		.loc 1 477 60 view .LVU902
 2586              	.LBE136:
 2587              	.LBE153:
 539:mp3.c         **** 	       t++;
 2588              		.loc 1 539 9 is_stmt 1 view .LVU903
 530:mp3.c         **** 	       if (c == '[') {
 2589              		.loc 1 530 13 is_stmt 0 view .LVU904
 2590 00ac 1A46     		mov	r2, r3
 539:mp3.c         **** 	       t++;
 2591              		.loc 1 539 17 view .LVU905
 2592 00ae 6854     		strb	r0, [r5, r1]
 540:mp3.c         **** 	 }
 2593              		.loc 1 540 9 is_stmt 1 view .LVU906
 2594              	.LVL244:
 529:mp3.c         **** 	       c = read_byte_lrcbuf(lyric.lrcoff++);
 2595              		.loc 1 529 9 view .LVU907
 530:mp3.c         **** 	       if (c == '[') {
 2596              		.loc 1 530 11 is_stmt 0 view .LVU908
 2597 00b0 C0E7     		b	.L197
 2598              	.LVL245:
 2599              	.L214:
 2600              	.LBB154:
 2601              	.LBB151:
 530:mp3.c         **** 	       if (c == '[') {
 2602              		.loc 1 530 11 view .LVU909
 2603 00b2 41F6593E 		movw	lr, #7001
 2604              	.LVL246:
 2605              	.L207:
 530:mp3.c         **** 	       if (c == '[') {
 2606              		.loc 1 530 11 view .LVU910
 2607              	.LBE151:
 2608              	.LBE154:
 2609 00b6 7246     		mov	r2, lr
 2610 00b8 4FF0010E 		mov	lr, #1
 2611 00bc E2E7     		b	.L203
 2612              	.L204:
 548:mp3.c         **** 	    c = read_byte_lrcbuf(lyric.lrcoff++);
 2613              		.loc 1 548 6 is_stmt 1 view .LVU911
 2614              		.loc 1 548 10 is_stmt 0 view .LVU912
 2615 00be 02F1010E 		add	lr, r2, #1
 2616 00c2 1FFA8EFE 		uxth	lr, lr
 2617              	.LVL247:
 2618              	.LBB155:
 2619              	.LBI149:
 475:mp3.c         **** {
 2620              		.loc 1 475 15 is_stmt 1 view .LVU913
 2621              	.LBB152:
 477:mp3.c         **** }
 2622              		.loc 1 477 7 view .LVU914
 477:mp3.c         **** }
 2623              		.loc 1 477 10 is_stmt 0 view .LVU915
 2624 00c6 F4D0     		beq	.L214
 477:mp3.c         **** }
 2625              		.loc 1 477 24 is_stmt 1 view .LVU916
 477:mp3.c         **** }
 2626              		.loc 1 477 41 is_stmt 0 view .LVU917
 2627 00c8 15F80280 		ldrb	r8, [r5, r2]	@ zero_extendqisi2
 2628              	.LVL248:
 477:mp3.c         **** }
 2629              		.loc 1 477 41 view .LVU918
 2630              	.LBE152:
 2631              	.LBE155:
 549:mp3.c         **** 	    if (c == '[') {
 2632              		.loc 1 549 6 is_stmt 1 view .LVU919
 2633              		.loc 1 549 9 is_stmt 0 view .LVU920
 2634 00cc B8F15B0F 		cmp	r8, #91
 2635 00d0 3ED1     		bne	.L208
 550:mp3.c         **** 	       lyric.tagcnt++;
 2636              		.loc 1 550 9 is_stmt 1 view .LVU921
 2637              	.LBB156:
 2638              	.LBB157:
 477:mp3.c         **** }
 2639              		.loc 1 477 10 is_stmt 0 view .LVU922
 2640 00d2 BE45     		cmp	lr, r7
 477:mp3.c         **** }
 2641              		.loc 1 477 60 view .LVU923
 2642 00d4 08BF     		it	eq
 2643 00d6 FF23     		moveq	r3, #255
 2644              	.LBE157:
 2645              	.LBE156:
 551:mp3.c         **** 	       lyric.t_sec = read_byte_lrcbuf(lyric.lrcoff++);
 552:mp3.c         **** 	       lyric.t_sec *= 60;
 553:mp3.c         **** 	       lyric.lrcoff++;
 2646              		.loc 1 553 21 view .LVU924
 2647 00d8 02F10308 		add	r8, r2, #3
 2648              	.LVL249:
 2649              		.loc 1 553 21 view .LVU925
 2650 00dc 1FFA88F8 		uxth	r8, r8
 2651              	.LBB160:
 2652              	.LBB158:
 477:mp3.c         **** }
 2653              		.loc 1 477 41 view .LVU926
 2654 00e0 18BF     		it	ne
 2655 00e2 15F80E30 		ldrbne	r3, [r5, lr]	@ zero_extendqisi2
 2656              	.LBE158:
 2657              	.LBE160:
 2658              	.LBB161:
 2659              	.LBB146:
 477:mp3.c         **** }
 2660              		.loc 1 477 10 view .LVU927
 2661 00e6 B045     		cmp	r8, r6
 477:mp3.c         **** }
 2662              		.loc 1 477 60 view .LVU928
 2663 00e8 88BF     		it	hi
 2664 00ea 4FF0FF08 		movhi	r8, #255
 2665              	.LBE146:
 2666              	.LBE161:
 552:mp3.c         **** 	       lyric.lrcoff++;
 2667              		.loc 1 552 21 view .LVU929
 2668 00ee C3EB0313 		rsb	r3, r3, r3, lsl #4
 2669              	.LBB162:
 2670              	.LBB147:
 477:mp3.c         **** }
 2671              		.loc 1 477 41 view .LVU930
 2672 00f2 98BF     		it	ls
 2673 00f4 15F80880 		ldrbls	r8, [r5, r8]	@ zero_extendqisi2
 2674              	.LBE147:
 2675              	.LBE162:
 552:mp3.c         **** 	       lyric.lrcoff++;
 2676              		.loc 1 552 21 view .LVU931
 2677 00f8 9B00     		lsls	r3, r3, #2
 554:mp3.c         **** 	       lyric.t_sec += read_byte_lrcbuf(lyric.lrcoff++);
 2678              		.loc 1 554 24 view .LVU932
 2679 00fa 02F1040E 		add	lr, r2, #4
 552:mp3.c         **** 	       lyric.lrcoff++;
 2680              		.loc 1 552 21 view .LVU933
 2681 00fe 9BB2     		uxth	r3, r3
 2682              		.loc 1 554 24 view .LVU934
 2683 0100 1FFA8EFE 		uxth	lr, lr
 2684              		.loc 1 554 21 view .LVU935
 2685 0104 4344     		add	r3, r3, r8
 550:mp3.c         **** 	       lyric.t_sec = read_byte_lrcbuf(lyric.lrcoff++);
 2686              		.loc 1 550 21 view .LVU936
 2687 0106 0130     		adds	r0, r0, #1
 555:mp3.c         **** 	       c = read_byte_lrcbuf(lyric.lrcoff++);
 2688              		.loc 1 555 13 view .LVU937
 2689 0108 02F10508 		add	r8, r2, #5
 2690              	.LBB163:
 2691              	.LBB164:
 477:mp3.c         **** }
 2692              		.loc 1 477 10 view .LVU938
 2693 010c B645     		cmp	lr, r6
 2694              	.LBE164:
 2695              	.LBE163:
 550:mp3.c         **** 	       lyric.t_sec = read_byte_lrcbuf(lyric.lrcoff++);
 2696              		.loc 1 550 21 view .LVU939
 2697 010e C0B2     		uxtb	r0, r0
 551:mp3.c         **** 	       lyric.t_sec *= 60;
 2698              		.loc 1 551 9 is_stmt 1 view .LVU940
 2699              	.LBB166:
 2700              	.LBI156:
 475:mp3.c         **** {
 2701              		.loc 1 475 15 view .LVU941
 2702              	.LBB159:
 477:mp3.c         **** }
 2703              		.loc 1 477 7 view .LVU942
 477:mp3.c         **** }
 2704              		.loc 1 477 24 view .LVU943
 2705              	.LBE159:
 2706              	.LBE166:
 552:mp3.c         **** 	       lyric.lrcoff++;
 2707              		.loc 1 552 9 view .LVU944
 553:mp3.c         **** 	       lyric.t_sec += read_byte_lrcbuf(lyric.lrcoff++);
 2708              		.loc 1 553 9 view .LVU945
 554:mp3.c         **** 	       c = read_byte_lrcbuf(lyric.lrcoff++);
 2709              		.loc 1 554 9 view .LVU946
 2710              	.LBB167:
 2711              	.LBI144:
 475:mp3.c         **** {
 2712              		.loc 1 475 15 view .LVU947
 2713              	.LBB148:
 477:mp3.c         **** }
 2714              		.loc 1 477 7 view .LVU948
 477:mp3.c         **** }
 2715              		.loc 1 477 24 view .LVU949
 2716              	.LBE148:
 2717              	.LBE167:
 554:mp3.c         **** 	       c = read_byte_lrcbuf(lyric.lrcoff++);
 2718              		.loc 1 554 21 is_stmt 0 view .LVU950
 2719 0110 9BB2     		uxth	r3, r3
 2720              		.loc 1 555 9 is_stmt 1 view .LVU951
 2721              		.loc 1 555 13 is_stmt 0 view .LVU952
 2722 0112 1FFA88F8 		uxth	r8, r8
 2723              	.LVL250:
 2724              	.LBB168:
 2725              	.LBI163:
 475:mp3.c         **** {
 2726              		.loc 1 475 15 is_stmt 1 view .LVU953
 2727              	.LBB165:
 477:mp3.c         **** }
 2728              		.loc 1 477 7 view .LVU954
 477:mp3.c         **** }
 2729              		.loc 1 477 10 is_stmt 0 view .LVU955
 2730 0116 0DD8     		bhi	.L211
 477:mp3.c         **** }
 2731              		.loc 1 477 24 is_stmt 1 view .LVU956
 2732              	.LVL251:
 477:mp3.c         **** }
 2733              		.loc 1 477 24 is_stmt 0 view .LVU957
 2734              	.LBE165:
 2735              	.LBE168:
 556:mp3.c         **** 	       if (c == ']') break;
 2736              		.loc 1 556 9 is_stmt 1 view .LVU958
 2737              		.loc 1 556 12 is_stmt 0 view .LVU959
 2738 0118 15F80EE0 		ldrb	lr, [r5, lr]	@ zero_extendqisi2
 2739              	.LVL252:
 2740              		.loc 1 556 12 view .LVU960
 2741 011c BEF15D0F 		cmp	lr, #93
 2742 0120 08D1     		bne	.L211
 2743 0122 A4F80680 		strh	r8, [r4, #6]	@ movhi
 2744 0126 2072     		strb	r0, [r4, #8]
 2745 0128 6380     		strh	r3, [r4, #2]	@ movhi
 2746 012a 09B1     		cbz	r1, .L193
 2747              	.LVL253:
 2748              	.L232:
 2749              		.loc 1 556 12 view .LVU961
 2750 012c 84F804C0 		strb	ip, [r4, #4]
 2751              	.L193:
 2752              	.LBE130:
 2753              	.LBE129:
 557:mp3.c         **** 	       lyric.t_ms = read_byte_lrcbuf(lyric.lrcoff++);
 558:mp3.c         **** 	    } else if (c == ']') break;
 559:mp3.c         ****       }
 560:mp3.c         **** }
 2754              		.loc 1 560 1 view .LVU962
 2755 0130 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2756              	.L211:
 2757              	.LBB178:
 2758              	.LBB177:
 557:mp3.c         **** 	       lyric.t_ms = read_byte_lrcbuf(lyric.lrcoff++);
 2759              		.loc 1 557 9 is_stmt 1 view .LVU963
 2760              	.LBB169:
 2761              	.LBB170:
 477:mp3.c         **** }
 2762              		.loc 1 477 10 is_stmt 0 view .LVU964
 2763 0134 B045     		cmp	r8, r6
 2764              	.LBE170:
 2765              	.LBE169:
 557:mp3.c         **** 	       lyric.t_ms = read_byte_lrcbuf(lyric.lrcoff++);
 2766              		.loc 1 557 22 view .LVU965
 2767 0136 02F10602 		add	r2, r2, #6
 2768              	.LBB174:
 2769              	.LBB171:
 477:mp3.c         **** }
 2770              		.loc 1 477 60 view .LVU966
 2771 013a 88BF     		it	hi
 2772 013c 4FF0FF0C 		movhi	ip, #255
 2773              	.LBE171:
 2774              	.LBE174:
 2775 0140 4FF00101 		mov	r1, #1
 2776              	.LBB175:
 2777              	.LBB172:
 477:mp3.c         **** }
 2778              		.loc 1 477 41 view .LVU967
 2779 0144 98BF     		it	ls
 2780 0146 15F808C0 		ldrbls	ip, [r5, r8]	@ zero_extendqisi2
 2781              	.LBE172:
 2782              	.LBE175:
 557:mp3.c         **** 	       lyric.t_ms = read_byte_lrcbuf(lyric.lrcoff++);
 2783              		.loc 1 557 22 view .LVU968
 2784 014a 1FFA82FE 		uxth	lr, r2
 2785              	.LVL254:
 2786              	.LBB176:
 2787              	.LBI169:
 475:mp3.c         **** {
 2788              		.loc 1 475 15 is_stmt 1 view .LVU969
 2789              	.LBB173:
 477:mp3.c         **** }
 2790              		.loc 1 477 7 view .LVU970
 477:mp3.c         **** }
 2791              		.loc 1 477 24 view .LVU971
 477:mp3.c         **** }
 2792              		.loc 1 477 24 is_stmt 0 view .LVU972
 2793              	.LBE173:
 2794              	.LBE176:
 2795 014e B2E7     		b	.L207
 2796              	.LVL255:
 2797              	.L208:
 558:mp3.c         ****       }
 2798              		.loc 1 558 13 is_stmt 1 view .LVU973
 558:mp3.c         ****       }
 2799              		.loc 1 558 16 is_stmt 0 view .LVU974
 2800 0150 B8F15D0F 		cmp	r8, #93
 2801 0154 AFD1     		bne	.L207
 2802 0156 A4F806E0 		strh	lr, [r4, #6]	@ movhi
 2803 015a 99E7     		b	.L231
 2804              	.L234:
 2805              		.align	2
 2806              	.L233:
 2807 015c 00000000 		.word	lyric
 2808 0160 00000000 		.word	.LANCHOR7
 2809 0164 00000000 		.word	tag_table
 2810 0168 00000000 		.word	lrc_buffer
 2811 016c 00000000 		.word	.LC3
 2812              	.LBE177:
 2813              	.LBE178:
 2814              		.cfi_endproc
 2815              	.LFE44:
 2817              		.section	.text.lyric_display_ctrl,"ax",%progbits
 2818              		.align	1
 2819              		.global	lyric_display_ctrl
 2820              		.syntax unified
 2821              		.thumb
 2822              		.thumb_func
 2823              		.fpu softvfp
 2825              	lyric_display_ctrl:
 2826              	.LFB42:
 489:mp3.c         ****       static unsigned int time = 0;
 2827              		.loc 1 489 1 is_stmt 1 view -0
 2828              		.cfi_startproc
 2829              		@ args = 0, pretend = 0, frame = 0
 2830              		@ frame_needed = 0, uses_anonymous_args = 0
 490:mp3.c         ****       static unsigned char ms = 0;
 2831              		.loc 1 490 7 view .LVU976
 491:mp3.c         ****       unsigned int t1;
 2832              		.loc 1 491 7 view .LVU977
 492:mp3.c         ****       if (!bt30ms) return;
 2833              		.loc 1 492 7 view .LVU978
 493:mp3.c         ****       ms += 3;
 2834              		.loc 1 493 7 view .LVU979
 489:mp3.c         ****       static unsigned int time = 0;
 2835              		.loc 1 489 1 is_stmt 0 view .LVU980
 2836 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2837              		.cfi_def_cfa_offset 24
 2838              		.cfi_offset 3, -24
 2839              		.cfi_offset 4, -20
 2840              		.cfi_offset 5, -16
 2841              		.cfi_offset 6, -12
 2842              		.cfi_offset 7, -8
 2843              		.cfi_offset 14, -4
 493:mp3.c         ****       ms += 3;
 2844              		.loc 1 493 11 view .LVU981
 2845 0002 1A4B     		ldr	r3, .L242
 493:mp3.c         ****       ms += 3;
 2846              		.loc 1 493 10 view .LVU982
 2847 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2848 0006 12B3     		cbz	r2, .L235
 494:mp3.c         ****       bt30ms = 0;
 2849              		.loc 1 494 7 is_stmt 1 view .LVU983
 495:mp3.c         ****       t1 = (((float)fsrc.fsize / f_kbps) / 125) * (propos);
 2850              		.loc 1 495 14 is_stmt 0 view .LVU984
 2851 0008 0027     		movs	r7, #0
 494:mp3.c         ****       bt30ms = 0;
 2852              		.loc 1 494 10 view .LVU985
 2853 000a 194E     		ldr	r6, .L242+4
 495:mp3.c         ****       t1 = (((float)fsrc.fsize / f_kbps) / 125) * (propos);
 2854              		.loc 1 495 14 view .LVU986
 2855 000c 1F70     		strb	r7, [r3]
 494:mp3.c         ****       bt30ms = 0;
 2856              		.loc 1 494 10 view .LVU987
 2857 000e 3478     		ldrb	r4, [r6]	@ zero_extendqisi2
 496:mp3.c         ****       if (t1 != time) {
 2858              		.loc 1 496 25 view .LVU988
 2859 0010 184B     		ldr	r3, .L242+8
 494:mp3.c         ****       bt30ms = 0;
 2860              		.loc 1 494 10 view .LVU989
 2861 0012 0334     		adds	r4, r4, #3
 2862 0014 E4B2     		uxtb	r4, r4
 496:mp3.c         ****       if (t1 != time) {
 2863              		.loc 1 496 14 view .LVU990
 2864 0016 D868     		ldr	r0, [r3, #12]
 494:mp3.c         ****       bt30ms = 0;
 2865              		.loc 1 494 10 view .LVU991
 2866 0018 3470     		strb	r4, [r6]
 495:mp3.c         ****       t1 = (((float)fsrc.fsize / f_kbps) / 125) * (propos);
 2867              		.loc 1 495 7 is_stmt 1 view .LVU992
 496:mp3.c         ****       if (t1 != time) {
 2868              		.loc 1 496 7 view .LVU993
 496:mp3.c         ****       if (t1 != time) {
 2869              		.loc 1 496 14 is_stmt 0 view .LVU994
 2870 001a FFF7FEFF 		bl	__aeabi_ui2f
 2871              	.LVL256:
 496:mp3.c         ****       if (t1 != time) {
 2872              		.loc 1 496 32 view .LVU995
 2873 001e 164B     		ldr	r3, .L242+12
 496:mp3.c         ****       if (t1 != time) {
 2874              		.loc 1 496 14 view .LVU996
 2875 0020 0546     		mov	r5, r0
 496:mp3.c         ****       if (t1 != time) {
 2876              		.loc 1 496 32 view .LVU997
 2877 0022 1888     		ldrh	r0, [r3]
 2878 0024 FFF7FEFF 		bl	__aeabi_i2f
 2879              	.LVL257:
 2880 0028 0146     		mov	r1, r0
 2881 002a 2846     		mov	r0, r5
 2882 002c FFF7FEFF 		bl	__aeabi_fdiv
 2883              	.LVL258:
 496:mp3.c         ****       if (t1 != time) {
 2884              		.loc 1 496 42 view .LVU998
 2885 0030 1249     		ldr	r1, .L242+16
 2886 0032 FFF7FEFF 		bl	__aeabi_fdiv
 2887              	.LVL259:
 496:mp3.c         ****       if (t1 != time) {
 2888              		.loc 1 496 49 view .LVU999
 2889 0036 124B     		ldr	r3, .L242+20
 2890 0038 1968     		ldr	r1, [r3]	@ float
 2891 003a FFF7FEFF 		bl	__aeabi_fmul
 2892              	.LVL260:
 496:mp3.c         ****       if (t1 != time) {
 2893              		.loc 1 496 10 view .LVU1000
 2894 003e FFF7FEFF 		bl	__aeabi_f2uiz
 2895              	.LVL261:
 497:mp3.c         **** 	 time = t1;
 2896              		.loc 1 497 7 is_stmt 1 view .LVU1001
 497:mp3.c         **** 	 time = t1;
 2897              		.loc 1 497 14 is_stmt 0 view .LVU1002
 2898 0042 104B     		ldr	r3, .L242+24
 497:mp3.c         **** 	 time = t1;
 2899              		.loc 1 497 10 view .LVU1003
 2900 0044 1A68     		ldr	r2, [r3]
 2901 0046 8242     		cmp	r2, r0
 2902 0048 02D0     		beq	.L238
 498:mp3.c         **** 	 ms = 0;
 2903              		.loc 1 498 3 is_stmt 1 view .LVU1004
 498:mp3.c         **** 	 ms = 0;
 2904              		.loc 1 498 8 is_stmt 0 view .LVU1005
 2905 004a 1860     		str	r0, [r3]
 499:mp3.c         **** 	 return;
 2906              		.loc 1 499 3 is_stmt 1 view .LVU1006
 499:mp3.c         **** 	 return;
 2907              		.loc 1 499 6 is_stmt 0 view .LVU1007
 2908 004c 3770     		strb	r7, [r6]
 500:mp3.c         ****       }
 2909              		.loc 1 500 3 is_stmt 1 view .LVU1008
 2910              	.LVL262:
 2911              	.L235:
 505:mp3.c         **** 
 2912              		.loc 1 505 1 is_stmt 0 view .LVU1009
 2913 004e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2914              	.LVL263:
 2915              	.L238:
 502:mp3.c         **** 	 read_lrc_file_data();
 2916              		.loc 1 502 7 is_stmt 1 view .LVU1010
 502:mp3.c         **** 	 read_lrc_file_data();
 2917              		.loc 1 502 24 is_stmt 0 view .LVU1011
 2918 0050 0D4B     		ldr	r3, .L242+28
 2919 0052 5988     		ldrh	r1, [r3, #2]
 502:mp3.c         **** 	 read_lrc_file_data();
 2920              		.loc 1 502 10 view .LVU1012
 2921 0054 9142     		cmp	r1, r2
 2922 0056 06D1     		bne	.L239
 502:mp3.c         **** 	 read_lrc_file_data();
 2923              		.loc 1 502 32 discriminator 1 view .LVU1013
 2924 0058 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2925 005a A342     		cmp	r3, r4
 2926 005c F7D8     		bhi	.L235
 2927              	.L240:
 503:mp3.c         ****       }
 2928              		.loc 1 503 3 is_stmt 1 view .LVU1014
 505:mp3.c         **** 
 2929              		.loc 1 505 1 is_stmt 0 view .LVU1015
 2930 005e BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 2931              		.cfi_remember_state
 2932              		.cfi_restore 14
 2933              		.cfi_restore 7
 2934              		.cfi_restore 6
 2935              		.cfi_restore 5
 2936              		.cfi_restore 4
 2937              		.cfi_restore 3
 2938              		.cfi_def_cfa_offset 0
 503:mp3.c         ****       }
 2939              		.loc 1 503 3 view .LVU1016
 2940 0062 FFF7FEBF 		b	read_lrc_file_data
 2941              	.LVL264:
 2942              	.L239:
 2943              		.cfi_restore_state
 502:mp3.c         **** 	 read_lrc_file_data();
 2944              		.loc 1 502 55 discriminator 3 view .LVU1017
 2945 0066 FAD3     		bcc	.L240
 2946 0068 F1E7     		b	.L235
 2947              	.L243:
 2948 006a 00BF     		.align	2
 2949              	.L242:
 2950 006c 00000000 		.word	.LANCHOR8
 2951 0070 00000000 		.word	.LANCHOR9
 2952 0074 00000000 		.word	fsrc
 2953 0078 00000000 		.word	.LANCHOR0
 2954 007c 0000FA42 		.word	1123680256
 2955 0080 00000000 		.word	.LANCHOR2
 2956 0084 00000000 		.word	.LANCHOR10
 2957 0088 00000000 		.word	lyric
 2958              		.cfi_endproc
 2959              	.LFE42:
 2961              		.section	.text.lrc_synchron,"ax",%progbits
 2962              		.align	1
 2963              		.global	lrc_synchron
 2964              		.syntax unified
 2965              		.thumb
 2966              		.thumb_func
 2967              		.fpu softvfp
 2969              	lrc_synchron:
 2970              	.LFB45:
 561:mp3.c         **** 
 562:mp3.c         **** 
 563:mp3.c         **** void  lrc_synchron (void)
 564:mp3.c         **** {
 2971              		.loc 1 564 1 is_stmt 1 view -0
 2972              		.cfi_startproc
 2973              		@ args = 0, pretend = 0, frame = 0
 2974              		@ frame_needed = 0, uses_anonymous_args = 0
 565:mp3.c         ****       unsigned char c;
 2975              		.loc 1 565 7 view .LVU1019
 566:mp3.c         ****       lrc_read_init();
 2976              		.loc 1 566 7 view .LVU1020
 564:mp3.c         ****       unsigned char c;
 2977              		.loc 1 564 1 is_stmt 0 view .LVU1021
 2978 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2979              		.cfi_def_cfa_offset 24
 2980              		.cfi_offset 4, -24
 2981              		.cfi_offset 5, -20
 2982              		.cfi_offset 6, -16
 2983              		.cfi_offset 7, -12
 2984              		.cfi_offset 8, -8
 2985              		.cfi_offset 14, -4
 2986              		.loc 1 566 7 view .LVU1022
 2987 0004 FFF7FEFF 		bl	lrc_read_init
 2988              	.LVL265:
 2989              	.LBB179:
 2990              	.LBB180:
 477:mp3.c         **** }
 2991              		.loc 1 477 10 view .LVU1023
 2992 0008 41F65735 		movw	r5, #6999
 2993              	.LBE180:
 2994              	.LBE179:
 567:mp3.c         ****       do {
 568:mp3.c         ****       	  c = read_byte_lrcbuf(lyric.lrcoff++);
 569:mp3.c         ****       	  if (c == '[') {
 570:mp3.c         ****       	     lyric.tagcnt++;
 571:mp3.c         ****       	     lyric.t_sec = read_byte_lrcbuf(lyric.lrcoff++);
 572:mp3.c         ****       	     lyric.t_sec *= 60;
 573:mp3.c         ****       	     lyric.lrcoff++;
 574:mp3.c         ****       	     lyric.t_sec += read_byte_lrcbuf(lyric.lrcoff++);
 575:mp3.c         **** 	  }
 576:mp3.c         **** 	  if (lyric.lrcoff > 7000) return;
 577:mp3.c         ****       } while (lyric.t_sec < timetemp);
 2995              		.loc 1 577 28 view .LVU1024
 2996 000c 4FF0000E 		mov	lr, #0
 576:mp3.c         ****       } while (lyric.t_sec < timetemp);
 2997              		.loc 1 576 7 view .LVU1025
 2998 0010 41F6583C 		movw	ip, #7000
 2999 0014 3A49     		ldr	r1, .L269
 3000              		.loc 1 577 28 view .LVU1026
 3001 0016 3B4B     		ldr	r3, .L269+4
 3002 0018 C888     		ldrh	r0, [r1, #6]
 3003 001a 0C7A     		ldrb	r4, [r1, #8]	@ zero_extendqisi2
 3004 001c 4A88     		ldrh	r2, [r1, #2]
 3005 001e 1F88     		ldrh	r7, [r3]
 3006              	.LBB184:
 3007              	.LBB181:
 477:mp3.c         **** }
 3008              		.loc 1 477 41 view .LVU1027
 3009 0020 394E     		ldr	r6, .L269+8
 3010              	.L250:
 3011              	.LBE181:
 3012              	.LBE184:
 567:mp3.c         ****       do {
 3013              		.loc 1 567 7 is_stmt 1 view .LVU1028
 568:mp3.c         ****       	  if (c == '[') {
 3014              		.loc 1 568 10 view .LVU1029
 568:mp3.c         ****       	  if (c == '[') {
 3015              		.loc 1 568 14 is_stmt 0 view .LVU1030
 3016 0022 431C     		adds	r3, r0, #1
 3017              	.LBB185:
 3018              	.LBB182:
 477:mp3.c         **** }
 3019              		.loc 1 477 10 view .LVU1031
 3020 0024 A842     		cmp	r0, r5
 3021              	.LBE182:
 3022              	.LBE185:
 568:mp3.c         ****       	  if (c == '[') {
 3023              		.loc 1 568 14 view .LVU1032
 3024 0026 9BB2     		uxth	r3, r3
 3025              	.LVL266:
 3026              	.LBB186:
 3027              	.LBI179:
 475:mp3.c         **** {
 3028              		.loc 1 475 15 is_stmt 1 view .LVU1033
 3029              	.LBB183:
 477:mp3.c         **** }
 3030              		.loc 1 477 7 view .LVU1034
 477:mp3.c         **** }
 3031              		.loc 1 477 10 is_stmt 0 view .LVU1035
 3032 0028 1FD8     		bhi	.L245
 477:mp3.c         **** }
 3033              		.loc 1 477 24 is_stmt 1 view .LVU1036
 3034              	.LVL267:
 477:mp3.c         **** }
 3035              		.loc 1 477 24 is_stmt 0 view .LVU1037
 3036              	.LBE183:
 3037              	.LBE186:
 569:mp3.c         ****       	     lyric.tagcnt++;
 3038              		.loc 1 569 10 is_stmt 1 view .LVU1038
 569:mp3.c         ****       	     lyric.tagcnt++;
 3039              		.loc 1 569 13 is_stmt 0 view .LVU1039
 3040 002a 16F80080 		ldrb	r8, [r6, r0]	@ zero_extendqisi2
 3041 002e B8F15B0F 		cmp	r8, #91
 3042 0032 1AD1     		bne	.L245
 570:mp3.c         ****       	     lyric.t_sec = read_byte_lrcbuf(lyric.lrcoff++);
 3043              		.loc 1 570 13 is_stmt 1 view .LVU1040
 3044              	.LBB187:
 3045              	.LBB188:
 477:mp3.c         **** }
 3046              		.loc 1 477 10 is_stmt 0 view .LVU1041
 3047 0034 AB42     		cmp	r3, r5
 3048              	.LBE188:
 3049              	.LBE187:
 573:mp3.c         ****       	     lyric.t_sec += read_byte_lrcbuf(lyric.lrcoff++);
 3050              		.loc 1 573 25 view .LVU1042
 3051 0036 00F1030E 		add	lr, r0, #3
 3052              	.LBB192:
 3053              	.LBB189:
 477:mp3.c         **** }
 3054              		.loc 1 477 60 view .LVU1043
 3055 003a 88BF     		it	hi
 3056 003c FF22     		movhi	r2, #255
 3057              	.LBE189:
 3058              	.LBE192:
 573:mp3.c         ****       	     lyric.t_sec += read_byte_lrcbuf(lyric.lrcoff++);
 3059              		.loc 1 573 25 view .LVU1044
 3060 003e 1FFA8EFE 		uxth	lr, lr
 3061              	.LBB193:
 3062              	.LBB190:
 477:mp3.c         **** }
 3063              		.loc 1 477 41 view .LVU1045
 3064 0042 98BF     		it	ls
 3065 0044 F25C     		ldrbls	r2, [r6, r3]	@ zero_extendqisi2
 3066              	.LBE190:
 3067              	.LBE193:
 3068              	.LBB194:
 3069              	.LBB195:
 477:mp3.c         **** }
 3070              		.loc 1 477 10 view .LVU1046
 3071 0046 AE45     		cmp	lr, r5
 3072              	.LBE195:
 3073              	.LBE194:
 574:mp3.c         **** 	  }
 3074              		.loc 1 574 28 view .LVU1047
 3075 0048 00F10403 		add	r3, r0, #4
 3076              	.LBB198:
 3077              	.LBB196:
 477:mp3.c         **** }
 3078              		.loc 1 477 60 view .LVU1048
 3079 004c 8CBF     		ite	hi
 3080 004e FF20     		movhi	r0, #255
 3081              	.LVL268:
 477:mp3.c         **** }
 3082              		.loc 1 477 41 view .LVU1049
 3083 0050 16F80E00 		ldrbls	r0, [r6, lr]	@ zero_extendqisi2
 3084              	.LBE196:
 3085              	.LBE198:
 574:mp3.c         **** 	  }
 3086              		.loc 1 574 25 view .LVU1050
 3087 0054 4FF0010E 		mov	lr, #1
 572:mp3.c         ****       	     lyric.lrcoff++;
 3088              		.loc 1 572 25 view .LVU1051
 3089 0058 C2EB0212 		rsb	r2, r2, r2, lsl #4
 3090 005c 9200     		lsls	r2, r2, #2
 3091 005e 92B2     		uxth	r2, r2
 570:mp3.c         ****       	     lyric.t_sec = read_byte_lrcbuf(lyric.lrcoff++);
 3092              		.loc 1 570 25 view .LVU1052
 3093 0060 0134     		adds	r4, r4, #1
 574:mp3.c         **** 	  }
 3094              		.loc 1 574 25 view .LVU1053
 3095 0062 0244     		add	r2, r2, r0
 570:mp3.c         ****       	     lyric.t_sec = read_byte_lrcbuf(lyric.lrcoff++);
 3096              		.loc 1 570 25 view .LVU1054
 3097 0064 E4B2     		uxtb	r4, r4
 571:mp3.c         ****       	     lyric.t_sec *= 60;
 3098              		.loc 1 571 13 is_stmt 1 view .LVU1055
 3099              	.LBB199:
 3100              	.LBI187:
 475:mp3.c         **** {
 3101              		.loc 1 475 15 view .LVU1056
 3102              	.LBB191:
 477:mp3.c         **** }
 3103              		.loc 1 477 7 view .LVU1057
 477:mp3.c         **** }
 3104              		.loc 1 477 24 view .LVU1058
 3105              	.LBE191:
 3106              	.LBE199:
 572:mp3.c         ****       	     lyric.lrcoff++;
 3107              		.loc 1 572 13 view .LVU1059
 573:mp3.c         ****       	     lyric.t_sec += read_byte_lrcbuf(lyric.lrcoff++);
 3108              		.loc 1 573 13 view .LVU1060
 574:mp3.c         **** 	  }
 3109              		.loc 1 574 13 view .LVU1061
 574:mp3.c         **** 	  }
 3110              		.loc 1 574 28 is_stmt 0 view .LVU1062
 3111 0066 9BB2     		uxth	r3, r3
 3112              	.LVL269:
 3113              	.LBB200:
 3114              	.LBI194:
 475:mp3.c         **** {
 3115              		.loc 1 475 15 is_stmt 1 view .LVU1063
 3116              	.LBB197:
 477:mp3.c         **** }
 3117              		.loc 1 477 7 view .LVU1064
 477:mp3.c         **** }
 3118              		.loc 1 477 24 view .LVU1065
 3119              	.LBE197:
 3120              	.LBE200:
 574:mp3.c         **** 	  }
 3121              		.loc 1 574 25 is_stmt 0 view .LVU1066
 3122 0068 92B2     		uxth	r2, r2
 3123              	.L245:
 576:mp3.c         ****       } while (lyric.t_sec < timetemp);
 3124              		.loc 1 576 4 is_stmt 1 view .LVU1067
 576:mp3.c         ****       } while (lyric.t_sec < timetemp);
 3125              		.loc 1 576 7 is_stmt 0 view .LVU1068
 3126 006a 6345     		cmp	r3, ip
 3127 006c 09D9     		bls	.L248
 3128 006e CB80     		strh	r3, [r1, #6]	@ movhi
 3129 0070 BEF1000F 		cmp	lr, #0
 3130 0074 01D0     		beq	.L244
 3131 0076 0C72     		strb	r4, [r1, #8]
 3132 0078 4A80     		strh	r2, [r1, #2]	@ movhi
 3133              	.L244:
 578:mp3.c         ****       lyric.lrcoff -= 5;
 579:mp3.c         ****       lyric.tagcnt--;
 580:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 581:mp3.c         ****       lyric.lrcoff++;
 582:mp3.c         ****       lyric.lrcoff++;
 583:mp3.c         ****       lyric.t_sec = read_byte_lrcbuf(lyric.lrcoff++);
 584:mp3.c         ****       lyric.t_sec *= 60;
 585:mp3.c         ****       lyric.lrcoff++;
 586:mp3.c         ****       lyric.t_sec += read_byte_lrcbuf(lyric.lrcoff++);
 587:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 588:mp3.c         ****       lyric.lrcoff++;
 589:mp3.c         **** }
 3134              		.loc 1 589 1 view .LVU1069
 3135 007a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3136              	.L260:
 3137 007e 1846     		mov	r0, r3
 3138 0080 CFE7     		b	.L250
 3139              	.L248:
 577:mp3.c         ****       lyric.lrcoff -= 5;
 3140              		.loc 1 577 15 is_stmt 1 view .LVU1070
 577:mp3.c         ****       lyric.lrcoff -= 5;
 3141              		.loc 1 577 7 is_stmt 0 view .LVU1071
 3142 0082 9742     		cmp	r7, r2
 3143 0084 FBD8     		bhi	.L260
 3144 0086 BEF1000F 		cmp	lr, #0
 3145 008a 00D0     		beq	.L251
 3146 008c 0C72     		strb	r4, [r1, #8]
 3147              	.L251:
 578:mp3.c         ****       lyric.lrcoff -= 5;
 3148              		.loc 1 578 7 is_stmt 1 view .LVU1072
 3149              	.LBB201:
 3150              	.LBB202:
 477:mp3.c         **** }
 3151              		.loc 1 477 10 is_stmt 0 view .LVU1073
 3152 008e 41F65735 		movw	r5, #6999
 3153              	.LBE202:
 3154              	.LBE201:
 579:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 3155              		.loc 1 579 19 view .LVU1074
 3156 0092 0A7A     		ldrb	r2, [r1, #8]	@ zero_extendqisi2
 578:mp3.c         ****       lyric.tagcnt--;
 3157              		.loc 1 578 20 view .LVU1075
 3158 0094 053B     		subs	r3, r3, #5
 579:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 3159              		.loc 1 579 19 view .LVU1076
 3160 0096 013A     		subs	r2, r2, #1
 3161              	.LBB206:
 3162              	.LBB203:
 477:mp3.c         **** }
 3163              		.loc 1 477 41 view .LVU1077
 3164 0098 1B48     		ldr	r0, .L269+8
 3165              	.LBE203:
 3166              	.LBE206:
 578:mp3.c         ****       lyric.tagcnt--;
 3167              		.loc 1 578 20 view .LVU1078
 3168 009a 9BB2     		uxth	r3, r3
 579:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 3169              		.loc 1 579 7 is_stmt 1 view .LVU1079
 579:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 3170              		.loc 1 579 19 is_stmt 0 view .LVU1080
 3171 009c 0A72     		strb	r2, [r1, #8]
 580:mp3.c         ****       lyric.lrcoff++;
 3172              		.loc 1 580 7 is_stmt 1 view .LVU1081
 3173              	.L252:
 580:mp3.c         ****       lyric.lrcoff++;
 3174              		.loc 1 580 54 discriminator 1 view .LVU1082
 580:mp3.c         ****       lyric.lrcoff++;
 3175              		.loc 1 580 13 discriminator 1 view .LVU1083
 580:mp3.c         ****       lyric.lrcoff++;
 3176              		.loc 1 580 14 is_stmt 0 discriminator 1 view .LVU1084
 3177 009e 5A1E     		subs	r2, r3, #1
 3178              	.LBB207:
 3179              	.LBB204:
 477:mp3.c         **** }
 3180              		.loc 1 477 10 discriminator 1 view .LVU1085
 3181 00a0 AB42     		cmp	r3, r5
 3182              	.LBE204:
 3183              	.LBE207:
 580:mp3.c         ****       lyric.lrcoff++;
 3184              		.loc 1 580 14 discriminator 1 view .LVU1086
 3185 00a2 92B2     		uxth	r2, r2
 3186              	.LVL270:
 3187              	.LBB208:
 3188              	.LBI201:
 475:mp3.c         **** {
 3189              		.loc 1 475 15 is_stmt 1 discriminator 1 view .LVU1087
 3190              	.LBB205:
 477:mp3.c         **** }
 3191              		.loc 1 477 7 discriminator 1 view .LVU1088
 477:mp3.c         **** }
 3192              		.loc 1 477 10 is_stmt 0 discriminator 1 view .LVU1089
 3193 00a4 28D8     		bhi	.L253
 477:mp3.c         **** }
 3194              		.loc 1 477 24 is_stmt 1 view .LVU1090
 3195              	.LVL271:
 477:mp3.c         **** }
 3196              		.loc 1 477 24 is_stmt 0 view .LVU1091
 3197              	.LBE205:
 3198              	.LBE208:
 580:mp3.c         ****       lyric.lrcoff++;
 3199              		.loc 1 580 13 view .LVU1092
 3200 00a6 C45C     		ldrb	r4, [r0, r3]	@ zero_extendqisi2
 3201 00a8 5B2C     		cmp	r4, #91
 3202 00aa 25D1     		bne	.L253
 581:mp3.c         ****       lyric.lrcoff++;
 3203              		.loc 1 581 7 is_stmt 1 view .LVU1093
 582:mp3.c         ****       lyric.t_sec = read_byte_lrcbuf(lyric.lrcoff++);
 3204              		.loc 1 582 7 view .LVU1094
 3205              	.LBB209:
 3206              	.LBB210:
 477:mp3.c         **** }
 3207              		.loc 1 477 10 is_stmt 0 view .LVU1095
 3208 00ac 41F65834 		movw	r4, #7000
 3209              	.LBE210:
 3210              	.LBE209:
 3211              	.LBB213:
 3212              	.LBB214:
 3213 00b0 41F65735 		movw	r5, #6999
 3214              	.LBE214:
 3215              	.LBE213:
 582:mp3.c         ****       lyric.t_sec = read_byte_lrcbuf(lyric.lrcoff++);
 3216              		.loc 1 582 19 view .LVU1096
 3217 00b4 5A1C     		adds	r2, r3, #1
 3218 00b6 92B2     		uxth	r2, r2
 583:mp3.c         ****       lyric.t_sec *= 60;
 3219              		.loc 1 583 7 is_stmt 1 view .LVU1097
 3220              	.LVL272:
 3221              	.LBB219:
 3222              	.LBI209:
 475:mp3.c         **** {
 3223              		.loc 1 475 15 view .LVU1098
 3224              	.LBB211:
 477:mp3.c         **** }
 3225              		.loc 1 477 7 view .LVU1099
 477:mp3.c         **** }
 3226              		.loc 1 477 10 is_stmt 0 view .LVU1100
 3227 00b8 A242     		cmp	r2, r4
 477:mp3.c         **** }
 3228              		.loc 1 477 24 is_stmt 1 view .LVU1101
 477:mp3.c         **** }
 3229              		.loc 1 477 60 is_stmt 0 view .LVU1102
 3230 00ba 08BF     		it	eq
 3231 00bc FF22     		moveq	r2, #255
 3232              	.LVL273:
 477:mp3.c         **** }
 3233              		.loc 1 477 60 view .LVU1103
 3234              	.LBE211:
 3235              	.LBE219:
 584:mp3.c         ****       lyric.lrcoff++;
 3236              		.loc 1 584 7 is_stmt 1 view .LVU1104
 585:mp3.c         ****       lyric.t_sec += read_byte_lrcbuf(lyric.lrcoff++);
 3237              		.loc 1 585 19 is_stmt 0 view .LVU1105
 3238 00be 03F10304 		add	r4, r3, #3
 3239 00c2 A4B2     		uxth	r4, r4
 3240              	.LBB220:
 3241              	.LBB212:
 477:mp3.c         **** }
 3242              		.loc 1 477 41 view .LVU1106
 3243 00c4 18BF     		it	ne
 3244 00c6 825C     		ldrbne	r2, [r0, r2]	@ zero_extendqisi2
 3245              	.LBE212:
 3246              	.LBE220:
 3247              	.LBB221:
 3248              	.LBB215:
 477:mp3.c         **** }
 3249              		.loc 1 477 10 view .LVU1107
 3250 00c8 AC42     		cmp	r4, r5
 477:mp3.c         **** }
 3251              		.loc 1 477 60 view .LVU1108
 3252 00ca 88BF     		it	hi
 3253 00cc FF24     		movhi	r4, #255
 3254              	.LBE215:
 3255              	.LBE221:
 3256              	.LBB222:
 3257              	.LBB223:
 477:mp3.c         **** }
 3258              		.loc 1 477 10 view .LVU1109
 3259 00ce 41F65735 		movw	r5, #6999
 3260              	.LBE223:
 3261              	.LBE222:
 584:mp3.c         ****       lyric.lrcoff++;
 3262              		.loc 1 584 19 view .LVU1110
 3263 00d2 C2EB0212 		rsb	r2, r2, r2, lsl #4
 3264              	.LBB226:
 3265              	.LBB216:
 477:mp3.c         **** }
 3266              		.loc 1 477 41 view .LVU1111
 3267 00d6 98BF     		it	ls
 3268 00d8 045D     		ldrbls	r4, [r0, r4]	@ zero_extendqisi2
 3269              	.LBE216:
 3270              	.LBE226:
 584:mp3.c         ****       lyric.lrcoff++;
 3271              		.loc 1 584 19 view .LVU1112
 3272 00da 9200     		lsls	r2, r2, #2
 3273 00dc 92B2     		uxth	r2, r2
 585:mp3.c         ****       lyric.t_sec += read_byte_lrcbuf(lyric.lrcoff++);
 3274              		.loc 1 585 7 is_stmt 1 view .LVU1113
 586:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 3275              		.loc 1 586 7 view .LVU1114
 586:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 3276              		.loc 1 586 22 is_stmt 0 view .LVU1115
 3277 00de 0433     		adds	r3, r3, #4
 586:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 3278              		.loc 1 586 19 view .LVU1116
 3279 00e0 2244     		add	r2, r2, r4
 586:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 3280              		.loc 1 586 22 view .LVU1117
 3281 00e2 9BB2     		uxth	r3, r3
 3282              	.LBB227:
 3283              	.LBI213:
 475:mp3.c         **** {
 3284              		.loc 1 475 15 is_stmt 1 view .LVU1118
 3285              	.LBB217:
 477:mp3.c         **** }
 3286              		.loc 1 477 7 view .LVU1119
 477:mp3.c         **** }
 3287              		.loc 1 477 24 view .LVU1120
 3288              	.LBE217:
 3289              	.LBE227:
 586:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 3290              		.loc 1 586 19 is_stmt 0 view .LVU1121
 3291 00e4 4A80     		strh	r2, [r1, #2]	@ movhi
 587:mp3.c         ****       lyric.lrcoff++;
 3292              		.loc 1 587 7 is_stmt 1 view .LVU1122
 3293              	.L256:
 587:mp3.c         ****       lyric.lrcoff++;
 3294              		.loc 1 587 54 discriminator 1 view .LVU1123
 587:mp3.c         ****       lyric.lrcoff++;
 3295              		.loc 1 587 13 discriminator 1 view .LVU1124
 587:mp3.c         ****       lyric.lrcoff++;
 3296              		.loc 1 587 14 is_stmt 0 discriminator 1 view .LVU1125
 3297 00e6 5A1E     		subs	r2, r3, #1
 3298              	.LBB228:
 3299              	.LBB224:
 477:mp3.c         **** }
 3300              		.loc 1 477 10 discriminator 1 view .LVU1126
 3301 00e8 AB42     		cmp	r3, r5
 3302              	.LBE224:
 3303              	.LBE228:
 587:mp3.c         ****       lyric.lrcoff++;
 3304              		.loc 1 587 14 discriminator 1 view .LVU1127
 3305 00ea 92B2     		uxth	r2, r2
 3306              	.LVL274:
 3307              	.LBB229:
 3308              	.LBI222:
 475:mp3.c         **** {
 3309              		.loc 1 475 15 is_stmt 1 discriminator 1 view .LVU1128
 3310              	.LBB225:
 477:mp3.c         **** }
 3311              		.loc 1 477 7 discriminator 1 view .LVU1129
 477:mp3.c         **** }
 3312              		.loc 1 477 10 is_stmt 0 discriminator 1 view .LVU1130
 3313 00ec 06D8     		bhi	.L257
 477:mp3.c         **** }
 3314              		.loc 1 477 24 is_stmt 1 view .LVU1131
 3315              	.LVL275:
 477:mp3.c         **** }
 3316              		.loc 1 477 24 is_stmt 0 view .LVU1132
 3317              	.LBE225:
 3318              	.LBE229:
 587:mp3.c         ****       lyric.lrcoff++;
 3319              		.loc 1 587 13 view .LVU1133
 3320 00ee C45C     		ldrb	r4, [r0, r3]	@ zero_extendqisi2
 3321 00f0 5B2C     		cmp	r4, #91
 3322 00f2 03D1     		bne	.L257
 588:mp3.c         **** }
 3323              		.loc 1 588 7 is_stmt 1 view .LVU1134
 588:mp3.c         **** }
 3324              		.loc 1 588 19 is_stmt 0 view .LVU1135
 3325 00f4 CB80     		strh	r3, [r1, #6]	@ movhi
 3326 00f6 C0E7     		b	.L244
 3327              	.L253:
 574:mp3.c         **** 	  }
 3328              		.loc 1 574 25 discriminator 1 view .LVU1136
 3329 00f8 1346     		mov	r3, r2
 3330 00fa D0E7     		b	.L252
 3331              	.L257:
 3332              	.LBB230:
 3333              	.LBB218:
 477:mp3.c         **** }
 3334              		.loc 1 477 60 discriminator 1 view .LVU1137
 3335 00fc 1346     		mov	r3, r2
 3336 00fe F2E7     		b	.L256
 3337              	.L270:
 3338              		.align	2
 3339              	.L269:
 3340 0100 00000000 		.word	lyric
 3341 0104 00000000 		.word	.LANCHOR11
 3342 0108 00000000 		.word	lrc_buffer
 3343              	.LBE218:
 3344              	.LBE230:
 3345              		.cfi_endproc
 3346              	.LFE45:
 3348              		.section	.text.get_byte,"ax",%progbits
 3349              		.align	1
 3350              		.global	get_byte
 3351              		.syntax unified
 3352              		.thumb
 3353              		.thumb_func
 3354              		.fpu softvfp
 3356              	get_byte:
 3357              	.LVL276:
 3358              	.LFB46:
 590:mp3.c         **** 
 591:mp3.c         **** 
 592:mp3.c         **** unsigned char get_byte (unsigned char rst)
 593:mp3.c         **** {
 3359              		.loc 1 593 1 is_stmt 1 view -0
 3360              		.cfi_startproc
 3361              		@ args = 0, pretend = 0, frame = 0
 3362              		@ frame_needed = 0, uses_anonymous_args = 0
 594:mp3.c         ****       static unsigned short bytepos;
 3363              		.loc 1 594 7 view .LVU1139
 595:mp3.c         ****       unsigned short temp;
 3364              		.loc 1 595 7 view .LVU1140
 596:mp3.c         ****       if (rst) {
 3365              		.loc 1 596 7 view .LVU1141
 593:mp3.c         ****       static unsigned short bytepos;
 3366              		.loc 1 593 1 is_stmt 0 view .LVU1142
 3367 0000 70B5     		push	{r4, r5, r6, lr}
 3368              		.cfi_def_cfa_offset 16
 3369              		.cfi_offset 4, -16
 3370              		.cfi_offset 5, -12
 3371              		.cfi_offset 6, -8
 3372              		.cfi_offset 14, -4
 3373 0002 194C     		ldr	r4, .L279
 3374              		.loc 1 596 10 view .LVU1143
 3375 0004 98B1     		cbz	r0, .L272
 3376              	.LVL277:
 3377              	.LBB233:
 3378              	.LBI233:
 592:mp3.c         **** {
 3379              		.loc 1 592 15 is_stmt 1 view .LVU1144
 3380              	.LBB234:
 597:mp3.c         ****       	 if (rst == 1) {
 3381              		.loc 1 597 9 view .LVU1145
 3382              		.loc 1 597 12 is_stmt 0 view .LVU1146
 3383 0006 0128     		cmp	r0, #1
 3384 0008 0ED1     		bne	.L273
 598:mp3.c         ****             f_lseek(&fap,0);
 3385              		.loc 1 598 13 is_stmt 1 view .LVU1147
 3386 000a 0021     		movs	r1, #0
 3387 000c 1748     		ldr	r0, .L279+4
 3388              	.LVL278:
 3389              		.loc 1 598 13 is_stmt 0 view .LVU1148
 3390 000e FFF7FEFF 		bl	f_lseek
 3391              	.LVL279:
 599:mp3.c         ****             f_read(&fap, lrc_data, 512, &br);
 3392              		.loc 1 599 13 is_stmt 1 view .LVU1149
 3393 0012 174B     		ldr	r3, .L279+8
 3394 0014 4FF40072 		mov	r2, #512
 3395 0018 1649     		ldr	r1, .L279+12
 3396 001a 1448     		ldr	r0, .L279+4
 3397 001c FFF7FEFF 		bl	f_read
 3398              	.LVL280:
 600:mp3.c         **** 	    bytepos = 0;
 3399              		.loc 1 600 6 view .LVU1150
 3400              		.loc 1 600 14 is_stmt 0 view .LVU1151
 3401 0020 0023     		movs	r3, #0
 3402              	.L278:
 601:mp3.c         **** 	 } else {
 602:mp3.c         **** 	    bytepos--;
 3403              		.loc 1 602 13 view .LVU1152
 3404 0022 FF20     		movs	r0, #255
 3405 0024 2380     		strh	r3, [r4]	@ movhi
 3406              	.LVL281:
 3407              	.L274:
 3408              		.loc 1 602 13 view .LVU1153
 3409              	.LBE234:
 3410              	.LBE233:
 603:mp3.c         **** 	 }
 604:mp3.c         **** 	 return 0xff;
 605:mp3.c         ****       }
 606:mp3.c         ****       if (bytepos > 511) {
 607:mp3.c         **** 	 for (temp=0;temp<512;temp++) lrc_data[temp] = 0xff;
 608:mp3.c         ****          f_read(&fap, lrc_data, 512, &br);
 609:mp3.c         **** 	 bytepos=0;
 610:mp3.c         ****       }
 611:mp3.c         ****       return lrc_data[bytepos++];
 612:mp3.c         **** }
 3411              		.loc 1 612 1 view .LVU1154
 3412 0026 70BD     		pop	{r4, r5, r6, pc}
 3413              	.LVL282:
 3414              	.L273:
 3415              	.LBB236:
 3416              	.LBB235:
 602:mp3.c         **** 	 }
 3417              		.loc 1 602 6 is_stmt 1 view .LVU1155
 602:mp3.c         **** 	 }
 3418              		.loc 1 602 13 is_stmt 0 view .LVU1156
 3419 0028 2388     		ldrh	r3, [r4]
 3420 002a 013B     		subs	r3, r3, #1
 3421 002c F9E7     		b	.L278
 3422              	.LVL283:
 3423              	.L272:
 602:mp3.c         **** 	 }
 3424              		.loc 1 602 13 view .LVU1157
 3425              	.LBE235:
 3426              	.LBE236:
 606:mp3.c         **** 	 for (temp=0;temp<512;temp++) lrc_data[temp] = 0xff;
 3427              		.loc 1 606 7 is_stmt 1 view .LVU1158
 606:mp3.c         **** 	 for (temp=0;temp<512;temp++) lrc_data[temp] = 0xff;
 3428              		.loc 1 606 10 is_stmt 0 view .LVU1159
 3429 002e 2388     		ldrh	r3, [r4]
 3430 0030 104E     		ldr	r6, .L279+12
 3431 0032 B3F5007F 		cmp	r3, #512
 3432 0036 11D3     		bcc	.L275
 3433 0038 3346     		mov	r3, r6
 3434 003a 4FF40075 		mov	r5, #512
 607:mp3.c         ****          f_read(&fap, lrc_data, 512, &br);
 3435              		.loc 1 607 47 view .LVU1160
 3436 003e FF22     		movs	r2, #255
 3437              	.L276:
 3438              	.LVL284:
 607:mp3.c         ****          f_read(&fap, lrc_data, 512, &br);
 3439              		.loc 1 607 32 is_stmt 1 discriminator 3 view .LVU1161
 3440 0040 013D     		subs	r5, r5, #1
 3441 0042 ADB2     		uxth	r5, r5
 607:mp3.c         ****          f_read(&fap, lrc_data, 512, &br);
 3442              		.loc 1 607 47 is_stmt 0 discriminator 3 view .LVU1162
 3443 0044 03F8012B 		strb	r2, [r3], #1
 3444              	.LVL285:
 607:mp3.c         ****          f_read(&fap, lrc_data, 512, &br);
 3445              		.loc 1 607 24 is_stmt 1 discriminator 3 view .LVU1163
 607:mp3.c         ****          f_read(&fap, lrc_data, 512, &br);
 3446              		.loc 1 607 15 discriminator 3 view .LVU1164
 607:mp3.c         ****          f_read(&fap, lrc_data, 512, &br);
 3447              		.loc 1 607 3 is_stmt 0 discriminator 3 view .LVU1165
 3448 0048 002D     		cmp	r5, #0
 3449 004a F9D1     		bne	.L276
 608:mp3.c         **** 	 bytepos=0;
 3450              		.loc 1 608 10 is_stmt 1 view .LVU1166
 3451 004c 4FF40072 		mov	r2, #512
 3452 0050 074B     		ldr	r3, .L279+8
 3453              	.LVL286:
 608:mp3.c         **** 	 bytepos=0;
 3454              		.loc 1 608 10 is_stmt 0 view .LVU1167
 3455 0052 0849     		ldr	r1, .L279+12
 3456 0054 0548     		ldr	r0, .L279+4
 3457              	.LVL287:
 608:mp3.c         **** 	 bytepos=0;
 3458              		.loc 1 608 10 view .LVU1168
 3459 0056 FFF7FEFF 		bl	f_read
 3460              	.LVL288:
 609:mp3.c         ****       }
 3461              		.loc 1 609 3 is_stmt 1 view .LVU1169
 609:mp3.c         ****       }
 3462              		.loc 1 609 10 is_stmt 0 view .LVU1170
 3463 005a 2580     		strh	r5, [r4]	@ movhi
 3464              	.L275:
 611:mp3.c         **** }
 3465              		.loc 1 611 7 is_stmt 1 view .LVU1171
 611:mp3.c         **** }
 3466              		.loc 1 611 30 is_stmt 0 view .LVU1172
 3467 005c 2388     		ldrh	r3, [r4]
 3468 005e 5A1C     		adds	r2, r3, #1
 611:mp3.c         **** }
 3469              		.loc 1 611 22 view .LVU1173
 3470 0060 F05C     		ldrb	r0, [r6, r3]	@ zero_extendqisi2
 611:mp3.c         **** }
 3471              		.loc 1 611 30 view .LVU1174
 3472 0062 2280     		strh	r2, [r4]	@ movhi
 611:mp3.c         **** }
 3473              		.loc 1 611 22 view .LVU1175
 3474 0064 DFE7     		b	.L274
 3475              	.L280:
 3476 0066 00BF     		.align	2
 3477              	.L279:
 3478 0068 00000000 		.word	.LANCHOR12
 3479 006c 00000000 		.word	fap
 3480 0070 00000000 		.word	br
 3481 0074 00000000 		.word	lrc_data
 3482              		.cfi_endproc
 3483              	.LFE46:
 3485              		.section	.text.get_num,"ax",%progbits
 3486              		.align	1
 3487              		.global	get_num
 3488              		.syntax unified
 3489              		.thumb
 3490              		.thumb_func
 3491              		.fpu softvfp
 3493              	get_num:
 3494              	.LFB47:
 613:mp3.c         **** 
 614:mp3.c         **** 
 615:mp3.c         **** unsigned char get_num (void)
 616:mp3.c         **** {
 3495              		.loc 1 616 1 is_stmt 1 view -0
 3496              		.cfi_startproc
 3497              		@ args = 0, pretend = 0, frame = 0
 3498              		@ frame_needed = 0, uses_anonymous_args = 0
 617:mp3.c         ****       unsigned char t1 = 0;
 3499              		.loc 1 617 7 view .LVU1177
 3500              	.LVL289:
 618:mp3.c         ****       unsigned char t2 = 0;
 3501              		.loc 1 618 7 view .LVU1178
 619:mp3.c         ****       t1 = get_byte(0);
 3502              		.loc 1 619 7 view .LVU1179
 616:mp3.c         ****       unsigned char t1 = 0;
 3503              		.loc 1 616 1 is_stmt 0 view .LVU1180
 3504 0000 10B5     		push	{r4, lr}
 3505              		.cfi_def_cfa_offset 8
 3506              		.cfi_offset 4, -8
 3507              		.cfi_offset 14, -4
 3508              		.loc 1 619 12 view .LVU1181
 3509 0002 0020     		movs	r0, #0
 3510 0004 FFF7FEFF 		bl	get_byte
 3511              	.LVL290:
 3512 0008 0446     		mov	r4, r0
 3513              	.LVL291:
 620:mp3.c         ****       t2 = get_byte(0);
 3514              		.loc 1 620 7 is_stmt 1 view .LVU1182
 3515              		.loc 1 620 12 is_stmt 0 view .LVU1183
 3516 000a 0020     		movs	r0, #0
 3517 000c FFF7FEFF 		bl	get_byte
 3518              	.LVL292:
 621:mp3.c         ****       if (t1 < '9' && t1 > '0' && t2 == ']') {
 3519              		.loc 1 621 7 is_stmt 1 view .LVU1184
 3520              		.loc 1 621 20 is_stmt 0 view .LVU1185
 3521 0010 A4F13103 		sub	r3, r4, #49
 3522              		.loc 1 621 10 view .LVU1186
 3523 0014 DBB2     		uxtb	r3, r3
 3524 0016 072B     		cmp	r3, #7
 3525 0018 0AD8     		bhi	.L282
 3526              		.loc 1 621 32 discriminator 1 view .LVU1187
 3527 001a 5D28     		cmp	r0, #93
 3528 001c 08D1     		bne	.L282
 622:mp3.c         **** 	 get_byte(2);
 3529              		.loc 1 622 3 is_stmt 1 view .LVU1188
 3530 001e 0220     		movs	r0, #2
 3531              	.LVL293:
 3532              		.loc 1 622 3 is_stmt 0 view .LVU1189
 3533 0020 FFF7FEFF 		bl	get_byte
 3534              	.LVL294:
 623:mp3.c         **** 	 return (t1 - '0') * 10;
 3535              		.loc 1 623 3 is_stmt 1 view .LVU1190
 3536              		.loc 1 623 21 is_stmt 0 view .LVU1191
 3537 0024 04EB8400 		add	r0, r4, r4, lsl #2
 3538 0028 4000     		lsls	r0, r0, #1
 3539 002a 2030     		adds	r0, r0, #32
 3540              	.LVL295:
 3541              	.L286:
 624:mp3.c         ****       }
 625:mp3.c         ****       t1 -= '0';
 626:mp3.c         ****       t2 -= '0';
 627:mp3.c         ****       if (t1 < 10 && t2 < 10) {
 628:mp3.c         **** 	 return t1 * 10 + t2;
 3542              		.loc 1 628 18 view .LVU1192
 3543 002c C0B2     		uxtb	r0, r0
 3544              	.L283:
 629:mp3.c         ****       }
 630:mp3.c         ****       return 0xFF;
 631:mp3.c         **** }
 3545              		.loc 1 631 1 view .LVU1193
 3546 002e 10BD     		pop	{r4, pc}
 3547              	.LVL296:
 3548              	.L282:
 625:mp3.c         ****       t2 -= '0';
 3549              		.loc 1 625 7 is_stmt 1 view .LVU1194
 625:mp3.c         ****       t2 -= '0';
 3550              		.loc 1 625 10 is_stmt 0 view .LVU1195
 3551 0030 303C     		subs	r4, r4, #48
 3552              	.LVL297:
 625:mp3.c         ****       t2 -= '0';
 3553              		.loc 1 625 10 view .LVU1196
 3554 0032 E4B2     		uxtb	r4, r4
 3555              	.LVL298:
 626:mp3.c         ****       if (t1 < 10 && t2 < 10) {
 3556              		.loc 1 626 7 is_stmt 1 view .LVU1197
 627:mp3.c         **** 	 return t1 * 10 + t2;
 3557              		.loc 1 627 7 view .LVU1198
 627:mp3.c         **** 	 return t1 * 10 + t2;
 3558              		.loc 1 627 10 is_stmt 0 view .LVU1199
 3559 0034 092C     		cmp	r4, #9
 3560 0036 08D8     		bhi	.L285
 626:mp3.c         ****       if (t1 < 10 && t2 < 10) {
 3561              		.loc 1 626 10 discriminator 1 view .LVU1200
 3562 0038 3038     		subs	r0, r0, #48
 3563              	.LVL299:
 626:mp3.c         ****       if (t1 < 10 && t2 < 10) {
 3564              		.loc 1 626 10 discriminator 1 view .LVU1201
 3565 003a C0B2     		uxtb	r0, r0
 627:mp3.c         **** 	 return t1 * 10 + t2;
 3566              		.loc 1 627 19 discriminator 1 view .LVU1202
 3567 003c 0928     		cmp	r0, #9
 3568 003e 04D8     		bhi	.L285
 628:mp3.c         ****       }
 3569              		.loc 1 628 3 is_stmt 1 view .LVU1203
 628:mp3.c         ****       }
 3570              		.loc 1 628 18 is_stmt 0 view .LVU1204
 3571 0040 04EB8404 		add	r4, r4, r4, lsl #2
 3572              	.LVL300:
 628:mp3.c         ****       }
 3573              		.loc 1 628 18 view .LVU1205
 3574 0044 00EB4400 		add	r0, r0, r4, lsl #1
 3575 0048 F0E7     		b	.L286
 3576              	.LVL301:
 3577              	.L285:
 630:mp3.c         **** }
 3578              		.loc 1 630 14 view .LVU1206
 3579 004a FF20     		movs	r0, #255
 3580 004c EFE7     		b	.L283
 3581              		.cfi_endproc
 3582              	.LFE47:
 3584              		.section	.text.get_tag,"ax",%progbits
 3585              		.align	1
 3586              		.global	get_tag
 3587              		.syntax unified
 3588              		.thumb
 3589              		.thumb_func
 3590              		.fpu softvfp
 3592              	get_tag:
 3593              	.LFB48:
 632:mp3.c         **** 
 633:mp3.c         **** 
 634:mp3.c         **** unsigned char get_tag (void)
 635:mp3.c         **** {
 3594              		.loc 1 635 1 is_stmt 1 view -0
 3595              		.cfi_startproc
 3596              		@ args = 0, pretend = 0, frame = 8
 3597              		@ frame_needed = 0, uses_anonymous_args = 0
 636:mp3.c         ****       unsigned short i = 0;
 3598              		.loc 1 636 7 view .LVU1208
 3599              	.LVL302:
 637:mp3.c         ****       unsigned char numx;
 3600              		.loc 1 637 7 view .LVU1209
 638:mp3.c         ****       unsigned char temp;
 3601              		.loc 1 638 7 view .LVU1210
 639:mp3.c         ****       unsigned char min;
 3602              		.loc 1 639 7 view .LVU1211
 640:mp3.c         ****       unsigned char sec;
 3603              		.loc 1 640 7 view .LVU1212
 641:mp3.c         ****       unsigned char mms;
 3604              		.loc 1 641 7 view .LVU1213
 642:mp3.c         ****       lrc_tag_cnt = 0;
 3605              		.loc 1 642 7 view .LVU1214
 635:mp3.c         ****       unsigned short i = 0;
 3606              		.loc 1 635 1 is_stmt 0 view .LVU1215
 3607 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3608              		.cfi_def_cfa_offset 48
 3609              		.cfi_offset 4, -36
 3610              		.cfi_offset 5, -32
 3611              		.cfi_offset 6, -28
 3612              		.cfi_offset 7, -24
 3613              		.cfi_offset 8, -20
 3614              		.cfi_offset 9, -16
 3615              		.cfi_offset 10, -12
 3616              		.cfi_offset 11, -8
 3617              		.cfi_offset 14, -4
 3618              		.loc 1 642 19 view .LVU1216
 3619 0004 0024     		movs	r4, #0
 3620 0006 2F4D     		ldr	r5, .L315
 643:mp3.c         ****       lrc_tag_type = 0;
 3621              		.loc 1 643 20 view .LVU1217
 3622 0008 2F4F     		ldr	r7, .L315+4
 644:mp3.c         ****       get_byte(1);
 3623              		.loc 1 644 7 view .LVU1218
 3624 000a 0120     		movs	r0, #1
 642:mp3.c         ****       lrc_tag_type = 0;
 3625              		.loc 1 642 19 view .LVU1219
 3626 000c 2C80     		strh	r4, [r5]	@ movhi
 643:mp3.c         ****       lrc_tag_type = 0;
 3627              		.loc 1 643 7 is_stmt 1 view .LVU1220
 643:mp3.c         ****       lrc_tag_type = 0;
 3628              		.loc 1 643 20 is_stmt 0 view .LVU1221
 3629 000e 3C70     		strb	r4, [r7]
 3630              		.loc 1 644 7 is_stmt 1 view .LVU1222
 645:mp3.c         ****       while (1) {
 646:mp3.c         **** 	    if (lrc_tag_cnt > 426) break;
 647:mp3.c         **** 	    while (1) {
 648:mp3.c         **** 		  temp = get_byte(0);
 3631              		.loc 1 648 12 is_stmt 0 view .LVU1223
 3632 0010 A246     		mov	r10, r4
 644:mp3.c         ****       while (1) {
 3633              		.loc 1 644 7 view .LVU1224
 3634 0012 FFF7FEFF 		bl	get_byte
 3635              	.LVL303:
 649:mp3.c         **** 		  if (temp == '[') {
 650:mp3.c         **** 		     break;
 651:mp3.c         **** 		  } else if (temp == 0xff) {
 652:mp3.c         **** 		     if (lrc_tag_cnt) return 1;else return 0;
 653:mp3.c         **** 		  }
 654:mp3.c         **** 	    }
 655:mp3.c         **** 	    numx = get_num();
 656:mp3.c         **** 	    if (get_byte(0) != ':' || numx == 0xff) continue;
 657:mp3.c         **** 	    min = numx;
 658:mp3.c         **** 	    numx = get_num();
 659:mp3.c         **** 	    temp = get_byte(0);
 660:mp3.c         **** 	    if ((temp != '.' && temp != ']') || numx == 0xff) continue;
 661:mp3.c         **** 	    sec = numx;
 662:mp3.c         **** 	    if (temp != '.') {
 663:mp3.c         **** 	       tag_table[i] = min;
 664:mp3.c         **** 	       tag_table[i + 1] = sec;
 665:mp3.c         **** 	       i += 2;
 666:mp3.c         **** 	       lrc_tag_type = 0;
 667:mp3.c         **** 	       lrc_tag_cnt++;
 668:mp3.c         **** 	       continue;
 669:mp3.c         **** 	    }
 670:mp3.c         **** 	    numx = get_num();
 671:mp3.c         **** 	    temp = get_byte(0);
 672:mp3.c         **** 	    if (temp != ']' || numx == 0xff) continue;
 673:mp3.c         **** 	    mms = numx;
 674:mp3.c         **** 	    lrc_tag_type = 1;
 3636              		.loc 1 674 19 view .LVU1225
 3637 0016 4FF0010B 		mov	fp, #1
 675:mp3.c         **** 	    lrc_tag_cnt++;
 676:mp3.c         **** 	    tag_table[i] = min;
 3638              		.loc 1 676 19 view .LVU1226
 3639 001a DFF8B090 		ldr	r9, .L315+8
 3640              	.LVL304:
 3641              	.L288:
 645:mp3.c         **** 	    if (lrc_tag_cnt > 426) break;
 3642              		.loc 1 645 7 is_stmt 1 view .LVU1227
 646:mp3.c         **** 	    while (1) {
 3643              		.loc 1 646 6 view .LVU1228
 646:mp3.c         **** 	    while (1) {
 3644              		.loc 1 646 9 is_stmt 0 view .LVU1229
 3645 001e 2B88     		ldrh	r3, [r5]
 3646 0020 B3F5D57F 		cmp	r3, #426
 3647 0024 31D8     		bhi	.L297
 3648              	.L291:
 647:mp3.c         **** 		  temp = get_byte(0);
 3649              		.loc 1 647 6 is_stmt 1 view .LVU1230
 648:mp3.c         **** 		  if (temp == '[') {
 3650              		.loc 1 648 5 view .LVU1231
 648:mp3.c         **** 		  if (temp == '[') {
 3651              		.loc 1 648 12 is_stmt 0 view .LVU1232
 3652 0026 0020     		movs	r0, #0
 3653 0028 FFF7FEFF 		bl	get_byte
 3654              	.LVL305:
 649:mp3.c         **** 		     break;
 3655              		.loc 1 649 5 is_stmt 1 view .LVU1233
 649:mp3.c         **** 		     break;
 3656              		.loc 1 649 8 is_stmt 0 view .LVU1234
 3657 002c 5B28     		cmp	r0, #91
 3658 002e 08D0     		beq	.L290
 651:mp3.c         **** 		     if (lrc_tag_cnt) return 1;else return 0;
 3659              		.loc 1 651 12 is_stmt 1 view .LVU1235
 651:mp3.c         **** 		     if (lrc_tag_cnt) return 1;else return 0;
 3660              		.loc 1 651 15 is_stmt 0 view .LVU1236
 3661 0030 FF28     		cmp	r0, #255
 3662 0032 F8D1     		bne	.L291
 652:mp3.c         **** 		  }
 3663              		.loc 1 652 8 is_stmt 1 view .LVU1237
 652:mp3.c         **** 		  }
 3664              		.loc 1 652 11 is_stmt 0 view .LVU1238
 3665 0034 2888     		ldrh	r0, [r5]
 3666              	.LVL306:
 652:mp3.c         **** 		  }
 3667              		.loc 1 652 32 view .LVU1239
 3668 0036 0038     		subs	r0, r0, #0
 3669 0038 18BF     		it	ne
 3670 003a 0120     		movne	r0, #1
 3671              	.L311:
 677:mp3.c         **** 	    tag_table[i + 1] = sec;
 678:mp3.c         **** 	    tag_table[i + 2] = mms;
 679:mp3.c         **** 	    i += 3;
 680:mp3.c         ****       }
 681:mp3.c         ****       return 1;
 682:mp3.c         **** }
 3672              		.loc 1 682 1 view .LVU1240
 3673 003c 03B0     		add	sp, sp, #12
 3674              		.cfi_remember_state
 3675              		.cfi_def_cfa_offset 36
 3676              		@ sp needed
 3677 003e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3678              	.LVL307:
 3679              	.L290:
 3680              		.cfi_restore_state
 655:mp3.c         **** 	    if (get_byte(0) != ':' || numx == 0xff) continue;
 3681              		.loc 1 655 6 is_stmt 1 view .LVU1241
 655:mp3.c         **** 	    if (get_byte(0) != ':' || numx == 0xff) continue;
 3682              		.loc 1 655 13 is_stmt 0 view .LVU1242
 3683 0042 FFF7FEFF 		bl	get_num
 3684              	.LVL308:
 655:mp3.c         **** 	    if (get_byte(0) != ':' || numx == 0xff) continue;
 3685              		.loc 1 655 13 view .LVU1243
 3686 0046 8046     		mov	r8, r0
 3687              	.LVL309:
 656:mp3.c         **** 	    min = numx;
 3688              		.loc 1 656 6 is_stmt 1 view .LVU1244
 656:mp3.c         **** 	    min = numx;
 3689              		.loc 1 656 10 is_stmt 0 view .LVU1245
 3690 0048 0020     		movs	r0, #0
 3691 004a FFF7FEFF 		bl	get_byte
 3692              	.LVL310:
 656:mp3.c         **** 	    min = numx;
 3693              		.loc 1 656 9 view .LVU1246
 3694 004e 3A28     		cmp	r0, #58
 3695 0050 E5D1     		bne	.L288
 656:mp3.c         **** 	    min = numx;
 3696              		.loc 1 656 29 discriminator 2 view .LVU1247
 3697 0052 B8F1FF0F 		cmp	r8, #255
 3698 0056 E2D0     		beq	.L288
 657:mp3.c         **** 	    numx = get_num();
 3699              		.loc 1 657 6 is_stmt 1 view .LVU1248
 3700              	.LVL311:
 658:mp3.c         **** 	    temp = get_byte(0);
 3701              		.loc 1 658 6 view .LVU1249
 658:mp3.c         **** 	    temp = get_byte(0);
 3702              		.loc 1 658 13 is_stmt 0 view .LVU1250
 3703 0058 FFF7FEFF 		bl	get_num
 3704              	.LVL312:
 3705 005c 0646     		mov	r6, r0
 3706              	.LVL313:
 659:mp3.c         **** 	    if ((temp != '.' && temp != ']') || numx == 0xff) continue;
 3707              		.loc 1 659 6 is_stmt 1 view .LVU1251
 659:mp3.c         **** 	    if ((temp != '.' && temp != ']') || numx == 0xff) continue;
 3708              		.loc 1 659 13 is_stmt 0 view .LVU1252
 3709 005e 0020     		movs	r0, #0
 3710 0060 FFF7FEFF 		bl	get_byte
 3711              	.LVL314:
 660:mp3.c         **** 	    sec = numx;
 3712              		.loc 1 660 6 is_stmt 1 view .LVU1253
 660:mp3.c         **** 	    sec = numx;
 3713              		.loc 1 660 9 is_stmt 0 view .LVU1254
 3714 0064 2E28     		cmp	r0, #46
 3715 0066 12D0     		beq	.L293
 660:mp3.c         **** 	    sec = numx;
 3716              		.loc 1 660 23 discriminator 1 view .LVU1255
 3717 0068 5D28     		cmp	r0, #93
 3718 006a D8D1     		bne	.L288
 660:mp3.c         **** 	    sec = numx;
 3719              		.loc 1 660 39 view .LVU1256
 3720 006c FF2E     		cmp	r6, #255
 3721 006e D6D0     		beq	.L288
 3722 0070 2B88     		ldrh	r3, [r5]
 661:mp3.c         **** 	    if (temp != '.') {
 3723              		.loc 1 661 6 is_stmt 1 view .LVU1257
 3724              	.LVL315:
 662:mp3.c         **** 	       tag_table[i] = min;
 3725              		.loc 1 662 6 view .LVU1258
 663:mp3.c         **** 	       tag_table[i + 1] = sec;
 3726              		.loc 1 663 9 view .LVU1259
 663:mp3.c         **** 	       tag_table[i + 1] = sec;
 3727              		.loc 1 663 22 is_stmt 0 view .LVU1260
 3728 0072 09F80480 		strb	r8, [r9, r4]
 664:mp3.c         **** 	       i += 2;
 3729              		.loc 1 664 9 is_stmt 1 view .LVU1261
 664:mp3.c         **** 	       i += 2;
 3730              		.loc 1 664 26 is_stmt 0 view .LVU1262
 3731 0076 09EB0402 		add	r2, r9, r4
 667:mp3.c         **** 	       continue;
 3732              		.loc 1 667 20 view .LVU1263
 3733 007a 0133     		adds	r3, r3, #1
 665:mp3.c         **** 	       lrc_tag_type = 0;
 3734              		.loc 1 665 11 view .LVU1264
 3735 007c 0234     		adds	r4, r4, #2
 3736              	.LVL316:
 664:mp3.c         **** 	       i += 2;
 3737              		.loc 1 664 26 view .LVU1265
 3738 007e 5670     		strb	r6, [r2, #1]
 665:mp3.c         **** 	       lrc_tag_type = 0;
 3739              		.loc 1 665 9 is_stmt 1 view .LVU1266
 665:mp3.c         **** 	       lrc_tag_type = 0;
 3740              		.loc 1 665 11 is_stmt 0 view .LVU1267
 3741 0080 A4B2     		uxth	r4, r4
 3742              	.LVL317:
 666:mp3.c         **** 	       lrc_tag_cnt++;
 3743              		.loc 1 666 9 is_stmt 1 view .LVU1268
 666:mp3.c         **** 	       lrc_tag_cnt++;
 3744              		.loc 1 666 22 is_stmt 0 view .LVU1269
 3745 0082 87F800A0 		strb	r10, [r7]
 667:mp3.c         **** 	       continue;
 3746              		.loc 1 667 9 is_stmt 1 view .LVU1270
 667:mp3.c         **** 	       continue;
 3747              		.loc 1 667 20 is_stmt 0 view .LVU1271
 3748 0086 2B80     		strh	r3, [r5]	@ movhi
 668:mp3.c         **** 	    }
 3749              		.loc 1 668 9 is_stmt 1 view .LVU1272
 3750 0088 C9E7     		b	.L288
 3751              	.LVL318:
 3752              	.L297:
 681:mp3.c         **** }
 3753              		.loc 1 681 14 is_stmt 0 view .LVU1273
 3754 008a 0120     		movs	r0, #1
 3755 008c D6E7     		b	.L311
 3756              	.LVL319:
 3757              	.L293:
 660:mp3.c         **** 	    sec = numx;
 3758              		.loc 1 660 39 view .LVU1274
 3759 008e FF2E     		cmp	r6, #255
 3760 0090 C5D0     		beq	.L288
 661:mp3.c         **** 	    if (temp != '.') {
 3761              		.loc 1 661 6 is_stmt 1 view .LVU1275
 3762              	.LVL320:
 662:mp3.c         **** 	       tag_table[i] = min;
 3763              		.loc 1 662 6 view .LVU1276
 670:mp3.c         **** 	    temp = get_byte(0);
 3764              		.loc 1 670 6 view .LVU1277
 670:mp3.c         **** 	    temp = get_byte(0);
 3765              		.loc 1 670 13 is_stmt 0 view .LVU1278
 3766 0092 FFF7FEFF 		bl	get_num
 3767              	.LVL321:
 670:mp3.c         **** 	    temp = get_byte(0);
 3768              		.loc 1 670 13 view .LVU1279
 3769 0096 0190     		str	r0, [sp, #4]
 3770              	.LVL322:
 671:mp3.c         **** 	    if (temp != ']' || numx == 0xff) continue;
 3771              		.loc 1 671 6 is_stmt 1 view .LVU1280
 671:mp3.c         **** 	    if (temp != ']' || numx == 0xff) continue;
 3772              		.loc 1 671 13 is_stmt 0 view .LVU1281
 3773 0098 0020     		movs	r0, #0
 3774 009a FFF7FEFF 		bl	get_byte
 3775              	.LVL323:
 672:mp3.c         **** 	    mms = numx;
 3776              		.loc 1 672 6 is_stmt 1 view .LVU1282
 672:mp3.c         **** 	    mms = numx;
 3777              		.loc 1 672 9 is_stmt 0 view .LVU1283
 3778 009e 5D28     		cmp	r0, #93
 3779 00a0 BDD1     		bne	.L288
 672:mp3.c         **** 	    mms = numx;
 3780              		.loc 1 672 22 discriminator 2 view .LVU1284
 3781 00a2 019B     		ldr	r3, [sp, #4]
 3782 00a4 FF2B     		cmp	r3, #255
 3783 00a6 BAD0     		beq	.L288
 3784 00a8 2A88     		ldrh	r2, [r5]
 673:mp3.c         **** 	    lrc_tag_type = 1;
 3785              		.loc 1 673 6 is_stmt 1 view .LVU1285
 3786              	.LVL324:
 674:mp3.c         **** 	    lrc_tag_cnt++;
 3787              		.loc 1 674 6 view .LVU1286
 676:mp3.c         **** 	    tag_table[i + 1] = sec;
 3788              		.loc 1 676 19 is_stmt 0 view .LVU1287
 3789 00aa 09F80480 		strb	r8, [r9, r4]
 675:mp3.c         **** 	    tag_table[i] = min;
 3790              		.loc 1 675 17 view .LVU1288
 3791 00ae 0132     		adds	r2, r2, #1
 3792 00b0 2A80     		strh	r2, [r5]	@ movhi
 677:mp3.c         **** 	    tag_table[i + 2] = mms;
 3793              		.loc 1 677 23 view .LVU1289
 3794 00b2 09EB0402 		add	r2, r9, r4
 679:mp3.c         ****       }
 3795              		.loc 1 679 8 view .LVU1290
 3796 00b6 0334     		adds	r4, r4, #3
 3797              	.LVL325:
 674:mp3.c         **** 	    lrc_tag_cnt++;
 3798              		.loc 1 674 19 view .LVU1291
 3799 00b8 87F800B0 		strb	fp, [r7]
 675:mp3.c         **** 	    tag_table[i] = min;
 3800              		.loc 1 675 6 is_stmt 1 view .LVU1292
 676:mp3.c         **** 	    tag_table[i + 1] = sec;
 3801              		.loc 1 676 6 view .LVU1293
 677:mp3.c         **** 	    tag_table[i + 2] = mms;
 3802              		.loc 1 677 6 view .LVU1294
 677:mp3.c         **** 	    tag_table[i + 2] = mms;
 3803              		.loc 1 677 23 is_stmt 0 view .LVU1295
 3804 00bc 5670     		strb	r6, [r2, #1]
 678:mp3.c         **** 	    i += 3;
 3805              		.loc 1 678 6 is_stmt 1 view .LVU1296
 678:mp3.c         **** 	    i += 3;
 3806              		.loc 1 678 23 is_stmt 0 view .LVU1297
 3807 00be 9370     		strb	r3, [r2, #2]
 679:mp3.c         ****       }
 3808              		.loc 1 679 6 is_stmt 1 view .LVU1298
 679:mp3.c         ****       }
 3809              		.loc 1 679 8 is_stmt 0 view .LVU1299
 3810 00c0 A4B2     		uxth	r4, r4
 3811              	.LVL326:
 679:mp3.c         ****       }
 3812              		.loc 1 679 8 view .LVU1300
 3813 00c2 ACE7     		b	.L288
 3814              	.L316:
 3815              		.align	2
 3816              	.L315:
 3817 00c4 00000000 		.word	.LANCHOR7
 3818 00c8 00000000 		.word	.LANCHOR13
 3819 00cc 00000000 		.word	tag_table
 3820              		.cfi_endproc
 3821              	.LFE48:
 3823              		.section	.rodata.find_lrc.str1.1,"aMS",%progbits,1
 3824              	.LC5:
 3825 0000 303A2F6C 		.ascii	"0:/lrc\000"
 3825      726300
 3826              	.LC4:
 3827 0007 303A2F6C 		.ascii	"0:/lrc/\000"
 3827      72632F00 
 3828              		.section	.text.find_lrc,"ax",%progbits
 3829              		.align	1
 3830              		.global	find_lrc
 3831              		.syntax unified
 3832              		.thumb
 3833              		.thumb_func
 3834              		.fpu softvfp
 3836              	find_lrc:
 3837              	.LVL327:
 3838              	.LFB39:
 438:mp3.c         ****       unsigned char i = 0;
 3839              		.loc 1 438 1 is_stmt 1 view -0
 3840              		.cfi_startproc
 3841              		@ args = 0, pretend = 0, frame = 8
 3842              		@ frame_needed = 0, uses_anonymous_args = 0
 439:mp3.c         ****       unsigned short j;
 3843              		.loc 1 439 7 view .LVU1302
 440:mp3.c         ****       unsigned char record[] = {"0:/lrc/"};
 3844              		.loc 1 440 7 view .LVU1303
 441:mp3.c         ****       char *fn;
 3845              		.loc 1 441 7 view .LVU1304
 438:mp3.c         ****       unsigned char i = 0;
 3846              		.loc 1 438 1 is_stmt 0 view .LVU1305
 3847 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 3848              		.cfi_def_cfa_offset 32
 3849              		.cfi_offset 4, -20
 3850              		.cfi_offset 5, -16
 3851              		.cfi_offset 6, -12
 3852              		.cfi_offset 7, -8
 3853              		.cfi_offset 14, -4
 441:mp3.c         ****       char *fn;
 3854              		.loc 1 441 21 view .LVU1306
 3855 0002 6B46     		mov	r3, sp
 3856 0004 274A     		ldr	r2, .L330
 438:mp3.c         ****       unsigned char i = 0;
 3857              		.loc 1 438 1 view .LVU1307
 3858 0006 0446     		mov	r4, r0
 441:mp3.c         ****       char *fn;
 3859              		.loc 1 441 21 view .LVU1308
 3860 0008 5168     		ldr	r1, [r2, #4]	@ unaligned
 3861 000a 1068     		ldr	r0, [r2]	@ unaligned
 3862              	.LVL328:
 441:mp3.c         ****       char *fn;
 3863              		.loc 1 441 21 view .LVU1309
 3864 000c 03C3     		stmia	r3!, {r0, r1}
 442:mp3.c         **** #if _USE_LFN
 3865              		.loc 1 442 7 is_stmt 1 view .LVU1310
 448:mp3.c         ****       for (j=0;j<7000;j++) lrc_buffer[j] = 0;
 3866              		.loc 1 448 7 view .LVU1311
 3867 000e FFF7FEFF 		bl	lrc_read_init
 3868              	.LVL329:
 449:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 3869              		.loc 1 449 7 view .LVU1312
 449:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 3870              		.loc 1 449 16 view .LVU1313
 448:mp3.c         ****       for (j=0;j<7000;j++) lrc_buffer[j] = 0;
 3871              		.loc 1 448 7 is_stmt 0 view .LVU1314
 3872 0012 41F65832 		movw	r2, #7000
 449:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 3873              		.loc 1 449 42 view .LVU1315
 3874 0016 0021     		movs	r1, #0
 3875 0018 234B     		ldr	r3, .L330+4
 3876              	.LVL330:
 3877              	.L318:
 449:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 3878              		.loc 1 449 28 is_stmt 1 discriminator 3 view .LVU1316
 3879 001a 013A     		subs	r2, r2, #1
 3880 001c 92B2     		uxth	r2, r2
 449:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 3881              		.loc 1 449 42 is_stmt 0 discriminator 3 view .LVU1317
 3882 001e 03F8011B 		strb	r1, [r3], #1
 3883              	.LVL331:
 449:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 3884              		.loc 1 449 23 is_stmt 1 discriminator 3 view .LVU1318
 449:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 3885              		.loc 1 449 16 discriminator 3 view .LVU1319
 449:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 3886              		.loc 1 449 7 is_stmt 0 discriminator 3 view .LVU1320
 3887 0022 002A     		cmp	r2, #0
 3888 0024 F9D1     		bne	.L318
 449:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 3889              		.loc 1 449 7 view .LVU1321
 3890 0026 4FF40073 		mov	r3, #512
 3891              	.LVL332:
 449:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 3892              		.loc 1 449 7 view .LVU1322
 3893 002a 2049     		ldr	r1, .L330+8
 3894              	.L319:
 3895              	.LVL333:
 450:mp3.c         ****       for (j=0;j<512;j++) lrc_data[j] = 0;
 3896              		.loc 1 450 27 is_stmt 1 discriminator 3 view .LVU1323
 3897 002c 013B     		subs	r3, r3, #1
 3898 002e 9BB2     		uxth	r3, r3
 450:mp3.c         ****       for (j=0;j<512;j++) lrc_data[j] = 0;
 3899              		.loc 1 450 40 is_stmt 0 discriminator 3 view .LVU1324
 3900 0030 01F8012B 		strb	r2, [r1], #1
 3901              	.LVL334:
 450:mp3.c         ****       for (j=0;j<512;j++) lrc_data[j] = 0;
 3902              		.loc 1 450 22 is_stmt 1 discriminator 3 view .LVU1325
 450:mp3.c         ****       for (j=0;j<512;j++) lrc_data[j] = 0;
 3903              		.loc 1 450 16 discriminator 3 view .LVU1326
 450:mp3.c         ****       for (j=0;j<512;j++) lrc_data[j] = 0;
 3904              		.loc 1 450 7 is_stmt 0 discriminator 3 view .LVU1327
 3905 0034 002B     		cmp	r3, #0
 3906 0036 F9D1     		bne	.L319
 450:mp3.c         ****       for (j=0;j<512;j++) lrc_data[j] = 0;
 3907              		.loc 1 450 7 view .LVU1328
 3908 0038 4FF40072 		mov	r2, #512
 3909 003c 1C49     		ldr	r1, .L330+12
 3910              	.LVL335:
 3911              	.L320:
 451:mp3.c         ****       res = f_opendir(&dirs,"0:/lrc");
 3912              		.loc 1 451 27 is_stmt 1 discriminator 3 view .LVU1329
 3913 003e 013A     		subs	r2, r2, #1
 3914 0040 92B2     		uxth	r2, r2
 451:mp3.c         ****       res = f_opendir(&dirs,"0:/lrc");
 3915              		.loc 1 451 39 is_stmt 0 discriminator 3 view .LVU1330
 3916 0042 01F8013B 		strb	r3, [r1], #1
 3917              	.LVL336:
 451:mp3.c         ****       res = f_opendir(&dirs,"0:/lrc");
 3918              		.loc 1 451 22 is_stmt 1 discriminator 3 view .LVU1331
 451:mp3.c         ****       res = f_opendir(&dirs,"0:/lrc");
 3919              		.loc 1 451 16 discriminator 3 view .LVU1332
 451:mp3.c         ****       res = f_opendir(&dirs,"0:/lrc");
 3920              		.loc 1 451 7 is_stmt 0 discriminator 3 view .LVU1333
 3921 0046 002A     		cmp	r2, #0
 3922 0048 F9D1     		bne	.L320
 452:mp3.c         ****       while ((f_readdir(&dirs, &fno) == FR_OK) && fno.fname[0]) {
 3923              		.loc 1 452 7 is_stmt 1 view .LVU1334
 452:mp3.c         ****       while ((f_readdir(&dirs, &fno) == FR_OK) && fno.fname[0]) {
 3924              		.loc 1 452 13 is_stmt 0 view .LVU1335
 3925 004a 1A49     		ldr	r1, .L330+16
 3926              	.LVL337:
 452:mp3.c         ****       while ((f_readdir(&dirs, &fno) == FR_OK) && fno.fname[0]) {
 3927              		.loc 1 452 13 view .LVU1336
 3928 004c 1A48     		ldr	r0, .L330+20
 3929 004e FFF7FEFF 		bl	f_opendir
 3930              	.LVL338:
 453:mp3.c         **** #if _USE_LFN
 3931              		.loc 1 453 15 view .LVU1337
 3932 0052 1A4D     		ldr	r5, .L330+24
 452:mp3.c         ****       while ((f_readdir(&dirs, &fno) == FR_OK) && fno.fname[0]) {
 3933              		.loc 1 452 11 view .LVU1338
 3934 0054 1A4B     		ldr	r3, .L330+28
 453:mp3.c         **** #if _USE_LFN
 3935              		.loc 1 453 15 view .LVU1339
 3936 0056 184E     		ldr	r6, .L330+20
 452:mp3.c         ****       while ((f_readdir(&dirs, &fno) == FR_OK) && fno.fname[0]) {
 3937              		.loc 1 452 11 view .LVU1340
 3938 0058 1870     		strb	r0, [r3]
 453:mp3.c         **** #if _USE_LFN
 3939              		.loc 1 453 7 is_stmt 1 view .LVU1341
 459:mp3.c         ****                strcpy((char *)fn,(char *)record);
 3940              		.loc 1 459 17 is_stmt 0 view .LVU1342
 3941 005a 05F10907 		add	r7, r5, #9
 3942              	.L321:
 453:mp3.c         **** #if _USE_LFN
 3943              		.loc 1 453 13 is_stmt 1 view .LVU1343
 453:mp3.c         **** #if _USE_LFN
 3944              		.loc 1 453 15 is_stmt 0 view .LVU1344
 3945 005e 3046     		mov	r0, r6
 3946 0060 1649     		ldr	r1, .L330+24
 3947 0062 FFF7FEFF 		bl	f_readdir
 3948              	.LVL339:
 453:mp3.c         **** #if _USE_LFN
 3949              		.loc 1 453 13 view .LVU1345
 3950 0066 C8B9     		cbnz	r0, .L323
 453:mp3.c         **** #if _USE_LFN
 3951              		.loc 1 453 48 discriminator 1 view .LVU1346
 3952 0068 6B7A     		ldrb	r3, [r5, #9]	@ zero_extendqisi2
 3953 006a BBB1     		cbz	r3, .L323
 457:mp3.c         **** #endif
 3954              		.loc 1 457 13 is_stmt 1 view .LVU1347
 3955              	.LVL340:
 459:mp3.c         ****                strcpy((char *)fn,(char *)record);
 3956              		.loc 1 459 13 view .LVU1348
 459:mp3.c         ****                strcpy((char *)fn,(char *)record);
 3957              		.loc 1 459 17 is_stmt 0 view .LVU1349
 3958 006c 2146     		mov	r1, r4
 3959 006e 3846     		mov	r0, r7
 3960 0070 FFF7FEFF 		bl	strcasecmp
 3961              	.LVL341:
 459:mp3.c         ****                strcpy((char *)fn,(char *)record);
 3962              		.loc 1 459 16 view .LVU1350
 3963 0074 0028     		cmp	r0, #0
 3964 0076 F2D1     		bne	.L321
 460:mp3.c         ****                strcpy((char *)&fn[7],(char *)name);
 3965              		.loc 1 460 16 is_stmt 1 view .LVU1351
 3966 0078 6946     		mov	r1, sp
 3967 007a 1248     		ldr	r0, .L330+32
 3968              	.LVL342:
 460:mp3.c         ****                strcpy((char *)&fn[7],(char *)name);
 3969              		.loc 1 460 16 is_stmt 0 view .LVU1352
 3970 007c FFF7FEFF 		bl	strcpy
 3971              	.LVL343:
 461:mp3.c         ****                bw = f_open(&fap,fn,FA_OPEN_EXISTING | FA_READ);
 3972              		.loc 1 461 16 is_stmt 1 view .LVU1353
 3973 0080 2146     		mov	r1, r4
 3974 0082 1148     		ldr	r0, .L330+36
 3975 0084 FFF7FEFF 		bl	strcpy
 3976              	.LVL344:
 462:mp3.c         ****                if (bw) break;
 3977              		.loc 1 462 16 view .LVU1354
 462:mp3.c         ****                if (bw) break;
 3978              		.loc 1 462 21 is_stmt 0 view .LVU1355
 3979 0088 0122     		movs	r2, #1
 3980 008a 0E49     		ldr	r1, .L330+32
 3981              	.LVL345:
 462:mp3.c         ****                if (bw) break;
 3982              		.loc 1 462 21 view .LVU1356
 3983 008c 0F48     		ldr	r0, .L330+40
 3984 008e FFF7FEFF 		bl	f_open
 3985              	.LVL346:
 462:mp3.c         ****                if (bw) break;
 3986              		.loc 1 462 19 view .LVU1357
 3987 0092 0F4B     		ldr	r3, .L330+44
 3988 0094 1860     		str	r0, [r3]
 463:mp3.c         ****                get_tag();
 3989              		.loc 1 463 16 is_stmt 1 view .LVU1358
 463:mp3.c         ****                get_tag();
 3990              		.loc 1 463 19 is_stmt 0 view .LVU1359
 3991 0096 08B9     		cbnz	r0, .L323
 464:mp3.c         ****                if (i == 0) break;
 3992              		.loc 1 464 16 is_stmt 1 view .LVU1360
 3993 0098 FFF7FEFF 		bl	get_tag
 3994              	.LVL347:
 465:mp3.c         ****                init_tag();
 3995              		.loc 1 465 16 view .LVU1361
 3996              	.L323:
 471:mp3.c         **** }
 3997              		.loc 1 471 7 view .LVU1362
 472:mp3.c         **** 
 3998              		.loc 1 472 1 is_stmt 0 view .LVU1363
 3999 009c 0020     		movs	r0, #0
 4000 009e 03B0     		add	sp, sp, #12
 4001              		.cfi_def_cfa_offset 20
 4002              		@ sp needed
 4003 00a0 F0BD     		pop	{r4, r5, r6, r7, pc}
 4004              	.LVL348:
 4005              	.L331:
 472:mp3.c         **** 
 4006              		.loc 1 472 1 view .LVU1364
 4007 00a2 00BF     		.align	2
 4008              	.L330:
 4009 00a4 07000000 		.word	.LC4
 4010 00a8 00000000 		.word	lrc_buffer
 4011 00ac 00000000 		.word	tag_table
 4012 00b0 00000000 		.word	lrc_data
 4013 00b4 00000000 		.word	.LC5
 4014 00b8 00000000 		.word	dirs
 4015 00bc 00000000 		.word	fno
 4016 00c0 00000000 		.word	res
 4017 00c4 09000000 		.word	fno+9
 4018 00c8 10000000 		.word	fno+16
 4019 00cc 00000000 		.word	fap
 4020 00d0 00000000 		.word	bw
 4021              		.cfi_endproc
 4022              	.LFE39:
 4024              		.section	.text.init_tag,"ax",%progbits
 4025              		.align	1
 4026              		.global	init_tag
 4027              		.syntax unified
 4028              		.thumb
 4029              		.thumb_func
 4030              		.fpu softvfp
 4032              	init_tag:
 4033              	.LFB49:
 683:mp3.c         **** 
 684:mp3.c         **** 
 685:mp3.c         **** void init_tag (void)
 686:mp3.c         **** {
 4034              		.loc 1 686 1 is_stmt 1 view -0
 4035              		.cfi_startproc
 4036              		@ args = 0, pretend = 0, frame = 0
 4037              		@ frame_needed = 0, uses_anonymous_args = 0
 687:mp3.c         ****       unsigned short t = 0;
 4038              		.loc 1 687 7 view .LVU1366
 4039              	.LVL349:
 688:mp3.c         ****       unsigned char t1;
 4040              		.loc 1 688 7 view .LVU1367
 689:mp3.c         ****       unsigned char temp;
 4041              		.loc 1 689 7 view .LVU1368
 690:mp3.c         ****       unsigned short tagcnt = 0;
 4042              		.loc 1 690 7 view .LVU1369
 691:mp3.c         ****       unsigned char offset;
 4043              		.loc 1 691 7 view .LVU1370
 692:mp3.c         ****       if (lrc_tag_type) {
 4044              		.loc 1 692 7 view .LVU1371
 686:mp3.c         ****       unsigned short t = 0;
 4045              		.loc 1 686 1 is_stmt 0 view .LVU1372
 4046 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4047              		.cfi_def_cfa_offset 32
 4048              		.cfi_offset 4, -32
 4049              		.cfi_offset 5, -28
 4050              		.cfi_offset 6, -24
 4051              		.cfi_offset 7, -20
 4052              		.cfi_offset 8, -16
 4053              		.cfi_offset 9, -12
 4054              		.cfi_offset 10, -8
 4055              		.cfi_offset 14, -4
 4056              		.loc 1 692 11 view .LVU1373
 4057 0004 2C4A     		ldr	r2, .L347
 4058 0006 2D4B     		ldr	r3, .L347+4
 4059              		.loc 1 692 10 view .LVU1374
 4060 0008 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4061 000a 1B88     		ldrh	r3, [r3]
 4062 000c 6AB1     		cbz	r2, .L333
 693:mp3.c         **** 	 tagcnt = (lrc_tag_cnt - 1) * 3;
 4063              		.loc 1 693 3 is_stmt 1 view .LVU1375
 694:mp3.c         **** 	 offset = 3;
 4064              		.loc 1 694 10 is_stmt 0 view .LVU1376
 4065 000e 0324     		movs	r4, #3
 693:mp3.c         **** 	 tagcnt = (lrc_tag_cnt - 1) * 3;
 4066              		.loc 1 693 10 view .LVU1377
 4067 0010 03EB4303 		add	r3, r3, r3, lsl #1
 4068 0014 D91E     		subs	r1, r3, #3
 4069 0016 89B2     		uxth	r1, r1
 4070              	.LVL350:
 4071              		.loc 1 694 3 is_stmt 1 view .LVU1378
 4072              	.L334:
 695:mp3.c         ****       } else {
 696:mp3.c         **** 	 tagcnt = (lrc_tag_cnt - 1) * 2;
 697:mp3.c         **** 	 offset = 2;
 698:mp3.c         ****       }
 699:mp3.c         ****       do {
 700:mp3.c         **** 	  t1 = 0;
 701:mp3.c         **** 	  for (t=0;t<tagcnt;t+=offset) {
 702:mp3.c         **** 	      if (tag_table[t] > tag_table[t + offset]) {
 4073              		.loc 1 702 21 is_stmt 0 view .LVU1379
 4074 0018 294B     		ldr	r3, .L347+8
 4075              	.LVL351:
 4076              	.L342:
 699:mp3.c         **** 	  t1 = 0;
 4077              		.loc 1 699 7 is_stmt 1 view .LVU1380
 700:mp3.c         **** 	  for (t=0;t<tagcnt;t+=offset) {
 4078              		.loc 1 700 4 view .LVU1381
 701:mp3.c         **** 	      if (tag_table[t] > tag_table[t + offset]) {
 4079              		.loc 1 701 4 view .LVU1382
 700:mp3.c         **** 	  for (t=0;t<tagcnt;t+=offset) {
 4080              		.loc 1 700 7 is_stmt 0 view .LVU1383
 4081 001a 0020     		movs	r0, #0
 701:mp3.c         **** 	      if (tag_table[t] > tag_table[t + offset]) {
 4082              		.loc 1 701 10 view .LVU1384
 4083 001c 0246     		mov	r2, r0
 4084              	.LVL352:
 4085              	.L335:
 701:mp3.c         **** 	      if (tag_table[t] > tag_table[t + offset]) {
 4086              		.loc 1 701 13 is_stmt 1 discriminator 1 view .LVU1385
 701:mp3.c         **** 	      if (tag_table[t] > tag_table[t + offset]) {
 4087              		.loc 1 701 4 is_stmt 0 discriminator 1 view .LVU1386
 4088 001e 8A42     		cmp	r2, r1
 4089 0020 08D3     		bcc	.L341
 703:mp3.c         **** 		 temp = tag_table[t + offset];
 704:mp3.c         **** 		 tag_table[t + offset] = tag_table[t];
 705:mp3.c         **** 		 tag_table[t] = temp;
 706:mp3.c         **** 		 temp = tag_table[t + offset + 1];
 707:mp3.c         **** 		 tag_table[t + offset + 1] = tag_table[t + 1];
 708:mp3.c         **** 		 tag_table[t + 1] = temp;
 709:mp3.c         **** 		 if (offset == 3) {
 710:mp3.c         **** 		    temp = tag_table[t + 5];
 711:mp3.c         **** 		    tag_table[t + 5] = tag_table[t + 2];
 712:mp3.c         **** 		    tag_table[t + 2] = temp;
 713:mp3.c         **** 		 }
 714:mp3.c         **** 		 t1 = 1;
 715:mp3.c         **** 	      } else if (tag_table[t + 1] > tag_table[t + offset + 1] && tag_table[t] == tag_table[t + off
 716:mp3.c         **** 		 temp = tag_table[t + offset + 1];
 717:mp3.c         **** 		 tag_table[t + offset + 1] = tag_table[t + 1];
 718:mp3.c         **** 		 tag_table[t + 1] = temp;
 719:mp3.c         **** 		 if (offset == 3) {
 720:mp3.c         **** 		    temp = tag_table[t + 5];
 721:mp3.c         **** 		    tag_table[t + 5] = tag_table[t + 2];
 722:mp3.c         **** 		    tag_table[t + 2] = temp;
 723:mp3.c         **** 		 }
 724:mp3.c         **** 		 t1 = 1;
 725:mp3.c         **** 	      } else if (offset == 3) {
 726:mp3.c         **** 		 if (tag_table[t + 2] > tag_table[t + 5] && tag_table[t] == tag_table[t + 3] && tag_table[t + 1] 
 727:mp3.c         **** 		    temp = tag_table[t + 5];
 728:mp3.c         **** 		    tag_table[t + 5] = tag_table[t + 2];
 729:mp3.c         **** 		    tag_table[t + 2] = temp;
 730:mp3.c         **** 		    t1 = 1;
 731:mp3.c         **** 		 }
 732:mp3.c         **** 	      }
 733:mp3.c         **** 	  }
 734:mp3.c         ****       } while (t1);
 4090              		.loc 1 734 15 is_stmt 1 view .LVU1387
 4091              		.loc 1 734 7 is_stmt 0 view .LVU1388
 4092 0022 0028     		cmp	r0, #0
 4093 0024 F9D1     		bne	.L342
 735:mp3.c         **** }
 4094              		.loc 1 735 1 view .LVU1389
 4095 0026 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4096              	.LVL353:
 4097              	.L333:
 696:mp3.c         **** 	 offset = 2;
 4098              		.loc 1 696 3 is_stmt 1 view .LVU1390
 696:mp3.c         **** 	 offset = 2;
 4099              		.loc 1 696 10 is_stmt 0 view .LVU1391
 4100 002a 591E     		subs	r1, r3, #1
 4101 002c 4900     		lsls	r1, r1, #1
 697:mp3.c         ****       }
 4102              		.loc 1 697 10 view .LVU1392
 4103 002e 0224     		movs	r4, #2
 696:mp3.c         **** 	 offset = 2;
 4104              		.loc 1 696 10 view .LVU1393
 4105 0030 89B2     		uxth	r1, r1
 4106              	.LVL354:
 697:mp3.c         ****       }
 4107              		.loc 1 697 3 is_stmt 1 view .LVU1394
 697:mp3.c         ****       }
 4108              		.loc 1 697 3 is_stmt 0 view .LVU1395
 4109 0032 F1E7     		b	.L334
 4110              	.LVL355:
 4111              	.L341:
 702:mp3.c         **** 		 temp = tag_table[t + offset];
 4112              		.loc 1 702 8 is_stmt 1 view .LVU1396
 702:mp3.c         **** 		 temp = tag_table[t + offset];
 4113              		.loc 1 702 39 is_stmt 0 view .LVU1397
 4114 0034 A518     		adds	r5, r4, r2
 702:mp3.c         **** 		 temp = tag_table[t + offset];
 4115              		.loc 1 702 21 view .LVU1398
 4116 0036 9E5C     		ldrb	r6, [r3, r2]	@ zero_extendqisi2
 702:mp3.c         **** 		 temp = tag_table[t + offset];
 4117              		.loc 1 702 36 view .LVU1399
 4118 0038 13F80580 		ldrb	r8, [r3, r5]	@ zero_extendqisi2
 4119 003c 571C     		adds	r7, r2, #1
 702:mp3.c         **** 		 temp = tag_table[t + offset];
 4120              		.loc 1 702 11 view .LVU1400
 4121 003e 4645     		cmp	r6, r8
 4122 0040 05F1010C 		add	ip, r5, #1
 4123 0044 13D9     		bls	.L336
 703:mp3.c         **** 		 tag_table[t + offset] = tag_table[t];
 4124              		.loc 1 703 4 is_stmt 1 view .LVU1401
 4125              	.LVL356:
 704:mp3.c         **** 		 tag_table[t] = temp;
 4126              		.loc 1 704 4 view .LVU1402
 704:mp3.c         **** 		 tag_table[t] = temp;
 4127              		.loc 1 704 26 is_stmt 0 view .LVU1403
 4128 0046 5E55     		strb	r6, [r3, r5]
 705:mp3.c         **** 		 temp = tag_table[t + offset + 1];
 4129              		.loc 1 705 4 is_stmt 1 view .LVU1404
 705:mp3.c         **** 		 temp = tag_table[t + offset + 1];
 4130              		.loc 1 705 17 is_stmt 0 view .LVU1405
 4131 0048 03F80280 		strb	r8, [r3, r2]
 706:mp3.c         **** 		 tag_table[t + offset + 1] = tag_table[t + 1];
 4132              		.loc 1 706 4 is_stmt 1 view .LVU1406
 706:mp3.c         **** 		 tag_table[t + offset + 1] = tag_table[t + 1];
 4133              		.loc 1 706 9 is_stmt 0 view .LVU1407
 4134 004c 13F80C00 		ldrb	r0, [r3, ip]	@ zero_extendqisi2
 4135              	.LVL357:
 707:mp3.c         **** 		 tag_table[t + 1] = temp;
 4136              		.loc 1 707 4 is_stmt 1 view .LVU1408
 707:mp3.c         **** 		 tag_table[t + 1] = temp;
 4137              		.loc 1 707 41 is_stmt 0 view .LVU1409
 4138 0050 DE5D     		ldrb	r6, [r3, r7]	@ zero_extendqisi2
 707:mp3.c         **** 		 tag_table[t + 1] = temp;
 4139              		.loc 1 707 30 view .LVU1410
 4140 0052 03F80C60 		strb	r6, [r3, ip]
 708:mp3.c         **** 		 if (offset == 3) {
 4141              		.loc 1 708 4 is_stmt 1 view .LVU1411
 708:mp3.c         **** 		 if (offset == 3) {
 4142              		.loc 1 708 21 is_stmt 0 view .LVU1412
 4143 0056 D855     		strb	r0, [r3, r7]
 709:mp3.c         **** 		    temp = tag_table[t + 5];
 4144              		.loc 1 709 4 is_stmt 1 view .LVU1413
 4145              	.LVL358:
 4146              	.L346:
 719:mp3.c         **** 		    temp = tag_table[t + 5];
 4147              		.loc 1 719 4 view .LVU1414
 719:mp3.c         **** 		    temp = tag_table[t + 5];
 4148              		.loc 1 719 7 is_stmt 0 view .LVU1415
 4149 0058 032C     		cmp	r4, #3
 4150 005a 05D1     		bne	.L344
 720:mp3.c         **** 		    tag_table[t + 5] = tag_table[t + 2];
 4151              		.loc 1 720 7 is_stmt 1 view .LVU1416
 720:mp3.c         **** 		    tag_table[t + 5] = tag_table[t + 2];
 4152              		.loc 1 720 26 is_stmt 0 view .LVU1417
 4153 005c 501D     		adds	r0, r2, #5
 721:mp3.c         **** 		    tag_table[t + 2] = temp;
 4154              		.loc 1 721 38 view .LVU1418
 4155 005e 0232     		adds	r2, r2, #2
 4156              	.LVL359:
 720:mp3.c         **** 		    tag_table[t + 5] = tag_table[t + 2];
 4157              		.loc 1 720 12 view .LVU1419
 4158 0060 1E5C     		ldrb	r6, [r3, r0]	@ zero_extendqisi2
 4159              	.LVL360:
 721:mp3.c         **** 		    tag_table[t + 2] = temp;
 4160              		.loc 1 721 7 is_stmt 1 view .LVU1420
 721:mp3.c         **** 		    tag_table[t + 2] = temp;
 4161              		.loc 1 721 35 is_stmt 0 view .LVU1421
 4162 0062 9F5C     		ldrb	r7, [r3, r2]	@ zero_extendqisi2
 721:mp3.c         **** 		    tag_table[t + 2] = temp;
 4163              		.loc 1 721 24 view .LVU1422
 4164 0064 1F54     		strb	r7, [r3, r0]
 722:mp3.c         **** 		 }
 4165              		.loc 1 722 7 is_stmt 1 view .LVU1423
 722:mp3.c         **** 		 }
 4166              		.loc 1 722 24 is_stmt 0 view .LVU1424
 4167 0066 9E54     		strb	r6, [r3, r2]
 4168              	.LVL361:
 4169              	.L344:
 730:mp3.c         **** 		 }
 4170              		.loc 1 730 7 is_stmt 1 view .LVU1425
 730:mp3.c         **** 		 }
 4171              		.loc 1 730 10 is_stmt 0 view .LVU1426
 4172 0068 0120     		movs	r0, #1
 4173              	.LVL362:
 4174              	.L338:
 701:mp3.c         **** 	      if (tag_table[t] > tag_table[t + offset]) {
 4175              		.loc 1 701 22 is_stmt 1 discriminator 2 view .LVU1427
 701:mp3.c         **** 	      if (tag_table[t] > tag_table[t + offset]) {
 4176              		.loc 1 701 23 is_stmt 0 discriminator 2 view .LVU1428
 4177 006a AAB2     		uxth	r2, r5
 4178              	.LVL363:
 701:mp3.c         **** 	      if (tag_table[t] > tag_table[t + offset]) {
 4179              		.loc 1 701 23 discriminator 2 view .LVU1429
 4180 006c D7E7     		b	.L335
 4181              	.L336:
 715:mp3.c         **** 		 temp = tag_table[t + offset + 1];
 4182              		.loc 1 715 15 is_stmt 1 view .LVU1430
 715:mp3.c         **** 		 temp = tag_table[t + offset + 1];
 4183              		.loc 1 715 28 is_stmt 0 view .LVU1431
 4184 006e 13F807E0 		ldrb	lr, [r3, r7]	@ zero_extendqisi2
 715:mp3.c         **** 		 temp = tag_table[t + offset + 1];
 4185              		.loc 1 715 47 view .LVU1432
 4186 0072 13F80C90 		ldrb	r9, [r3, ip]	@ zero_extendqisi2
 715:mp3.c         **** 		 temp = tag_table[t + offset + 1];
 4187              		.loc 1 715 18 view .LVU1433
 4188 0076 CE45     		cmp	lr, r9
 4189 0078 06D9     		bls	.L339
 715:mp3.c         **** 		 temp = tag_table[t + offset + 1];
 4190              		.loc 1 715 64 discriminator 1 view .LVU1434
 4191 007a 4645     		cmp	r6, r8
 4192 007c 04D1     		bne	.L339
 716:mp3.c         **** 		 tag_table[t + offset + 1] = tag_table[t + 1];
 4193              		.loc 1 716 4 is_stmt 1 view .LVU1435
 4194              	.LVL364:
 717:mp3.c         **** 		 tag_table[t + 1] = temp;
 4195              		.loc 1 717 4 view .LVU1436
 717:mp3.c         **** 		 tag_table[t + 1] = temp;
 4196              		.loc 1 717 30 is_stmt 0 view .LVU1437
 4197 007e 03F80CE0 		strb	lr, [r3, ip]
 718:mp3.c         **** 		 if (offset == 3) {
 4198              		.loc 1 718 4 is_stmt 1 view .LVU1438
 718:mp3.c         **** 		 if (offset == 3) {
 4199              		.loc 1 718 21 is_stmt 0 view .LVU1439
 4200 0082 03F80790 		strb	r9, [r3, r7]
 4201 0086 E7E7     		b	.L346
 4202              	.LVL365:
 4203              	.L339:
 725:mp3.c         **** 		 if (tag_table[t + 2] > tag_table[t + 5] && tag_table[t] == tag_table[t + 3] && tag_table[t + 1] 
 4204              		.loc 1 725 15 is_stmt 1 view .LVU1440
 725:mp3.c         **** 		 if (tag_table[t + 2] > tag_table[t + 5] && tag_table[t] == tag_table[t + 3] && tag_table[t + 1] 
 4205              		.loc 1 725 18 is_stmt 0 view .LVU1441
 4206 0088 032C     		cmp	r4, #3
 4207 008a EED1     		bne	.L338
 726:mp3.c         **** 		    temp = tag_table[t + 5];
 4208              		.loc 1 726 4 is_stmt 1 view .LVU1442
 726:mp3.c         **** 		    temp = tag_table[t + 5];
 4209              		.loc 1 726 20 is_stmt 0 view .LVU1443
 4210 008c 971C     		adds	r7, r2, #2
 726:mp3.c         **** 		    temp = tag_table[t + 5];
 4211              		.loc 1 726 39 view .LVU1444
 4212 008e 02F10508 		add	r8, r2, #5
 726:mp3.c         **** 		    temp = tag_table[t + 5];
 4213              		.loc 1 726 17 view .LVU1445
 4214 0092 13F80790 		ldrb	r9, [r3, r7]	@ zero_extendqisi2
 726:mp3.c         **** 		    temp = tag_table[t + 5];
 4215              		.loc 1 726 36 view .LVU1446
 4216 0096 13F808C0 		ldrb	ip, [r3, r8]	@ zero_extendqisi2
 726:mp3.c         **** 		    temp = tag_table[t + 5];
 4217              		.loc 1 726 7 view .LVU1447
 4218 009a E145     		cmp	r9, ip
 4219 009c E5D9     		bls	.L338
 726:mp3.c         **** 		    temp = tag_table[t + 5];
 4220              		.loc 1 726 72 discriminator 1 view .LVU1448
 4221 009e 1A44     		add	r2, r2, r3
 4222              	.LVL366:
 726:mp3.c         **** 		    temp = tag_table[t + 5];
 4223              		.loc 1 726 44 discriminator 1 view .LVU1449
 4224 00a0 92F803A0 		ldrb	r10, [r2, #3]	@ zero_extendqisi2
 4225 00a4 B245     		cmp	r10, r6
 4226 00a6 E0D1     		bne	.L338
 726:mp3.c         **** 		    temp = tag_table[t + 5];
 4227              		.loc 1 726 80 discriminator 2 view .LVU1450
 4228 00a8 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 4229 00aa 7245     		cmp	r2, lr
 4230 00ac DDD1     		bne	.L338
 727:mp3.c         **** 		    tag_table[t + 5] = tag_table[t + 2];
 4231              		.loc 1 727 7 is_stmt 1 view .LVU1451
 4232              	.LVL367:
 728:mp3.c         **** 		    tag_table[t + 2] = temp;
 4233              		.loc 1 728 7 view .LVU1452
 728:mp3.c         **** 		    tag_table[t + 2] = temp;
 4234              		.loc 1 728 24 is_stmt 0 view .LVU1453
 4235 00ae 03F80890 		strb	r9, [r3, r8]
 729:mp3.c         **** 		    t1 = 1;
 4236              		.loc 1 729 7 is_stmt 1 view .LVU1454
 729:mp3.c         **** 		    t1 = 1;
 4237              		.loc 1 729 24 is_stmt 0 view .LVU1455
 4238 00b2 03F807C0 		strb	ip, [r3, r7]
 4239 00b6 D7E7     		b	.L344
 4240              	.L348:
 4241              		.align	2
 4242              	.L347:
 4243 00b8 00000000 		.word	.LANCHOR13
 4244 00bc 00000000 		.word	.LANCHOR7
 4245 00c0 00000000 		.word	tag_table
 4246              		.cfi_endproc
 4247              	.LFE49:
 4249              		.section	.text.copy_lyric,"ax",%progbits
 4250              		.align	1
 4251              		.global	copy_lyric
 4252              		.syntax unified
 4253              		.thumb
 4254              		.thumb_func
 4255              		.fpu softvfp
 4257              	copy_lyric:
 4258              	.LVL368:
 4259              	.LFB50:
 736:mp3.c         **** 
 737:mp3.c         **** 
 738:mp3.c         **** unsigned char copy_lyric (unsigned char tmin,unsigned char tsec,unsigned char tmms)
 739:mp3.c         **** {
 4260              		.loc 1 739 1 is_stmt 1 view -0
 4261              		.cfi_startproc
 4262              		@ args = 0, pretend = 0, frame = 0
 4263              		@ frame_needed = 0, uses_anonymous_args = 0
 740:mp3.c         ****       static unsigned short tagpos = 0;
 4264              		.loc 1 740 7 view .LVU1457
 741:mp3.c         ****       static unsigned short lrcbufpos = 0;
 4265              		.loc 1 741 7 view .LVU1458
 742:mp3.c         ****       unsigned char temp;
 4266              		.loc 1 742 7 view .LVU1459
 743:mp3.c         ****       unsigned char temp1;
 4267              		.loc 1 743 7 view .LVU1460
 744:mp3.c         ****       unsigned short tagcnt = 0;
 4268              		.loc 1 744 7 view .LVU1461
 745:mp3.c         ****       if (tmin == 0xff) {
 4269              		.loc 1 745 7 view .LVU1462
 4270              		.loc 1 745 10 is_stmt 0 view .LVU1463
 4271 0000 FF28     		cmp	r0, #255
 739:mp3.c         ****       static unsigned short tagpos = 0;
 4272              		.loc 1 739 1 view .LVU1464
 4273 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4274              		.cfi_def_cfa_offset 24
 4275              		.cfi_offset 3, -24
 4276              		.cfi_offset 4, -20
 4277              		.cfi_offset 5, -16
 4278              		.cfi_offset 6, -12
 4279              		.cfi_offset 7, -8
 4280              		.cfi_offset 14, -4
 4281 0004 6D4E     		ldr	r6, .L400
 4282              		.loc 1 745 10 view .LVU1465
 4283 0006 05D1     		bne	.L350
 746:mp3.c         ****       	 tagpos = 0;
 4284              		.loc 1 746 9 is_stmt 1 view .LVU1466
 4285              		.loc 1 746 16 is_stmt 0 view .LVU1467
 4286 0008 0023     		movs	r3, #0
 747:mp3.c         ****       	 lrcbufpos = 0;
 4287              		.loc 1 747 19 view .LVU1468
 4288 000a 6D4A     		ldr	r2, .L400+4
 4289              	.LVL369:
 746:mp3.c         ****       	 tagpos = 0;
 4290              		.loc 1 746 16 view .LVU1469
 4291 000c 3380     		strh	r3, [r6]	@ movhi
 4292              		.loc 1 747 9 is_stmt 1 view .LVU1470
 4293              		.loc 1 747 19 is_stmt 0 view .LVU1471
 4294 000e 1380     		strh	r3, [r2]	@ movhi
 748:mp3.c         ****       	 return 1;
 4295              		.loc 1 748 9 is_stmt 1 view .LVU1472
 4296              	.LVL370:
 4297              	.L397:
 4298              	.LBB237:
 4299              	.LBB238:
 484:mp3.c         **** }
 4300              		.loc 1 484 7 view .LVU1473
 4301              	.LBE238:
 4302              	.LBE237:
 749:mp3.c         ****       }
 750:mp3.c         ****       if (lrc_tag_type) tagcnt = (lrc_tag_cnt - 1) * 3;else tagcnt = (lrc_tag_cnt - 1) * 2;
 751:mp3.c         ****       if (tagpos > tagcnt) {
 752:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos,'\0');
 753:mp3.c         **** 	 return 0xff;
 754:mp3.c         ****       }
 755:mp3.c         ****       if (tmin == tag_table[tagpos] && tsec == tag_table[tagpos + 1] && lrc_tag_type == 0) {
 756:mp3.c         **** 	 tagpos += 2;
 757:mp3.c         ****       } else if (tmin == tag_table[tagpos] && tsec == tag_table[tagpos + 1] && tmms == tag_table[ta
 758:mp3.c         **** 	 tagpos+=3;
 759:mp3.c         ****       } else return 1;
 760:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,'[');
 761:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,tmin);
 762:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,':');
 763:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,tsec);
 764:mp3.c         ****       if (lrc_tag_type) {
 765:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos++,'.');
 766:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos++,tmms);
 767:mp3.c         ****       }
 768:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,']');
 769:mp3.c         ****       while (1) {
 770:mp3.c         **** 	    temp = get_byte(0);
 771:mp3.c         **** 	    if (temp == '[') {
 772:mp3.c         **** 	       write_byte_lrcbuf(lrcbufpos,temp);
 773:mp3.c         **** 	       temp1 = get_byte(0);
 774:mp3.c         **** 	       temp = temp1;
 775:mp3.c         **** 	       temp1 -= '0';
 776:mp3.c         **** 	       if (temp1 < 10) {
 777:mp3.c         **** 		  while (1) {
 778:mp3.c         **** 			temp1 = get_byte(0);
 779:mp3.c         **** 			if (temp1 == ']' || temp1 == 0xff) break;
 780:mp3.c         **** 		  }
 781:mp3.c         **** 	       } else {
 782:mp3.c         **** 		  lrcbufpos++;
 783:mp3.c         **** 	          write_byte_lrcbuf(lrcbufpos++,temp);
 784:mp3.c         **** 		  break;
 785:mp3.c         **** 	       }
 786:mp3.c         **** 	    } else if (temp != ' ') {
 787:mp3.c         **** 	       if (temp != 0xFF && temp != 0x00) write_byte_lrcbuf(lrcbufpos++,temp);
 788:mp3.c         **** 	       break;
 789:mp3.c         **** 	    }
 790:mp3.c         ****       }
 791:mp3.c         ****       while (1) {
 792:mp3.c         **** 	    temp = get_byte(0);
 793:mp3.c         **** 	    if (temp != 0xFF && temp != 0x00) write_byte_lrcbuf(lrcbufpos++,temp);
 794:mp3.c         **** 	    if (temp == 0x0A || temp == 0xFF || temp == 0x00) {
 795:mp3.c         **** 	       write_byte_lrcbuf(lrcbufpos++,temp);
 796:mp3.c         **** 	       break;
 797:mp3.c         **** 	    }
 798:mp3.c         ****       }
 799:mp3.c         ****       return 1;
 4303              		.loc 1 799 14 is_stmt 0 view .LVU1474
 4304 0010 0120     		movs	r0, #1
 4305              	.L351:
 800:mp3.c         **** }
 4306              		.loc 1 800 1 view .LVU1475
 4307 0012 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4308              	.LVL371:
 4309              	.L350:
 750:mp3.c         ****       if (tagpos > tagcnt) {
 4310              		.loc 1 750 7 is_stmt 1 view .LVU1476
 750:mp3.c         ****       if (tagpos > tagcnt) {
 4311              		.loc 1 750 11 is_stmt 0 view .LVU1477
 4312 0014 6B4B     		ldr	r3, .L400+8
 4313 0016 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 4314 0018 6B4B     		ldr	r3, .L400+12
 4315 001a 1B88     		ldrh	r3, [r3]
 750:mp3.c         ****       if (tagpos > tagcnt) {
 4316              		.loc 1 750 10 view .LVU1478
 4317 001c 8DB1     		cbz	r5, .L352
 750:mp3.c         ****       if (tagpos > tagcnt) {
 4318              		.loc 1 750 25 is_stmt 1 discriminator 1 view .LVU1479
 750:mp3.c         ****       if (tagpos > tagcnt) {
 4319              		.loc 1 750 32 is_stmt 0 discriminator 1 view .LVU1480
 4320 001e 03EB4303 		add	r3, r3, r3, lsl #1
 4321 0022 033B     		subs	r3, r3, #3
 4322              	.L394:
 751:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos,'\0');
 4323              		.loc 1 751 18 discriminator 2 view .LVU1481
 4324 0024 3488     		ldrh	r4, [r6]
 750:mp3.c         ****       if (tagpos > tagcnt) {
 4325              		.loc 1 750 68 discriminator 2 view .LVU1482
 4326 0026 9BB2     		uxth	r3, r3
 4327              	.LVL372:
 751:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos,'\0');
 4328              		.loc 1 751 7 is_stmt 1 discriminator 2 view .LVU1483
 751:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos,'\0');
 4329              		.loc 1 751 10 is_stmt 0 discriminator 2 view .LVU1484
 4330 0028 9C42     		cmp	r4, r3
 4331 002a 0DD9     		bls	.L354
 752:mp3.c         **** 	 return 0xff;
 4332              		.loc 1 752 3 is_stmt 1 view .LVU1485
 4333              	.LBB240:
 4334              	.LBB241:
 483:mp3.c         ****       return 1;
 4335              		.loc 1 483 10 is_stmt 0 view .LVU1486
 4336 002c 41F65732 		movw	r2, #6999
 4337              	.LVL373:
 483:mp3.c         ****       return 1;
 4338              		.loc 1 483 10 view .LVU1487
 4339              	.LBE241:
 4340              	.LBE240:
 752:mp3.c         **** 	 return 0xff;
 4341              		.loc 1 752 3 view .LVU1488
 4342 0030 634B     		ldr	r3, .L400+4
 4343              	.LVL374:
 752:mp3.c         **** 	 return 0xff;
 4344              		.loc 1 752 3 view .LVU1489
 4345 0032 1B88     		ldrh	r3, [r3]
 4346              	.LVL375:
 4347              	.LBB243:
 4348              	.LBI240:
 481:mp3.c         **** {
 4349              		.loc 1 481 15 is_stmt 1 view .LVU1490
 4350              	.LBB242:
 483:mp3.c         ****       return 1;
 4351              		.loc 1 483 7 view .LVU1491
 483:mp3.c         ****       return 1;
 4352              		.loc 1 483 10 is_stmt 0 view .LVU1492
 4353 0034 9342     		cmp	r3, r2
 4354 0036 02D8     		bhi	.L381
 483:mp3.c         ****       return 1;
 4355              		.loc 1 483 24 is_stmt 1 view .LVU1493
 483:mp3.c         ****       return 1;
 4356              		.loc 1 483 41 is_stmt 0 view .LVU1494
 4357 0038 0021     		movs	r1, #0
 4358              	.LVL376:
 483:mp3.c         ****       return 1;
 4359              		.loc 1 483 41 view .LVU1495
 4360 003a 644A     		ldr	r2, .L400+16
 4361 003c D154     		strb	r1, [r2, r3]
 484:mp3.c         **** }
 4362              		.loc 1 484 7 is_stmt 1 view .LVU1496
 4363              	.L381:
 4364              	.LBE242:
 4365              	.LBE243:
 753:mp3.c         ****       }
 4366              		.loc 1 753 10 is_stmt 0 view .LVU1497
 4367 003e FF20     		movs	r0, #255
 4368              	.LVL377:
 753:mp3.c         ****       }
 4369              		.loc 1 753 10 view .LVU1498
 4370 0040 E7E7     		b	.L351
 4371              	.LVL378:
 4372              	.L352:
 750:mp3.c         ****       if (tagpos > tagcnt) {
 4373              		.loc 1 750 61 is_stmt 1 discriminator 2 view .LVU1499
 750:mp3.c         ****       if (tagpos > tagcnt) {
 4374              		.loc 1 750 68 is_stmt 0 discriminator 2 view .LVU1500
 4375 0042 013B     		subs	r3, r3, #1
 4376 0044 5B00     		lsls	r3, r3, #1
 4377 0046 EDE7     		b	.L394
 4378              	.LVL379:
 4379              	.L354:
 755:mp3.c         **** 	 tagpos += 2;
 4380              		.loc 1 755 7 is_stmt 1 view .LVU1501
 755:mp3.c         **** 	 tagpos += 2;
 4381              		.loc 1 755 28 is_stmt 0 view .LVU1502
 4382 0048 614B     		ldr	r3, .L400+20
 4383              	.LVL380:
 755:mp3.c         **** 	 tagpos += 2;
 4384              		.loc 1 755 10 view .LVU1503
 4385 004a 1F5D     		ldrb	r7, [r3, r4]	@ zero_extendqisi2
 4386 004c 8742     		cmp	r7, r0
 4387 004e DFD1     		bne	.L397
 755:mp3.c         **** 	 tagpos += 2;
 4388              		.loc 1 755 57 discriminator 1 view .LVU1504
 4389 0050 2344     		add	r3, r3, r4
 755:mp3.c         **** 	 tagpos += 2;
 4390              		.loc 1 755 37 discriminator 1 view .LVU1505
 4391 0052 5F78     		ldrb	r7, [r3, #1]	@ zero_extendqisi2
 4392 0054 8F42     		cmp	r7, r1
 4393 0056 DBD1     		bne	.L397
 755:mp3.c         **** 	 tagpos += 2;
 4394              		.loc 1 755 70 discriminator 2 view .LVU1506
 4395 0058 002D     		cmp	r5, #0
 4396 005a 70D1     		bne	.L357
 756:mp3.c         ****       } else if (tmin == tag_table[tagpos] && tsec == tag_table[tagpos + 1] && tmms == tag_table[ta
 4397              		.loc 1 756 3 is_stmt 1 view .LVU1507
 756:mp3.c         ****       } else if (tmin == tag_table[tagpos] && tsec == tag_table[tagpos + 1] && tmms == tag_table[ta
 4398              		.loc 1 756 10 is_stmt 0 view .LVU1508
 4399 005c 0234     		adds	r4, r4, #2
 4400              	.L395:
 4401              	.LBB244:
 4402              	.LBB245:
 483:mp3.c         ****       return 1;
 4403              		.loc 1 483 10 view .LVU1509
 4404 005e 41F65737 		movw	r7, #6999
 4405              	.LBE245:
 4406              	.LBE244:
 758:mp3.c         ****       } else return 1;
 4407              		.loc 1 758 9 view .LVU1510
 4408 0062 3480     		strh	r4, [r6]	@ movhi
 760:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,tmin);
 4409              		.loc 1 760 7 is_stmt 1 view .LVU1511
 4410 0064 564C     		ldr	r4, .L400+4
 4411 0066 2388     		ldrh	r3, [r4]
 4412              	.LBB249:
 4413              	.LBB246:
 483:mp3.c         ****       return 1;
 4414              		.loc 1 483 10 is_stmt 0 view .LVU1512
 4415 0068 BB42     		cmp	r3, r7
 483:mp3.c         ****       return 1;
 4416              		.loc 1 483 41 view .LVU1513
 4417 006a 9CBF     		itt	ls
 4418 006c 4FF05B0C 		movls	ip, #91
 4419 0070 564F     		ldrls	r7, .L400+16
 4420              	.LBE246:
 4421              	.LBE249:
 760:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,tmin);
 4422              		.loc 1 760 7 view .LVU1514
 4423 0072 03F10106 		add	r6, r3, #1
 4424              	.LBB250:
 4425              	.LBB247:
 483:mp3.c         ****       return 1;
 4426              		.loc 1 483 41 view .LVU1515
 4427 0076 98BF     		it	ls
 4428 0078 07F803C0 		strbls	ip, [r7, r3]
 4429              	.LBE247:
 4430              	.LBE250:
 4431              	.LBB251:
 4432              	.LBB252:
 483:mp3.c         ****       return 1;
 4433              		.loc 1 483 10 view .LVU1516
 4434 007c 41F6573C 		movw	ip, #6999
 4435              	.LBE252:
 4436              	.LBE251:
 760:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,tmin);
 4437              		.loc 1 760 7 view .LVU1517
 4438 0080 B6B2     		uxth	r6, r6
 4439              	.LVL381:
 4440              	.LBB256:
 4441              	.LBI244:
 481:mp3.c         **** {
 4442              		.loc 1 481 15 is_stmt 1 view .LVU1518
 4443              	.LBB248:
 483:mp3.c         ****       return 1;
 4444              		.loc 1 483 7 view .LVU1519
 483:mp3.c         ****       return 1;
 4445              		.loc 1 483 24 view .LVU1520
 484:mp3.c         **** }
 4446              		.loc 1 484 7 view .LVU1521
 484:mp3.c         **** }
 4447              		.loc 1 484 7 is_stmt 0 view .LVU1522
 4448              	.LBE248:
 4449              	.LBE256:
 761:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,':');
 4450              		.loc 1 761 7 is_stmt 1 view .LVU1523
 4451              	.LBB257:
 4452              	.LBB253:
 483:mp3.c         ****       return 1;
 4453              		.loc 1 483 10 is_stmt 0 view .LVU1524
 4454 0082 6645     		cmp	r6, ip
 483:mp3.c         ****       return 1;
 4455              		.loc 1 483 41 view .LVU1525
 4456 0084 98BF     		it	ls
 4457 0086 DFF844C1 		ldrls	ip, .L400+16
 4458              	.LBE253:
 4459              	.LBE257:
 761:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,':');
 4460              		.loc 1 761 7 view .LVU1526
 4461 008a 03F10207 		add	r7, r3, #2
 4462              	.LBB258:
 4463              	.LBB254:
 483:mp3.c         ****       return 1;
 4464              		.loc 1 483 41 view .LVU1527
 4465 008e 98BF     		it	ls
 4466 0090 0CF80600 		strbls	r0, [ip, r6]
 4467              	.LBE254:
 4468              	.LBE258:
 4469              	.LBB259:
 4470              	.LBB260:
 483:mp3.c         ****       return 1;
 4471              		.loc 1 483 10 view .LVU1528
 4472 0094 41F65730 		movw	r0, #6999
 4473              	.LVL382:
 483:mp3.c         ****       return 1;
 4474              		.loc 1 483 10 view .LVU1529
 4475              	.LBE260:
 4476              	.LBE259:
 761:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,':');
 4477              		.loc 1 761 7 view .LVU1530
 4478 0098 BFB2     		uxth	r7, r7
 4479              	.LVL383:
 4480              	.LBB264:
 4481              	.LBI251:
 481:mp3.c         **** {
 4482              		.loc 1 481 15 is_stmt 1 view .LVU1531
 4483              	.LBB255:
 483:mp3.c         ****       return 1;
 4484              		.loc 1 483 7 view .LVU1532
 483:mp3.c         ****       return 1;
 4485              		.loc 1 483 24 view .LVU1533
 484:mp3.c         **** }
 4486              		.loc 1 484 7 view .LVU1534
 484:mp3.c         **** }
 4487              		.loc 1 484 7 is_stmt 0 view .LVU1535
 4488              	.LBE255:
 4489              	.LBE264:
 762:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,tsec);
 4490              		.loc 1 762 7 is_stmt 1 view .LVU1536
 4491              	.LBB265:
 4492              	.LBB261:
 483:mp3.c         ****       return 1;
 4493              		.loc 1 483 10 is_stmt 0 view .LVU1537
 4494 009a 8742     		cmp	r7, r0
 483:mp3.c         ****       return 1;
 4495              		.loc 1 483 41 view .LVU1538
 4496 009c 9CBF     		itt	ls
 4497 009e 4FF03A0C 		movls	ip, #58
 4498 00a2 4A48     		ldrls	r0, .L400+16
 4499              	.LBE261:
 4500              	.LBE265:
 762:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,tsec);
 4501              		.loc 1 762 7 view .LVU1539
 4502 00a4 03F10306 		add	r6, r3, #3
 4503              	.LBB266:
 4504              	.LBB262:
 483:mp3.c         ****       return 1;
 4505              		.loc 1 483 41 view .LVU1540
 4506 00a8 98BF     		it	ls
 4507 00aa 00F807C0 		strbls	ip, [r0, r7]
 4508              	.LBE262:
 4509              	.LBE266:
 4510              	.LBB267:
 4511              	.LBB268:
 483:mp3.c         ****       return 1;
 4512              		.loc 1 483 10 view .LVU1541
 4513 00ae 41F65737 		movw	r7, #6999
 4514              	.LBE268:
 4515              	.LBE267:
 762:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,tsec);
 4516              		.loc 1 762 7 view .LVU1542
 4517 00b2 B6B2     		uxth	r6, r6
 4518              	.LVL384:
 4519              	.LBB271:
 4520              	.LBI259:
 481:mp3.c         **** {
 4521              		.loc 1 481 15 is_stmt 1 view .LVU1543
 4522              	.LBB263:
 483:mp3.c         ****       return 1;
 4523              		.loc 1 483 7 view .LVU1544
 483:mp3.c         ****       return 1;
 4524              		.loc 1 483 24 view .LVU1545
 484:mp3.c         **** }
 4525              		.loc 1 484 7 view .LVU1546
 484:mp3.c         **** }
 4526              		.loc 1 484 7 is_stmt 0 view .LVU1547
 4527              	.LBE263:
 4528              	.LBE271:
 763:mp3.c         ****       if (lrc_tag_type) {
 4529              		.loc 1 763 7 is_stmt 1 view .LVU1548
 4530              	.LBB272:
 4531              	.LBB269:
 483:mp3.c         ****       return 1;
 4532              		.loc 1 483 10 is_stmt 0 view .LVU1549
 4533 00b4 BE42     		cmp	r6, r7
 483:mp3.c         ****       return 1;
 4534              		.loc 1 483 41 view .LVU1550
 4535 00b6 98BF     		it	ls
 4536 00b8 444F     		ldrls	r7, .L400+16
 4537              	.LBE269:
 4538              	.LBE272:
 763:mp3.c         ****       if (lrc_tag_type) {
 4539              		.loc 1 763 7 view .LVU1551
 4540 00ba 03F10400 		add	r0, r3, #4
 4541 00be 80B2     		uxth	r0, r0
 4542 00c0 2080     		strh	r0, [r4]	@ movhi
 4543              	.LVL385:
 4544              	.LBB273:
 4545              	.LBI267:
 481:mp3.c         **** {
 4546              		.loc 1 481 15 is_stmt 1 view .LVU1552
 4547              	.LBB270:
 483:mp3.c         ****       return 1;
 4548              		.loc 1 483 7 view .LVU1553
 483:mp3.c         ****       return 1;
 4549              		.loc 1 483 24 view .LVU1554
 483:mp3.c         ****       return 1;
 4550              		.loc 1 483 41 is_stmt 0 view .LVU1555
 4551 00c2 98BF     		it	ls
 4552 00c4 B955     		strbls	r1, [r7, r6]
 484:mp3.c         **** }
 4553              		.loc 1 484 7 is_stmt 1 view .LVU1556
 4554              	.LVL386:
 484:mp3.c         **** }
 4555              		.loc 1 484 7 is_stmt 0 view .LVU1557
 4556              	.LBE270:
 4557              	.LBE273:
 764:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos++,'.');
 4558              		.loc 1 764 7 is_stmt 1 view .LVU1558
 764:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos++,'.');
 4559              		.loc 1 764 10 is_stmt 0 view .LVU1559
 4560 00c6 9DB1     		cbz	r5, .L364
 765:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos++,tmms);
 4561              		.loc 1 765 3 is_stmt 1 view .LVU1560
 4562              	.LBB274:
 4563              	.LBB275:
 483:mp3.c         ****       return 1;
 4564              		.loc 1 483 10 is_stmt 0 view .LVU1561
 4565 00c8 41F65735 		movw	r5, #6999
 4566              	.LBE275:
 4567              	.LBE274:
 765:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos++,tmms);
 4568              		.loc 1 765 3 view .LVU1562
 4569 00cc 591D     		adds	r1, r3, #5
 4570              	.LVL387:
 4571              	.LBB280:
 4572              	.LBB276:
 483:mp3.c         ****       return 1;
 4573              		.loc 1 483 10 view .LVU1563
 4574 00ce A842     		cmp	r0, r5
 4575              	.LBE276:
 4576              	.LBE280:
 766:mp3.c         ****       }
 4577              		.loc 1 766 3 view .LVU1564
 4578 00d0 03F10603 		add	r3, r3, #6
 4579              	.LBB281:
 4580              	.LBB277:
 483:mp3.c         ****       return 1;
 4581              		.loc 1 483 41 view .LVU1565
 4582 00d4 98BF     		it	ls
 4583 00d6 2E26     		movls	r6, #46
 4584              	.LBE277:
 4585              	.LBE281:
 766:mp3.c         ****       }
 4586              		.loc 1 766 3 view .LVU1566
 4587 00d8 2380     		strh	r3, [r4]	@ movhi
 4588              	.LBB282:
 4589              	.LBB283:
 483:mp3.c         ****       return 1;
 4590              		.loc 1 483 10 view .LVU1567
 4591 00da 41F65733 		movw	r3, #6999
 4592              	.LBE283:
 4593              	.LBE282:
 4594              	.LBB285:
 4595              	.LBB278:
 483:mp3.c         ****       return 1;
 4596              		.loc 1 483 41 view .LVU1568
 4597 00de 98BF     		it	ls
 4598 00e0 3A4D     		ldrls	r5, .L400+16
 4599              	.LBE278:
 4600              	.LBE285:
 765:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos++,tmms);
 4601              		.loc 1 765 3 view .LVU1569
 4602 00e2 89B2     		uxth	r1, r1
 4603              	.LVL388:
 4604              	.LBB286:
 4605              	.LBI274:
 481:mp3.c         **** {
 4606              		.loc 1 481 15 is_stmt 1 view .LVU1570
 4607              	.LBB279:
 483:mp3.c         ****       return 1;
 4608              		.loc 1 483 7 view .LVU1571
 483:mp3.c         ****       return 1;
 4609              		.loc 1 483 24 view .LVU1572
 483:mp3.c         ****       return 1;
 4610              		.loc 1 483 41 is_stmt 0 view .LVU1573
 4611 00e4 98BF     		it	ls
 4612 00e6 2E54     		strbls	r6, [r5, r0]
 484:mp3.c         **** }
 4613              		.loc 1 484 7 is_stmt 1 view .LVU1574
 4614              	.LVL389:
 484:mp3.c         **** }
 4615              		.loc 1 484 7 is_stmt 0 view .LVU1575
 4616              	.LBE279:
 4617              	.LBE286:
 766:mp3.c         ****       }
 4618              		.loc 1 766 3 is_stmt 1 view .LVU1576
 4619              	.LBB287:
 4620              	.LBI282:
 481:mp3.c         **** {
 4621              		.loc 1 481 15 view .LVU1577
 4622              	.LBB284:
 483:mp3.c         ****       return 1;
 4623              		.loc 1 483 7 view .LVU1578
 483:mp3.c         ****       return 1;
 4624              		.loc 1 483 10 is_stmt 0 view .LVU1579
 4625 00e8 9942     		cmp	r1, r3
 483:mp3.c         ****       return 1;
 4626              		.loc 1 483 24 is_stmt 1 view .LVU1580
 483:mp3.c         ****       return 1;
 4627              		.loc 1 483 41 is_stmt 0 view .LVU1581
 4628 00ea 9CBF     		itt	ls
 4629 00ec 374B     		ldrls	r3, .L400+16
 4630 00ee 5A54     		strbls	r2, [r3, r1]
 484:mp3.c         **** }
 4631              		.loc 1 484 7 is_stmt 1 view .LVU1582
 4632              	.LVL390:
 4633              	.L364:
 484:mp3.c         **** }
 4634              		.loc 1 484 7 is_stmt 0 view .LVU1583
 4635              	.LBE284:
 4636              	.LBE287:
 768:mp3.c         ****       while (1) {
 4637              		.loc 1 768 7 is_stmt 1 view .LVU1584
 4638 00f0 2388     		ldrh	r3, [r4]
 4639              	.LBB288:
 4640              	.LBB289:
 483:mp3.c         ****       return 1;
 4641              		.loc 1 483 10 is_stmt 0 view .LVU1585
 4642 00f2 41F65735 		movw	r5, #6999
 4643              	.LBE289:
 4644              	.LBE288:
 768:mp3.c         ****       while (1) {
 4645              		.loc 1 768 7 view .LVU1586
 4646 00f6 5A1C     		adds	r2, r3, #1
 4647              	.LVL391:
 768:mp3.c         ****       while (1) {
 4648              		.loc 1 768 7 view .LVU1587
 4649 00f8 2280     		strh	r2, [r4]	@ movhi
 4650              	.LVL392:
 4651              	.LBB292:
 4652              	.LBI292:
 481:mp3.c         **** {
 4653              		.loc 1 481 15 is_stmt 1 view .LVU1588
 4654              	.LBB293:
 483:mp3.c         ****       return 1;
 4655              		.loc 1 483 7 view .LVU1589
 483:mp3.c         ****       return 1;
 4656              		.loc 1 483 10 is_stmt 0 view .LVU1590
 4657 00fa 41F65732 		movw	r2, #6999
 4658 00fe 9342     		cmp	r3, r2
 483:mp3.c         ****       return 1;
 4659              		.loc 1 483 24 is_stmt 1 view .LVU1591
 483:mp3.c         ****       return 1;
 4660              		.loc 1 483 41 is_stmt 0 view .LVU1592
 4661 0100 9CBF     		itt	ls
 4662 0102 5D21     		movls	r1, #93
 4663 0104 314A     		ldrls	r2, .L400+16
 4664              	.LBE293:
 4665              	.LBE292:
 4666              	.LBB295:
 4667              	.LBB290:
 4668 0106 314E     		ldr	r6, .L400+16
 4669              	.LBE290:
 4670              	.LBE295:
 4671              	.LBB296:
 4672              	.LBB294:
 4673 0108 98BF     		it	ls
 4674 010a D154     		strbls	r1, [r2, r3]
 484:mp3.c         **** }
 4675              		.loc 1 484 7 is_stmt 1 view .LVU1593
 4676              	.LVL393:
 4677              	.L368:
 484:mp3.c         **** }
 4678              		.loc 1 484 7 is_stmt 0 view .LVU1594
 4679              	.LBE294:
 4680              	.LBE296:
 769:mp3.c         **** 	    temp = get_byte(0);
 4681              		.loc 1 769 7 is_stmt 1 view .LVU1595
 770:mp3.c         **** 	    if (temp == '[') {
 4682              		.loc 1 770 6 view .LVU1596
 770:mp3.c         **** 	    if (temp == '[') {
 4683              		.loc 1 770 13 is_stmt 0 view .LVU1597
 4684 010c 0020     		movs	r0, #0
 4685 010e FFF7FEFF 		bl	get_byte
 4686              	.LVL394:
 771:mp3.c         **** 	       write_byte_lrcbuf(lrcbufpos,temp);
 4687              		.loc 1 771 6 is_stmt 1 view .LVU1598
 771:mp3.c         **** 	       write_byte_lrcbuf(lrcbufpos,temp);
 4688              		.loc 1 771 9 is_stmt 0 view .LVU1599
 4689 0112 5B28     		cmp	r0, #91
 4690 0114 44D1     		bne	.L369
 772:mp3.c         **** 	       temp1 = get_byte(0);
 4691              		.loc 1 772 9 is_stmt 1 view .LVU1600
 4692 0116 2388     		ldrh	r3, [r4]
 4693              	.LVL395:
 4694              	.LBB297:
 4695              	.LBI288:
 481:mp3.c         **** {
 4696              		.loc 1 481 15 view .LVU1601
 4697              	.LBB291:
 483:mp3.c         ****       return 1;
 4698              		.loc 1 483 7 view .LVU1602
 483:mp3.c         ****       return 1;
 4699              		.loc 1 483 10 is_stmt 0 view .LVU1603
 4700 0118 AB42     		cmp	r3, r5
 483:mp3.c         ****       return 1;
 4701              		.loc 1 483 24 is_stmt 1 view .LVU1604
 483:mp3.c         ****       return 1;
 4702              		.loc 1 483 41 is_stmt 0 view .LVU1605
 4703 011a 98BF     		it	ls
 4704 011c F054     		strbls	r0, [r6, r3]
 484:mp3.c         **** }
 4705              		.loc 1 484 7 is_stmt 1 view .LVU1606
 4706              	.LVL396:
 484:mp3.c         **** }
 4707              		.loc 1 484 7 is_stmt 0 view .LVU1607
 4708              	.LBE291:
 4709              	.LBE297:
 773:mp3.c         **** 	       temp = temp1;
 4710              		.loc 1 773 9 is_stmt 1 view .LVU1608
 773:mp3.c         **** 	       temp = temp1;
 4711              		.loc 1 773 17 is_stmt 0 view .LVU1609
 4712 011e 0020     		movs	r0, #0
 4713              	.LVL397:
 773:mp3.c         **** 	       temp = temp1;
 4714              		.loc 1 773 17 view .LVU1610
 4715 0120 FFF7FEFF 		bl	get_byte
 4716              	.LVL398:
 774:mp3.c         **** 	       temp1 -= '0';
 4717              		.loc 1 774 9 is_stmt 1 view .LVU1611
 775:mp3.c         **** 	       if (temp1 < 10) {
 4718              		.loc 1 775 9 view .LVU1612
 776:mp3.c         **** 		  while (1) {
 4719              		.loc 1 776 9 view .LVU1613
 775:mp3.c         **** 	       if (temp1 < 10) {
 4720              		.loc 1 775 15 is_stmt 0 view .LVU1614
 4721 0124 A0F13003 		sub	r3, r0, #48
 776:mp3.c         **** 		  while (1) {
 4722              		.loc 1 776 12 view .LVU1615
 4723 0128 DBB2     		uxtb	r3, r3
 4724 012a 092B     		cmp	r3, #9
 4725 012c 10D8     		bhi	.L371
 4726              	.LVL399:
 4727              	.L373:
 777:mp3.c         **** 			temp1 = get_byte(0);
 4728              		.loc 1 777 5 is_stmt 1 view .LVU1616
 778:mp3.c         **** 			if (temp1 == ']' || temp1 == 0xff) break;
 4729              		.loc 1 778 4 view .LVU1617
 778:mp3.c         **** 			if (temp1 == ']' || temp1 == 0xff) break;
 4730              		.loc 1 778 12 is_stmt 0 view .LVU1618
 4731 012e 0020     		movs	r0, #0
 4732 0130 FFF7FEFF 		bl	get_byte
 4733              	.LVL400:
 779:mp3.c         **** 		  }
 4734              		.loc 1 779 4 is_stmt 1 view .LVU1619
 779:mp3.c         **** 		  }
 4735              		.loc 1 779 7 is_stmt 0 view .LVU1620
 4736 0134 5D28     		cmp	r0, #93
 4737 0136 E9D0     		beq	.L368
 779:mp3.c         **** 		  }
 4738              		.loc 1 779 21 discriminator 1 view .LVU1621
 4739 0138 FF28     		cmp	r0, #255
 4740 013a F8D1     		bne	.L373
 4741 013c E6E7     		b	.L368
 4742              	.LVL401:
 4743              	.L357:
 757:mp3.c         **** 	 tagpos+=3;
 4744              		.loc 1 757 14 is_stmt 1 discriminator 2 view .LVU1622
 757:mp3.c         **** 	 tagpos+=3;
 4745              		.loc 1 757 77 is_stmt 0 discriminator 2 view .LVU1623
 4746 013e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 4747 0140 9342     		cmp	r3, r2
 4748 0142 7FF465AF 		bne	.L397
 757:mp3.c         **** 	 tagpos+=3;
 4749              		.loc 1 757 110 discriminator 3 view .LVU1624
 4750 0146 012D     		cmp	r5, #1
 4751 0148 7FF462AF 		bne	.L397
 758:mp3.c         ****       } else return 1;
 4752              		.loc 1 758 3 is_stmt 1 view .LVU1625
 758:mp3.c         ****       } else return 1;
 4753              		.loc 1 758 9 is_stmt 0 view .LVU1626
 4754 014c 0334     		adds	r4, r4, #3
 4755 014e 86E7     		b	.L395
 4756              	.LVL402:
 4757              	.L371:
 782:mp3.c         **** 	          write_byte_lrcbuf(lrcbufpos++,temp);
 4758              		.loc 1 782 5 is_stmt 1 view .LVU1627
 782:mp3.c         **** 	          write_byte_lrcbuf(lrcbufpos++,temp);
 4759              		.loc 1 782 14 is_stmt 0 view .LVU1628
 4760 0150 2288     		ldrh	r2, [r4]
 4761 0152 531C     		adds	r3, r2, #1
 4762 0154 9BB2     		uxth	r3, r3
 783:mp3.c         **** 		  break;
 4763              		.loc 1 783 12 is_stmt 1 view .LVU1629
 4764 0156 0232     		adds	r2, r2, #2
 4765              	.LVL403:
 4766              	.L399:
 787:mp3.c         **** 	       break;
 4767              		.loc 1 787 43 is_stmt 0 discriminator 1 view .LVU1630
 4768 0158 2280     		strh	r2, [r4]	@ movhi
 4769              	.LVL404:
 4770              	.LBB298:
 4771              	.LBI298:
 481:mp3.c         **** {
 4772              		.loc 1 481 15 is_stmt 1 discriminator 1 view .LVU1631
 4773              	.LBB299:
 483:mp3.c         ****       return 1;
 4774              		.loc 1 483 7 discriminator 1 view .LVU1632
 483:mp3.c         ****       return 1;
 4775              		.loc 1 483 10 is_stmt 0 discriminator 1 view .LVU1633
 4776 015a 41F65732 		movw	r2, #6999
 4777 015e 9342     		cmp	r3, r2
 483:mp3.c         ****       return 1;
 4778              		.loc 1 483 24 is_stmt 1 discriminator 1 view .LVU1634
 483:mp3.c         ****       return 1;
 4779              		.loc 1 483 41 is_stmt 0 discriminator 1 view .LVU1635
 4780 0160 9CBF     		itt	ls
 4781 0162 1A4A     		ldrls	r2, .L400+16
 4782 0164 D054     		strbls	r0, [r2, r3]
 484:mp3.c         **** }
 4783              		.loc 1 484 7 is_stmt 1 discriminator 1 view .LVU1636
 4784              	.LVL405:
 4785              	.L375:
 484:mp3.c         **** }
 4786              		.loc 1 484 7 is_stmt 0 discriminator 1 view .LVU1637
 4787              	.LBE299:
 4788              	.LBE298:
 4789              	.LBB300:
 4790              	.LBB301:
 483:mp3.c         ****       return 1;
 4791              		.loc 1 483 10 view .LVU1638
 4792 0166 41F65735 		movw	r5, #6999
 483:mp3.c         ****       return 1;
 4793              		.loc 1 483 41 view .LVU1639
 4794 016a 184E     		ldr	r6, .L400+16
 4795              	.L380:
 483:mp3.c         ****       return 1;
 4796              		.loc 1 483 41 view .LVU1640
 4797              	.LBE301:
 4798              	.LBE300:
 791:mp3.c         **** 	    temp = get_byte(0);
 4799              		.loc 1 791 7 is_stmt 1 view .LVU1641
 792:mp3.c         **** 	    if (temp != 0xFF && temp != 0x00) write_byte_lrcbuf(lrcbufpos++,temp);
 4800              		.loc 1 792 6 view .LVU1642
 792:mp3.c         **** 	    if (temp != 0xFF && temp != 0x00) write_byte_lrcbuf(lrcbufpos++,temp);
 4801              		.loc 1 792 13 is_stmt 0 view .LVU1643
 4802 016c 0020     		movs	r0, #0
 4803              	.LVL406:
 792:mp3.c         **** 	    if (temp != 0xFF && temp != 0x00) write_byte_lrcbuf(lrcbufpos++,temp);
 4804              		.loc 1 792 13 view .LVU1644
 4805 016e FFF7FEFF 		bl	get_byte
 4806              	.LVL407:
 793:mp3.c         **** 	    if (temp == 0x0A || temp == 0xFF || temp == 0x00) {
 4807              		.loc 1 793 6 is_stmt 1 view .LVU1645
 793:mp3.c         **** 	    if (temp == 0x0A || temp == 0xFF || temp == 0x00) {
 4808              		.loc 1 793 23 is_stmt 0 view .LVU1646
 4809 0172 431E     		subs	r3, r0, #1
 793:mp3.c         **** 	    if (temp == 0x0A || temp == 0xFF || temp == 0x00) {
 4810              		.loc 1 793 9 view .LVU1647
 4811 0174 DBB2     		uxtb	r3, r3
 4812 0176 FD2B     		cmp	r3, #253
 4813 0178 1BD8     		bhi	.L377
 793:mp3.c         **** 	    if (temp == 0x0A || temp == 0xFF || temp == 0x00) {
 4814              		.loc 1 793 40 is_stmt 1 discriminator 1 view .LVU1648
 4815 017a 2388     		ldrh	r3, [r4]
 4816              	.LBB305:
 4817              	.LBB302:
 483:mp3.c         ****       return 1;
 4818              		.loc 1 483 10 is_stmt 0 discriminator 1 view .LVU1649
 4819 017c AB42     		cmp	r3, r5
 4820              	.LBE302:
 4821              	.LBE305:
 793:mp3.c         **** 	    if (temp == 0x0A || temp == 0xFF || temp == 0x00) {
 4822              		.loc 1 793 40 discriminator 1 view .LVU1650
 4823 017e 03F10102 		add	r2, r3, #1
 4824              	.LBB306:
 4825              	.LBB303:
 483:mp3.c         ****       return 1;
 4826              		.loc 1 483 41 discriminator 1 view .LVU1651
 4827 0182 98BF     		it	ls
 4828 0184 F054     		strbls	r0, [r6, r3]
 4829              	.LBE303:
 4830              	.LBE306:
 794:mp3.c         **** 	       write_byte_lrcbuf(lrcbufpos++,temp);
 4831              		.loc 1 794 9 discriminator 1 view .LVU1652
 4832 0186 0A28     		cmp	r0, #10
 793:mp3.c         **** 	    if (temp == 0x0A || temp == 0xFF || temp == 0x00) {
 4833              		.loc 1 793 40 discriminator 1 view .LVU1653
 4834 0188 2280     		strh	r2, [r4]	@ movhi
 4835              	.LVL408:
 4836              	.LBB307:
 4837              	.LBI300:
 481:mp3.c         **** {
 4838              		.loc 1 481 15 is_stmt 1 discriminator 1 view .LVU1654
 4839              	.LBB304:
 483:mp3.c         ****       return 1;
 4840              		.loc 1 483 7 discriminator 1 view .LVU1655
 483:mp3.c         ****       return 1;
 4841              		.loc 1 483 24 discriminator 1 view .LVU1656
 484:mp3.c         **** }
 4842              		.loc 1 484 7 discriminator 1 view .LVU1657
 484:mp3.c         **** }
 4843              		.loc 1 484 7 is_stmt 0 discriminator 1 view .LVU1658
 4844              	.LBE304:
 4845              	.LBE307:
 794:mp3.c         **** 	       write_byte_lrcbuf(lrcbufpos++,temp);
 4846              		.loc 1 794 6 is_stmt 1 discriminator 1 view .LVU1659
 794:mp3.c         **** 	       write_byte_lrcbuf(lrcbufpos++,temp);
 4847              		.loc 1 794 9 is_stmt 0 discriminator 1 view .LVU1660
 4848 018a EFD1     		bne	.L380
 4849              	.LVL409:
 4850              	.L379:
 795:mp3.c         **** 	       break;
 4851              		.loc 1 795 9 is_stmt 1 view .LVU1661
 4852 018c 2388     		ldrh	r3, [r4]
 4853 018e 5A1C     		adds	r2, r3, #1
 4854 0190 2280     		strh	r2, [r4]	@ movhi
 4855              	.LVL410:
 4856              	.LBB308:
 4857              	.LBI237:
 481:mp3.c         **** {
 4858              		.loc 1 481 15 view .LVU1662
 4859              	.LBB239:
 483:mp3.c         ****       return 1;
 4860              		.loc 1 483 7 view .LVU1663
 483:mp3.c         ****       return 1;
 4861              		.loc 1 483 10 is_stmt 0 view .LVU1664
 4862 0192 41F65732 		movw	r2, #6999
 4863 0196 9342     		cmp	r3, r2
 483:mp3.c         ****       return 1;
 4864              		.loc 1 483 24 is_stmt 1 view .LVU1665
 483:mp3.c         ****       return 1;
 4865              		.loc 1 483 41 is_stmt 0 view .LVU1666
 4866 0198 9CBF     		itt	ls
 4867 019a 0C4A     		ldrls	r2, .L400+16
 4868 019c D054     		strbls	r0, [r2, r3]
 4869 019e 37E7     		b	.L397
 4870              	.LVL411:
 4871              	.L369:
 483:mp3.c         ****       return 1;
 4872              		.loc 1 483 41 view .LVU1667
 4873              	.LBE239:
 4874              	.LBE308:
 786:mp3.c         **** 	       if (temp != 0xFF && temp != 0x00) write_byte_lrcbuf(lrcbufpos++,temp);
 4875              		.loc 1 786 13 is_stmt 1 view .LVU1668
 786:mp3.c         **** 	       if (temp != 0xFF && temp != 0x00) write_byte_lrcbuf(lrcbufpos++,temp);
 4876              		.loc 1 786 16 is_stmt 0 view .LVU1669
 4877 01a0 2028     		cmp	r0, #32
 4878 01a2 B3D0     		beq	.L368
 787:mp3.c         **** 	       break;
 4879              		.loc 1 787 9 is_stmt 1 view .LVU1670
 787:mp3.c         **** 	       break;
 4880              		.loc 1 787 26 is_stmt 0 view .LVU1671
 4881 01a4 431E     		subs	r3, r0, #1
 787:mp3.c         **** 	       break;
 4882              		.loc 1 787 12 view .LVU1672
 4883 01a6 DBB2     		uxtb	r3, r3
 4884 01a8 FD2B     		cmp	r3, #253
 4885 01aa DCD8     		bhi	.L375
 787:mp3.c         **** 	       break;
 4886              		.loc 1 787 43 is_stmt 1 discriminator 1 view .LVU1673
 4887 01ac 2388     		ldrh	r3, [r4]
 4888 01ae 5A1C     		adds	r2, r3, #1
 4889 01b0 D2E7     		b	.L399
 4890              	.L377:
 794:mp3.c         **** 	       write_byte_lrcbuf(lrcbufpos++,temp);
 4891              		.loc 1 794 23 is_stmt 0 discriminator 1 view .LVU1674
 4892 01b2 FF28     		cmp	r0, #255
 4893 01b4 0CBF     		ite	eq
 4894 01b6 FF20     		moveq	r0, #255
 4895 01b8 0020     		movne	r0, #0
 4896              	.LVL412:
 794:mp3.c         **** 	       write_byte_lrcbuf(lrcbufpos++,temp);
 4897              		.loc 1 794 23 discriminator 1 view .LVU1675
 4898 01ba E7E7     		b	.L379
 4899              	.L401:
 4900              		.align	2
 4901              	.L400:
 4902 01bc 00000000 		.word	.LANCHOR14
 4903 01c0 00000000 		.word	.LANCHOR15
 4904 01c4 00000000 		.word	.LANCHOR13
 4905 01c8 00000000 		.word	.LANCHOR7
 4906 01cc 00000000 		.word	lrc_buffer
 4907 01d0 00000000 		.word	tag_table
 4908              		.cfi_endproc
 4909              	.LFE50:
 4911              		.section	.text.copy_lrc_to_ram,"ax",%progbits
 4912              		.align	1
 4913              		.global	copy_lrc_to_ram
 4914              		.syntax unified
 4915              		.thumb
 4916              		.thumb_func
 4917              		.fpu softvfp
 4919              	copy_lrc_to_ram:
 4920              	.LFB51:
 801:mp3.c         **** 
 802:mp3.c         **** 
 803:mp3.c         **** void copy_lrc_to_ram (void)
 804:mp3.c         **** {
 4921              		.loc 1 804 1 is_stmt 1 view -0
 4922              		.cfi_startproc
 4923              		@ args = 0, pretend = 0, frame = 0
 4924              		@ frame_needed = 0, uses_anonymous_args = 0
 805:mp3.c         ****       unsigned char numx;
 4925              		.loc 1 805 7 view .LVU1677
 806:mp3.c         ****       unsigned char temp;
 4926              		.loc 1 806 7 view .LVU1678
 807:mp3.c         ****       unsigned char min;
 4927              		.loc 1 807 7 view .LVU1679
 808:mp3.c         ****       unsigned char sec;
 4928              		.loc 1 808 7 view .LVU1680
 809:mp3.c         ****       unsigned char mms;
 4929              		.loc 1 809 7 view .LVU1681
 810:mp3.c         ****       copy_lyric(0xff,0,0);
 4930              		.loc 1 810 7 view .LVU1682
 4931              	.LVL413:
 4932              	.LBB309:
 4933              	.LBI309:
 738:mp3.c         **** {
 4934              		.loc 1 738 15 view .LVU1683
 4935              	.LBB310:
 740:mp3.c         ****       static unsigned short lrcbufpos = 0;
 4936              		.loc 1 740 7 view .LVU1684
 741:mp3.c         ****       unsigned char temp;
 4937              		.loc 1 741 7 view .LVU1685
 742:mp3.c         ****       unsigned char temp1;
 4938              		.loc 1 742 7 view .LVU1686
 743:mp3.c         ****       unsigned short tagcnt = 0;
 4939              		.loc 1 743 7 view .LVU1687
 744:mp3.c         ****       if (tmin == 0xff) {
 4940              		.loc 1 744 7 view .LVU1688
 745:mp3.c         ****       	 tagpos = 0;
 4941              		.loc 1 745 7 view .LVU1689
 746:mp3.c         ****       	 lrcbufpos = 0;
 4942              		.loc 1 746 9 view .LVU1690
 746:mp3.c         ****       	 lrcbufpos = 0;
 4943              		.loc 1 746 16 is_stmt 0 view .LVU1691
 4944 0000 0023     		movs	r3, #0
 4945 0002 1E4A     		ldr	r2, .L433
 4946              	.LBE310:
 4947              	.LBE309:
 804:mp3.c         ****       unsigned char numx;
 4948              		.loc 1 804 1 view .LVU1692
 4949 0004 70B5     		push	{r4, r5, r6, lr}
 4950              		.cfi_def_cfa_offset 16
 4951              		.cfi_offset 4, -16
 4952              		.cfi_offset 5, -12
 4953              		.cfi_offset 6, -8
 4954              		.cfi_offset 14, -4
 4955              	.LBB312:
 4956              	.LBB311:
 746:mp3.c         ****       	 lrcbufpos = 0;
 4957              		.loc 1 746 16 view .LVU1693
 4958 0006 1380     		strh	r3, [r2]	@ movhi
 747:mp3.c         ****       	 return 1;
 4959              		.loc 1 747 9 is_stmt 1 view .LVU1694
 747:mp3.c         ****       	 return 1;
 4960              		.loc 1 747 19 is_stmt 0 view .LVU1695
 4961 0008 1D4A     		ldr	r2, .L433+4
 4962 000a 1380     		strh	r3, [r2]	@ movhi
 4963              	.LVL414:
 4964              	.L430:
 748:mp3.c         ****       }
 4965              		.loc 1 748 9 is_stmt 1 view .LVU1696
 4966              	.LBE311:
 4967              	.LBE312:
 811:mp3.c         ****       get_byte(1);
 4968              		.loc 1 811 7 view .LVU1697
 4969 000c 0120     		movs	r0, #1
 4970 000e FFF7FEFF 		bl	get_byte
 4971              	.LVL415:
 4972              	.L403:
 812:mp3.c         ****       while (1) {
 4973              		.loc 1 812 7 view .LVU1698
 813:mp3.c         **** 	    while (1) {
 4974              		.loc 1 813 6 view .LVU1699
 814:mp3.c         **** 		  temp = get_byte(0);
 4975              		.loc 1 814 5 view .LVU1700
 4976              		.loc 1 814 12 is_stmt 0 view .LVU1701
 4977 0012 0020     		movs	r0, #0
 4978 0014 FFF7FEFF 		bl	get_byte
 4979              	.LVL416:
 815:mp3.c         **** 		  if (temp == '[') {
 4980              		.loc 1 815 5 is_stmt 1 view .LVU1702
 4981              		.loc 1 815 8 is_stmt 0 view .LVU1703
 4982 0018 5B28     		cmp	r0, #91
 4983 001a 02D0     		beq	.L404
 816:mp3.c         **** 		     break;
 817:mp3.c         **** 		  } else if (temp == 0xff) {
 4984              		.loc 1 817 12 is_stmt 1 view .LVU1704
 4985              		.loc 1 817 15 is_stmt 0 view .LVU1705
 4986 001c FF28     		cmp	r0, #255
 4987 001e F8D1     		bne	.L403
 4988 0020 F4E7     		b	.L430
 4989              	.L404:
 818:mp3.c         **** 		     get_byte(1);
 819:mp3.c         **** 		  }
 820:mp3.c         **** 	    }
 821:mp3.c         **** 	    numx = get_num();
 4990              		.loc 1 821 6 is_stmt 1 view .LVU1706
 4991              		.loc 1 821 13 is_stmt 0 view .LVU1707
 4992 0022 FFF7FEFF 		bl	get_num
 4993              	.LVL417:
 4994              		.loc 1 821 13 view .LVU1708
 4995 0026 0546     		mov	r5, r0
 4996              	.LVL418:
 822:mp3.c         **** 	    if (get_byte(0) != ':' || numx == 0xff) continue;
 4997              		.loc 1 822 6 is_stmt 1 view .LVU1709
 4998              		.loc 1 822 10 is_stmt 0 view .LVU1710
 4999 0028 0020     		movs	r0, #0
 5000 002a FFF7FEFF 		bl	get_byte
 5001              	.LVL419:
 5002              		.loc 1 822 9 view .LVU1711
 5003 002e 3A28     		cmp	r0, #58
 5004 0030 EFD1     		bne	.L403
 5005              		.loc 1 822 29 discriminator 2 view .LVU1712
 5006 0032 FF2D     		cmp	r5, #255
 5007 0034 EDD0     		beq	.L403
 823:mp3.c         **** 	    min = numx;
 5008              		.loc 1 823 6 is_stmt 1 view .LVU1713
 5009              	.LVL420:
 824:mp3.c         **** 	    numx = get_num();
 5010              		.loc 1 824 6 view .LVU1714
 5011              		.loc 1 824 13 is_stmt 0 view .LVU1715
 5012 0036 FFF7FEFF 		bl	get_num
 5013              	.LVL421:
 5014 003a 0446     		mov	r4, r0
 5015              	.LVL422:
 825:mp3.c         **** 	    temp = get_byte(0);
 5016              		.loc 1 825 6 is_stmt 1 view .LVU1716
 5017              		.loc 1 825 13 is_stmt 0 view .LVU1717
 5018 003c 0020     		movs	r0, #0
 5019 003e FFF7FEFF 		bl	get_byte
 5020              	.LVL423:
 826:mp3.c         **** 	    if ((temp != '.' && temp != ']') || numx == 0xff) continue;
 5021              		.loc 1 826 6 is_stmt 1 view .LVU1718
 5022              		.loc 1 826 9 is_stmt 0 view .LVU1719
 5023 0042 2E28     		cmp	r0, #46
 5024 0044 0BD0     		beq	.L407
 5025              		.loc 1 826 23 discriminator 1 view .LVU1720
 5026 0046 5D28     		cmp	r0, #93
 5027 0048 E3D1     		bne	.L403
 5028              		.loc 1 826 39 view .LVU1721
 5029 004a FF2C     		cmp	r4, #255
 5030 004c E1D0     		beq	.L403
 827:mp3.c         **** 	    sec = numx;
 5031              		.loc 1 827 6 is_stmt 1 view .LVU1722
 5032              	.LVL424:
 828:mp3.c         **** 	    if (temp != '.') {
 5033              		.loc 1 828 6 view .LVU1723
 829:mp3.c         **** 	       if (copy_lyric(min,sec,0) == 0xFF) return;
 5034              		.loc 1 829 9 view .LVU1724
 5035              		.loc 1 829 13 is_stmt 0 view .LVU1725
 5036 004e 0022     		movs	r2, #0
 5037              	.LVL425:
 5038              	.L432:
 830:mp3.c         **** 	       continue;
 831:mp3.c         **** 	    }
 832:mp3.c         **** 	    numx = get_num();
 833:mp3.c         **** 	    temp = get_byte(0);
 834:mp3.c         **** 	    if (temp != ']' || numx == 0xff) continue;
 835:mp3.c         **** 	    mms = numx;
 836:mp3.c         **** 	    if (copy_lyric(min,sec,mms) == 0xFF) return;
 5039              		.loc 1 836 10 view .LVU1726
 5040 0050 2146     		mov	r1, r4
 5041 0052 2846     		mov	r0, r5
 5042              	.LVL426:
 5043              		.loc 1 836 10 view .LVU1727
 5044 0054 FFF7FEFF 		bl	copy_lyric
 5045              	.LVL427:
 5046              		.loc 1 836 9 view .LVU1728
 5047 0058 FF28     		cmp	r0, #255
 5048 005a DAD1     		bne	.L403
 837:mp3.c         ****       }
 838:mp3.c         **** }
 5049              		.loc 1 838 1 view .LVU1729
 5050 005c 70BD     		pop	{r4, r5, r6, pc}
 5051              	.LVL428:
 5052              	.L407:
 826:mp3.c         **** 	    sec = numx;
 5053              		.loc 1 826 39 view .LVU1730
 5054 005e FF2C     		cmp	r4, #255
 5055 0060 D7D0     		beq	.L403
 827:mp3.c         **** 	    if (temp != '.') {
 5056              		.loc 1 827 6 is_stmt 1 view .LVU1731
 5057              	.LVL429:
 828:mp3.c         **** 	       if (copy_lyric(min,sec,0) == 0xFF) return;
 5058              		.loc 1 828 6 view .LVU1732
 832:mp3.c         **** 	    temp = get_byte(0);
 5059              		.loc 1 832 6 view .LVU1733
 832:mp3.c         **** 	    temp = get_byte(0);
 5060              		.loc 1 832 13 is_stmt 0 view .LVU1734
 5061 0062 FFF7FEFF 		bl	get_num
 5062              	.LVL430:
 832:mp3.c         **** 	    temp = get_byte(0);
 5063              		.loc 1 832 13 view .LVU1735
 5064 0066 0646     		mov	r6, r0
 5065              	.LVL431:
 833:mp3.c         **** 	    if (temp != ']' || numx == 0xff) continue;
 5066              		.loc 1 833 6 is_stmt 1 view .LVU1736
 833:mp3.c         **** 	    if (temp != ']' || numx == 0xff) continue;
 5067              		.loc 1 833 13 is_stmt 0 view .LVU1737
 5068 0068 0020     		movs	r0, #0
 5069 006a FFF7FEFF 		bl	get_byte
 5070              	.LVL432:
 834:mp3.c         **** 	    mms = numx;
 5071              		.loc 1 834 6 is_stmt 1 view .LVU1738
 834:mp3.c         **** 	    mms = numx;
 5072              		.loc 1 834 9 is_stmt 0 view .LVU1739
 5073 006e 5D28     		cmp	r0, #93
 5074 0070 CFD1     		bne	.L403
 834:mp3.c         **** 	    mms = numx;
 5075              		.loc 1 834 22 discriminator 2 view .LVU1740
 5076 0072 FF2E     		cmp	r6, #255
 5077 0074 CDD0     		beq	.L403
 835:mp3.c         **** 	    if (copy_lyric(min,sec,mms) == 0xFF) return;
 5078              		.loc 1 835 6 is_stmt 1 view .LVU1741
 5079              	.LVL433:
 836:mp3.c         ****       }
 5080              		.loc 1 836 6 view .LVU1742
 836:mp3.c         ****       }
 5081              		.loc 1 836 10 is_stmt 0 view .LVU1743
 5082 0076 3246     		mov	r2, r6
 5083 0078 EAE7     		b	.L432
 5084              	.L434:
 5085 007a 00BF     		.align	2
 5086              	.L433:
 5087 007c 00000000 		.word	.LANCHOR14
 5088 0080 00000000 		.word	.LANCHOR15
 5089              		.cfi_endproc
 5090              	.LFE51:
 5092              		.section	.rodata.display_id3v1_tag.str1.1,"aMS",%progbits,1
 5093              	.LC6:
 5094 0000 20202020 		.ascii	"                              \000"
 5094      20202020 
 5094      20202020 
 5094      20202020 
 5094      20202020 
 5095              	.LC7:
 5096 001f 5474746C 		.ascii	"Tttle: %s \000"
 5096      653A2025 
 5096      732000
 5097              	.LC8:
 5098 002a 41727469 		.ascii	"Artist: %s \000"
 5098      73743A20 
 5098      25732000 
 5099              	.LC9:
 5100 0036 416C6275 		.ascii	"Album: %s \000"
 5100      6D3A2025 
 5100      732000
 5101              		.section	.text.display_id3v1_tag,"ax",%progbits
 5102              		.align	1
 5103              		.global	display_id3v1_tag
 5104              		.syntax unified
 5105              		.thumb
 5106              		.thumb_func
 5107              		.fpu softvfp
 5109              	display_id3v1_tag:
 5110              	.LFB52:
 839:mp3.c         **** 
 840:mp3.c         **** 
 841:mp3.c         **** void display_id3v1_tag (void)
 842:mp3.c         **** {
 5111              		.loc 1 842 1 is_stmt 1 view -0
 5112              		.cfi_startproc
 5113              		@ args = 0, pretend = 0, frame = 128
 5114              		@ frame_needed = 0, uses_anonymous_args = 0
 843:mp3.c         ****       unsigned char i, buff[128];
 5115              		.loc 1 843 7 view .LVU1745
 844:mp3.c         **** 	  lcd_printf(1,1,"                              ");
 5116              		.loc 1 844 4 view .LVU1746
 5117 0000 0121     		movs	r1, #1
 842:mp3.c         ****       unsigned char i, buff[128];
 5118              		.loc 1 842 1 is_stmt 0 view .LVU1747
 5119 0002 10B5     		push	{r4, lr}
 5120              		.cfi_def_cfa_offset 8
 5121              		.cfi_offset 4, -8
 5122              		.cfi_offset 14, -4
 5123              		.loc 1 844 4 view .LVU1748
 5124 0004 0846     		mov	r0, r1
 842:mp3.c         ****       unsigned char i, buff[128];
 5125              		.loc 1 842 1 view .LVU1749
 5126 0006 A0B0     		sub	sp, sp, #128
 5127              		.cfi_def_cfa_offset 136
 5128              		.loc 1 844 4 view .LVU1750
 5129 0008 4E4A     		ldr	r2, .L443
 5130 000a FFF7FEFF 		bl	lcd_printf
 5131              	.LVL434:
 845:mp3.c         **** 	  lcd_printf(1,2,"                              ");
 5132              		.loc 1 845 4 is_stmt 1 view .LVU1751
 5133 000e 0221     		movs	r1, #2
 5134 0010 0120     		movs	r0, #1
 5135 0012 4C4A     		ldr	r2, .L443
 5136 0014 FFF7FEFF 		bl	lcd_printf
 5137              	.LVL435:
 846:mp3.c         **** 	  lcd_printf(1,3,"                              ");
 5138              		.loc 1 846 4 view .LVU1752
 5139 0018 0321     		movs	r1, #3
 5140 001a 0120     		movs	r0, #1
 5141 001c 494A     		ldr	r2, .L443
 5142 001e FFF7FEFF 		bl	lcd_printf
 5143              	.LVL436:
 847:mp3.c         **** 	  lcd_printf(1,4,"                              ");
 5144              		.loc 1 847 4 view .LVU1753
 5145 0022 0421     		movs	r1, #4
 5146 0024 0120     		movs	r0, #1
 5147 0026 474A     		ldr	r2, .L443
 5148 0028 FFF7FEFF 		bl	lcd_printf
 5149              	.LVL437:
 848:mp3.c         **** 	  lcd_printf(1,5,"                              ");
 5150              		.loc 1 848 4 view .LVU1754
 5151 002c 0521     		movs	r1, #5
 5152 002e 0120     		movs	r0, #1
 5153 0030 444A     		ldr	r2, .L443
 5154 0032 FFF7FEFF 		bl	lcd_printf
 5155              	.LVL438:
 849:mp3.c         **** 	  lcd_printf(1,6,"                              ");
 5156              		.loc 1 849 4 view .LVU1755
 5157 0036 0621     		movs	r1, #6
 5158 0038 0120     		movs	r0, #1
 5159 003a 424A     		ldr	r2, .L443
 5160 003c FFF7FEFF 		bl	lcd_printf
 5161              	.LVL439:
 850:mp3.c         **** 	  lcd_printf(1,7,"                              ");
 5162              		.loc 1 850 4 view .LVU1756
 5163 0040 0721     		movs	r1, #7
 5164 0042 0120     		movs	r0, #1
 5165 0044 3F4A     		ldr	r2, .L443
 5166 0046 FFF7FEFF 		bl	lcd_printf
 5167              	.LVL440:
 851:mp3.c         **** 	  lcd_printf(1,8,"                              ");
 5168              		.loc 1 851 4 view .LVU1757
 5169 004a 0821     		movs	r1, #8
 5170 004c 0120     		movs	r0, #1
 5171 004e 3D4A     		ldr	r2, .L443
 5172 0050 FFF7FEFF 		bl	lcd_printf
 5173              	.LVL441:
 852:mp3.c         **** 	  lcd_printf(1,9,"                              ");
 5174              		.loc 1 852 4 view .LVU1758
 5175 0054 0921     		movs	r1, #9
 5176 0056 0120     		movs	r0, #1
 5177 0058 3A4A     		ldr	r2, .L443
 5178 005a FFF7FEFF 		bl	lcd_printf
 5179              	.LVL442:
 853:mp3.c         ****       lcd_printf(1,10,"                              ");
 5180              		.loc 1 853 7 view .LVU1759
 5181 005e 0A21     		movs	r1, #10
 5182 0060 0120     		movs	r0, #1
 5183 0062 384A     		ldr	r2, .L443
 5184 0064 FFF7FEFF 		bl	lcd_printf
 5185              	.LVL443:
 854:mp3.c         ****       lcd_printf(1,11,"                              ");
 5186              		.loc 1 854 7 view .LVU1760
 5187 0068 0B21     		movs	r1, #11
 5188 006a 0120     		movs	r0, #1
 5189 006c 354A     		ldr	r2, .L443
 5190 006e FFF7FEFF 		bl	lcd_printf
 5191              	.LVL444:
 855:mp3.c         ****       lcd_printf(1,12,"                              ");
 5192              		.loc 1 855 7 view .LVU1761
 5193 0072 0C21     		movs	r1, #12
 5194 0074 0120     		movs	r0, #1
 5195 0076 334A     		ldr	r2, .L443
 5196 0078 FFF7FEFF 		bl	lcd_printf
 5197              	.LVL445:
 856:mp3.c         ****       lcd_printf(1,13,"                              ");
 5198              		.loc 1 856 7 view .LVU1762
 5199 007c 0D21     		movs	r1, #13
 5200 007e 0120     		movs	r0, #1
 5201 0080 304A     		ldr	r2, .L443
 5202 0082 FFF7FEFF 		bl	lcd_printf
 5203              	.LVL446:
 857:mp3.c         ****       lcd_printf(1,14,"                              ");
 5204              		.loc 1 857 7 view .LVU1763
 858:mp3.c         ****       lcd_printf(1,15,"                              ");
 859:mp3.c         ****       f_lseek(&fsrc, fsrc.fsize - 128);
 5205              		.loc 1 859 26 is_stmt 0 view .LVU1764
 5206 0086 304C     		ldr	r4, .L443+4
 857:mp3.c         ****       lcd_printf(1,14,"                              ");
 5207              		.loc 1 857 7 view .LVU1765
 5208 0088 0E21     		movs	r1, #14
 5209 008a 0120     		movs	r0, #1
 5210 008c 2D4A     		ldr	r2, .L443
 5211 008e FFF7FEFF 		bl	lcd_printf
 5212              	.LVL447:
 858:mp3.c         ****       lcd_printf(1,15,"                              ");
 5213              		.loc 1 858 7 is_stmt 1 view .LVU1766
 5214 0092 2C4A     		ldr	r2, .L443
 5215 0094 0F21     		movs	r1, #15
 5216 0096 0120     		movs	r0, #1
 5217 0098 FFF7FEFF 		bl	lcd_printf
 5218              	.LVL448:
 5219              		.loc 1 859 7 view .LVU1767
 5220 009c E168     		ldr	r1, [r4, #12]
 5221 009e 2046     		mov	r0, r4
 5222 00a0 8039     		subs	r1, r1, #128
 5223 00a2 FFF7FEFF 		bl	f_lseek
 5224              	.LVL449:
 860:mp3.c         ****       f_read(&fsrc,buff,128,&br);
 5225              		.loc 1 860 7 view .LVU1768
 5226 00a6 294B     		ldr	r3, .L443+8
 5227 00a8 8022     		movs	r2, #128
 5228 00aa 6946     		mov	r1, sp
 5229 00ac 2046     		mov	r0, r4
 5230 00ae FFF7FEFF 		bl	f_read
 5231              	.LVL450:
 861:mp3.c         ****       if ((buff[0] == 'T') && (buff[1] == 'A') && (buff[2] == 'G')) {
 5232              		.loc 1 861 7 view .LVU1769
 5233              		.loc 1 861 10 is_stmt 0 view .LVU1770
 5234 00b2 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 5235 00b6 542B     		cmp	r3, #84
 5236 00b8 3DD1     		bne	.L436
 5237              		.loc 1 861 28 discriminator 1 view .LVU1771
 5238 00ba 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 5239 00be 412B     		cmp	r3, #65
 5240 00c0 39D1     		bne	.L436
 5241              		.loc 1 861 48 discriminator 2 view .LVU1772
 5242 00c2 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
 5243 00c6 472B     		cmp	r3, #71
 5244 00c8 35D1     		bne	.L436
 5245              		.loc 1 861 48 view .LVU1773
 5246 00ca 1E23     		movs	r3, #30
 5247 00cc 204A     		ldr	r2, .L443+12
 5248 00ce 0DF10301 		add	r1, sp, #3
 5249              	.L437:
 5250              	.LVL451:
 862:mp3.c         ****          for (i=0;i<30;i++) ID3V1_Buf.Title[i] = buff[3 + i];
 5251              		.loc 1 862 29 is_stmt 1 discriminator 3 view .LVU1774
 5252              		.loc 1 862 54 is_stmt 0 discriminator 3 view .LVU1775
 5253 00d2 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 5254              	.LVL452:
 5255              		.loc 1 862 54 discriminator 3 view .LVU1776
 5256 00d6 013B     		subs	r3, r3, #1
 5257              		.loc 1 862 10 discriminator 3 view .LVU1777
 5258 00d8 13F0FF03 		ands	r3, r3, #255
 5259              		.loc 1 862 48 discriminator 3 view .LVU1778
 5260 00dc 02F8010B 		strb	r0, [r2], #1
 5261              		.loc 1 862 24 is_stmt 1 discriminator 3 view .LVU1779
 5262              	.LVL453:
 5263              		.loc 1 862 19 discriminator 3 view .LVU1780
 5264              		.loc 1 862 10 is_stmt 0 discriminator 3 view .LVU1781
 5265 00e0 F7D1     		bne	.L437
 5266              		.loc 1 862 10 view .LVU1782
 5267 00e2 1E23     		movs	r3, #30
 5268 00e4 1B4A     		ldr	r2, .L443+16
 5269 00e6 0DF12101 		add	r1, sp, #33
 5270              	.LVL454:
 5271              	.L438:
 863:mp3.c         ****          for (i=0;i<30;i++) ID3V1_Buf.Artist[i] = buff[33 + i];
 5272              		.loc 1 863 29 is_stmt 1 discriminator 3 view .LVU1783
 5273              		.loc 1 863 55 is_stmt 0 discriminator 3 view .LVU1784
 5274 00ea 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 5275              	.LVL455:
 5276              		.loc 1 863 55 discriminator 3 view .LVU1785
 5277 00ee 013B     		subs	r3, r3, #1
 5278              		.loc 1 863 10 discriminator 3 view .LVU1786
 5279 00f0 13F0FF03 		ands	r3, r3, #255
 5280              		.loc 1 863 49 discriminator 3 view .LVU1787
 5281 00f4 02F8010B 		strb	r0, [r2], #1
 5282              		.loc 1 863 24 is_stmt 1 discriminator 3 view .LVU1788
 5283              	.LVL456:
 5284              		.loc 1 863 19 discriminator 3 view .LVU1789
 5285              		.loc 1 863 10 is_stmt 0 discriminator 3 view .LVU1790
 5286 00f8 F7D1     		bne	.L438
 5287              		.loc 1 863 10 view .LVU1791
 5288 00fa 1E23     		movs	r3, #30
 5289 00fc 164A     		ldr	r2, .L443+20
 5290 00fe 0DF13F01 		add	r1, sp, #63
 5291              	.LVL457:
 5292              	.L439:
 864:mp3.c         ****          for (i=0;i<30;i++) ID3V1_Buf.Album[i] = buff[63 + i];
 5293              		.loc 1 864 29 is_stmt 1 discriminator 3 view .LVU1792
 5294              		.loc 1 864 54 is_stmt 0 discriminator 3 view .LVU1793
 5295 0102 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 5296              	.LVL458:
 5297              		.loc 1 864 54 discriminator 3 view .LVU1794
 5298 0106 013B     		subs	r3, r3, #1
 5299              		.loc 1 864 10 discriminator 3 view .LVU1795
 5300 0108 13F0FF03 		ands	r3, r3, #255
 5301              		.loc 1 864 48 discriminator 3 view .LVU1796
 5302 010c 02F8010B 		strb	r0, [r2], #1
 5303              		.loc 1 864 24 is_stmt 1 discriminator 3 view .LVU1797
 5304              	.LVL459:
 5305              		.loc 1 864 19 discriminator 3 view .LVU1798
 5306              		.loc 1 864 10 is_stmt 0 discriminator 3 view .LVU1799
 5307 0110 F7D1     		bne	.L439
 865:mp3.c         ****          lcd_printf(1,10,"Tttle: %s ",ID3V1_Buf.Title);
 5308              		.loc 1 865 10 is_stmt 1 view .LVU1800
 5309 0112 0A21     		movs	r1, #10
 5310              	.LVL460:
 5311              		.loc 1 865 10 is_stmt 0 view .LVU1801
 5312 0114 0120     		movs	r0, #1
 5313 0116 0E4B     		ldr	r3, .L443+12
 5314 0118 104A     		ldr	r2, .L443+24
 5315 011a FFF7FEFF 		bl	lcd_printf
 5316              	.LVL461:
 866:mp3.c         ****          lcd_printf(1,12,"Artist: %s ",ID3V1_Buf.Artist);
 5317              		.loc 1 866 10 is_stmt 1 view .LVU1802
 5318 011e 0C21     		movs	r1, #12
 5319 0120 0120     		movs	r0, #1
 5320 0122 0C4B     		ldr	r3, .L443+16
 5321 0124 0E4A     		ldr	r2, .L443+28
 5322 0126 FFF7FEFF 		bl	lcd_printf
 5323              	.LVL462:
 867:mp3.c         ****          lcd_printf(1,14,"Album: %s ",ID3V1_Buf.Album);
 5324              		.loc 1 867 10 view .LVU1803
 5325 012a 0E21     		movs	r1, #14
 5326 012c 0120     		movs	r0, #1
 5327 012e 0A4B     		ldr	r3, .L443+20
 5328 0130 0C4A     		ldr	r2, .L443+32
 5329 0132 FFF7FEFF 		bl	lcd_printf
 5330              	.LVL463:
 5331              	.L436:
 868:mp3.c         ****       }
 869:mp3.c         ****       f_lseek(&fsrc,0);
 5332              		.loc 1 869 7 view .LVU1804
 5333 0136 0021     		movs	r1, #0
 5334 0138 0348     		ldr	r0, .L443+4
 5335 013a FFF7FEFF 		bl	f_lseek
 5336              	.LVL464:
 870:mp3.c         **** }
 5337              		.loc 1 870 1 is_stmt 0 view .LVU1805
 5338 013e 20B0     		add	sp, sp, #128
 5339              		.cfi_def_cfa_offset 8
 5340              		@ sp needed
 5341 0140 10BD     		pop	{r4, pc}
 5342              	.L444:
 5343 0142 00BF     		.align	2
 5344              	.L443:
 5345 0144 00000000 		.word	.LC6
 5346 0148 00000000 		.word	fsrc
 5347 014c 00000000 		.word	br
 5348 0150 03000000 		.word	ID3V1_Buf+3
 5349 0154 21000000 		.word	ID3V1_Buf+33
 5350 0158 3F000000 		.word	ID3V1_Buf+63
 5351 015c 1F000000 		.word	.LC7
 5352 0160 2A000000 		.word	.LC8
 5353 0164 36000000 		.word	.LC9
 5354              		.cfi_endproc
 5355              	.LFE52:
 5357              		.section	.rodata.mp3_displaylist.str1.1,"aMS",%progbits,1
 5358              	.LC10:
 5359 0000 20202020 		.ascii	"                             \000"
 5359      20202020 
 5359      20202020 
 5359      20202020 
 5359      20202020 
 5360              	.LC11:
 5361 001e 25642E20 		.ascii	"%d. %s      \000"
 5361      25732020 
 5361      20202020 
 5361      00
 5362              		.section	.text.mp3_displaylist,"ax",%progbits
 5363              		.align	1
 5364              		.global	mp3_displaylist
 5365              		.syntax unified
 5366              		.thumb
 5367              		.thumb_func
 5368              		.fpu softvfp
 5370              	mp3_displaylist:
 5371              	.LFB53:
 871:mp3.c         **** 
 872:mp3.c         **** void mp3_displaylist(void){
 5372              		.loc 1 872 27 is_stmt 1 view -0
 5373              		.cfi_startproc
 5374              		@ args = 0, pretend = 0, frame = 0
 5375              		@ frame_needed = 0, uses_anonymous_args = 0
 873:mp3.c         **** 	int i =0;
 5376              		.loc 1 873 2 view .LVU1807
 5377              	.LVL465:
 874:mp3.c         **** 	for(i=0;i<18;i++){
 5378              		.loc 1 874 2 view .LVU1808
 5379              		.loc 1 874 10 view .LVU1809
 872:mp3.c         **** 	int i =0;
 5380              		.loc 1 872 27 is_stmt 0 view .LVU1810
 5381 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 5382              		.cfi_def_cfa_offset 32
 5383              		.cfi_offset 4, -20
 5384              		.cfi_offset 5, -16
 5385              		.cfi_offset 6, -12
 5386              		.cfi_offset 7, -8
 5387              		.cfi_offset 14, -4
 5388              		.loc 1 874 7 view .LVU1811
 5389 0002 0024     		movs	r4, #0
 875:mp3.c         **** 		lcd_printf(0,i,"                             ");
 5390              		.loc 1 875 3 view .LVU1812
 5391 0004 124D     		ldr	r5, .L450
 5392              	.LVL466:
 5393              	.L446:
 5394              		.loc 1 875 3 is_stmt 1 discriminator 3 view .LVU1813
 5395 0006 A1B2     		uxth	r1, r4
 5396 0008 2A46     		mov	r2, r5
 5397 000a 0020     		movs	r0, #0
 874:mp3.c         **** 	for(i=0;i<18;i++){
 5398              		.loc 1 874 16 is_stmt 0 discriminator 3 view .LVU1814
 5399 000c 0134     		adds	r4, r4, #1
 5400              	.LVL467:
 5401              		.loc 1 875 3 discriminator 3 view .LVU1815
 5402 000e FFF7FEFF 		bl	lcd_printf
 5403              	.LVL468:
 874:mp3.c         **** 	for(i=0;i<18;i++){
 5404              		.loc 1 874 15 is_stmt 1 discriminator 3 view .LVU1816
 874:mp3.c         **** 	for(i=0;i<18;i++){
 5405              		.loc 1 874 10 discriminator 3 view .LVU1817
 874:mp3.c         **** 	for(i=0;i<18;i++){
 5406              		.loc 1 874 2 is_stmt 0 discriminator 3 view .LVU1818
 5407 0012 122C     		cmp	r4, #18
 5408 0014 F7D1     		bne	.L446
 876:mp3.c         **** 	}
 877:mp3.c         **** 	for(i=0;i<5;i++){
 5409              		.loc 1 877 7 view .LVU1819
 5410 0016 0024     		movs	r4, #0
 5411              	.LVL469:
 878:mp3.c         **** 		lcd_printf(2,i+4,"%d. %s      ",i+1,head->filename);
 5412              		.loc 1 878 43 view .LVU1820
 5413 0018 0E4D     		ldr	r5, .L450+4
 5414              		.loc 1 878 3 view .LVU1821
 5415 001a 0F4F     		ldr	r7, .L450+8
 879:mp3.c         **** 		head=head->next;
 880:mp3.c         **** 		bw = f_open(&fsrc,head->filename, FA_OPEN_EXISTING | FA_READ);
 5416              		.loc 1 880 8 view .LVU1822
 5417 001c 0F4E     		ldr	r6, .L450+12
 5418              	.L447:
 5419              	.LVL470:
 878:mp3.c         **** 		lcd_printf(2,i+4,"%d. %s      ",i+1,head->filename);
 5420              		.loc 1 878 3 is_stmt 1 discriminator 3 view .LVU1823
 5421 001e 2B68     		ldr	r3, [r5]
 5422 0020 211D     		adds	r1, r4, #4
 5423 0022 0134     		adds	r4, r4, #1
 5424              	.LVL471:
 878:mp3.c         **** 		lcd_printf(2,i+4,"%d. %s      ",i+1,head->filename);
 5425              		.loc 1 878 3 is_stmt 0 discriminator 3 view .LVU1824
 5426 0024 3A46     		mov	r2, r7
 5427 0026 0220     		movs	r0, #2
 5428 0028 0093     		str	r3, [sp]
 5429 002a 89B2     		uxth	r1, r1
 5430 002c 2346     		mov	r3, r4
 5431 002e FFF7FEFF 		bl	lcd_printf
 5432              	.LVL472:
 879:mp3.c         **** 		head=head->next;
 5433              		.loc 1 879 3 is_stmt 1 discriminator 3 view .LVU1825
 879:mp3.c         **** 		head=head->next;
 5434              		.loc 1 879 12 is_stmt 0 discriminator 3 view .LVU1826
 5435 0032 2B68     		ldr	r3, [r5]
 5436              		.loc 1 880 8 discriminator 3 view .LVU1827
 5437 0034 0122     		movs	r2, #1
 879:mp3.c         **** 		head=head->next;
 5438              		.loc 1 879 12 discriminator 3 view .LVU1828
 5439 0036 D3F89810 		ldr	r1, [r3, #152]
 5440              		.loc 1 880 8 discriminator 3 view .LVU1829
 5441 003a 3046     		mov	r0, r6
 879:mp3.c         **** 		head=head->next;
 5442              		.loc 1 879 7 discriminator 3 view .LVU1830
 5443 003c 2960     		str	r1, [r5]
 5444              		.loc 1 880 3 is_stmt 1 discriminator 3 view .LVU1831
 5445              		.loc 1 880 8 is_stmt 0 discriminator 3 view .LVU1832
 5446 003e FFF7FEFF 		bl	f_open
 5447              	.LVL473:
 5448              		.loc 1 880 6 discriminator 3 view .LVU1833
 5449 0042 074B     		ldr	r3, .L450+16
 877:mp3.c         **** 		lcd_printf(2,i+4,"%d. %s      ",i+1,head->filename);
 5450              		.loc 1 877 2 discriminator 3 view .LVU1834
 5451 0044 052C     		cmp	r4, #5
 5452              		.loc 1 880 8 discriminator 3 view .LVU1835
 5453 0046 1860     		str	r0, [r3]
 877:mp3.c         **** 		lcd_printf(2,i+4,"%d. %s      ",i+1,head->filename);
 5454              		.loc 1 877 14 is_stmt 1 discriminator 3 view .LVU1836
 5455              	.LVL474:
 877:mp3.c         **** 		lcd_printf(2,i+4,"%d. %s      ",i+1,head->filename);
 5456              		.loc 1 877 10 discriminator 3 view .LVU1837
 877:mp3.c         **** 		lcd_printf(2,i+4,"%d. %s      ",i+1,head->filename);
 5457              		.loc 1 877 2 is_stmt 0 discriminator 3 view .LVU1838
 5458 0048 E9D1     		bne	.L447
 881:mp3.c         **** 	}
 882:mp3.c         **** }
 5459              		.loc 1 882 1 view .LVU1839
 5460 004a 03B0     		add	sp, sp, #12
 5461              		.cfi_def_cfa_offset 20
 5462              		@ sp needed
 5463 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 5464              	.LVL475:
 5465              	.L451:
 5466              		.loc 1 882 1 view .LVU1840
 5467 004e 00BF     		.align	2
 5468              	.L450:
 5469 0050 00000000 		.word	.LC10
 5470 0054 00000000 		.word	head
 5471 0058 1E000000 		.word	.LC11
 5472 005c 00000000 		.word	fsrc
 5473 0060 00000000 		.word	bw
 5474              		.cfi_endproc
 5475              	.LFE53:
 5477              		.section	.rodata.mp3_displayinit.str1.1,"aMS",%progbits,1
 5478              	.LC12:
 5479 0000 4D503320 		.ascii	"MP3 Init OK!!! %d  \000"
 5479      496E6974 
 5479      204F4B21 
 5479      21212025 
 5479      64202000 
 5480              	.LC13:
 5481 0014 4D503320 		.ascii	"MP3 Open %d Size %d \000"
 5481      4F70656E 
 5481      20256420 
 5481      53697A65 
 5481      20256420 
 5482              	.LC14:
 5483 0029 2532643A 		.ascii	"%2d: %s    \000"
 5483      20257320 
 5483      20202000 
 5484              		.section	.text.mp3_displayinit,"ax",%progbits
 5485              		.align	1
 5486              		.global	mp3_displayinit
 5487              		.syntax unified
 5488              		.thumb
 5489              		.thumb_func
 5490              		.fpu softvfp
 5492              	mp3_displayinit:
 5493              	.LFB54:
 883:mp3.c         **** 
 884:mp3.c         **** void mp3_displayinit (void){
 5494              		.loc 1 884 28 is_stmt 1 view -0
 5495              		.cfi_startproc
 5496              		@ args = 0, pretend = 0, frame = 0
 5497              		@ frame_needed = 0, uses_anonymous_args = 0
 885:mp3.c         **** 	lcd_printf(1,1,"                              ");
 5498              		.loc 1 885 2 view .LVU1842
 884:mp3.c         **** 	lcd_printf(1,1,"                              ");
 5499              		.loc 1 884 28 is_stmt 0 view .LVU1843
 5500 0000 13B5     		push	{r0, r1, r4, lr}
 5501              		.cfi_def_cfa_offset 16
 5502              		.cfi_offset 4, -8
 5503              		.cfi_offset 14, -4
 5504              		.loc 1 885 2 view .LVU1844
 5505 0002 0121     		movs	r1, #1
 5506 0004 0F4A     		ldr	r2, .L453
 5507 0006 0846     		mov	r0, r1
 5508 0008 FFF7FEFF 		bl	lcd_printf
 5509              	.LVL476:
 886:mp3.c         **** 	lcd_printf(2,0,"MP3 Init OK!!! %d  ",ftemp);
 5510              		.loc 1 886 2 is_stmt 1 view .LVU1845
 5511 000c 0E4B     		ldr	r3, .L453+4
 5512 000e 0021     		movs	r1, #0
 5513 0010 0220     		movs	r0, #2
 5514 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5515 0014 0D4A     		ldr	r2, .L453+8
 5516 0016 FFF7FEFF 		bl	lcd_printf
 5517              	.LVL477:
 887:mp3.c         ****       lcd_printf(2,3,"MP3 Open %d Size %d ",music_number,fsrc.fsize);
 5518              		.loc 1 887 7 view .LVU1846
 5519 001a 0D4B     		ldr	r3, .L453+12
 5520 001c 0D4C     		ldr	r4, .L453+16
 5521 001e DB68     		ldr	r3, [r3, #12]
 5522 0020 0321     		movs	r1, #3
 5523 0022 0093     		str	r3, [sp]
 5524 0024 0220     		movs	r0, #2
 5525 0026 2388     		ldrh	r3, [r4]
 5526 0028 0B4A     		ldr	r2, .L453+20
 5527 002a FFF7FEFF 		bl	lcd_printf
 5528              	.LVL478:
 888:mp3.c         ****       lcd_printf(2,6,"%2d: %s    ",music_number,head->filename);
 5529              		.loc 1 888 7 view .LVU1847
 5530              		.loc 1 888 53 is_stmt 0 view .LVU1848
 5531 002e 0B4B     		ldr	r3, .L453+24
 5532              		.loc 1 888 7 view .LVU1849
 5533 0030 0621     		movs	r1, #6
 5534 0032 1B68     		ldr	r3, [r3]
 5535 0034 0220     		movs	r0, #2
 5536 0036 0093     		str	r3, [sp]
 5537 0038 094A     		ldr	r2, .L453+28
 5538 003a 2388     		ldrh	r3, [r4]
 5539 003c FFF7FEFF 		bl	lcd_printf
 5540              	.LVL479:
 889:mp3.c         **** 	  
 890:mp3.c         **** }
 5541              		.loc 1 890 1 view .LVU1850
 5542 0040 02B0     		add	sp, sp, #8
 5543              		.cfi_def_cfa_offset 8
 5544              		@ sp needed
 5545 0042 10BD     		pop	{r4, pc}
 5546              	.L454:
 5547              		.align	2
 5548              	.L453:
 5549 0044 00000000 		.word	.LC6
 5550 0048 00000000 		.word	ftemp
 5551 004c 00000000 		.word	.LC12
 5552 0050 00000000 		.word	fsrc
 5553 0054 00000000 		.word	music_number
 5554 0058 14000000 		.word	.LC13
 5555 005c 00000000 		.word	head
 5556 0060 29000000 		.word	.LC14
 5557              		.cfi_endproc
 5558              	.LFE54:
 5560              		.section	.text.play_next,"ax",%progbits
 5561              		.align	1
 5562              		.global	play_next
 5563              		.syntax unified
 5564              		.thumb
 5565              		.thumb_func
 5566              		.fpu softvfp
 5568              	play_next:
 5569              	.LFB56:
 891:mp3.c         **** 
 892:mp3.c         **** void mp3_init (void)
 893:mp3.c         **** {
 894:mp3.c         ****       SPI_configuration();
 895:mp3.c         ****       lcd_printf(2,0,"SPI Init OK  ");
 896:mp3.c         ****       SD_init();
 897:mp3.c         ****       lcd_printf(2,0,"SD Init OK  ");
 898:mp3.c         ****       vs1003_init();
 899:mp3.c         ****       lcd_printf(2,0,"VS1003 Init OK  ");
 900:mp3.c         ****       mp3_reset();
 901:mp3.c         ****       lcd_printf(2,0,"VS1003 Reset1 OK  ");
 902:mp3.c         ****       vs1003_soft_reset();
 903:mp3.c         ****       load_patch();
 904:mp3.c         ****       lcd_printf(2,0,"VS1003 Reset2 OK  ");
 905:mp3.c         ****       f_mount(0,&fs);
 906:mp3.c         ****       lcd_printf(2,0,"FAT Mount OK     ");
 907:mp3.c         ****       ftemp = find_music();
 908:mp3.c         ****       lcd_printf(2,0,"MP3 List %d    ",ftemp);
 909:mp3.c         ****       music_number = ftemp;
 910:mp3.c         ****       f_chdir("0:/Music");
 911:mp3.c         ****       bw = f_open(&fsrc,head->filename, FA_OPEN_EXISTING | FA_READ);
 912:mp3.c         ****       set_vs1003();
 913:mp3.c         ****       lcd_printf(2,0,"MP3 Set ");
 914:mp3.c         ****       vs1003_sine_test();
 915:mp3.c         ****       play_prev();
 916:mp3.c         ****       lcd_printf(2,0,"MP3 Init OK!!! %d  ",ftemp);
 917:mp3.c         ****       lcd_printf(2,3,"MP3 Open %d Size %d ",music_number,fsrc.fsize);
 918:mp3.c         ****       lcd_printf(2,6,"%2d: %s    ",music_number,head->filename);
 919:mp3.c         ****       //display_id3v1_tag();
 920:mp3.c         ****       new_play = 1;
 921:mp3.c         **** }
 922:mp3.c         **** 
 923:mp3.c         **** 
 924:mp3.c         **** void play_next (void)
 925:mp3.c         **** {
 5570              		.loc 1 925 1 is_stmt 1 view -0
 5571              		.cfi_startproc
 5572              		@ args = 0, pretend = 0, frame = 0
 5573              		@ frame_needed = 0, uses_anonymous_args = 0
 926:mp3.c         ****       delay_ms(1000);
 5574              		.loc 1 926 7 view .LVU1852
 925:mp3.c         ****       delay_ms(1000);
 5575              		.loc 1 925 1 is_stmt 0 view .LVU1853
 5576 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 5577              		.cfi_def_cfa_offset 24
 5578              		.cfi_offset 4, -16
 5579              		.cfi_offset 5, -12
 5580              		.cfi_offset 6, -8
 5581              		.cfi_offset 14, -4
 927:mp3.c         ****      if ((music_number--) && (head != NULL)) {
 5582              		.loc 1 927 23 view .LVU1854
 5583 0002 274C     		ldr	r4, .L473
 926:mp3.c         ****       delay_ms(1000);
 5584              		.loc 1 926 7 view .LVU1855
 5585 0004 4FF47A70 		mov	r0, #1000
 5586 0008 FFF7FEFF 		bl	delay_ms
 5587              	.LVL480:
 5588              		.loc 1 927 6 is_stmt 1 view .LVU1856
 5589              		.loc 1 927 23 is_stmt 0 view .LVU1857
 5590 000c 2288     		ldrh	r2, [r4]
 5591 000e 531E     		subs	r3, r2, #1
 5592 0010 9BB2     		uxth	r3, r3
 5593 0012 2380     		strh	r3, [r4]	@ movhi
 5594              		.loc 1 927 9 view .LVU1858
 5595 0014 002A     		cmp	r2, #0
 5596 0016 40D0     		beq	.L455
 5597              		.loc 1 927 36 discriminator 1 view .LVU1859
 5598 0018 224D     		ldr	r5, .L473+4
 5599 001a 2A68     		ldr	r2, [r5]
 5600              		.loc 1 927 27 discriminator 1 view .LVU1860
 5601 001c 002A     		cmp	r2, #0
 5602 001e 3CD0     		beq	.L455
 928:mp3.c         **** 	 if (music_number == 0) {
 5603              		.loc 1 928 3 is_stmt 1 view .LVU1861
 5604              		.loc 1 928 6 is_stmt 0 view .LVU1862
 5605 0020 5BB9     		cbnz	r3, .L457
 5606              	.L458:
 929:mp3.c         **** 	    while (head->back != NULL) head = head->back;
 5607              		.loc 1 929 12 is_stmt 1 discriminator 1 view .LVU1863
 5608 0022 1146     		mov	r1, r2
 5609              		.loc 1 929 17 is_stmt 0 discriminator 1 view .LVU1864
 5610 0024 D2F89C20 		ldr	r2, [r2, #156]
 5611              		.loc 1 929 12 discriminator 1 view .LVU1865
 5612 0028 2AB9     		cbnz	r2, .L462
 5613 002a 03B1     		cbz	r3, .L461
 5614 002c 2960     		str	r1, [r5]
 5615              	.L461:
 930:mp3.c         **** 	 }
 931:mp3.c         **** 	 if (music_number != 0) head = head->next;else music_number = ftemp;
 5616              		.loc 1 931 3 is_stmt 1 view .LVU1866
 5617              		.loc 1 931 49 view .LVU1867
 5618              		.loc 1 931 62 is_stmt 0 view .LVU1868
 5619 002e 1E4B     		ldr	r3, .L473+8
 5620 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5621 0032 2380     		strh	r3, [r4]	@ movhi
 5622 0034 04E0     		b	.L460
 5623              	.L462:
 5624 0036 0123     		movs	r3, #1
 5625 0038 F3E7     		b	.L458
 5626              	.L457:
 5627              		.loc 1 931 3 is_stmt 1 view .LVU1869
 5628              		.loc 1 931 26 view .LVU1870
 5629              		.loc 1 931 31 is_stmt 0 view .LVU1871
 5630 003a D2F89830 		ldr	r3, [r2, #152]
 5631 003e 2B60     		str	r3, [r5]
 5632              	.L460:
 5633              	.LBB315:
 5634              	.LBI315:
 924:mp3.c         **** {
 5635              		.loc 1 924 6 is_stmt 1 view .LVU1872
 5636              	.LBB316:
 932:mp3.c         **** 	 bw = f_open(&fsrc,head->filename, FA_OPEN_EXISTING | FA_READ);
 5637              		.loc 1 932 3 view .LVU1873
 5638              		.loc 1 932 8 is_stmt 0 view .LVU1874
 5639 0040 1A4E     		ldr	r6, .L473+12
 5640 0042 0122     		movs	r2, #1
 5641 0044 2968     		ldr	r1, [r5]
 5642 0046 3046     		mov	r0, r6
 5643 0048 FFF7FEFF 		bl	f_open
 5644              	.LVL481:
 933:mp3.c         **** 	 datasize = 0;
 5645              		.loc 1 933 12 view .LVU1875
 5646 004c 0021     		movs	r1, #0
 934:mp3.c         **** 	 seek_value = 0;
 935:mp3.c         **** 	 new_play = 1;
 5647              		.loc 1 935 12 view .LVU1876
 5648 004e 0122     		movs	r2, #1
 932:mp3.c         **** 	 datasize = 0;
 5649              		.loc 1 932 6 view .LVU1877
 5650 0050 174B     		ldr	r3, .L473+16
 932:mp3.c         **** 	 datasize = 0;
 5651              		.loc 1 932 8 view .LVU1878
 5652 0052 1860     		str	r0, [r3]
 933:mp3.c         **** 	 datasize = 0;
 5653              		.loc 1 933 3 is_stmt 1 view .LVU1879
 933:mp3.c         **** 	 datasize = 0;
 5654              		.loc 1 933 12 is_stmt 0 view .LVU1880
 5655 0054 174B     		ldr	r3, .L473+20
 936:mp3.c         ****          buffer_read = 0;
 937:mp3.c         ****          fdx = 0;
 938:mp3.c         ****          f_kbps = 0xffff;
 939:mp3.c         ****          memset((char *)buffer,0,1024);
 5656              		.loc 1 939 10 view .LVU1881
 5657 0056 1848     		ldr	r0, .L473+24
 933:mp3.c         **** 	 seek_value = 0;
 5658              		.loc 1 933 12 view .LVU1882
 5659 0058 1960     		str	r1, [r3]
 934:mp3.c         **** 	 new_play = 1;
 5660              		.loc 1 934 3 is_stmt 1 view .LVU1883
 934:mp3.c         **** 	 new_play = 1;
 5661              		.loc 1 934 14 is_stmt 0 view .LVU1884
 5662 005a 184B     		ldr	r3, .L473+28
 5663 005c 1960     		str	r1, [r3]
 935:mp3.c         ****          buffer_read = 0;
 5664              		.loc 1 935 3 is_stmt 1 view .LVU1885
 935:mp3.c         ****          buffer_read = 0;
 5665              		.loc 1 935 12 is_stmt 0 view .LVU1886
 5666 005e 184B     		ldr	r3, .L473+32
 5667 0060 1A70     		strb	r2, [r3]
 936:mp3.c         ****          fdx = 0;
 5668              		.loc 1 936 10 is_stmt 1 view .LVU1887
 938:mp3.c         ****          memset((char *)buffer,0,1024);
 5669              		.loc 1 938 17 is_stmt 0 view .LVU1888
 5670 0062 4FF6FF72 		movw	r2, #65535
 936:mp3.c         ****          fdx = 0;
 5671              		.loc 1 936 22 view .LVU1889
 5672 0066 174B     		ldr	r3, .L473+36
 5673 0068 1970     		strb	r1, [r3]
 937:mp3.c         ****          f_kbps = 0xffff;
 5674              		.loc 1 937 10 is_stmt 1 view .LVU1890
 937:mp3.c         ****          f_kbps = 0xffff;
 5675              		.loc 1 937 14 is_stmt 0 view .LVU1891
 5676 006a 174B     		ldr	r3, .L473+40
 5677 006c 1970     		strb	r1, [r3]
 938:mp3.c         ****          memset((char *)buffer,0,1024);
 5678              		.loc 1 938 10 is_stmt 1 view .LVU1892
 938:mp3.c         ****          memset((char *)buffer,0,1024);
 5679              		.loc 1 938 17 is_stmt 0 view .LVU1893
 5680 006e 174B     		ldr	r3, .L473+44
 5681 0070 1A80     		strh	r2, [r3]	@ movhi
 5682              		.loc 1 939 10 is_stmt 1 view .LVU1894
 5683 0072 4FF48062 		mov	r2, #1024
 5684 0076 FFF7FEFF 		bl	memset
 5685              	.LVL482:
 940:mp3.c         **** 	 lcd_printf(2,3,"MP3 Open %d Size %d ",music_number,fsrc.fsize);
 5686              		.loc 1 940 3 view .LVU1895
 5687 007a F368     		ldr	r3, [r6, #12]
 5688 007c 0321     		movs	r1, #3
 5689 007e 0220     		movs	r0, #2
 5690 0080 134A     		ldr	r2, .L473+48
 5691 0082 0093     		str	r3, [sp]
 5692 0084 2388     		ldrh	r3, [r4]
 5693 0086 FFF7FEFF 		bl	lcd_printf
 5694              	.LVL483:
 941:mp3.c         **** 	 lcd_printf(2,6,"%2d: %s    ",music_number,head->filename);
 5695              		.loc 1 941 3 view .LVU1896
 5696 008a 2B68     		ldr	r3, [r5]
 5697 008c 0621     		movs	r1, #6
 5698 008e 0093     		str	r3, [sp]
 5699 0090 0220     		movs	r0, #2
 5700 0092 2388     		ldrh	r3, [r4]
 5701 0094 0F4A     		ldr	r2, .L473+52
 5702 0096 FFF7FEFF 		bl	lcd_printf
 5703              	.LVL484:
 5704              	.L455:
 5705              	.LBE316:
 5706              	.LBE315:
 942:mp3.c         **** 	 //display_id3v1_tag();
 943:mp3.c         ****       }
 944:mp3.c         **** }
 5707              		.loc 1 944 1 is_stmt 0 view .LVU1897
 5708 009a 02B0     		add	sp, sp, #8
 5709              		.cfi_def_cfa_offset 16
 5710              		@ sp needed
 5711 009c 70BD     		pop	{r4, r5, r6, pc}
 5712              	.L474:
 5713 009e 00BF     		.align	2
 5714              	.L473:
 5715 00a0 00000000 		.word	music_number
 5716 00a4 00000000 		.word	head
 5717 00a8 00000000 		.word	ftemp
 5718 00ac 00000000 		.word	fsrc
 5719 00b0 00000000 		.word	bw
 5720 00b4 00000000 		.word	.LANCHOR16
 5721 00b8 00000000 		.word	buffer
 5722 00bc 00000000 		.word	seek_value
 5723 00c0 00000000 		.word	new_play
 5724 00c4 00000000 		.word	buffer_read
 5725 00c8 00000000 		.word	fdx
 5726 00cc 00000000 		.word	.LANCHOR0
 5727 00d0 14000000 		.word	.LC13
 5728 00d4 29000000 		.word	.LC14
 5729              		.cfi_endproc
 5730              	.LFE56:
 5732              		.section	.text.play_prev,"ax",%progbits
 5733              		.align	1
 5734              		.global	play_prev
 5735              		.syntax unified
 5736              		.thumb
 5737              		.thumb_func
 5738              		.fpu softvfp
 5740              	play_prev:
 5741              	.LFB57:
 945:mp3.c         **** 
 946:mp3.c         **** 
 947:mp3.c         **** void play_prev (void)
 948:mp3.c         **** {
 5742              		.loc 1 948 1 is_stmt 1 view -0
 5743              		.cfi_startproc
 5744              		@ args = 0, pretend = 0, frame = 0
 5745              		@ frame_needed = 0, uses_anonymous_args = 0
 949:mp3.c         ****       music_number++;
 5746              		.loc 1 949 7 view .LVU1899
 948:mp3.c         ****       music_number++;
 5747              		.loc 1 948 1 is_stmt 0 view .LVU1900
 5748 0000 70B5     		push	{r4, r5, r6, lr}
 5749              		.cfi_def_cfa_offset 16
 5750              		.cfi_offset 4, -16
 5751              		.cfi_offset 5, -12
 5752              		.cfi_offset 6, -8
 5753              		.cfi_offset 14, -4
 5754              		.loc 1 949 19 view .LVU1901
 5755 0002 1B4C     		ldr	r4, .L481
 950:mp3.c         ****       if (music_number == ftemp + 1) {
 5756              		.loc 1 950 33 view .LVU1902
 5757 0004 1B4E     		ldr	r6, .L481+4
 949:mp3.c         ****       music_number++;
 5758              		.loc 1 949 19 view .LVU1903
 5759 0006 2388     		ldrh	r3, [r4]
 5760              		.loc 1 950 33 view .LVU1904
 5761 0008 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 949:mp3.c         ****       music_number++;
 5762              		.loc 1 949 19 view .LVU1905
 5763 000a 0133     		adds	r3, r3, #1
 5764 000c 9BB2     		uxth	r3, r3
 5765              		.loc 1 950 33 view .LVU1906
 5766 000e 511C     		adds	r1, r2, #1
 5767              		.loc 1 950 10 view .LVU1907
 5768 0010 8B42     		cmp	r3, r1
 5769 0012 194D     		ldr	r5, .L481+8
 949:mp3.c         ****       music_number++;
 5770              		.loc 1 949 19 view .LVU1908
 5771 0014 2380     		strh	r3, [r4]	@ movhi
 5772              		.loc 1 950 7 is_stmt 1 view .LVU1909
 5773              		.loc 1 950 10 is_stmt 0 view .LVU1910
 5774 0016 11D1     		bne	.L476
 5775 0018 2B68     		ldr	r3, [r5]
 5776              	.L477:
 951:mp3.c         ****          while(head->next != NULL) head = head->next;
 5777              		.loc 1 951 15 is_stmt 1 discriminator 1 view .LVU1911
 5778 001a 1A46     		mov	r2, r3
 5779              		.loc 1 951 20 is_stmt 0 discriminator 1 view .LVU1912
 5780 001c D3F89830 		ldr	r3, [r3, #152]
 5781              		.loc 1 951 15 discriminator 1 view .LVU1913
 5782 0020 002B     		cmp	r3, #0
 5783 0022 FAD1     		bne	.L477
 952:mp3.c         ****          head = head->back;
 5784              		.loc 1 952 10 is_stmt 1 view .LVU1914
 5785              		.loc 1 952 15 is_stmt 0 view .LVU1915
 5786 0024 D2F89C30 		ldr	r3, [r2, #156]
 5787 0028 2B60     		str	r3, [r5]
 953:mp3.c         ****          music_number = 1;
 5788              		.loc 1 953 10 is_stmt 1 view .LVU1916
 5789              		.loc 1 953 23 is_stmt 0 view .LVU1917
 5790 002a 0123     		movs	r3, #1
 5791 002c 2380     		strh	r3, [r4]	@ movhi
 5792              	.L478:
 954:mp3.c         ****       } else {
 955:mp3.c         ****          if (music_number != ftemp) {
 956:mp3.c         ****             head=head->back;
 957:mp3.c         ****             head=head->back;
 958:mp3.c         ****          } else {
 959:mp3.c         ****             mp3_flag = 0;
 960:mp3.c         ****             datasize = 0;
 961:mp3.c         ****             ftemp = find_music();
 962:mp3.c         ****             music_number = ftemp;
 963:mp3.c         ****             bw = f_open(&fsrc,head->filename, FA_OPEN_EXISTING | FA_READ);
 964:mp3.c         ****          }
 965:mp3.c         ****       }
 966:mp3.c         ****       music_number++;
 5793              		.loc 1 966 7 is_stmt 1 view .LVU1918
 5794              		.loc 1 966 19 is_stmt 0 view .LVU1919
 5795 002e 2388     		ldrh	r3, [r4]
 5796 0030 0133     		adds	r3, r3, #1
 5797 0032 2380     		strh	r3, [r4]	@ movhi
 967:mp3.c         ****       play_next();
 5798              		.loc 1 967 7 is_stmt 1 view .LVU1920
 968:mp3.c         **** }
 5799              		.loc 1 968 1 is_stmt 0 view .LVU1921
 5800 0034 BDE87040 		pop	{r4, r5, r6, lr}
 5801              		.cfi_remember_state
 5802              		.cfi_restore 14
 5803              		.cfi_restore 6
 5804              		.cfi_restore 5
 5805              		.cfi_restore 4
 5806              		.cfi_def_cfa_offset 0
 967:mp3.c         ****       play_next();
 5807              		.loc 1 967 7 view .LVU1922
 5808 0038 FFF7FEBF 		b	play_next
 5809              	.LVL485:
 5810              	.L476:
 5811              		.cfi_restore_state
 955:mp3.c         ****             head=head->back;
 5812              		.loc 1 955 10 is_stmt 1 view .LVU1923
 955:mp3.c         ****             head=head->back;
 5813              		.loc 1 955 13 is_stmt 0 view .LVU1924
 5814 003c 9342     		cmp	r3, r2
 5815 003e 06D0     		beq	.L479
 956:mp3.c         ****             head=head->back;
 5816              		.loc 1 956 13 is_stmt 1 view .LVU1925
 957:mp3.c         ****          } else {
 5817              		.loc 1 957 13 view .LVU1926
 956:mp3.c         ****             head=head->back;
 5818              		.loc 1 956 22 is_stmt 0 view .LVU1927
 5819 0040 2B68     		ldr	r3, [r5]
 957:mp3.c         ****          } else {
 5820              		.loc 1 957 22 view .LVU1928
 5821 0042 D3F89C30 		ldr	r3, [r3, #156]
 957:mp3.c         ****          } else {
 5822              		.loc 1 957 17 view .LVU1929
 5823 0046 D3F89C30 		ldr	r3, [r3, #156]
 5824 004a 2B60     		str	r3, [r5]
 5825 004c EFE7     		b	.L478
 5826              	.L479:
 959:mp3.c         ****             datasize = 0;
 5827              		.loc 1 959 13 is_stmt 1 view .LVU1930
 959:mp3.c         ****             datasize = 0;
 5828              		.loc 1 959 22 is_stmt 0 view .LVU1931
 5829 004e 0023     		movs	r3, #0
 5830 0050 0A4A     		ldr	r2, .L481+12
 5831 0052 1370     		strb	r3, [r2]
 960:mp3.c         ****             ftemp = find_music();
 5832              		.loc 1 960 13 is_stmt 1 view .LVU1932
 960:mp3.c         ****             ftemp = find_music();
 5833              		.loc 1 960 22 is_stmt 0 view .LVU1933
 5834 0054 0A4A     		ldr	r2, .L481+16
 5835 0056 1360     		str	r3, [r2]
 961:mp3.c         ****             music_number = ftemp;
 5836              		.loc 1 961 13 is_stmt 1 view .LVU1934
 961:mp3.c         ****             music_number = ftemp;
 5837              		.loc 1 961 21 is_stmt 0 view .LVU1935
 5838 0058 FFF7FEFF 		bl	find_music
 5839              	.LVL486:
 963:mp3.c         ****          }
 5840              		.loc 1 963 18 view .LVU1936
 5841 005c 0122     		movs	r2, #1
 961:mp3.c         ****             music_number = ftemp;
 5842              		.loc 1 961 19 view .LVU1937
 5843 005e 3070     		strb	r0, [r6]
 962:mp3.c         ****             bw = f_open(&fsrc,head->filename, FA_OPEN_EXISTING | FA_READ);
 5844              		.loc 1 962 13 is_stmt 1 view .LVU1938
 962:mp3.c         ****             bw = f_open(&fsrc,head->filename, FA_OPEN_EXISTING | FA_READ);
 5845              		.loc 1 962 26 is_stmt 0 view .LVU1939
 5846 0060 2080     		strh	r0, [r4]	@ movhi
 963:mp3.c         ****          }
 5847              		.loc 1 963 13 is_stmt 1 view .LVU1940
 963:mp3.c         ****          }
 5848              		.loc 1 963 18 is_stmt 0 view .LVU1941
 5849 0062 2968     		ldr	r1, [r5]
 5850 0064 0748     		ldr	r0, .L481+20
 5851 0066 FFF7FEFF 		bl	f_open
 5852              	.LVL487:
 963:mp3.c         ****          }
 5853              		.loc 1 963 16 view .LVU1942
 5854 006a 074B     		ldr	r3, .L481+24
 963:mp3.c         ****          }
 5855              		.loc 1 963 18 view .LVU1943
 5856 006c 1860     		str	r0, [r3]
 5857 006e DEE7     		b	.L478
 5858              	.L482:
 5859              		.align	2
 5860              	.L481:
 5861 0070 00000000 		.word	music_number
 5862 0074 00000000 		.word	ftemp
 5863 0078 00000000 		.word	head
 5864 007c 00000000 		.word	mp3_flag
 5865 0080 00000000 		.word	.LANCHOR16
 5866 0084 00000000 		.word	fsrc
 5867 0088 00000000 		.word	bw
 5868              		.cfi_endproc
 5869              	.LFE57:
 5871              		.section	.rodata.mp3_init.str1.1,"aMS",%progbits,1
 5872              	.LC15:
 5873 0000 53504920 		.ascii	"SPI Init OK  \000"
 5873      496E6974 
 5873      204F4B20 
 5873      2000
 5874              	.LC16:
 5875 000e 53442049 		.ascii	"SD Init OK  \000"
 5875      6E697420 
 5875      4F4B2020 
 5875      00
 5876              	.LC17:
 5877 001b 56533130 		.ascii	"VS1003 Init OK  \000"
 5877      30332049 
 5877      6E697420 
 5877      4F4B2020 
 5877      00
 5878              	.LC18:
 5879 002c 56533130 		.ascii	"VS1003 Reset1 OK  \000"
 5879      30332052 
 5879      65736574 
 5879      31204F4B 
 5879      202000
 5880              	.LC19:
 5881 003f 56533130 		.ascii	"VS1003 Reset2 OK  \000"
 5881      30332052 
 5881      65736574 
 5881      32204F4B 
 5881      202000
 5882              	.LC20:
 5883 0052 46415420 		.ascii	"FAT Mount OK     \000"
 5883      4D6F756E 
 5883      74204F4B 
 5883      20202020 
 5883      2000
 5884              	.LC21:
 5885 0064 4D503320 		.ascii	"MP3 List %d    \000"
 5885      4C697374 
 5885      20256420 
 5885      20202000 
 5886              	.LC22:
 5887 0074 4D503320 		.ascii	"MP3 Set \000"
 5887      53657420 
 5887      00
 5888              		.section	.text.mp3_init,"ax",%progbits
 5889              		.align	1
 5890              		.global	mp3_init
 5891              		.syntax unified
 5892              		.thumb
 5893              		.thumb_func
 5894              		.fpu softvfp
 5896              	mp3_init:
 5897              	.LFB55:
 893:mp3.c         ****       SPI_configuration();
 5898              		.loc 1 893 1 is_stmt 1 view -0
 5899              		.cfi_startproc
 5900              		@ args = 0, pretend = 0, frame = 0
 5901              		@ frame_needed = 0, uses_anonymous_args = 0
 894:mp3.c         ****       lcd_printf(2,0,"SPI Init OK  ");
 5902              		.loc 1 894 7 view .LVU1945
 893:mp3.c         ****       SPI_configuration();
 5903              		.loc 1 893 1 is_stmt 0 view .LVU1946
 5904 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 5905              		.cfi_def_cfa_offset 32
 5906              		.cfi_offset 4, -20
 5907              		.cfi_offset 5, -16
 5908              		.cfi_offset 6, -12
 5909              		.cfi_offset 7, -8
 5910              		.cfi_offset 14, -4
 894:mp3.c         ****       lcd_printf(2,0,"SPI Init OK  ");
 5911              		.loc 1 894 7 view .LVU1947
 5912 0002 FFF7FEFF 		bl	SPI_configuration
 5913              	.LVL488:
 895:mp3.c         ****       SD_init();
 5914              		.loc 1 895 7 is_stmt 1 view .LVU1948
 5915 0006 0021     		movs	r1, #0
 5916 0008 344A     		ldr	r2, .L484
 5917 000a 0220     		movs	r0, #2
 5918 000c FFF7FEFF 		bl	lcd_printf
 5919              	.LVL489:
 896:mp3.c         ****       lcd_printf(2,0,"SD Init OK  ");
 5920              		.loc 1 896 7 view .LVU1949
 5921 0010 FFF7FEFF 		bl	SD_init
 5922              	.LVL490:
 897:mp3.c         ****       vs1003_init();
 5923              		.loc 1 897 7 view .LVU1950
 5924 0014 0021     		movs	r1, #0
 5925 0016 0220     		movs	r0, #2
 5926 0018 314A     		ldr	r2, .L484+4
 5927 001a FFF7FEFF 		bl	lcd_printf
 5928              	.LVL491:
 898:mp3.c         ****       lcd_printf(2,0,"VS1003 Init OK  ");
 5929              		.loc 1 898 7 view .LVU1951
 5930 001e FFF7FEFF 		bl	vs1003_init
 5931              	.LVL492:
 899:mp3.c         ****       mp3_reset();
 5932              		.loc 1 899 7 view .LVU1952
 5933 0022 0021     		movs	r1, #0
 5934 0024 0220     		movs	r0, #2
 5935 0026 2F4A     		ldr	r2, .L484+8
 5936 0028 FFF7FEFF 		bl	lcd_printf
 5937              	.LVL493:
 900:mp3.c         ****       lcd_printf(2,0,"VS1003 Reset1 OK  ");
 5938              		.loc 1 900 7 view .LVU1953
 5939 002c FFF7FEFF 		bl	mp3_reset
 5940              	.LVL494:
 901:mp3.c         ****       vs1003_soft_reset();
 5941              		.loc 1 901 7 view .LVU1954
 5942 0030 0021     		movs	r1, #0
 5943 0032 0220     		movs	r0, #2
 5944 0034 2C4A     		ldr	r2, .L484+12
 5945 0036 FFF7FEFF 		bl	lcd_printf
 5946              	.LVL495:
 902:mp3.c         ****       load_patch();
 5947              		.loc 1 902 7 view .LVU1955
 5948 003a FFF7FEFF 		bl	vs1003_soft_reset
 5949              	.LVL496:
 903:mp3.c         ****       lcd_printf(2,0,"VS1003 Reset2 OK  ");
 5950              		.loc 1 903 7 view .LVU1956
 5951 003e FFF7FEFF 		bl	load_patch
 5952              	.LVL497:
 904:mp3.c         ****       f_mount(0,&fs);
 5953              		.loc 1 904 7 view .LVU1957
 5954 0042 2A4A     		ldr	r2, .L484+16
 5955 0044 0021     		movs	r1, #0
 5956 0046 0220     		movs	r0, #2
 5957 0048 FFF7FEFF 		bl	lcd_printf
 5958              	.LVL498:
 905:mp3.c         ****       lcd_printf(2,0,"FAT Mount OK     ");
 5959              		.loc 1 905 7 view .LVU1958
 5960 004c 2849     		ldr	r1, .L484+20
 5961 004e 0020     		movs	r0, #0
 5962 0050 FFF7FEFF 		bl	f_mount
 5963              	.LVL499:
 906:mp3.c         ****       ftemp = find_music();
 5964              		.loc 1 906 7 view .LVU1959
 5965 0054 0021     		movs	r1, #0
 5966 0056 274A     		ldr	r2, .L484+24
 5967 0058 0220     		movs	r0, #2
 5968 005a FFF7FEFF 		bl	lcd_printf
 5969              	.LVL500:
 907:mp3.c         ****       lcd_printf(2,0,"MP3 List %d    ",ftemp);
 5970              		.loc 1 907 7 view .LVU1960
 907:mp3.c         ****       lcd_printf(2,0,"MP3 List %d    ",ftemp);
 5971              		.loc 1 907 15 is_stmt 0 view .LVU1961
 5972 005e FFF7FEFF 		bl	find_music
 5973              	.LVL501:
 907:mp3.c         ****       lcd_printf(2,0,"MP3 List %d    ",ftemp);
 5974              		.loc 1 907 13 view .LVU1962
 5975 0062 254D     		ldr	r5, .L484+28
 907:mp3.c         ****       lcd_printf(2,0,"MP3 List %d    ",ftemp);
 5976              		.loc 1 907 15 view .LVU1963
 5977 0064 0346     		mov	r3, r0
 908:mp3.c         ****       music_number = ftemp;
 5978              		.loc 1 908 7 view .LVU1964
 5979 0066 0021     		movs	r1, #0
 5980 0068 244A     		ldr	r2, .L484+32
 907:mp3.c         ****       lcd_printf(2,0,"MP3 List %d    ",ftemp);
 5981              		.loc 1 907 13 view .LVU1965
 5982 006a 2870     		strb	r0, [r5]
 908:mp3.c         ****       music_number = ftemp;
 5983              		.loc 1 908 7 is_stmt 1 view .LVU1966
 5984 006c 0220     		movs	r0, #2
 5985 006e FFF7FEFF 		bl	lcd_printf
 5986              	.LVL502:
 909:mp3.c         ****       f_chdir("0:/Music");
 5987              		.loc 1 909 7 view .LVU1967
 909:mp3.c         ****       f_chdir("0:/Music");
 5988              		.loc 1 909 20 is_stmt 0 view .LVU1968
 5989 0072 234C     		ldr	r4, .L484+36
 5990 0074 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 911:mp3.c         ****       set_vs1003();
 5991              		.loc 1 911 29 view .LVU1969
 5992 0076 234E     		ldr	r6, .L484+40
 911:mp3.c         ****       set_vs1003();
 5993              		.loc 1 911 12 view .LVU1970
 5994 0078 234F     		ldr	r7, .L484+44
 910:mp3.c         ****       bw = f_open(&fsrc,head->filename, FA_OPEN_EXISTING | FA_READ);
 5995              		.loc 1 910 7 view .LVU1971
 5996 007a 2448     		ldr	r0, .L484+48
 909:mp3.c         ****       f_chdir("0:/Music");
 5997              		.loc 1 909 20 view .LVU1972
 5998 007c 2380     		strh	r3, [r4]	@ movhi
 910:mp3.c         ****       bw = f_open(&fsrc,head->filename, FA_OPEN_EXISTING | FA_READ);
 5999              		.loc 1 910 7 is_stmt 1 view .LVU1973
 6000 007e FFF7FEFF 		bl	f_chdir
 6001              	.LVL503:
 911:mp3.c         ****       set_vs1003();
 6002              		.loc 1 911 7 view .LVU1974
 911:mp3.c         ****       set_vs1003();
 6003              		.loc 1 911 12 is_stmt 0 view .LVU1975
 6004 0082 3168     		ldr	r1, [r6]
 6005 0084 0122     		movs	r2, #1
 6006 0086 3846     		mov	r0, r7
 6007 0088 FFF7FEFF 		bl	f_open
 6008              	.LVL504:
 911:mp3.c         ****       set_vs1003();
 6009              		.loc 1 911 10 view .LVU1976
 6010 008c 204B     		ldr	r3, .L484+52
 911:mp3.c         ****       set_vs1003();
 6011              		.loc 1 911 12 view .LVU1977
 6012 008e 1860     		str	r0, [r3]
 912:mp3.c         ****       lcd_printf(2,0,"MP3 Set ");
 6013              		.loc 1 912 7 is_stmt 1 view .LVU1978
 6014 0090 FFF7FEFF 		bl	set_vs1003
 6015              	.LVL505:
 913:mp3.c         ****       vs1003_sine_test();
 6016              		.loc 1 913 7 view .LVU1979
 6017 0094 0021     		movs	r1, #0
 6018 0096 0220     		movs	r0, #2
 6019 0098 1E4A     		ldr	r2, .L484+56
 6020 009a FFF7FEFF 		bl	lcd_printf
 6021              	.LVL506:
 914:mp3.c         ****       play_prev();
 6022              		.loc 1 914 7 view .LVU1980
 6023 009e FFF7FEFF 		bl	vs1003_sine_test
 6024              	.LVL507:
 915:mp3.c         ****       lcd_printf(2,0,"MP3 Init OK!!! %d  ",ftemp);
 6025              		.loc 1 915 7 view .LVU1981
 6026 00a2 FFF7FEFF 		bl	play_prev
 6027              	.LVL508:
 916:mp3.c         ****       lcd_printf(2,3,"MP3 Open %d Size %d ",music_number,fsrc.fsize);
 6028              		.loc 1 916 7 view .LVU1982
 6029 00a6 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 6030 00a8 0021     		movs	r1, #0
 6031 00aa 0220     		movs	r0, #2
 6032 00ac 1A4A     		ldr	r2, .L484+60
 6033 00ae FFF7FEFF 		bl	lcd_printf
 6034              	.LVL509:
 917:mp3.c         ****       lcd_printf(2,6,"%2d: %s    ",music_number,head->filename);
 6035              		.loc 1 917 7 view .LVU1983
 6036 00b2 FB68     		ldr	r3, [r7, #12]
 6037 00b4 0321     		movs	r1, #3
 6038 00b6 0093     		str	r3, [sp]
 6039 00b8 0220     		movs	r0, #2
 6040 00ba 2388     		ldrh	r3, [r4]
 6041 00bc 174A     		ldr	r2, .L484+64
 6042 00be FFF7FEFF 		bl	lcd_printf
 6043              	.LVL510:
 918:mp3.c         ****       //display_id3v1_tag();
 6044              		.loc 1 918 7 view .LVU1984
 6045 00c2 3368     		ldr	r3, [r6]
 6046 00c4 0621     		movs	r1, #6
 6047 00c6 0093     		str	r3, [sp]
 6048 00c8 0220     		movs	r0, #2
 6049 00ca 2388     		ldrh	r3, [r4]
 6050 00cc 144A     		ldr	r2, .L484+68
 6051 00ce FFF7FEFF 		bl	lcd_printf
 6052              	.LVL511:
 920:mp3.c         **** }
 6053              		.loc 1 920 7 view .LVU1985
 920:mp3.c         **** }
 6054              		.loc 1 920 16 is_stmt 0 view .LVU1986
 6055 00d2 0122     		movs	r2, #1
 6056 00d4 134B     		ldr	r3, .L484+72
 6057 00d6 1A70     		strb	r2, [r3]
 921:mp3.c         **** 
 6058              		.loc 1 921 1 view .LVU1987
 6059 00d8 03B0     		add	sp, sp, #12
 6060              		.cfi_def_cfa_offset 20
 6061              		@ sp needed
 6062 00da F0BD     		pop	{r4, r5, r6, r7, pc}
 6063              	.L485:
 6064              		.align	2
 6065              	.L484:
 6066 00dc 00000000 		.word	.LC15
 6067 00e0 0E000000 		.word	.LC16
 6068 00e4 1B000000 		.word	.LC17
 6069 00e8 2C000000 		.word	.LC18
 6070 00ec 3F000000 		.word	.LC19
 6071 00f0 00000000 		.word	fs
 6072 00f4 52000000 		.word	.LC20
 6073 00f8 00000000 		.word	ftemp
 6074 00fc 64000000 		.word	.LC21
 6075 0100 00000000 		.word	music_number
 6076 0104 00000000 		.word	head
 6077 0108 00000000 		.word	fsrc
 6078 010c 00000000 		.word	.LC2
 6079 0110 00000000 		.word	bw
 6080 0114 74000000 		.word	.LC22
 6081 0118 00000000 		.word	.LC12
 6082 011c 14000000 		.word	.LC13
 6083 0120 29000000 		.word	.LC14
 6084 0124 00000000 		.word	new_play
 6085              		.cfi_endproc
 6086              	.LFE55:
 6088              		.section	.text.mp3_display,"ax",%progbits
 6089              		.align	1
 6090              		.global	mp3_display
 6091              		.syntax unified
 6092              		.thumb
 6093              		.thumb_func
 6094              		.fpu softvfp
 6096              	mp3_display:
 6097              	.LFB58:
 969:mp3.c         **** 
 970:mp3.c         **** 
 971:mp3.c         **** void mp3_display (void)
 972:mp3.c         **** {
 6098              		.loc 1 972 1 is_stmt 1 view -0
 6099              		.cfi_startproc
 6100              		@ args = 0, pretend = 0, frame = 0
 6101              		@ frame_needed = 0, uses_anonymous_args = 0
 6102              		@ link register save eliminated.
 973:mp3.c         ****       mp3_prog_bar(datasize,fsrc.fsize);
 6103              		.loc 1 973 7 view .LVU1989
 6104 0000 024B     		ldr	r3, .L487
 6105 0002 D968     		ldr	r1, [r3, #12]
 6106 0004 024B     		ldr	r3, .L487+4
 6107 0006 1868     		ldr	r0, [r3]
 6108 0008 FFF7FEBF 		b	mp3_prog_bar
 6109              	.LVL512:
 6110              	.L488:
 6111              		.align	2
 6112              	.L487:
 6113 000c 00000000 		.word	fsrc
 6114 0010 00000000 		.word	.LANCHOR16
 6115              		.cfi_endproc
 6116              	.LFE58:
 6118              		.section	.text.mp3_seek,"ax",%progbits
 6119              		.align	1
 6120              		.global	mp3_seek
 6121              		.syntax unified
 6122              		.thumb
 6123              		.thumb_func
 6124              		.fpu softvfp
 6126              	mp3_seek:
 6127              	.LVL513:
 6128              	.LFB59:
 974:mp3.c         **** }
 975:mp3.c         **** 
 976:mp3.c         **** 
 977:mp3.c         **** void mp3_seek (unsigned char sw)
 978:mp3.c         **** {
 6129              		.loc 1 978 1 view -0
 6130              		.cfi_startproc
 6131              		@ args = 0, pretend = 0, frame = 0
 6132              		@ frame_needed = 0, uses_anonymous_args = 0
 6133              		@ link register save eliminated.
 979:mp3.c         ****        if (sw) {
 6134              		.loc 1 979 8 view .LVU1991
 6135 0000 0A4A     		ldr	r2, .L495
 6136 0002 1368     		ldr	r3, [r2]
 6137              		.loc 1 979 11 is_stmt 0 view .LVU1992
 6138 0004 58B1     		cbz	r0, .L490
 980:mp3.c         ****        	  seek_value += 8192;
 6139              		.loc 1 980 11 is_stmt 1 view .LVU1993
 981:mp3.c         ****        	  if (seek_value >= (int)fsrc.fsize) seek_value = (int)fsrc.fsize;
 6140              		.loc 1 981 38 is_stmt 0 view .LVU1994
 6141 0006 0A49     		ldr	r1, .L495+4
 980:mp3.c         ****        	  seek_value += 8192;
 6142              		.loc 1 980 22 view .LVU1995
 6143 0008 03F50053 		add	r3, r3, #8192
 6144              		.loc 1 981 11 is_stmt 1 view .LVU1996
 6145              		.loc 1 981 29 is_stmt 0 view .LVU1997
 6146 000c C968     		ldr	r1, [r1, #12]
 6147              		.loc 1 981 57 view .LVU1998
 6148 000e 9942     		cmp	r1, r3
 6149 0010 D4BF     		ite	le
 6150 0012 1160     		strle	r1, [r2]
 6151 0014 1360     		strgt	r3, [r2]
 6152              	.L492:
 982:mp3.c         ****        } else {
 983:mp3.c         ****        	  seek_value -= 8192;
 984:mp3.c         ****        	  if (seek_value < 0) seek_value = 0;
 985:mp3.c         ****        }
 986:mp3.c         ****        f_lseek(&fsrc,seek_value);
 6153              		.loc 1 986 8 is_stmt 1 view .LVU1999
 6154 0016 1168     		ldr	r1, [r2]
 6155 0018 0548     		ldr	r0, .L495+4
 6156              	.LVL514:
 6157              		.loc 1 986 8 is_stmt 0 view .LVU2000
 6158 001a FFF7FEBF 		b	f_lseek
 6159              	.LVL515:
 6160              	.L490:
 983:mp3.c         ****        	  if (seek_value < 0) seek_value = 0;
 6161              		.loc 1 983 11 is_stmt 1 view .LVU2001
 984:mp3.c         ****        }
 6162              		.loc 1 984 11 view .LVU2002
 983:mp3.c         ****        	  if (seek_value < 0) seek_value = 0;
 6163              		.loc 1 983 22 is_stmt 0 view .LVU2003
 6164 001e B3F50053 		subs	r3, r3, #8192
 6165 0022 48BF     		it	mi
 6166 0024 0346     		movmi	r3, r0
 6167 0026 1360     		str	r3, [r2]
 6168 0028 F5E7     		b	.L492
 6169              	.L496:
 6170 002a 00BF     		.align	2
 6171              	.L495:
 6172 002c 00000000 		.word	seek_value
 6173 0030 00000000 		.word	fsrc
 6174              		.cfi_endproc
 6175              	.LFE59:
 6177              		.section	.text.mp3_play,"ax",%progbits
 6178              		.align	1
 6179              		.global	mp3_play
 6180              		.syntax unified
 6181              		.thumb
 6182              		.thumb_func
 6183              		.fpu softvfp
 6185              	mp3_play:
 6186              	.LFB60:
 987:mp3.c         **** }
 988:mp3.c         **** 
 989:mp3.c         **** 
 990:mp3.c         **** void mp3_play (void)
 991:mp3.c         **** {
 6187              		.loc 1 991 1 is_stmt 1 view -0
 6188              		.cfi_startproc
 6189              		@ args = 0, pretend = 0, frame = 0
 6190              		@ frame_needed = 0, uses_anonymous_args = 0
 992:mp3.c         ****       mp3_flag = 0;
 6191              		.loc 1 992 7 view .LVU2005
 6192              		.loc 1 992 16 is_stmt 0 view .LVU2006
 6193 0000 0022     		movs	r2, #0
 991:mp3.c         ****       mp3_flag = 0;
 6194              		.loc 1 991 1 view .LVU2007
 6195 0002 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 6196              		.cfi_def_cfa_offset 32
 6197              		.cfi_offset 4, -24
 6198              		.cfi_offset 5, -20
 6199              		.cfi_offset 6, -16
 6200              		.cfi_offset 7, -12
 6201              		.cfi_offset 8, -8
 6202              		.cfi_offset 14, -4
 6203              		.loc 1 992 16 view .LVU2008
 6204 0006 674B     		ldr	r3, .L550
 993:mp3.c         ****       if ((datasize >= fsrc.fsize) || (fsrc.fsize == 0)) mp3_flag = 1;
 6205              		.loc 1 993 28 view .LVU2009
 6206 0008 674F     		ldr	r7, .L550+4
 6207              		.loc 1 993 21 view .LVU2010
 6208 000a 684C     		ldr	r4, .L550+8
 992:mp3.c         ****       mp3_flag = 0;
 6209              		.loc 1 992 16 view .LVU2011
 6210 000c 1A70     		strb	r2, [r3]
 6211              		.loc 1 993 7 is_stmt 1 view .LVU2012
 6212              		.loc 1 993 10 is_stmt 0 view .LVU2013
 6213 000e 2168     		ldr	r1, [r4]
 6214              		.loc 1 993 28 view .LVU2014
 6215 0010 FA68     		ldr	r2, [r7, #12]
 6216              		.loc 1 993 10 view .LVU2015
 6217 0012 8A42     		cmp	r2, r1
 6218 0014 01D9     		bls	.L498
 6219              		.loc 1 993 36 discriminator 2 view .LVU2016
 6220 0016 002A     		cmp	r2, #0
 6221 0018 47D1     		bne	.L499
 6222              	.L498:
 6223              		.loc 1 993 58 is_stmt 1 discriminator 3 view .LVU2017
 6224              		.loc 1 993 67 is_stmt 0 discriminator 3 view .LVU2018
 6225 001a 0122     		movs	r2, #1
 6226 001c 1A70     		strb	r2, [r3]
 994:mp3.c         ****       if ((mp3_flag == 1) && (play_mp3)) {
 6227              		.loc 1 994 7 is_stmt 1 discriminator 3 view .LVU2019
 6228              		.loc 1 994 27 is_stmt 0 discriminator 3 view .LVU2020
 6229 001e 644A     		ldr	r2, .L550+12
 6230 0020 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6231 0022 002A     		cmp	r2, #0
 6232 0024 41D0     		beq	.L499
 995:mp3.c         **** 	 mp3_flag = 0;
 6233              		.loc 1 995 3 is_stmt 1 view .LVU2021
 6234              		.loc 1 995 12 is_stmt 0 view .LVU2022
 6235 0026 0022     		movs	r2, #0
 996:mp3.c         **** 	 if ((music_number--) && (head != NULL)) {
 6236              		.loc 1 996 20 view .LVU2023
 6237 0028 624E     		ldr	r6, .L550+16
 995:mp3.c         **** 	 mp3_flag = 0;
 6238              		.loc 1 995 12 view .LVU2024
 6239 002a 1A70     		strb	r2, [r3]
 6240              		.loc 1 996 3 is_stmt 1 view .LVU2025
 6241              		.loc 1 996 20 is_stmt 0 view .LVU2026
 6242 002c 3288     		ldrh	r2, [r6]
 6243 002e 531E     		subs	r3, r2, #1
 6244 0030 9BB2     		uxth	r3, r3
 6245 0032 3380     		strh	r3, [r6]	@ movhi
 6246              		.loc 1 996 6 view .LVU2027
 6247 0034 002A     		cmp	r2, #0
 6248 0036 38D0     		beq	.L499
 6249              		.loc 1 996 33 discriminator 1 view .LVU2028
 6250 0038 5F4D     		ldr	r5, .L550+20
 6251 003a 2A68     		ldr	r2, [r5]
 6252              		.loc 1 996 24 discriminator 1 view .LVU2029
 6253 003c 002A     		cmp	r2, #0
 6254 003e 34D0     		beq	.L499
 997:mp3.c         **** 	    if (music_number == 0) {
 6255              		.loc 1 997 6 is_stmt 1 view .LVU2030
 6256              		.loc 1 997 9 is_stmt 0 view .LVU2031
 6257 0040 002B     		cmp	r3, #0
 6258 0042 40F0AA80 		bne	.L501
 6259              	.L502:
 998:mp3.c         **** 	       while (head->back != NULL) head = head->back;
 6260              		.loc 1 998 15 is_stmt 1 discriminator 1 view .LVU2032
 6261 0046 1146     		mov	r1, r2
 6262              		.loc 1 998 20 is_stmt 0 discriminator 1 view .LVU2033
 6263 0048 D2F89C20 		ldr	r2, [r2, #156]
 6264              		.loc 1 998 15 discriminator 1 view .LVU2034
 6265 004c 002A     		cmp	r2, #0
 6266 004e 40F0A280 		bne	.L515
 6267 0052 03B1     		cbz	r3, .L513
 6268 0054 2960     		str	r1, [r5]
 6269              	.L513:
 999:mp3.c         **** 	    }
1000:mp3.c         **** 	    if (music_number != 0) head = head->next;else music_number = ftemp;
 6270              		.loc 1 1000 6 is_stmt 1 view .LVU2035
 6271              		.loc 1 1000 52 view .LVU2036
 6272              		.loc 1 1000 65 is_stmt 0 view .LVU2037
 6273 0056 594B     		ldr	r3, .L550+24
 6274 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6275 005a 3380     		strh	r3, [r6]	@ movhi
 6276              	.L514:
1001:mp3.c         **** 	    bw = f_open(&fsrc,head->filename, FA_OPEN_EXISTING | FA_READ);
 6277              		.loc 1 1001 6 is_stmt 1 view .LVU2038
 6278              		.loc 1 1001 11 is_stmt 0 view .LVU2039
 6279 005c 0122     		movs	r2, #1
 6280 005e 2968     		ldr	r1, [r5]
 6281 0060 5148     		ldr	r0, .L550+4
 6282 0062 FFF7FEFF 		bl	f_open
 6283              	.LVL516:
1002:mp3.c         **** 	    datasize = 0;
 6284              		.loc 1 1002 15 view .LVU2040
 6285 0066 0021     		movs	r1, #0
1003:mp3.c         **** 	    seek_value = 0;
1004:mp3.c         **** 	    f_kbps = 0xffff;
 6286              		.loc 1 1004 13 view .LVU2041
 6287 0068 4FF6FF72 		movw	r2, #65535
1001:mp3.c         **** 	    datasize = 0;
 6288              		.loc 1 1001 9 view .LVU2042
 6289 006c 544B     		ldr	r3, .L550+28
1002:mp3.c         **** 	    datasize = 0;
 6290              		.loc 1 1002 15 view .LVU2043
 6291 006e 2160     		str	r1, [r4]
1001:mp3.c         **** 	    datasize = 0;
 6292              		.loc 1 1001 11 view .LVU2044
 6293 0070 1860     		str	r0, [r3]
1002:mp3.c         **** 	    datasize = 0;
 6294              		.loc 1 1002 6 is_stmt 1 view .LVU2045
1003:mp3.c         **** 	    seek_value = 0;
 6295              		.loc 1 1003 6 view .LVU2046
1003:mp3.c         **** 	    seek_value = 0;
 6296              		.loc 1 1003 17 is_stmt 0 view .LVU2047
 6297 0072 544B     		ldr	r3, .L550+32
1005:mp3.c         **** 	    new_play = 1;
1006:mp3.c         ****             memset((char *)buffer,0,1024);
 6298              		.loc 1 1006 13 view .LVU2048
 6299 0074 5448     		ldr	r0, .L550+36
1003:mp3.c         **** 	    f_kbps = 0xffff;
 6300              		.loc 1 1003 17 view .LVU2049
 6301 0076 1960     		str	r1, [r3]
1004:mp3.c         **** 	    new_play = 1;
 6302              		.loc 1 1004 6 is_stmt 1 view .LVU2050
1004:mp3.c         **** 	    new_play = 1;
 6303              		.loc 1 1004 13 is_stmt 0 view .LVU2051
 6304 0078 544B     		ldr	r3, .L550+40
 6305 007a 1A80     		strh	r2, [r3]	@ movhi
1005:mp3.c         **** 	    new_play = 1;
 6306              		.loc 1 1005 6 is_stmt 1 view .LVU2052
1005:mp3.c         **** 	    new_play = 1;
 6307              		.loc 1 1005 15 is_stmt 0 view .LVU2053
 6308 007c 0122     		movs	r2, #1
 6309 007e 544B     		ldr	r3, .L550+44
 6310 0080 1A70     		strb	r2, [r3]
 6311              		.loc 1 1006 13 is_stmt 1 view .LVU2054
 6312 0082 4FF48062 		mov	r2, #1024
 6313 0086 FFF7FEFF 		bl	memset
 6314              	.LVL517:
1007:mp3.c         **** 	    lcd_printf(2,3,"MP3 Open %d Size %d ",music_number,fsrc.fsize);
 6315              		.loc 1 1007 6 view .LVU2055
 6316 008a FB68     		ldr	r3, [r7, #12]
 6317 008c 0321     		movs	r1, #3
 6318 008e 0093     		str	r3, [sp]
 6319 0090 0220     		movs	r0, #2
 6320 0092 3388     		ldrh	r3, [r6]
 6321 0094 4F4A     		ldr	r2, .L550+48
 6322 0096 FFF7FEFF 		bl	lcd_printf
 6323              	.LVL518:
1008:mp3.c         **** 	    lcd_printf(2,6,"%2d: %s    ",music_number,head->filename);
 6324              		.loc 1 1008 6 view .LVU2056
 6325 009a 2B68     		ldr	r3, [r5]
 6326 009c 0621     		movs	r1, #6
 6327 009e 0093     		str	r3, [sp]
 6328 00a0 0220     		movs	r0, #2
 6329 00a2 3388     		ldrh	r3, [r6]
 6330 00a4 4C4A     		ldr	r2, .L550+52
 6331 00a6 FFF7FEFF 		bl	lcd_printf
 6332              	.LVL519:
 6333              	.L499:
1009:mp3.c         **** 	    //display_id3v1_tag();
1010:mp3.c         **** 	 }
1011:mp3.c         ****       }
1012:mp3.c         ****       if ((datasize < fsrc.fsize) && (fsrc.fsize) && (buffer_read == 0) && (play_mp3)) {
 6334              		.loc 1 1012 7 view .LVU2057
 6335              		.loc 1 1012 27 is_stmt 0 view .LVU2058
 6336 00aa FB68     		ldr	r3, [r7, #12]
 6337              		.loc 1 1012 21 view .LVU2059
 6338 00ac 2268     		ldr	r2, [r4]
 6339 00ae 4B4D     		ldr	r5, .L550+56
 6340              		.loc 1 1012 10 view .LVU2060
 6341 00b0 9342     		cmp	r3, r2
 6342 00b2 52D9     		bls	.L504
 6343              		.loc 1 1012 35 discriminator 1 view .LVU2061
 6344 00b4 002B     		cmp	r3, #0
 6345 00b6 50D0     		beq	.L504
 6346              		.loc 1 1012 67 discriminator 2 view .LVU2062
 6347 00b8 494E     		ldr	r6, .L550+60
 6348              		.loc 1 1012 51 discriminator 2 view .LVU2063
 6349 00ba 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 6350 00bc 002B     		cmp	r3, #0
 6351 00be 4CD1     		bne	.L504
 6352              		.loc 1 1012 73 discriminator 3 view .LVU2064
 6353 00c0 3B4B     		ldr	r3, .L550+12
 6354 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6355 00c4 002B     		cmp	r3, #0
 6356 00c6 48D0     		beq	.L504
1013:mp3.c         ****          if ((f_kbps == 0xffff) && (datasize > 1024)) {
 6357              		.loc 1 1013 10 is_stmt 1 view .LVU2065
 6358              		.loc 1 1013 13 is_stmt 0 view .LVU2066
 6359 00c8 4FF6FF71 		movw	r1, #65535
 6360              		.loc 1 1013 22 view .LVU2067
 6361 00cc 3F4F     		ldr	r7, .L550+40
 6362              		.loc 1 1013 13 view .LVU2068
 6363 00ce 3888     		ldrh	r0, [r7]
 6364 00d0 8842     		cmp	r0, r1
 6365 00d2 04D1     		bne	.L505
 6366              		.loc 1 1013 33 discriminator 1 view .LVU2069
 6367 00d4 B2F5806F 		cmp	r2, #1024
 6368 00d8 01D9     		bls	.L505
1014:mp3.c         ****             vs1003_get_mp3info();
 6369              		.loc 1 1014 13 is_stmt 1 view .LVU2070
 6370 00da FFF7FEFF 		bl	vs1003_get_mp3info
 6371              	.LVL520:
 6372              	.L505:
1015:mp3.c         ****          }
1016:mp3.c         ****          if (second >= 1) {
 6373              		.loc 1 1016 10 view .LVU2071
 6374              		.loc 1 1016 21 is_stmt 0 view .LVU2072
 6375 00de 414A     		ldr	r2, .L550+64
 6376 00e0 1388     		ldrh	r3, [r2]
 6377 00e2 9BB2     		uxth	r3, r3
 6378              		.loc 1 1016 13 view .LVU2073
 6379 00e4 43B1     		cbz	r3, .L507
1017:mp3.c         ****       	    second = 0;
 6380              		.loc 1 1017 12 is_stmt 1 view .LVU2074
 6381              		.loc 1 1017 19 is_stmt 0 view .LVU2075
 6382 00e6 0023     		movs	r3, #0
 6383 00e8 1380     		strh	r3, [r2]	@ movhi
1018:mp3.c         ****       	    if (f_kbps != 0xffff) mp3_display();
 6384              		.loc 1 1018 12 is_stmt 1 view .LVU2076
 6385              		.loc 1 1018 15 is_stmt 0 view .LVU2077
 6386 00ea 4FF6FF73 		movw	r3, #65535
 6387 00ee 3A88     		ldrh	r2, [r7]
 6388 00f0 9A42     		cmp	r2, r3
 6389 00f2 01D0     		beq	.L507
 6390              		.loc 1 1018 34 is_stmt 1 discriminator 1 view .LVU2078
 6391 00f4 FFF7FEFF 		bl	mp3_display
 6392              	.LVL521:
 6393              	.L507:
1019:mp3.c         ****          }
1020:mp3.c         ****          if (volume_flag) {
 6394              		.loc 1 1020 10 view .LVU2079
 6395              		.loc 1 1020 14 is_stmt 0 view .LVU2080
 6396 00f8 3B4B     		ldr	r3, .L550+68
 6397 00fa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6398              		.loc 1 1020 13 view .LVU2081
 6399 00fc 32B1     		cbz	r2, .L509
1021:mp3.c         ****             volume_flag = 0;
 6400              		.loc 1 1021 13 is_stmt 1 view .LVU2082
 6401              		.loc 1 1021 25 is_stmt 0 view .LVU2083
 6402 00fe 0022     		movs	r2, #0
 6403 0100 1A70     		strb	r2, [r3]
1022:mp3.c         ****             vs1003_set_volume(volume);
 6404              		.loc 1 1022 13 is_stmt 1 view .LVU2084
 6405 0102 3A4B     		ldr	r3, .L550+72
 6406 0104 1888     		ldrh	r0, [r3]
 6407 0106 80B2     		uxth	r0, r0
 6408 0108 FFF7FEFF 		bl	vs1003_set_volume
 6409              	.LVL522:
 6410              	.L509:
1023:mp3.c         ****          }
1024:mp3.c         ****          datasize += 512;
 6411              		.loc 1 1024 10 view .LVU2085
1025:mp3.c         ****          seek_value += datasize;
 6412              		.loc 1 1025 21 is_stmt 0 view .LVU2086
 6413 010c 2D4F     		ldr	r7, .L550+32
1024:mp3.c         ****          seek_value += datasize;
 6414              		.loc 1 1024 19 view .LVU2087
 6415 010e 2368     		ldr	r3, [r4]
 6416              		.loc 1 1025 21 view .LVU2088
 6417 0110 3A68     		ldr	r2, [r7]
1024:mp3.c         ****          seek_value += datasize;
 6418              		.loc 1 1024 19 view .LVU2089
 6419 0112 03F50073 		add	r3, r3, #512
 6420 0116 2360     		str	r3, [r4]
 6421              		.loc 1 1025 10 is_stmt 1 view .LVU2090
 6422              		.loc 1 1025 21 is_stmt 0 view .LVU2091
 6423 0118 1344     		add	r3, r3, r2
1026:mp3.c         ****          bw = f_read(&fsrc,buffer,512,&br);
 6424              		.loc 1 1026 15 view .LVU2092
 6425 011a 2B49     		ldr	r1, .L550+36
 6426 011c 4FF40072 		mov	r2, #512
1025:mp3.c         ****          seek_value += datasize;
 6427              		.loc 1 1025 21 view .LVU2093
 6428 0120 3B60     		str	r3, [r7]
 6429              		.loc 1 1026 10 is_stmt 1 view .LVU2094
 6430              		.loc 1 1026 15 is_stmt 0 view .LVU2095
 6431 0122 2148     		ldr	r0, .L550+4
 6432 0124 324B     		ldr	r3, .L550+76
 6433 0126 FFF7FEFF 		bl	f_read
 6434              	.LVL523:
1027:mp3.c         ****          datasize += 512;
 6435              		.loc 1 1027 19 view .LVU2096
 6436 012a 2368     		ldr	r3, [r4]
1028:mp3.c         ****          seek_value += datasize;
 6437              		.loc 1 1028 21 view .LVU2097
 6438 012c 3A68     		ldr	r2, [r7]
1026:mp3.c         ****          bw = f_read(&fsrc,buffer,512,&br);
 6439              		.loc 1 1026 13 view .LVU2098
 6440 012e DFF89080 		ldr	r8, .L550+28
1027:mp3.c         ****          datasize += 512;
 6441              		.loc 1 1027 19 view .LVU2099
 6442 0132 03F50073 		add	r3, r3, #512
 6443 0136 2360     		str	r3, [r4]
 6444              		.loc 1 1028 21 view .LVU2100
 6445 0138 1344     		add	r3, r3, r2
1026:mp3.c         ****          bw = f_read(&fsrc,buffer,512,&br);
 6446              		.loc 1 1026 15 view .LVU2101
 6447 013a C8F80000 		str	r0, [r8]
1027:mp3.c         ****          datasize += 512;
 6448              		.loc 1 1027 10 is_stmt 1 view .LVU2102
 6449              		.loc 1 1028 10 view .LVU2103
 6450              		.loc 1 1028 21 is_stmt 0 view .LVU2104
 6451 013e 3B60     		str	r3, [r7]
1029:mp3.c         ****          bw = f_read(&fsrc,buffer+512,512,&br);
 6452              		.loc 1 1029 10 is_stmt 1 view .LVU2105
 6453              		.loc 1 1029 15 is_stmt 0 view .LVU2106
 6454 0140 4FF40072 		mov	r2, #512
 6455 0144 2A4B     		ldr	r3, .L550+76
 6456 0146 2B49     		ldr	r1, .L550+80
 6457 0148 1748     		ldr	r0, .L550+4
 6458 014a FFF7FEFF 		bl	f_read
 6459              	.LVL524:
1030:mp3.c         ****          buffer_read = 1;
 6460              		.loc 1 1030 22 view .LVU2107
 6461 014e 0123     		movs	r3, #1
 6462 0150 3370     		strb	r3, [r6]
1031:mp3.c         ****          fdx = 0;
 6463              		.loc 1 1031 14 view .LVU2108
 6464 0152 0023     		movs	r3, #0
1029:mp3.c         ****          bw = f_read(&fsrc,buffer+512,512,&br);
 6465              		.loc 1 1029 15 view .LVU2109
 6466 0154 C8F80000 		str	r0, [r8]
1030:mp3.c         ****          buffer_read = 1;
 6467              		.loc 1 1030 10 is_stmt 1 view .LVU2110
 6468              		.loc 1 1031 10 view .LVU2111
 6469              		.loc 1 1031 14 is_stmt 0 view .LVU2112
 6470 0158 2B70     		strb	r3, [r5]
 6471              	.L504:
1032:mp3.c         ****       }
1033:mp3.c         ****       if ((fdx < 32) && (buffer_read) && (play_mp3)) {
 6472              		.loc 1 1033 7 is_stmt 1 view .LVU2113
 6473              		.loc 1 1033 16 is_stmt 0 view .LVU2114
 6474 015a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 6475              		.loc 1 1033 10 view .LVU2115
 6476 015c 1F2B     		cmp	r3, #31
 6477 015e 17D8     		bhi	.L497
 6478              		.loc 1 1033 22 discriminator 1 view .LVU2116
 6479 0160 1F4C     		ldr	r4, .L550+60
 6480 0162 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 6481 0164 A2B1     		cbz	r2, .L497
 6482              		.loc 1 1033 39 discriminator 2 view .LVU2117
 6483 0166 124A     		ldr	r2, .L550+12
 6484 0168 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6485 016a 8AB1     		cbz	r2, .L497
1034:mp3.c         ****       	 if (GPIOC->IDR & MP3_DREQ) {
 6486              		.loc 1 1034 9 is_stmt 1 view .LVU2118
 6487              		.loc 1 1034 18 is_stmt 0 view .LVU2119
 6488 016c 224A     		ldr	r2, .L550+84
 6489 016e 9268     		ldr	r2, [r2, #8]
 6490              		.loc 1 1034 12 view .LVU2120
 6491 0170 1207     		lsls	r2, r2, #28
 6492 0172 0DD5     		bpl	.L497
1035:mp3.c         **** 	    vs1003_data_write(buffer + fdx * 32);
 6493              		.loc 1 1035 6 is_stmt 1 view .LVU2121
 6494 0174 1448     		ldr	r0, .L550+36
 6495 0176 00EB4310 		add	r0, r0, r3, lsl #5
 6496 017a FFF7FEFF 		bl	vs1003_data_write
 6497              	.LVL525:
1036:mp3.c         **** 	    fdx++;
 6498              		.loc 1 1036 6 view .LVU2122
 6499              		.loc 1 1036 9 is_stmt 0 view .LVU2123
 6500 017e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 6501 0180 0133     		adds	r3, r3, #1
 6502 0182 DBB2     		uxtb	r3, r3
1037:mp3.c         **** 	    if (fdx >= 32) {
 6503              		.loc 1 1037 9 view .LVU2124
 6504 0184 1F2B     		cmp	r3, #31
1036:mp3.c         **** 	    fdx++;
 6505              		.loc 1 1036 9 view .LVU2125
 6506 0186 2B70     		strb	r3, [r5]
 6507              		.loc 1 1037 6 is_stmt 1 view .LVU2126
 6508              		.loc 1 1037 9 is_stmt 0 view .LVU2127
 6509 0188 02D9     		bls	.L497
1038:mp3.c         **** 	       buffer_read = 0;
 6510              		.loc 1 1038 9 is_stmt 1 view .LVU2128
 6511              		.loc 1 1038 21 is_stmt 0 view .LVU2129
 6512 018a 0023     		movs	r3, #0
 6513 018c 2370     		strb	r3, [r4]
1039:mp3.c         **** 	       fdx = 0;
 6514              		.loc 1 1039 9 is_stmt 1 view .LVU2130
 6515              		.loc 1 1039 13 is_stmt 0 view .LVU2131
 6516 018e 2B70     		strb	r3, [r5]
 6517              	.L497:
1040:mp3.c         **** 	    }
1041:mp3.c         ****          }
1042:mp3.c         ****       }
1043:mp3.c         **** }...
 6518              		.loc 1 1043 1 view .LVU2132
 6519 0190 02B0     		add	sp, sp, #8
 6520              		.cfi_remember_state
 6521              		.cfi_def_cfa_offset 24
 6522              		@ sp needed
 6523 0192 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6524              	.L515:
 6525              		.cfi_restore_state
 6526 0196 0123     		movs	r3, #1
 6527 0198 55E7     		b	.L502
 6528              	.L501:
1000:mp3.c         **** 	    if (music_number != 0) head = head->next;else music_number = ftemp;
 6529              		.loc 1 1000 6 is_stmt 1 view .LVU2133
1000:mp3.c         **** 	    if (music_number != 0) head = head->next;else music_number = ftemp;
 6530              		.loc 1 1000 29 view .LVU2134
1000:mp3.c         **** 	    if (music_number != 0) head = head->next;else music_number = ftemp;
 6531              		.loc 1 1000 34 is_stmt 0 view .LVU2135
 6532 019a D2F89830 		ldr	r3, [r2, #152]
 6533 019e 2B60     		str	r3, [r5]
 6534 01a0 5CE7     		b	.L514
 6535              	.L551:
 6536 01a2 00BF     		.align	2
 6537              	.L550:
 6538 01a4 00000000 		.word	mp3_flag
 6539 01a8 00000000 		.word	fsrc
 6540 01ac 00000000 		.word	.LANCHOR16
 6541 01b0 00000000 		.word	play_mp3
 6542 01b4 00000000 		.word	music_number
 6543 01b8 00000000 		.word	head
 6544 01bc 00000000 		.word	ftemp
 6545 01c0 00000000 		.word	bw
 6546 01c4 00000000 		.word	seek_value
 6547 01c8 00000000 		.word	buffer
 6548 01cc 00000000 		.word	.LANCHOR0
 6549 01d0 00000000 		.word	new_play
 6550 01d4 14000000 		.word	.LC13
 6551 01d8 29000000 		.word	.LC14
 6552 01dc 00000000 		.word	fdx
 6553 01e0 00000000 		.word	buffer_read
 6554 01e4 00000000 		.word	second
 6555 01e8 00000000 		.word	volume_flag
 6556 01ec 00000000 		.word	volume
 6557 01f0 00000000 		.word	br
 6558 01f4 00020000 		.word	buffer+512
 6559 01f8 00100140 		.word	1073811456
 6560              		.cfi_endproc
 6561              	.LFE60:
 6563              		.comm	head,4,4
 6564              		.comm	dirs,28,4
 6565              		.comm	fno,24,4
 6566              		.comm	br,4,4
 6567              		.comm	bw,4,4
 6568              		.comm	res,1,1
 6569              		.comm	fii,548,4
 6570              		.comm	fap,548,4
 6571              		.comm	fsrc,548,4
 6572              		.comm	fs,564,4
 6573              		.comm	seek_value,4,4
 6574              		.comm	new_play,1,1
 6575              		.comm	mp3_flag,1,1
 6576              		.comm	buffer_read,1,1
 6577              		.comm	fdx,1,1
 6578              		.comm	ftemp,1,1
 6579              		.global	datasize
 6580              		.comm	buffer,1024,1
 6581              		.comm	lrc,80,1
 6582              		.comm	lrc_data,512,1
 6583              		.global	spedate
 6584              		.global	bt30ms
 6585              		.comm	lyric,10,2
 6586              		.global	lrc_tag_type
 6587              		.comm	music_number,2,2
 6588              		.global	lrc_tag_cnt
 6589              		.comm	tag_table,512,1
 6590              		.comm	lrc_buffer,7000,1
 6591              		.comm	mp3,105,1
 6592              		.global	music_extend
 6593              		.section	.rodata.str1.1,"aMS",%progbits,1
 6594              	.LC23:
 6595 0000 4D503300 		.ascii	"MP3\000"
 6596              	.LC24:
 6597 0004 574D4100 		.ascii	"WMA\000"
 6598              	.LC25:
 6599 0008 57415600 		.ascii	"WAV\000"
 6600              	.LC26:
 6601 000c 4D494400 		.ascii	"MID\000"
 6602              		.global	timetemp
 6603              		.global	propos
 6604              		.global	f_kbps
 6605              		.comm	ID3V1_Buf,128,1
 6606              		.section	.bss.bt30ms,"aw",%nobits
 6607              		.set	.LANCHOR8,. + 0
 6610              	bt30ms:
 6611 0000 00       		.space	1
 6612              		.section	.bss.bytepos.8799,"aw",%nobits
 6613              		.align	1
 6614              		.set	.LANCHOR12,. + 0
 6617              	bytepos.8799:
 6618 0000 0000     		.space	2
 6619              		.section	.bss.count.8718,"aw",%nobits
 6620              		.set	.LANCHOR5,. + 0
 6623              	count.8718:
 6624 0000 00       		.space	1
 6625              		.section	.bss.datasize,"aw",%nobits
 6626              		.align	2
 6627              		.set	.LANCHOR16,. + 0
 6630              	datasize:
 6631 0000 00000000 		.space	4
 6632              		.section	.bss.flag.8716,"aw",%nobits
 6633              		.set	.LANCHOR4,. + 0
 6636              	flag.8716:
 6637 0000 00       		.space	1
 6638              		.section	.bss.j.8717,"aw",%nobits
 6639              		.set	.LANCHOR6,. + 0
 6642              	j.8717:
 6643 0000 00       		.space	1
 6644              		.section	.bss.lrc_tag_cnt,"aw",%nobits
 6645              		.align	1
 6646              		.set	.LANCHOR7,. + 0
 6649              	lrc_tag_cnt:
 6650 0000 0000     		.space	2
 6651              		.section	.bss.lrc_tag_type,"aw",%nobits
 6652              		.set	.LANCHOR13,. + 0
 6655              	lrc_tag_type:
 6656 0000 00       		.space	1
 6657              		.section	.bss.lrcbufpos.8842,"aw",%nobits
 6658              		.align	1
 6659              		.set	.LANCHOR15,. + 0
 6662              	lrcbufpos.8842:
 6663 0000 0000     		.space	2
 6664              		.section	.bss.ms.8768,"aw",%nobits
 6665              		.set	.LANCHOR9,. + 0
 6668              	ms.8768:
 6669 0000 00       		.space	1
 6670              		.section	.bss.playtime.8620,"aw",%nobits
 6671              		.align	1
 6672              		.set	.LANCHOR1,. + 0
 6675              	playtime.8620:
 6676 0000 0000     		.space	2
 6677              		.section	.bss.propos,"aw",%nobits
 6678              		.align	2
 6679              		.set	.LANCHOR2,. + 0
 6682              	propos:
 6683 0000 00000000 		.space	4
 6684              		.section	.bss.spedate,"aw",%nobits
 6687              	spedate:
 6688 0000 00000000 		.space	14
 6688      00000000 
 6688      00000000 
 6688      0000
 6689              		.section	.bss.tagpos.8841,"aw",%nobits
 6690              		.align	1
 6691              		.set	.LANCHOR14,. + 0
 6694              	tagpos.8841:
 6695 0000 0000     		.space	2
 6696              		.section	.bss.time.8767,"aw",%nobits
 6697              		.align	2
 6698              		.set	.LANCHOR10,. + 0
 6701              	time.8767:
 6702 0000 00000000 		.space	4
 6703              		.section	.bss.timetemp,"aw",%nobits
 6704              		.align	1
 6705              		.set	.LANCHOR11,. + 0
 6708              	timetemp:
 6709 0000 0000     		.space	2
 6710              		.section	.data.f_kbps,"aw"
 6711              		.align	1
 6712              		.set	.LANCHOR0,. + 0
 6715              	f_kbps:
 6716 0000 FFFF     		.short	-1
 6717              		.section	.data.music_extend,"aw"
 6718              		.align	2
 6719              		.set	.LANCHOR3,. + 0
 6722              	music_extend:
 6723 0000 00000000 		.word	.LC23
 6724 0004 04000000 		.word	.LC24
 6725 0008 08000000 		.word	.LC25
 6726 000c 0C000000 		.word	.LC26
 6727              		.text
 6728              	.Letext0:
 6729              		.file 2 "c:\\project\\stm32fx_lib\\stm32f1x_iolib\\include\\core.h"
 6730              		.file 3 "/project/stm32fx_lib/stm32f1x_iolib/include/cmsis/stm32f1xx.h"
 6731              		.file 4 "userdefs.h"
 6732              		.file 5 "mp3.h"
 6733              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 6734              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 6735              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eabi
 6736              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 6737              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 6738              		.file 11 "ff.h"
 6739              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 6740              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 6741              		.file 14 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 mp3.c
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:16     .text.hex2dec:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:24     .text.hex2dec:00000000 hex2dec
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:82     .text.dec2hex:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:89     .text.dec2hex:00000000 dec2hex
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:152    .text.mp3_prog_bar:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:159    .text.mp3_prog_bar:00000000 mp3_prog_bar
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:585    .text.mp3_prog_bar:000001f0 $d
                            *COM*:00000001 new_play
                            *COM*:00000069 mp3
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:601    .text.resume_music:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:608    .text.resume_music:00000000 resume_music
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:1204   .text.resume_music:000002a4 $d
                            *COM*:00000050 lrc
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:1215   .text.find_music:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:1222   .text.find_music:00000000 find_music
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:1414   .text.find_music:000000c8 $d
                            *COM*:0000001c dirs
                            *COM*:00000001 res
                            *COM*:00000018 fno
                            *COM*:00000004 head
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:1427   .text.filtrate_music:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:1434   .text.filtrate_music:00000000 filtrate_music
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:1846   .text.filtrate_music:000001a4 $d
                            *COM*:00000002 music_number
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:1856   .text.mp3_name:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:1863   .text.mp3_name:00000000 mp3_name
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:2230   .text.mp3_name:00000184 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:2243   .text.read_byte_lrcbuf:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:2250   .text.read_byte_lrcbuf:00000000 read_byte_lrcbuf
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:2275   .text.read_byte_lrcbuf:00000010 $d
                            *COM*:00001b58 lrc_buffer
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:2280   .text.write_byte_lrcbuf:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:2287   .text.write_byte_lrcbuf:00000000 write_byte_lrcbuf
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:2315   .text.write_byte_lrcbuf:00000014 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:2320   .text.lrc_read_init:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:2327   .text.lrc_read_init:00000000 lrc_read_init
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:2357   .text.lrc_read_init:00000014 $d
                            *COM*:0000000a lyric
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:2362   .text.read_lrc_file_data:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:2369   .text.read_lrc_file_data:00000000 read_lrc_file_data
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:2807   .text.read_lrc_file_data:0000015c $d
                            *COM*:00000200 tag_table
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:2818   .text.lyric_display_ctrl:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:2825   .text.lyric_display_ctrl:00000000 lyric_display_ctrl
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:2950   .text.lyric_display_ctrl:0000006c $d
                            *COM*:00000224 fsrc
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:2962   .text.lrc_synchron:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:2969   .text.lrc_synchron:00000000 lrc_synchron
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:3340   .text.lrc_synchron:00000100 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:3349   .text.get_byte:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:3356   .text.get_byte:00000000 get_byte
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:3478   .text.get_byte:00000068 $d
                            *COM*:00000224 fap
                            *COM*:00000004 br
                            *COM*:00000200 lrc_data
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:3486   .text.get_num:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:3493   .text.get_num:00000000 get_num
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:3585   .text.get_tag:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:3592   .text.get_tag:00000000 get_tag
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:3817   .text.get_tag:000000c4 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:3829   .text.find_lrc:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:3836   .text.find_lrc:00000000 find_lrc
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:4009   .text.find_lrc:000000a4 $d
                            *COM*:00000004 bw
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:4025   .text.init_tag:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:4032   .text.init_tag:00000000 init_tag
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:4243   .text.init_tag:000000b8 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:4250   .text.copy_lyric:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:4257   .text.copy_lyric:00000000 copy_lyric
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:4902   .text.copy_lyric:000001bc $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:4912   .text.copy_lrc_to_ram:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:4919   .text.copy_lrc_to_ram:00000000 copy_lrc_to_ram
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:5087   .text.copy_lrc_to_ram:0000007c $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:5102   .text.display_id3v1_tag:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:5109   .text.display_id3v1_tag:00000000 display_id3v1_tag
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:5345   .text.display_id3v1_tag:00000144 $d
                            *COM*:00000080 ID3V1_Buf
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:5363   .text.mp3_displaylist:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:5370   .text.mp3_displaylist:00000000 mp3_displaylist
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:5469   .text.mp3_displaylist:00000050 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:5485   .text.mp3_displayinit:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:5492   .text.mp3_displayinit:00000000 mp3_displayinit
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:5549   .text.mp3_displayinit:00000044 $d
                            *COM*:00000001 ftemp
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:5561   .text.play_next:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:5568   .text.play_next:00000000 play_next
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:5715   .text.play_next:000000a0 $d
                            *COM*:00000400 buffer
                            *COM*:00000004 seek_value
                            *COM*:00000001 buffer_read
                            *COM*:00000001 fdx
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:5733   .text.play_prev:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:5740   .text.play_prev:00000000 play_prev
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:5861   .text.play_prev:00000070 $d
                            *COM*:00000001 mp3_flag
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:5889   .text.mp3_init:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:5896   .text.mp3_init:00000000 mp3_init
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6066   .text.mp3_init:000000dc $d
                            *COM*:00000234 fs
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6089   .text.mp3_display:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6096   .text.mp3_display:00000000 mp3_display
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6113   .text.mp3_display:0000000c $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6119   .text.mp3_seek:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6126   .text.mp3_seek:00000000 mp3_seek
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6172   .text.mp3_seek:0000002c $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6178   .text.mp3_play:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6185   .text.mp3_play:00000000 mp3_play
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6538   .text.mp3_play:000001a4 $d
                            *COM*:00000224 fii
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6630   .bss.datasize:00000000 datasize
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6687   .bss.spedate:00000000 spedate
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6610   .bss.bt30ms:00000000 bt30ms
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6655   .bss.lrc_tag_type:00000000 lrc_tag_type
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6649   .bss.lrc_tag_cnt:00000000 lrc_tag_cnt
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6722   .data.music_extend:00000000 music_extend
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6708   .bss.timetemp:00000000 timetemp
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6682   .bss.propos:00000000 propos
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6715   .data.f_kbps:00000000 f_kbps
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6611   .bss.bt30ms:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6613   .bss.bytepos.8799:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6617   .bss.bytepos.8799:00000000 bytepos.8799
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6623   .bss.count.8718:00000000 count.8718
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6624   .bss.count.8718:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6626   .bss.datasize:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6636   .bss.flag.8716:00000000 flag.8716
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6637   .bss.flag.8716:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6642   .bss.j.8717:00000000 j.8717
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6643   .bss.j.8717:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6645   .bss.lrc_tag_cnt:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6656   .bss.lrc_tag_type:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6658   .bss.lrcbufpos.8842:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6662   .bss.lrcbufpos.8842:00000000 lrcbufpos.8842
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6668   .bss.ms.8768:00000000 ms.8768
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6669   .bss.ms.8768:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6671   .bss.playtime.8620:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6675   .bss.playtime.8620:00000000 playtime.8620
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6678   .bss.propos:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6688   .bss.spedate:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6690   .bss.tagpos.8841:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6694   .bss.tagpos.8841:00000000 tagpos.8841
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6697   .bss.time.8767:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6701   .bss.time.8767:00000000 time.8767
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6704   .bss.timetemp:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6711   .data.f_kbps:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\cckgBmcE.s:6718   .data.music_extend:00000000 $d

UNDEFINED SYMBOLS
__aeabi_ui2f
__aeabi_fdiv
__aeabi_fcmpgt
__aeabi_i2f
__aeabi_fmul
__aeabi_f2uiz
get_head_info
lput_char_xy
get_decode_time
memset
strcpy
strlen
f_opendir
strcasecmp
malloc
f_readdir
lcd_printf
f_lseek
f_read
f_open
delay_ms
SPI_configuration
SD_init
vs1003_init
mp3_reset
vs1003_soft_reset
load_patch
f_mount
f_chdir
set_vs1003
vs1003_sine_test
vs1003_get_mp3info
vs1003_set_volume
vs1003_data_write
play_mp3
second
volume_flag
volume
