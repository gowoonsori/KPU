   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"mp3.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.hex2dec,"ax",%progbits
  16              		.align	1
  17              		.global	hex2dec
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	hex2dec:
  25              	.LVL0:
  26              	.LFB32:
  27              		.file 1 "mp3.c"
   1:mp3.c         **** /********************************************************************************/
   2:mp3.c         **** /* mp3.c                                                                        */
   3:mp3.c         **** /* STM32F103VET6                                                                */
   4:mp3.c         **** /* (Lee ChangWoo HL2IRW  hl2irw@kpu.ac.kr 011-726-6860)                 	*/
   5:mp3.c         **** /* stm32f103ve_mp3								*/
   6:mp3.c         **** /********************************************************************************/
   7:mp3.c         **** #include "hwdefs.h"
   8:mp3.c         **** #include "mp3.h"
   9:mp3.c         **** #include <stdint.h>
  10:mp3.c         **** #include <stdio.h>
  11:mp3.c         **** #include <stdarg.h>
  12:mp3.c         **** #include <stdlib.h>
  13:mp3.c         **** #include <string.h>
  14:mp3.c         **** #include "ff.h"			/* FatFs configurations and declarations */
  15:mp3.c         **** #include "diskio.h"		/* Declarations of low level disk I/O functions */
  16:mp3.c         **** 
  17:mp3.c         **** 
  18:mp3.c         **** struct farme
  19:mp3.c         **** {
  20:mp3.c         ****       unsigned char mp3name[65];
  21:mp3.c         ****       unsigned char mp3time[20];
  22:mp3.c         ****       unsigned char mp3format[20];
  23:mp3.c         **** };
  24:mp3.c         **** 
  25:mp3.c         **** 
  26:mp3.c         **** ID3V1 ID3V1_Buf;
  27:mp3.c         **** unsigned short f_kbps = 0xffff;
  28:mp3.c         **** float propos = 0;
  29:mp3.c         **** unsigned short timetemp = 0;
  30:mp3.c         **** const char *music_extend [4] = {"MP3","WMA","WAV","MID"};
  31:mp3.c         **** struct farme mp3;
  32:mp3.c         **** unsigned char lrc_buffer[7000];
  33:mp3.c         **** unsigned char tag_table[512];
  34:mp3.c         **** unsigned short lrc_tag_cnt = 0;
  35:mp3.c         **** unsigned short music_number;
  36:mp3.c         **** unsigned char lrc_tag_type = 0;
  37:mp3.c         **** lyric_struct lyric;
  38:mp3.c         **** unsigned char bt30ms = 0;
  39:mp3.c         **** unsigned char spedate [14] = {0};
  40:mp3.c         **** unsigned char lrc_data[512];
  41:mp3.c         **** unsigned char lrc[80];
  42:mp3.c         **** unsigned char buffer[1024];
  43:mp3.c         **** unsigned int datasize = 0;
  44:mp3.c         **** unsigned char ftemp,fdx,buffer_read;
  45:mp3.c         **** unsigned char mp3_flag,new_play;
  46:mp3.c         **** int seek_value;
  47:mp3.c         **** 
  48:mp3.c         **** FATFS fs;
  49:mp3.c         **** FIL fsrc,fap,fii;
  50:mp3.c         **** FRESULT res;
  51:mp3.c         **** unsigned int bw,br;
  52:mp3.c         **** FILINFO fno;
  53:mp3.c         **** DIR dirs;
  54:mp3.c         **** 
  55:mp3.c         **** extern volatile unsigned char play_mp3,volume_flag;
  56:mp3.c         **** extern volatile unsigned short second,volume;
  57:mp3.c         **** 
  58:mp3.c         **** 
  59:mp3.c         **** struct FileList {
  60:mp3.c         ****       char filename[150];
  61:mp3.c         ****       struct FileList *next;
  62:mp3.c         ****       struct FileList *back;
  63:mp3.c         **** };
  64:mp3.c         **** 
  65:mp3.c         **** typedef struct FileList dnode;
  66:mp3.c         **** typedef dnode *dlink;
  67:mp3.c         **** dlink head;
  68:mp3.c         **** 
  69:mp3.c         **** 
  70:mp3.c         **** 
  71:mp3.c         **** char hex2dec (const char ch)
  72:mp3.c         **** {
  28              		.loc 1 72 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  73:mp3.c         ****       if (ch <= '9') return (ch - '0');
  33              		.loc 1 73 7 view .LVU1
  34              		.loc 1 73 10 is_stmt 0 view .LVU2
  35 0000 3928     		cmp	r0, #57
  36 0002 02D8     		bhi	.L2
  37              		.loc 1 73 22 is_stmt 1 discriminator 1 view .LVU3
  38              		.loc 1 73 33 is_stmt 0 discriminator 1 view .LVU4
  39 0004 3038     		subs	r0, r0, #48
  40              	.LVL1:
  41              	.L6:
  74:mp3.c         ****       if (ch >= 'a' && ch <= 'f') return (ch - 'a' + 10);
  42              		.loc 1 74 52 discriminator 1 view .LVU5
  43 0006 C0B2     		uxtb	r0, r0
  44 0008 7047     		bx	lr
  45              	.LVL2:
  46              	.L2:
  47              		.loc 1 74 7 is_stmt 1 view .LVU6
  48              		.loc 1 74 10 is_stmt 0 view .LVU7
  49 000a A0F16103 		sub	r3, r0, #97
  50 000e 052B     		cmp	r3, #5
  51 0010 01D8     		bhi	.L4
  52              		.loc 1 74 35 is_stmt 1 discriminator 1 view .LVU8
  53              		.loc 1 74 52 is_stmt 0 discriminator 1 view .LVU9
  54 0012 5738     		subs	r0, r0, #87
  55              	.LVL3:
  56              		.loc 1 74 52 discriminator 1 view .LVU10
  57 0014 F7E7     		b	.L6
  58              	.LVL4:
  59              	.L4:
  75:mp3.c         ****       if (ch >= 'A' && ch <= 'F') return (ch - 'A' + 10);
  60              		.loc 1 75 7 is_stmt 1 view .LVU11
  61              		.loc 1 75 10 is_stmt 0 view .LVU12
  62 0016 A0F14103 		sub	r3, r0, #65
  63 001a 052B     		cmp	r3, #5
  64 001c 01D8     		bhi	.L5
  65              		.loc 1 75 35 is_stmt 1 discriminator 1 view .LVU13
  66              		.loc 1 75 52 is_stmt 0 discriminator 1 view .LVU14
  67 001e 3738     		subs	r0, r0, #55
  68              	.LVL5:
  69              		.loc 1 75 52 discriminator 1 view .LVU15
  70 0020 F1E7     		b	.L6
  71              	.LVL6:
  72              	.L5:
  76:mp3.c         ****       return 0;
  73              		.loc 1 76 14 view .LVU16
  74 0022 0020     		movs	r0, #0
  75              	.LVL7:
  77:mp3.c         **** }
  76              		.loc 1 77 1 view .LVU17
  77 0024 7047     		bx	lr
  78              		.cfi_endproc
  79              	.LFE32:
  81              		.section	.text.dec2hex,"ax",%progbits
  82              		.align	1
  83              		.global	dec2hex
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu softvfp
  89              	dec2hex:
  90              	.LVL8:
  91              	.LFB33:
  78:mp3.c         **** 
  79:mp3.c         **** 
  80:mp3.c         **** char dec2hex (const char ch)
  81:mp3.c         **** {
  92              		.loc 1 81 1 is_stmt 1 view -0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  82:mp3.c         ****       if (ch <= 9) return (ch + '0');
  97              		.loc 1 82 7 view .LVU19
  98              		.loc 1 82 10 is_stmt 0 view .LVU20
  99 0000 0928     		cmp	r0, #9
 100 0002 02D8     		bhi	.L8
 101              		.loc 1 82 20 is_stmt 1 discriminator 1 view .LVU21
 102              		.loc 1 82 31 is_stmt 0 discriminator 1 view .LVU22
 103 0004 3030     		adds	r0, r0, #48
 104              	.LVL9:
 105              	.L11:
 106              	.LBB100:
 107              	.LBB101:
  83:mp3.c         ****       if (ch >= 10 && ch <= 15) return (ch + 'A' - 10);
 108              		.loc 1 83 50 view .LVU23
 109 0006 C0B2     		uxtb	r0, r0
 110 0008 7047     		bx	lr
 111              	.LVL10:
 112              	.L8:
 113              		.loc 1 83 50 view .LVU24
 114              	.LBE101:
 115              	.LBI100:
  80:mp3.c         **** {
 116              		.loc 1 80 6 is_stmt 1 view .LVU25
 117              	.LBB102:
 118              		.loc 1 83 7 view .LVU26
 119              		.loc 1 83 10 is_stmt 0 view .LVU27
 120 000a A0F10A03 		sub	r3, r0, #10
 121 000e 052B     		cmp	r3, #5
 122 0010 01D8     		bhi	.L10
 123              		.loc 1 83 33 is_stmt 1 view .LVU28
 124              		.loc 1 83 50 is_stmt 0 view .LVU29
 125 0012 3730     		adds	r0, r0, #55
 126              	.LVL11:
 127              		.loc 1 83 50 view .LVU30
 128 0014 F7E7     		b	.L11
 129              	.LVL12:
 130              	.L10:
  84:mp3.c         ****       return 0;
 131              		.loc 1 84 14 view .LVU31
 132 0016 0020     		movs	r0, #0
 133              	.LVL13:
 134              		.loc 1 84 14 view .LVU32
 135              	.LBE102:
 136              	.LBE100:
  85:mp3.c         **** }
 137              		.loc 1 85 1 view .LVU33
 138 0018 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE33:
 142              		.global	__aeabi_ui2f
 143              		.global	__aeabi_fdiv
 144              		.global	__aeabi_fcmpgt
 145              		.global	__aeabi_i2f
 146              		.global	__aeabi_fmul
 147              		.global	__aeabi_f2uiz
 148              		.section	.text.mp3_prog_bar,"ax",%progbits
 149              		.align	1
 150              		.global	mp3_prog_bar
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 154              		.fpu softvfp
 156              	mp3_prog_bar:
 157              	.LVL14:
 158              	.LFB34:
  86:mp3.c         **** 
  87:mp3.c         **** 
  88:mp3.c         **** void mp3_prog_bar (unsigned int pos,unsigned int lenth)
  89:mp3.c         **** {
 159              		.loc 1 89 1 is_stmt 1 view -0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 32
 162              		@ frame_needed = 0, uses_anonymous_args = 0
  90:mp3.c         ****       static unsigned short playtime = 0;
 163              		.loc 1 90 7 view .LVU35
  91:mp3.c         ****       char dig0,dig1,dig2,dig3;
 164              		.loc 1 91 7 view .LVU36
  92:mp3.c         ****       unsigned short time = 0;
 165              		.loc 1 92 7 view .LVU37
  93:mp3.c         ****       char buff[32];
 166              		.loc 1 93 7 view .LVU38
  94:mp3.c         ****       if (f_kbps == 0xffff) {
 167              		.loc 1 94 7 view .LVU39
 168              		.loc 1 94 10 is_stmt 0 view .LVU40
 169 0000 4FF6FF73 		movw	r3, #65535
  89:mp3.c         ****       static unsigned short playtime = 0;
 170              		.loc 1 89 1 view .LVU41
 171 0004 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 172              		.cfi_def_cfa_offset 28
 173              		.cfi_offset 4, -28
 174              		.cfi_offset 5, -24
 175              		.cfi_offset 6, -20
 176              		.cfi_offset 7, -16
 177              		.cfi_offset 8, -12
 178              		.cfi_offset 9, -8
 179              		.cfi_offset 14, -4
 180              		.loc 1 94 18 view .LVU42
 181 0008 774E     		ldr	r6, .L29
  89:mp3.c         ****       static unsigned short playtime = 0;
 182              		.loc 1 89 1 view .LVU43
 183 000a 0546     		mov	r5, r0
 184              		.loc 1 94 10 view .LVU44
 185 000c 3288     		ldrh	r2, [r6]
  89:mp3.c         ****       static unsigned short playtime = 0;
 186              		.loc 1 89 1 view .LVU45
 187 000e 0C46     		mov	r4, r1
 188              		.loc 1 94 10 view .LVU46
 189 0010 9A42     		cmp	r2, r3
  89:mp3.c         ****       static unsigned short playtime = 0;
 190              		.loc 1 89 1 view .LVU47
 191 0012 89B0     		sub	sp, sp, #36
 192              		.cfi_def_cfa_offset 64
 193              		.loc 1 94 10 view .LVU48
 194 0014 05D1     		bne	.L13
  95:mp3.c         **** 	 playtime = 0;
 195              		.loc 1 95 3 is_stmt 1 view .LVU49
 196              		.loc 1 95 12 is_stmt 0 view .LVU50
 197 0016 0022     		movs	r2, #0
 198 0018 744B     		ldr	r3, .L29+4
 199 001a 1A80     		strh	r2, [r3]	@ movhi
  96:mp3.c         **** 	 f_kbps = get_head_info();
 200              		.loc 1 96 3 is_stmt 1 view .LVU51
 201              		.loc 1 96 12 is_stmt 0 view .LVU52
 202 001c FFF7FEFF 		bl	get_head_info
 203              	.LVL15:
 204              		.loc 1 96 10 view .LVU53
 205 0020 3080     		strh	r0, [r6]	@ movhi
 206              	.L13:
  97:mp3.c         ****       }
  98:mp3.c         ****       if (lenth) {
 207              		.loc 1 98 7 is_stmt 1 view .LVU54
 208              		.loc 1 98 10 is_stmt 0 view .LVU55
 209 0022 002C     		cmp	r4, #0
 210 0024 00F0D080 		beq	.L12
 211              	.LVL16:
 212              	.LBB105:
 213              	.LBI105:
  88:mp3.c         **** {
 214              		.loc 1 88 6 is_stmt 1 view .LVU56
 215              	.LBB106:
  99:mp3.c         **** 	 propos = (float)pos / lenth;
 216              		.loc 1 99 3 view .LVU57
 217              		.loc 1 99 23 is_stmt 0 view .LVU58
 218 0028 2046     		mov	r0, r4
 219 002a FFF7FEFF 		bl	__aeabi_ui2f
 220              	.LVL17:
 221 002e 0746     		mov	r7, r0
 222              		.loc 1 99 12 view .LVU59
 223 0030 2846     		mov	r0, r5
 224 0032 FFF7FEFF 		bl	__aeabi_ui2f
 225              	.LVL18:
 100:mp3.c         **** 	 if (propos > 1) propos = 1;
 226              		.loc 1 100 6 view .LVU60
 227 0036 4FF07E59 		mov	r9, #1065353216
  99:mp3.c         **** 	 propos = (float)pos / lenth;
 228              		.loc 1 99 23 view .LVU61
 229 003a 3946     		mov	r1, r7
 230 003c FFF7FEFF 		bl	__aeabi_fdiv
 231              	.LVL19:
 232              		.loc 1 100 6 view .LVU62
 233 0040 4946     		mov	r1, r9
  99:mp3.c         **** 	 propos = (float)pos / lenth;
 234              		.loc 1 99 23 view .LVU63
 235 0042 8046     		mov	r8, r0
 236              		.loc 1 100 3 is_stmt 1 view .LVU64
 237              		.loc 1 100 6 is_stmt 0 view .LVU65
 238 0044 FFF7FEFF 		bl	__aeabi_fcmpgt
 239              	.LVL20:
 240 0048 694D     		ldr	r5, .L29+8
 241              	.LVL21:
 242              		.loc 1 100 6 view .LVU66
 243 004a 0028     		cmp	r0, #0
 244 004c 40F0AC80 		bne	.L15
  99:mp3.c         **** 	 propos = (float)pos / lenth;
 245              		.loc 1 99 10 view .LVU67
 246 0050 C5F80080 		str	r8, [r5]	@ float
 247              	.L16:
 101:mp3.c         ****       } else {
 102:mp3.c         ****       	 return;
 103:mp3.c         ****       }
 104:mp3.c         ****       if (f_kbps) {
 248              		.loc 1 104 7 is_stmt 1 view .LVU68
 249              		.loc 1 104 11 is_stmt 0 view .LVU69
 250 0054 3388     		ldrh	r3, [r6]
 251              		.loc 1 104 10 view .LVU70
 252 0056 002B     		cmp	r3, #0
 253 0058 00F0A980 		beq	.L17
 105:mp3.c         **** 	 time = (lenth / f_kbps) / 125;
 254              		.loc 1 105 3 is_stmt 1 view .LVU71
 255              	.LVL22:
 106:mp3.c         **** 	 time = propos * time;
 256              		.loc 1 106 3 view .LVU72
 105:mp3.c         **** 	 time = (lenth / f_kbps) / 125;
 257              		.loc 1 105 17 is_stmt 0 view .LVU73
 258 005c B4FBF3F3 		udiv	r3, r4, r3
 259              	.LVL23:
 105:mp3.c         **** 	 time = (lenth / f_kbps) / 125;
 260              		.loc 1 105 27 view .LVU74
 261 0060 7D20     		movs	r0, #125
 262 0062 B3FBF0F0 		udiv	r0, r3, r0
 263              		.loc 1 106 17 view .LVU75
 264 0066 80B2     		uxth	r0, r0
 265 0068 FFF7FEFF 		bl	__aeabi_i2f
 266              	.LVL24:
 267              		.loc 1 106 17 view .LVU76
 268 006c 2968     		ldr	r1, [r5]	@ float
 269 006e FFF7FEFF 		bl	__aeabi_fmul
 270              	.LVL25:
 271              		.loc 1 106 8 view .LVU77
 272 0072 FFF7FEFF 		bl	__aeabi_f2uiz
 273              	.LVL26:
 274 0076 80B2     		uxth	r0, r0
 275              	.LVL27:
 276              	.L18:
 107:mp3.c         ****       } else {
 108:mp3.c         ****          time = get_decode_time();
 109:mp3.c         ****       }
 110:mp3.c         ****       if (time != playtime) {
 277              		.loc 1 110 7 is_stmt 1 view .LVU78
 278              		.loc 1 110 16 is_stmt 0 view .LVU79
 279 0078 DFF87081 		ldr	r8, .L29+4
 280              		.loc 1 110 10 view .LVU80
 281 007c B8F80030 		ldrh	r3, [r8]
 282 0080 8342     		cmp	r3, r0
 283 0082 00F0A180 		beq	.L12
 111:mp3.c         **** 	 time = (((float)lenth / f_kbps) / 125) * propos;
 284              		.loc 1 111 3 is_stmt 1 view .LVU81
 285              		.loc 1 111 25 is_stmt 0 view .LVU82
 286 0086 3088     		ldrh	r0, [r6]
 287              	.LVL28:
 288              		.loc 1 111 25 view .LVU83
 289 0088 FFF7FEFF 		bl	__aeabi_i2f
 290              	.LVL29:
 291 008c 0146     		mov	r1, r0
 292 008e 3846     		mov	r0, r7
 293 0090 FFF7FEFF 		bl	__aeabi_fdiv
 294              	.LVL30:
 295              		.loc 1 111 35 view .LVU84
 296 0094 5749     		ldr	r1, .L29+12
 297 0096 FFF7FEFF 		bl	__aeabi_fdiv
 298              	.LVL31:
 299              		.loc 1 111 42 view .LVU85
 300 009a 2968     		ldr	r1, [r5]	@ float
 301 009c FFF7FEFF 		bl	__aeabi_fmul
 302              	.LVL32:
 303              		.loc 1 111 8 view .LVU86
 304 00a0 FFF7FEFF 		bl	__aeabi_f2uiz
 305              	.LVL33:
 306 00a4 40F60F63 		movw	r3, #3599
 307 00a8 80B2     		uxth	r0, r0
 308              	.LVL34:
 112:mp3.c         **** 	 playtime = time;
 309              		.loc 1 112 3 is_stmt 1 view .LVU87
 310 00aa 9842     		cmp	r0, r3
 311              		.loc 1 112 12 is_stmt 0 view .LVU88
 312 00ac A8F80000 		strh	r0, [r8]	@ movhi
 113:mp3.c         **** 	 if (new_play) {
 313              		.loc 1 113 3 is_stmt 1 view .LVU89
 114:mp3.c         **** 	    //lput_char_xy(2,2,"PLAY ");
 115:mp3.c         **** 	 }
 116:mp3.c         **** 	 if (time >= 3600) time = 3599;
 117:mp3.c         **** 	 dig3 = (time / 600);
 118:mp3.c         **** 	 dig2 = ((time / 60) % 10);
 119:mp3.c         **** 	 dig1 = ((time % 60) / 10);
 314              		.loc 1 119 8 is_stmt 0 view .LVU90
 315 00b0 4FF03C02 		mov	r2, #60
 316 00b4 28BF     		it	cs
 317 00b6 1846     		movcs	r0, r3
 318              	.LVL35:
 117:mp3.c         **** 	 dig2 = ((time / 60) % 10);
 319              		.loc 1 117 8 view .LVU91
 320 00b8 4FF41673 		mov	r3, #600
 321              		.loc 1 119 8 view .LVU92
 322 00bc B0FBF2F1 		udiv	r1, r0, r2
 323 00c0 02FB1102 		mls	r2, r2, r1, r0
 117:mp3.c         **** 	 dig2 = ((time / 60) % 10);
 324              		.loc 1 117 8 view .LVU93
 325 00c4 B0FBF3F0 		udiv	r0, r0, r3
 120:mp3.c         **** 	 dig0 = ((time % 60) % 10);	 
 121:mp3.c         **** 	 buff[0] = dec2hex(dig3);
 326              		.loc 1 121 13 view .LVU94
 327 00c8 C0B2     		uxtb	r0, r0
 119:mp3.c         **** 	 dig0 = ((time % 60) % 10);	 
 328              		.loc 1 119 8 view .LVU95
 329 00ca 92B2     		uxth	r2, r2
 118:mp3.c         **** 	 dig1 = ((time % 60) / 10);
 330              		.loc 1 118 8 view .LVU96
 331 00cc 0A27     		movs	r7, #10
 332              		.loc 1 121 13 view .LVU97
 333 00ce FFF7FEFF 		bl	dec2hex
 334              	.LVL36:
 335              		.loc 1 121 11 view .LVU98
 336 00d2 8DF80000 		strb	r0, [sp]
 118:mp3.c         **** 	 dig1 = ((time % 60) / 10);
 337              		.loc 1 118 8 view .LVU99
 338 00d6 B1FBF7F0 		udiv	r0, r1, r7
 339 00da 07FB1010 		mls	r0, r7, r0, r1
 122:mp3.c         **** 	 buff[1] = dec2hex(dig2);
 340              		.loc 1 122 13 view .LVU100
 341 00de C0B2     		uxtb	r0, r0
 342 00e0 FFF7FEFF 		bl	dec2hex
 343              	.LVL37:
 119:mp3.c         **** 	 dig0 = ((time % 60) % 10);	 
 344              		.loc 1 119 8 view .LVU101
 345 00e4 B2FBF7F1 		udiv	r1, r2, r7
 123:mp3.c         **** 	 buff[2] = ':';
 346              		.loc 1 123 11 view .LVU102
 347 00e8 3A23     		movs	r3, #58
 122:mp3.c         **** 	 buff[1] = dec2hex(dig2);
 348              		.loc 1 122 11 view .LVU103
 349 00ea 8DF80100 		strb	r0, [sp, #1]
 124:mp3.c         **** 	 buff[3] = dec2hex(dig1);
 350              		.loc 1 124 13 view .LVU104
 351 00ee C8B2     		uxtb	r0, r1
 123:mp3.c         **** 	 buff[2] = ':';
 352              		.loc 1 123 11 view .LVU105
 353 00f0 8DF80230 		strb	r3, [sp, #2]
 354              		.loc 1 124 13 view .LVU106
 355 00f4 FFF7FEFF 		bl	dec2hex
 356              	.LVL38:
 357              		.loc 1 124 11 view .LVU107
 358 00f8 8DF80300 		strb	r0, [sp, #3]
 120:mp3.c         **** 	 buff[0] = dec2hex(dig3);
 359              		.loc 1 120 8 view .LVU108
 360 00fc 07FB1120 		mls	r0, r7, r1, r2
 125:mp3.c         **** 	 buff[4] = dec2hex(dig0);
 361              		.loc 1 125 13 view .LVU109
 362 0100 C0B2     		uxtb	r0, r0
 363 0102 FFF7FEFF 		bl	dec2hex
 364              	.LVL39:
 126:mp3.c         **** 	 buff[5] = '/';
 365              		.loc 1 126 11 view .LVU110
 366 0106 2F23     		movs	r3, #47
 113:mp3.c         **** 	    //lput_char_xy(2,2,"PLAY ");
 367              		.loc 1 113 7 view .LVU111
 368 0108 3B4D     		ldr	r5, .L29+16
 125:mp3.c         **** 	 buff[4] = dec2hex(dig0);
 369              		.loc 1 125 11 view .LVU112
 370 010a 8DF80400 		strb	r0, [sp, #4]
 113:mp3.c         **** 	    //lput_char_xy(2,2,"PLAY ");
 371              		.loc 1 113 7 view .LVU113
 372 010e 95F80080 		ldrb	r8, [r5]	@ zero_extendqisi2
 115:mp3.c         **** 	 if (time >= 3600) time = 3599;
 373              		.loc 1 115 3 is_stmt 1 view .LVU114
 116:mp3.c         **** 	 dig3 = (time / 600);
 374              		.loc 1 116 3 view .LVU115
 117:mp3.c         **** 	 dig2 = ((time / 60) % 10);
 375              		.loc 1 117 3 view .LVU116
 118:mp3.c         **** 	 dig1 = ((time % 60) / 10);
 376              		.loc 1 118 3 view .LVU117
 119:mp3.c         **** 	 dig0 = ((time % 60) % 10);	 
 377              		.loc 1 119 3 view .LVU118
 120:mp3.c         **** 	 buff[0] = dec2hex(dig3);
 378              		.loc 1 120 3 view .LVU119
 121:mp3.c         **** 	 buff[1] = dec2hex(dig2);
 379              		.loc 1 121 3 view .LVU120
 122:mp3.c         **** 	 buff[2] = ':';
 380              		.loc 1 122 3 view .LVU121
 123:mp3.c         **** 	 buff[3] = dec2hex(dig1);
 381              		.loc 1 123 3 view .LVU122
 124:mp3.c         **** 	 buff[4] = dec2hex(dig0);
 382              		.loc 1 124 3 view .LVU123
 125:mp3.c         **** 	 buff[5] = '/';
 383              		.loc 1 125 3 view .LVU124
 384              		.loc 1 126 3 view .LVU125
 385              		.loc 1 126 11 is_stmt 0 view .LVU126
 386 0112 8DF80530 		strb	r3, [sp, #5]
 127:mp3.c         **** 	 if (new_play == 0) {
 387              		.loc 1 127 3 is_stmt 1 view .LVU127
 388              		.loc 1 127 6 is_stmt 0 view .LVU128
 389 0116 B8F1000F 		cmp	r8, #0
 390 011a 4BD0     		beq	.L21
 391              	.L24:
 128:mp3.c         **** 	    buff[6] = 0;
 129:mp3.c         **** 	    lput_char_xy(9,8,buff);
 130:mp3.c         **** 	 }
 131:mp3.c         **** 	 if (new_play) {
 132:mp3.c         **** 	    if (f_kbps) time = (lenth / f_kbps) / 125;else time = 0;
 392              		.loc 1 132 6 is_stmt 1 view .LVU129
 393              		.loc 1 132 10 is_stmt 0 view .LVU130
 394 011c 3088     		ldrh	r0, [r6]
 395              		.loc 1 132 9 view .LVU131
 396 011e 0028     		cmp	r0, #0
 397 0120 55D1     		bne	.L22
 398              	.LVL40:
 399              	.L23:
 133:mp3.c         **** 	    if (time >= 3600) time = 3599;
 134:mp3.c         **** 	    dig3 = (time / 600);
 400              		.loc 1 134 6 is_stmt 1 view .LVU132
 135:mp3.c         **** 	    dig2 = ((time / 60) % 10);
 401              		.loc 1 135 6 view .LVU133
 136:mp3.c         **** 	    dig1 = ((time % 60) / 10);
 402              		.loc 1 136 6 view .LVU134
 403              		.loc 1 136 11 is_stmt 0 view .LVU135
 404 0122 3C22     		movs	r2, #60
 134:mp3.c         **** 	    dig2 = ((time / 60) % 10);
 405              		.loc 1 134 11 view .LVU136
 406 0124 4FF41673 		mov	r3, #600
 407              		.loc 1 136 11 view .LVU137
 408 0128 B0FBF2F1 		udiv	r1, r0, r2
 409 012c 02FB1102 		mls	r2, r2, r1, r0
 134:mp3.c         **** 	    dig2 = ((time / 60) % 10);
 410              		.loc 1 134 11 view .LVU138
 411 0130 B0FBF3F0 		udiv	r0, r0, r3
 412              	.LVL41:
 137:mp3.c         **** 	    dig0 = ((time % 60) % 10);	    	
 138:mp3.c         **** 	    buff[6] = dec2hex(dig3);
 413              		.loc 1 138 16 view .LVU139
 414 0134 C0B2     		uxtb	r0, r0
 136:mp3.c         **** 	    dig0 = ((time % 60) % 10);	    	
 415              		.loc 1 136 11 view .LVU140
 416 0136 92B2     		uxth	r2, r2
 417              	.LVL42:
 137:mp3.c         **** 	    dig0 = ((time % 60) % 10);	    	
 418              		.loc 1 137 6 is_stmt 1 view .LVU141
 419              		.loc 1 138 6 view .LVU142
 420              		.loc 1 138 16 is_stmt 0 view .LVU143
 421 0138 FFF7FEFF 		bl	dec2hex
 422              	.LVL43:
 135:mp3.c         **** 	    dig1 = ((time % 60) / 10);
 423              		.loc 1 135 11 view .LVU144
 424 013c 4FF00A08 		mov	r8, #10
 425 0140 89B2     		uxth	r1, r1
 426              		.loc 1 138 16 view .LVU145
 427 0142 0646     		mov	r6, r0
 428              		.loc 1 138 14 view .LVU146
 429 0144 8DF80600 		strb	r0, [sp, #6]
 139:mp3.c         **** 	    buff[7] = dec2hex(dig2);
 430              		.loc 1 139 6 is_stmt 1 view .LVU147
 135:mp3.c         **** 	    dig1 = ((time % 60) / 10);
 431              		.loc 1 135 11 is_stmt 0 view .LVU148
 432 0148 B1FBF8F0 		udiv	r0, r1, r8
 433 014c 08FB1010 		mls	r0, r8, r0, r1
 434              		.loc 1 139 16 view .LVU149
 435 0150 C0B2     		uxtb	r0, r0
 436 0152 FFF7FEFF 		bl	dec2hex
 437              	.LVL44:
 136:mp3.c         **** 	    dig0 = ((time % 60) % 10);	    	
 438              		.loc 1 136 11 view .LVU150
 439 0156 B2FBF8F7 		udiv	r7, r2, r8
 140:mp3.c         **** 	    buff[8] = ':';
 440              		.loc 1 140 14 view .LVU151
 441 015a 3A23     		movs	r3, #58
 139:mp3.c         **** 	    buff[7] = dec2hex(dig2);
 442              		.loc 1 139 16 view .LVU152
 443 015c 0446     		mov	r4, r0
 139:mp3.c         **** 	    buff[7] = dec2hex(dig2);
 444              		.loc 1 139 14 view .LVU153
 445 015e 8DF80700 		strb	r0, [sp, #7]
 446              		.loc 1 140 6 is_stmt 1 view .LVU154
 141:mp3.c         **** 	    buff[9] = dec2hex(dig1);
 447              		.loc 1 141 16 is_stmt 0 view .LVU155
 448 0162 F8B2     		uxtb	r0, r7
 140:mp3.c         **** 	    buff[8] = ':';
 449              		.loc 1 140 14 view .LVU156
 450 0164 8DF80830 		strb	r3, [sp, #8]
 451              		.loc 1 141 6 is_stmt 1 view .LVU157
 452              		.loc 1 141 16 is_stmt 0 view .LVU158
 453 0168 FFF7FEFF 		bl	dec2hex
 454              	.LVL45:
 455 016c 0146     		mov	r1, r0
 456              		.loc 1 141 14 view .LVU159
 457 016e 8DF80900 		strb	r0, [sp, #9]
 142:mp3.c         **** 	    buff[10] = dec2hex(dig0);
 458              		.loc 1 142 6 is_stmt 1 view .LVU160
 137:mp3.c         **** 	    buff[6] = dec2hex(dig3);
 459              		.loc 1 137 11 is_stmt 0 view .LVU161
 460 0172 08FB1720 		mls	r0, r8, r7, r2
 461              		.loc 1 142 17 view .LVU162
 462 0176 C0B2     		uxtb	r0, r0
 463 0178 FFF7FEFF 		bl	dec2hex
 464              	.LVL46:
 143:mp3.c         **** 	    buff[11] = 0;
 465              		.loc 1 143 15 view .LVU163
 466 017c 0027     		movs	r7, #0
 144:mp3.c         **** 	    mp3.mp3time[6] = dec2hex(dig3);
 467              		.loc 1 144 21 view .LVU164
 468 017e 1F4B     		ldr	r3, .L29+20
 142:mp3.c         **** 	    buff[11] = 0;
 469              		.loc 1 142 15 view .LVU165
 470 0180 8DF80A00 		strb	r0, [sp, #10]
 143:mp3.c         **** 	    buff[11] = 0;
 471              		.loc 1 143 6 is_stmt 1 view .LVU166
 145:mp3.c         ****             mp3.mp3time[7] = dec2hex(dig2);
 146:mp3.c         ****             mp3.mp3time[9] = dec2hex(dig1);
 472              		.loc 1 146 28 is_stmt 0 view .LVU167
 473 0184 83F84A10 		strb	r1, [r3, #74]
 147:mp3.c         ****             mp3.mp3time[10] = dec2hex(dig0);
 474              		.loc 1 147 29 view .LVU168
 475 0188 83F84B00 		strb	r0, [r3, #75]
 148:mp3.c         ****             lput_char_xy(15,8,buff+6);
 476              		.loc 1 148 13 view .LVU169
 477 018c 0821     		movs	r1, #8
 478 018e 0F20     		movs	r0, #15
 479 0190 0DF10602 		add	r2, sp, #6
 480              	.LVL47:
 143:mp3.c         **** 	    mp3.mp3time[6] = dec2hex(dig3);
 481              		.loc 1 143 15 view .LVU170
 482 0194 8DF80B70 		strb	r7, [sp, #11]
 144:mp3.c         ****             mp3.mp3time[7] = dec2hex(dig2);
 483              		.loc 1 144 6 is_stmt 1 view .LVU171
 144:mp3.c         ****             mp3.mp3time[7] = dec2hex(dig2);
 484              		.loc 1 144 21 is_stmt 0 view .LVU172
 485 0198 83F84760 		strb	r6, [r3, #71]
 145:mp3.c         ****             mp3.mp3time[9] = dec2hex(dig1);
 486              		.loc 1 145 13 is_stmt 1 view .LVU173
 145:mp3.c         ****             mp3.mp3time[9] = dec2hex(dig1);
 487              		.loc 1 145 28 is_stmt 0 view .LVU174
 488 019c 83F84840 		strb	r4, [r3, #72]
 146:mp3.c         ****             mp3.mp3time[10] = dec2hex(dig0);
 489              		.loc 1 146 13 is_stmt 1 view .LVU175
 147:mp3.c         ****             lput_char_xy(15,8,buff+6);
 490              		.loc 1 147 13 view .LVU176
 491              		.loc 1 148 13 view .LVU177
 492 01a0 FFF7FEFF 		bl	lput_char_xy
 493              	.LVL48:
 149:mp3.c         ****             new_play = 0;
 494              		.loc 1 149 13 view .LVU178
 495              		.loc 1 149 22 is_stmt 0 view .LVU179
 496 01a4 2F70     		strb	r7, [r5]
 497              	.LVL49:
 498              		.loc 1 149 22 view .LVU180
 499 01a6 0FE0     		b	.L12
 500              	.LVL50:
 501              	.L15:
 100:mp3.c         ****       } else {
 502              		.loc 1 100 19 is_stmt 1 view .LVU181
 100:mp3.c         ****       } else {
 503              		.loc 1 100 26 is_stmt 0 view .LVU182
 504 01a8 C5F80090 		str	r9, [r5]	@ float
 505 01ac 52E7     		b	.L16
 506              	.L17:
 108:mp3.c         ****       }
 507              		.loc 1 108 10 is_stmt 1 view .LVU183
 108:mp3.c         ****       }
 508              		.loc 1 108 17 is_stmt 0 view .LVU184
 509 01ae FFF7FEFF 		bl	get_decode_time
 510              	.LVL51:
 108:mp3.c         ****       }
 511              		.loc 1 108 17 view .LVU185
 512 01b2 61E7     		b	.L18
 513              	.LVL52:
 514              	.L21:
 128:mp3.c         **** 	    lput_char_xy(9,8,buff);
 515              		.loc 1 128 6 is_stmt 1 view .LVU186
 129:mp3.c         **** 	 }
 516              		.loc 1 129 6 is_stmt 0 view .LVU187
 517 01b4 6A46     		mov	r2, sp
 518 01b6 0821     		movs	r1, #8
 519 01b8 0920     		movs	r0, #9
 128:mp3.c         **** 	    lput_char_xy(9,8,buff);
 520              		.loc 1 128 14 view .LVU188
 521 01ba 8DF80680 		strb	r8, [sp, #6]
 129:mp3.c         **** 	 }
 522              		.loc 1 129 6 is_stmt 1 view .LVU189
 523 01be FFF7FEFF 		bl	lput_char_xy
 524              	.LVL53:
 131:mp3.c         **** 	    if (f_kbps) time = (lenth / f_kbps) / 125;else time = 0;
 525              		.loc 1 131 3 view .LVU190
 131:mp3.c         **** 	    if (f_kbps) time = (lenth / f_kbps) / 125;else time = 0;
 526              		.loc 1 131 6 is_stmt 0 view .LVU191
 527 01c2 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 528 01c4 002B     		cmp	r3, #0
 529 01c6 A9D1     		bne	.L24
 530              	.LVL54:
 531              	.L12:
 131:mp3.c         **** 	    if (f_kbps) time = (lenth / f_kbps) / 125;else time = 0;
 532              		.loc 1 131 6 view .LVU192
 533              	.LBE106:
 534              	.LBE105:
 150:mp3.c         ****          }
 151:mp3.c         ****       }
 152:mp3.c         **** }
 535              		.loc 1 152 1 view .LVU193
 536 01c8 09B0     		add	sp, sp, #36
 537              		.cfi_remember_state
 538              		.cfi_def_cfa_offset 28
 539              		@ sp needed
 540 01ca BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 541              	.LVL55:
 542              	.L22:
 543              		.cfi_restore_state
 544              	.LBB108:
 545              	.LBB107:
 132:mp3.c         **** 	    if (time >= 3600) time = 3599;
 546              		.loc 1 132 18 is_stmt 1 view .LVU194
 133:mp3.c         **** 	    dig3 = (time / 600);
 547              		.loc 1 133 6 view .LVU195
 132:mp3.c         **** 	    if (time >= 3600) time = 3599;
 548              		.loc 1 132 32 is_stmt 0 view .LVU196
 549 01ce B4FBF0F0 		udiv	r0, r4, r0
 550              	.LVL56:
 132:mp3.c         **** 	    if (time >= 3600) time = 3599;
 551              		.loc 1 132 42 view .LVU197
 552 01d2 7D24     		movs	r4, #125
 553              	.LVL57:
 132:mp3.c         **** 	    if (time >= 3600) time = 3599;
 554              		.loc 1 132 42 view .LVU198
 555 01d4 B0FBF4F0 		udiv	r0, r0, r4
 556 01d8 40F60F61 		movw	r1, #3599
 557 01dc 80B2     		uxth	r0, r0
 558 01de 8842     		cmp	r0, r1
 559 01e0 28BF     		it	cs
 560 01e2 0846     		movcs	r0, r1
 561 01e4 9DE7     		b	.L23
 562              	.L30:
 563 01e6 00BF     		.align	2
 564              	.L29:
 565 01e8 00000000 		.word	.LANCHOR0
 566 01ec 00000000 		.word	.LANCHOR1
 567 01f0 00000000 		.word	.LANCHOR2
 568 01f4 0000FA42 		.word	1123680256
 569 01f8 00000000 		.word	new_play
 570 01fc 00000000 		.word	mp3
 571              	.LBE107:
 572              	.LBE108:
 573              		.cfi_endproc
 574              	.LFE34:
 576              		.section	.rodata.resume_music.str1.1,"aMS",%progbits,1
 577              	.LC0:
 578 0000 303A2F4D 		.ascii	"0:/Music/\000"
 578      75736963 
 578      2F00
 579              		.section	.text.resume_music,"ax",%progbits
 580              		.align	1
 581              		.global	resume_music
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 585              		.fpu softvfp
 587              	resume_music:
 588              	.LVL58:
 589              	.LFB36:
 153:mp3.c         **** 
 154:mp3.c         **** 
 155:mp3.c         **** void filtrate_music (void)
 156:mp3.c         **** {
 157:mp3.c         ****       BOOL flag;
 158:mp3.c         ****       unsigned char temp[69];
 159:mp3.c         ****       unsigned char temp1[35],a;
 160:mp3.c         ****       unsigned short i,j,k,l;
 161:mp3.c         ****       unsigned short m;
 162:mp3.c         ****       music_number = find_music();
 163:mp3.c         ****       for (i=1;i<=music_number;i++) {
 164:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 165:mp3.c         ****           if (i < 10) {
 166:mp3.c         ****              temp[0] = 0x30;
 167:mp3.c         ****              temp[1] = 0x30;
 168:mp3.c         ****              temp[2] = 0x30 + i;
 169:mp3.c         ****              temp[3] = 0x2e;
 170:mp3.c         ****           } else if (i < 100) {
 171:mp3.c         ****              temp[0] = 0x30;
 172:mp3.c         ****              temp[1] = 0x30 + i / 10;
 173:mp3.c         ****              temp[2] = 0x30 + i % 10;
 174:mp3.c         ****              temp[3] = 0x2e;
 175:mp3.c         ****           } else {
 176:mp3.c         ****              temp[0] = 0x30 + i / 100;
 177:mp3.c         ****              temp[1] = 0x30 + i / 10;
 178:mp3.c         ****              temp[2] = 0x30 + i % 10;
 179:mp3.c         ****              temp[3] = 0x2e;
 180:mp3.c         ****           }
 181:mp3.c         **** 	  strcpy((char *)&temp[4],(char *)head->filename);
 182:mp3.c         ****   	  strcpy((char *)head->filename,(char *)temp);
 183:mp3.c         **** 	  l = strlen(head->filename);
 184:mp3.c         **** 	  for (k=0;k<4;k++) head->filename[l - 4 + k] = 0;
 185:mp3.c         **** 	  if (i != music_number) head = head->next;
 186:mp3.c         ****       }
 187:mp3.c         ****       i = music_number;
 188:mp3.c         ****       while ((i--) && (head->back != NULL)) head = head->back;
 189:mp3.c         ****       i = music_number;
 190:mp3.c         ****       while (i--) {
 191:mp3.c         **** 	    m = strlen(head->filename);
 192:mp3.c         **** 	    for (k=0;k<35;k++) temp1[k] = 0;
 193:mp3.c         **** 	    if (m > 23) {
 194:mp3.c         **** 	       if (head->filename[22] < 0x80) {
 195:mp3.c         **** 	          strcpy((char *)temp1,(char *)&head->filename[23]);
 196:mp3.c         **** 	          head->filename[23] = 0x2e;
 197:mp3.c         **** 	          head->filename[24] = 0x2e;
 198:mp3.c         **** 	          head->filename[25] = 0x2e;
 199:mp3.c         **** 	          head->filename[26] = 0;
 200:mp3.c         **** 	          head->filename[27] = 1;
 201:mp3.c         **** 	          strcpy((char *)&head->filename[28],(char *)temp1);
 202:mp3.c         **** 	       } else {
 203:mp3.c         **** 	          a = 0;
 204:mp3.c         **** 	          while (1) {
 205:mp3.c         ****                         if (head->filename[a] < 0x80) a++;else a += 2;
 206:mp3.c         **** 	    	        if (a == 23) {
 207:mp3.c         **** 	    	           flag = 1;
 208:mp3.c         **** 	    	           break;
 209:mp3.c         **** 	    	        } else if (a == 24) {
 210:mp3.c         **** 	    	           flag = 0;
 211:mp3.c         **** 	    	           break;
 212:mp3.c         **** 	    	        }
 213:mp3.c         **** 	          }
 214:mp3.c         **** 	          if (flag == 1) {
 215:mp3.c         **** 	    	     strcpy((char *)temp1,(char *)&head->filename[23]);
 216:mp3.c         **** 	    	     head->filename[23] = 0x2e;
 217:mp3.c         **** 	    	     head->filename[24] = 0x2e;
 218:mp3.c         **** 	    	     head->filename[25] = 0x2e;
 219:mp3.c         **** 	    	     head->filename[26] = 0;
 220:mp3.c         **** 	    	     head->filename[27] = 1;
 221:mp3.c         **** 	    	     strcpy((char *)&head->filename[28],(char *)temp1);
 222:mp3.c         **** 	          } else {
 223:mp3.c         **** 	    	     strcpy((char *)temp1,(char *)&head->filename[22]);
 224:mp3.c         **** 	    	     head->filename[22] = 0x20;
 225:mp3.c         **** 	    	     head->filename[23] = 0x2e;
 226:mp3.c         **** 	    	     head->filename[24] = 0x2e;
 227:mp3.c         **** 	    	     head->filename[25] = 0x2e;
 228:mp3.c         **** 	    	     head->filename[26] = 0;
 229:mp3.c         **** 	    	     head->filename[27] = 0;
 230:mp3.c         **** 	    	     strcpy((char *)&head->filename[28],(char *)temp1);
 231:mp3.c         **** 	          }
 232:mp3.c         **** 	       }
 233:mp3.c         **** 	    }
 234:mp3.c         **** 	    if (i != 0) head = head->next;
 235:mp3.c         ****       }
 236:mp3.c         ****       i = music_number;
 237:mp3.c         ****       while ((i--) && (head->back != NULL)) head = head->back;
 238:mp3.c         **** }
 239:mp3.c         **** 
 240:mp3.c         **** 
 241:mp3.c         **** void resume_music (unsigned char *name)
 242:mp3.c         **** {
 590              		.loc 1 242 1 is_stmt 1 view -0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 120
 593              		@ frame_needed = 0, uses_anonymous_args = 0
 243:mp3.c         ****       unsigned char a,temp[35] = {0};
 594              		.loc 1 243 7 view .LVU200
 242:mp3.c         ****       unsigned char a,temp[35] = {0};
 595              		.loc 1 242 1 is_stmt 0 view .LVU201
 596 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 597              		.cfi_def_cfa_offset 24
 598              		.cfi_offset 4, -24
 599              		.cfi_offset 5, -20
 600              		.cfi_offset 6, -16
 601              		.cfi_offset 7, -12
 602              		.cfi_offset 8, -8
 603              		.cfi_offset 14, -4
 604              		.loc 1 243 23 view .LVU202
 605 0004 0025     		movs	r5, #0
 242:mp3.c         ****       unsigned char a,temp[35] = {0};
 606              		.loc 1 242 1 view .LVU203
 607 0006 9EB0     		sub	sp, sp, #120
 608              		.cfi_def_cfa_offset 144
 609              		.loc 1 243 23 view .LVU204
 610 0008 1F22     		movs	r2, #31
 611 000a 2946     		mov	r1, r5
 242:mp3.c         ****       unsigned char a,temp[35] = {0};
 612              		.loc 1 242 1 view .LVU205
 613 000c 0446     		mov	r4, r0
 614              		.loc 1 243 23 view .LVU206
 615 000e 05A8     		add	r0, sp, #20
 616              	.LVL59:
 617              		.loc 1 243 23 view .LVU207
 618 0010 0495     		str	r5, [sp, #16]
 619 0012 FFF7FEFF 		bl	memset
 620              	.LVL60:
 244:mp3.c         ****       unsigned char temp1[65] = {0};
 621              		.loc 1 244 7 is_stmt 1 view .LVU208
 622              		.loc 1 244 21 is_stmt 0 view .LVU209
 623 0016 3D22     		movs	r2, #61
 624 0018 2946     		mov	r1, r5
 625 001a 0EA8     		add	r0, sp, #56
 626 001c 0D95     		str	r5, [sp, #52]
 627 001e FFF7FEFF 		bl	memset
 628              	.LVL61:
 245:mp3.c         ****       unsigned char record[] = {"0:/Music/"};
 629              		.loc 1 245 7 is_stmt 1 view .LVU210
 630              		.loc 1 245 21 is_stmt 0 view .LVU211
 631 0022 A04A     		ldr	r2, .L58
 632 0024 01AB     		add	r3, sp, #4
 633 0026 1068     		ldr	r0, [r2]	@ unaligned
 634 0028 5168     		ldr	r1, [r2, #4]	@ unaligned
 635 002a 1289     		ldrh	r2, [r2, #8]	@ unaligned
 636 002c 03C3     		stmia	r3!, {r0, r1}
 637 002e 1A80     		strh	r2, [r3]	@ unaligned
 246:mp3.c         ****       for (a=0;a<65;a++) temp1[a] = 0;
 638              		.loc 1 246 7 is_stmt 1 view .LVU212
 639              	.LVL62:
 640              		.loc 1 246 16 view .LVU213
 245:mp3.c         ****       unsigned char record[] = {"0:/Music/"};
 641              		.loc 1 245 21 is_stmt 0 view .LVU214
 642 0030 4122     		movs	r2, #65
 643 0032 0DAB     		add	r3, sp, #52
 644              	.LVL63:
 645              	.L32:
 646              		.loc 1 246 26 is_stmt 1 discriminator 3 view .LVU215
 647 0034 013A     		subs	r2, r2, #1
 648              		.loc 1 246 7 is_stmt 0 discriminator 3 view .LVU216
 649 0036 12F0FF02 		ands	r2, r2, #255
 650              		.loc 1 246 35 discriminator 3 view .LVU217
 651 003a 03F8015B 		strb	r5, [r3], #1
 652              	.LVL64:
 653              		.loc 1 246 21 is_stmt 1 discriminator 3 view .LVU218
 654              		.loc 1 246 16 discriminator 3 view .LVU219
 655              		.loc 1 246 7 is_stmt 0 discriminator 3 view .LVU220
 656 003e F9D1     		bne	.L32
 657 0040 04A9     		add	r1, sp, #16
 658              		.loc 1 246 7 view .LVU221
 659 0042 2323     		movs	r3, #35
 660              	.LVL65:
 661              		.loc 1 246 7 view .LVU222
 662 0044 0E46     		mov	r6, r1
 663              	.L33:
 664              	.LVL66:
 247:mp3.c         ****       for (a=0;a<35;a++) temp[a] = 0;
 665              		.loc 1 247 26 is_stmt 1 discriminator 3 view .LVU223
 666 0046 013B     		subs	r3, r3, #1
 667              		.loc 1 247 7 is_stmt 0 discriminator 3 view .LVU224
 668 0048 13F0FF03 		ands	r3, r3, #255
 669              		.loc 1 247 34 discriminator 3 view .LVU225
 670 004c 01F8012B 		strb	r2, [r1], #1
 671              	.LVL67:
 672              		.loc 1 247 21 is_stmt 1 discriminator 3 view .LVU226
 673              		.loc 1 247 16 discriminator 3 view .LVU227
 674              		.loc 1 247 7 is_stmt 0 discriminator 3 view .LVU228
 675 0050 F9D1     		bne	.L33
 676 0052 9549     		ldr	r1, .L58+4
 677              	.LVL68:
 678              		.loc 1 247 7 view .LVU229
 679 0054 4125     		movs	r5, #65
 680 0056 0A46     		mov	r2, r1
 681              	.L34:
 682              	.LVL69:
 248:mp3.c         ****       for (a=0;a<65;a++) mp3.mp3name[a] = 0;
 683              		.loc 1 248 26 is_stmt 1 discriminator 3 view .LVU230
 684 0058 013D     		subs	r5, r5, #1
 685              		.loc 1 248 7 is_stmt 0 discriminator 3 view .LVU231
 686 005a 15F0FF05 		ands	r5, r5, #255
 687              		.loc 1 248 41 discriminator 3 view .LVU232
 688 005e 01F8013B 		strb	r3, [r1], #1
 689              	.LVL70:
 690              		.loc 1 248 21 is_stmt 1 discriminator 3 view .LVU233
 691              		.loc 1 248 16 discriminator 3 view .LVU234
 692              		.loc 1 248 7 is_stmt 0 discriminator 3 view .LVU235
 693 0062 F9D1     		bne	.L34
 249:mp3.c         ****       mp3.mp3name[0] = name[0];
 694              		.loc 1 249 7 is_stmt 1 view .LVU236
 695              		.loc 1 249 28 is_stmt 0 view .LVU237
 696 0064 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 697              		.loc 1 249 22 view .LVU238
 698 0066 1370     		strb	r3, [r2]
 250:mp3.c         ****       mp3.mp3name[1] = name[1];
 699              		.loc 1 250 7 is_stmt 1 view .LVU239
 700              		.loc 1 250 22 is_stmt 0 view .LVU240
 701 0068 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 702 006a 5370     		strb	r3, [r2, #1]
 251:mp3.c         ****       mp3.mp3name[2] = name[2];
 703              		.loc 1 251 7 is_stmt 1 view .LVU241
 704              		.loc 1 251 22 is_stmt 0 view .LVU242
 705 006c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 706 006e 9370     		strb	r3, [r2, #2]
 252:mp3.c         ****       mp3.mp3name[3] = name[3];
 707              		.loc 1 252 7 is_stmt 1 view .LVU243
 708              		.loc 1 252 22 is_stmt 0 view .LVU244
 709 0070 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 710 0072 D370     		strb	r3, [r2, #3]
 253:mp3.c         ****       if (name[25] == 0x2e && name[26] == 0) {
 711              		.loc 1 253 7 is_stmt 1 view .LVU245
 712              		.loc 1 253 10 is_stmt 0 view .LVU246
 713 0074 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 714 0076 2E2B     		cmp	r3, #46
 715 0078 40F0D080 		bne	.L35
 716              		.loc 1 253 28 discriminator 1 view .LVU247
 717 007c A37E     		ldrb	r3, [r4, #26]	@ zero_extendqisi2
 718 007e 002B     		cmp	r3, #0
 719 0080 40F0CC80 		bne	.L35
 254:mp3.c         **** 	 if (name[27] == 1) {
 720              		.loc 1 254 3 is_stmt 1 view .LVU248
 721              		.loc 1 254 11 is_stmt 0 view .LVU249
 722 0084 E37E     		ldrb	r3, [r4, #27]	@ zero_extendqisi2
 723              		.loc 1 254 6 view .LVU250
 724 0086 012B     		cmp	r3, #1
 725 0088 71D1     		bne	.L36
 255:mp3.c         **** 	    strcpy((char *)temp,(char *)&name[28]);
 726              		.loc 1 255 6 is_stmt 1 view .LVU251
 727 008a 3046     		mov	r0, r6
 728 008c 04F11C01 		add	r1, r4, #28
 729              	.LVL71:
 730              		.loc 1 255 6 is_stmt 0 view .LVU252
 731 0090 FFF7FEFF 		bl	strcpy
 732              	.LVL72:
 256:mp3.c         **** 	    for (a=23;a<65;a++)	name[a] = 0;
 733              		.loc 1 256 6 is_stmt 1 view .LVU253
 734              		.loc 1 256 16 view .LVU254
 735 0094 04F14007 		add	r7, r4, #64
 736 0098 04F11603 		add	r3, r4, #22
 737              	.LVL73:
 738              	.L37:
 739              		.loc 1 256 26 discriminator 3 view .LVU255
 740              		.loc 1 256 34 is_stmt 0 discriminator 3 view .LVU256
 741 009c 03F8015F 		strb	r5, [r3, #1]!
 742              		.loc 1 256 21 is_stmt 1 discriminator 3 view .LVU257
 743              		.loc 1 256 16 discriminator 3 view .LVU258
 744              		.loc 1 256 6 is_stmt 0 discriminator 3 view .LVU259
 745 00a0 BB42     		cmp	r3, r7
 746 00a2 FBD1     		bne	.L37
 257:mp3.c         **** 	    strcpy((char *)&name[23],(char *)temp);
 747              		.loc 1 257 6 is_stmt 1 view .LVU260
 748 00a4 3146     		mov	r1, r6
 749 00a6 04F11700 		add	r0, r4, #23
 750 00aa FFF7FEFF 		bl	strcpy
 751              	.LVL74:
 258:mp3.c         **** 	    strcpy((char *)temp1,(char *)&name[4]);
 752              		.loc 1 258 6 view .LVU261
 753 00ae 211D     		adds	r1, r4, #4
 754 00b0 0DA8     		add	r0, sp, #52
 755 00b2 FFF7FEFF 		bl	strcpy
 756              	.LVL75:
 259:mp3.c         **** 	    a = strlen((char *)temp1);
 757              		.loc 1 259 6 view .LVU262
 758              		.loc 1 259 10 is_stmt 0 view .LVU263
 759 00b6 0DA8     		add	r0, sp, #52
 760 00b8 FFF7FEFF 		bl	strlen
 761              	.LVL76:
 260:mp3.c         **** 	    strcpy((char *)lrc,(char *)temp1);
 762              		.loc 1 260 6 view .LVU264
 763 00bc 7B4B     		ldr	r3, .L58+8
 259:mp3.c         **** 	    a = strlen((char *)temp1);
 764              		.loc 1 259 10 view .LVU265
 765 00be 0646     		mov	r6, r0
 259:mp3.c         **** 	    a = strlen((char *)temp1);
 766              		.loc 1 259 8 view .LVU266
 767 00c0 C5B2     		uxtb	r5, r0
 768              	.LVL77:
 769              		.loc 1 260 6 is_stmt 1 view .LVU267
 770 00c2 0DA9     		add	r1, sp, #52
 771 00c4 1846     		mov	r0, r3
 772 00c6 FFF7FEFF 		bl	strcpy
 773              	.LVL78:
 261:mp3.c         **** 	    temp1[a] = '.';
 774              		.loc 1 261 15 is_stmt 0 view .LVU268
 775 00ca 4FF02E0C 		mov	ip, #46
 262:mp3.c         **** 	    temp1[a + 1] = 'm';
 776              		.loc 1 262 19 view .LVU269
 777 00ce 6D21     		movs	r1, #109
 260:mp3.c         **** 	    strcpy((char *)lrc,(char *)temp1);
 778              		.loc 1 260 6 view .LVU270
 779 00d0 0346     		mov	r3, r0
 261:mp3.c         **** 	    temp1[a] = '.';
 780              		.loc 1 261 6 is_stmt 1 view .LVU271
 263:mp3.c         **** 	    temp1[a + 2] = 'p';
 781              		.loc 1 263 19 is_stmt 0 view .LVU272
 782 00d2 4FF0700E 		mov	lr, #112
 261:mp3.c         **** 	    temp1[a] = '.';
 783              		.loc 1 261 15 view .LVU273
 784 00d6 1EAA     		add	r2, sp, #120
 785 00d8 3244     		add	r2, r2, r6
 786 00da 02F844CC 		strb	ip, [r2, #-68]
 262:mp3.c         **** 	    temp1[a + 1] = 'm';
 787              		.loc 1 262 6 is_stmt 1 view .LVU274
 262:mp3.c         **** 	    temp1[a + 1] = 'm';
 788              		.loc 1 262 14 is_stmt 0 view .LVU275
 789 00de 701C     		adds	r0, r6, #1
 262:mp3.c         **** 	    temp1[a + 1] = 'm';
 790              		.loc 1 262 19 view .LVU276
 791 00e0 1EAA     		add	r2, sp, #120
 792 00e2 0244     		add	r2, r2, r0
 793 00e4 02F8441C 		strb	r1, [r2, #-68]
 794              		.loc 1 263 6 is_stmt 1 view .LVU277
 795              		.loc 1 263 14 is_stmt 0 view .LVU278
 796 00e8 B11C     		adds	r1, r6, #2
 797              		.loc 1 263 19 view .LVU279
 798 00ea 1EAA     		add	r2, sp, #120
 799 00ec 0A44     		add	r2, r2, r1
 264:mp3.c         **** 	    temp1[a + 3] = '3';
 265:mp3.c         **** 	    lrc[a] = '.';
 800              		.loc 1 265 13 view .LVU280
 801 00ee 03F806C0 		strb	ip, [r3, r6]
 263:mp3.c         **** 	    temp1[a + 2] = 'p';
 802              		.loc 1 263 19 view .LVU281
 803 00f2 02F844EC 		strb	lr, [r2, #-68]
 264:mp3.c         **** 	    temp1[a + 3] = '3';
 804              		.loc 1 264 6 is_stmt 1 view .LVU282
 264:mp3.c         **** 	    temp1[a + 3] = '3';
 805              		.loc 1 264 14 is_stmt 0 view .LVU283
 806 00f6 F21C     		adds	r2, r6, #3
 266:mp3.c         **** 	    lrc[a + 1] = 'l';
 807              		.loc 1 266 17 view .LVU284
 808 00f8 6C26     		movs	r6, #108
 809 00fa 1E54     		strb	r6, [r3, r0]
 267:mp3.c         **** 	    lrc[a + 2] = 'r';
 810              		.loc 1 267 17 view .LVU285
 811 00fc 7220     		movs	r0, #114
 812 00fe 5854     		strb	r0, [r3, r1]
 268:mp3.c         **** 	    lrc[a + 3] = 'c';
 813              		.loc 1 268 17 view .LVU286
 814 0100 6321     		movs	r1, #99
 264:mp3.c         **** 	    lrc[a] = '.';
 815              		.loc 1 264 19 view .LVU287
 816 0102 4FF03308 		mov	r8, #51
 817              		.loc 1 268 17 view .LVU288
 818 0106 9954     		strb	r1, [r3, r2]
 269:mp3.c         **** 	    a = a + 4;
 270:mp3.c         **** 	    while (a < 55) temp1[a++] = 0;
 819              		.loc 1 270 32 view .LVU289
 820 0108 0021     		movs	r1, #0
 264:mp3.c         **** 	    lrc[a] = '.';
 821              		.loc 1 264 19 view .LVU290
 822 010a 0DF1780E 		add	lr, sp, #120
 823 010e 9644     		add	lr, lr, r2
 269:mp3.c         **** 	    a = a + 4;
 824              		.loc 1 269 8 view .LVU291
 825 0110 2B1D     		adds	r3, r5, #4
 264:mp3.c         **** 	    lrc[a] = '.';
 826              		.loc 1 264 19 view .LVU292
 827 0112 0EF8448C 		strb	r8, [lr, #-68]
 265:mp3.c         **** 	    lrc[a + 1] = 'l';
 828              		.loc 1 265 6 is_stmt 1 view .LVU293
 266:mp3.c         **** 	    lrc[a + 2] = 'r';
 829              		.loc 1 266 6 view .LVU294
 267:mp3.c         **** 	    lrc[a + 3] = 'c';
 830              		.loc 1 267 6 view .LVU295
 268:mp3.c         **** 	    a = a + 4;
 831              		.loc 1 268 6 view .LVU296
 269:mp3.c         **** 	    while (a < 55) temp1[a++] = 0;
 832              		.loc 1 269 6 view .LVU297
 833              	.LVL79:
 834              		.loc 1 270 6 view .LVU298
 835 0116 DBB2     		uxtb	r3, r3
 836              	.LVL80:
 837              	.L38:
 838              		.loc 1 270 12 discriminator 1 view .LVU299
 839 0118 DAB2     		uxtb	r2, r3
 840 011a 362A     		cmp	r2, #54
 841 011c 23D9     		bls	.L39
 271:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 842              		.loc 1 271 33 is_stmt 0 view .LVU300
 843 011e 0022     		movs	r2, #0
 844 0120 631E     		subs	r3, r4, #1
 845              	.LVL81:
 846              	.L40:
 847              		.loc 1 271 25 is_stmt 1 discriminator 3 view .LVU301
 848              		.loc 1 271 33 is_stmt 0 discriminator 3 view .LVU302
 849 0122 03F8012F 		strb	r2, [r3, #1]!
 850              		.loc 1 271 20 is_stmt 1 discriminator 3 view .LVU303
 851              		.loc 1 271 15 discriminator 3 view .LVU304
 852              		.loc 1 271 6 is_stmt 0 discriminator 3 view .LVU305
 853 0126 BB42     		cmp	r3, r7
 854 0128 FBD1     		bne	.L40
 855              	.L46:
 272:mp3.c         **** 	    strcpy((char *)name,(char *)record);
 856              		.loc 1 272 6 is_stmt 1 view .LVU306
 857 012a 01A9     		add	r1, sp, #4
 858 012c 2046     		mov	r0, r4
 859 012e FFF7FEFF 		bl	strcpy
 860              	.LVL82:
 273:mp3.c         **** 	    strcpy((char *)&name[9],(char *)temp1);
 861              		.loc 1 273 6 view .LVU307
 862 0132 0DA9     		add	r1, sp, #52
 863 0134 04F10900 		add	r0, r4, #9
 864 0138 FFF7FEFF 		bl	strcpy
 865              	.LVL83:
 274:mp3.c         **** 	    strcpy((char *)&mp3.mp3name[4],(char *)temp1);
 866              		.loc 1 274 6 view .LVU308
 867 013c 5C48     		ldr	r0, .L58+12
 868 013e 0DA9     		add	r1, sp, #52
 869 0140 FFF7FEFF 		bl	strcpy
 870              	.LVL84:
 871              	.L41:
 275:mp3.c         **** 	 } else if (name[27] == 0) {
 276:mp3.c         **** 	    strcpy((char *)temp,(char *)&name[28]);
 277:mp3.c         **** 	    for (a=22;a<65;a++) name[a] = 0;
 278:mp3.c         **** 	    strcpy((char *)&name[22],(char *)temp);
 279:mp3.c         **** 	    strcpy((char *)temp1,(char *)&name[4]);
 280:mp3.c         **** 	    a = strlen((char *)temp1);
 281:mp3.c         **** 	    strcpy((char *)lrc,(char *)temp1);
 282:mp3.c         **** 	    temp1[a] = '.';
 283:mp3.c         **** 	    temp1[a + 1] = 'm';
 284:mp3.c         **** 	    temp1[a + 2] = 'p';
 285:mp3.c         **** 	    temp1[a + 3] = '3';
 286:mp3.c         **** 	    lrc[a] = '.';
 287:mp3.c         **** 	    lrc[a + 1] = 'l';
 288:mp3.c         **** 	    lrc[a + 2] = 'r';
 289:mp3.c         **** 	    lrc[a + 3] = 'c';
 290:mp3.c         **** 	    a = a + 4;
 291:mp3.c         **** 	    while (a < 55) temp1[a++] = 0;
 292:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 293:mp3.c         **** 	    strcpy((char *)name,(char *)record);
 294:mp3.c         **** 	    strcpy((char *)&name[9],(char *)temp1);
 295:mp3.c         **** 	    strcpy((char *)&mp3.mp3name[4],(char *)temp1);
 296:mp3.c         **** 	 }
 297:mp3.c         ****       } else {
 298:mp3.c         **** 	 strcpy((char *)temp1,(char *)&name[4]);
 299:mp3.c         **** 	 a = strlen((char *)temp1);
 300:mp3.c         ****          strcpy((char *)lrc,(char *)temp1);
 301:mp3.c         **** 	 temp1[a] = '.';
 302:mp3.c         **** 	 temp1[a + 1] = 'm';
 303:mp3.c         **** 	 temp1[a + 2] = 'p';
 304:mp3.c         **** 	 temp1[a + 3] = '3';
 305:mp3.c         **** 	 lrc[a] = '.';
 306:mp3.c         **** 	 lrc[a + 1] = 'l';
 307:mp3.c         **** 	 lrc[a + 2] = 'r';
 308:mp3.c         **** 	 lrc[a + 3] = 'c';
 309:mp3.c         **** 	 a = a + 4;
 310:mp3.c         ****          while (a < 55) temp1[a++] = 0;
 311:mp3.c         **** 	 for (a=0;a<65;a++) name[a] = 0;
 312:mp3.c         **** 	 strcpy((char *)name,(char *)record);
 313:mp3.c         **** 	 strcpy((char *)&name[9],(char *)temp1);
 314:mp3.c         **** 	 strcpy((char *)&mp3.mp3name[4],(char *)temp1);
 315:mp3.c         ****       }
 316:mp3.c         ****       a = strlen((char *)mp3.mp3name);
 872              		.loc 1 316 7 view .LVU309
 873              		.loc 1 316 11 is_stmt 0 view .LVU310
 874 0144 584C     		ldr	r4, .L58+4
 875              	.LVL85:
 876              		.loc 1 316 11 view .LVU311
 877 0146 2046     		mov	r0, r4
 878 0148 FFF7FEFF 		bl	strlen
 879              	.LVL86:
 317:mp3.c         ****       mp3.mp3name[a - 1] = 0;
 880              		.loc 1 317 7 is_stmt 1 view .LVU312
 881              		.loc 1 317 26 is_stmt 0 view .LVU313
 882 014c 0023     		movs	r3, #0
 883 014e 2044     		add	r0, r0, r4
 884              	.LVL87:
 885              		.loc 1 317 26 view .LVU314
 886 0150 00F8013C 		strb	r3, [r0, #-1]
 318:mp3.c         ****       mp3.mp3name[a - 2] = 0;
 887              		.loc 1 318 7 is_stmt 1 view .LVU315
 888              		.loc 1 318 26 is_stmt 0 view .LVU316
 889 0154 00F8023C 		strb	r3, [r0, #-2]
 319:mp3.c         ****       mp3.mp3name[a - 3] = 0;
 890              		.loc 1 319 7 is_stmt 1 view .LVU317
 891              		.loc 1 319 26 is_stmt 0 view .LVU318
 892 0158 00F8033C 		strb	r3, [r0, #-3]
 320:mp3.c         ****       mp3.mp3name[a - 4] = 0;
 893              		.loc 1 320 7 is_stmt 1 view .LVU319
 894              		.loc 1 320 26 is_stmt 0 view .LVU320
 895 015c 00F8043C 		strb	r3, [r0, #-4]
 321:mp3.c         **** }
 896              		.loc 1 321 1 view .LVU321
 897 0160 1EB0     		add	sp, sp, #120
 898              		.cfi_remember_state
 899              		.cfi_def_cfa_offset 24
 900              		@ sp needed
 901 0162 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 902              	.LVL88:
 903              	.L39:
 904              		.cfi_restore_state
 270:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 905              		.loc 1 270 21 is_stmt 1 discriminator 2 view .LVU322
 270:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 906              		.loc 1 270 32 is_stmt 0 discriminator 2 view .LVU323
 907 0166 0DAA     		add	r2, sp, #52
 908 0168 D154     		strb	r1, [r2, r3]
 909 016a 0133     		adds	r3, r3, #1
 910              	.LVL89:
 270:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 911              		.loc 1 270 32 discriminator 2 view .LVU324
 912 016c D4E7     		b	.L38
 913              	.LVL90:
 914              	.L36:
 275:mp3.c         **** 	    strcpy((char *)temp,(char *)&name[28]);
 915              		.loc 1 275 10 is_stmt 1 view .LVU325
 275:mp3.c         **** 	    strcpy((char *)temp,(char *)&name[28]);
 916              		.loc 1 275 13 is_stmt 0 view .LVU326
 917 016e 002B     		cmp	r3, #0
 918 0170 E8D1     		bne	.L41
 276:mp3.c         **** 	    for (a=22;a<65;a++) name[a] = 0;
 919              		.loc 1 276 6 is_stmt 1 view .LVU327
 920 0172 3046     		mov	r0, r6
 921 0174 04F11C01 		add	r1, r4, #28
 922              	.LVL91:
 276:mp3.c         **** 	    for (a=22;a<65;a++) name[a] = 0;
 923              		.loc 1 276 6 is_stmt 0 view .LVU328
 924 0178 FFF7FEFF 		bl	strcpy
 925              	.LVL92:
 277:mp3.c         **** 	    strcpy((char *)&name[22],(char *)temp);
 926              		.loc 1 277 6 is_stmt 1 view .LVU329
 277:mp3.c         **** 	    strcpy((char *)&name[22],(char *)temp);
 927              		.loc 1 277 16 view .LVU330
 928 017c 04F14007 		add	r7, r4, #64
 929 0180 04F11503 		add	r3, r4, #21
 930              	.LVL93:
 931              	.L42:
 277:mp3.c         **** 	    strcpy((char *)&name[22],(char *)temp);
 932              		.loc 1 277 26 discriminator 3 view .LVU331
 277:mp3.c         **** 	    strcpy((char *)&name[22],(char *)temp);
 933              		.loc 1 277 34 is_stmt 0 discriminator 3 view .LVU332
 934 0184 03F8015F 		strb	r5, [r3, #1]!
 277:mp3.c         **** 	    strcpy((char *)&name[22],(char *)temp);
 935              		.loc 1 277 21 is_stmt 1 discriminator 3 view .LVU333
 277:mp3.c         **** 	    strcpy((char *)&name[22],(char *)temp);
 936              		.loc 1 277 16 discriminator 3 view .LVU334
 277:mp3.c         **** 	    strcpy((char *)&name[22],(char *)temp);
 937              		.loc 1 277 6 is_stmt 0 discriminator 3 view .LVU335
 938 0188 BB42     		cmp	r3, r7
 939 018a FBD1     		bne	.L42
 278:mp3.c         **** 	    strcpy((char *)temp1,(char *)&name[4]);
 940              		.loc 1 278 6 is_stmt 1 view .LVU336
 941 018c 3146     		mov	r1, r6
 942 018e 04F11600 		add	r0, r4, #22
 943 0192 FFF7FEFF 		bl	strcpy
 944              	.LVL94:
 279:mp3.c         **** 	    a = strlen((char *)temp1);
 945              		.loc 1 279 6 view .LVU337
 946 0196 211D     		adds	r1, r4, #4
 947 0198 0DA8     		add	r0, sp, #52
 948 019a FFF7FEFF 		bl	strcpy
 949              	.LVL95:
 280:mp3.c         **** 	    strcpy((char *)lrc,(char *)temp1);
 950              		.loc 1 280 6 view .LVU338
 280:mp3.c         **** 	    strcpy((char *)lrc,(char *)temp1);
 951              		.loc 1 280 10 is_stmt 0 view .LVU339
 952 019e 0DA8     		add	r0, sp, #52
 953 01a0 FFF7FEFF 		bl	strlen
 954              	.LVL96:
 281:mp3.c         **** 	    temp1[a] = '.';
 955              		.loc 1 281 6 view .LVU340
 956 01a4 414B     		ldr	r3, .L58+8
 280:mp3.c         **** 	    strcpy((char *)lrc,(char *)temp1);
 957              		.loc 1 280 10 view .LVU341
 958 01a6 0646     		mov	r6, r0
 280:mp3.c         **** 	    strcpy((char *)lrc,(char *)temp1);
 959              		.loc 1 280 8 view .LVU342
 960 01a8 C5B2     		uxtb	r5, r0
 961              	.LVL97:
 281:mp3.c         **** 	    temp1[a] = '.';
 962              		.loc 1 281 6 is_stmt 1 view .LVU343
 963 01aa 0DA9     		add	r1, sp, #52
 964 01ac 1846     		mov	r0, r3
 965 01ae FFF7FEFF 		bl	strcpy
 966              	.LVL98:
 282:mp3.c         **** 	    temp1[a + 1] = 'm';
 967              		.loc 1 282 15 is_stmt 0 view .LVU344
 968 01b2 4FF02E0C 		mov	ip, #46
 283:mp3.c         **** 	    temp1[a + 2] = 'p';
 969              		.loc 1 283 19 view .LVU345
 970 01b6 6D21     		movs	r1, #109
 281:mp3.c         **** 	    temp1[a] = '.';
 971              		.loc 1 281 6 view .LVU346
 972 01b8 0346     		mov	r3, r0
 282:mp3.c         **** 	    temp1[a + 1] = 'm';
 973              		.loc 1 282 6 is_stmt 1 view .LVU347
 284:mp3.c         **** 	    temp1[a + 3] = '3';
 974              		.loc 1 284 19 is_stmt 0 view .LVU348
 975 01ba 4FF0700E 		mov	lr, #112
 282:mp3.c         **** 	    temp1[a + 1] = 'm';
 976              		.loc 1 282 15 view .LVU349
 977 01be 1EAA     		add	r2, sp, #120
 978 01c0 3244     		add	r2, r2, r6
 979 01c2 02F844CC 		strb	ip, [r2, #-68]
 283:mp3.c         **** 	    temp1[a + 2] = 'p';
 980              		.loc 1 283 6 is_stmt 1 view .LVU350
 283:mp3.c         **** 	    temp1[a + 2] = 'p';
 981              		.loc 1 283 14 is_stmt 0 view .LVU351
 982 01c6 701C     		adds	r0, r6, #1
 283:mp3.c         **** 	    temp1[a + 2] = 'p';
 983              		.loc 1 283 19 view .LVU352
 984 01c8 1EAA     		add	r2, sp, #120
 985 01ca 0244     		add	r2, r2, r0
 986 01cc 02F8441C 		strb	r1, [r2, #-68]
 284:mp3.c         **** 	    temp1[a + 3] = '3';
 987              		.loc 1 284 6 is_stmt 1 view .LVU353
 284:mp3.c         **** 	    temp1[a + 3] = '3';
 988              		.loc 1 284 14 is_stmt 0 view .LVU354
 989 01d0 B11C     		adds	r1, r6, #2
 284:mp3.c         **** 	    temp1[a + 3] = '3';
 990              		.loc 1 284 19 view .LVU355
 991 01d2 1EAA     		add	r2, sp, #120
 992 01d4 0A44     		add	r2, r2, r1
 286:mp3.c         **** 	    lrc[a + 1] = 'l';
 993              		.loc 1 286 13 view .LVU356
 994 01d6 03F806C0 		strb	ip, [r3, r6]
 284:mp3.c         **** 	    temp1[a + 3] = '3';
 995              		.loc 1 284 19 view .LVU357
 996 01da 02F844EC 		strb	lr, [r2, #-68]
 285:mp3.c         **** 	    lrc[a] = '.';
 997              		.loc 1 285 6 is_stmt 1 view .LVU358
 285:mp3.c         **** 	    lrc[a] = '.';
 998              		.loc 1 285 14 is_stmt 0 view .LVU359
 999 01de F21C     		adds	r2, r6, #3
 287:mp3.c         **** 	    lrc[a + 2] = 'r';
 1000              		.loc 1 287 17 view .LVU360
 1001 01e0 6C26     		movs	r6, #108
 1002 01e2 1E54     		strb	r6, [r3, r0]
 288:mp3.c         **** 	    lrc[a + 3] = 'c';
 1003              		.loc 1 288 17 view .LVU361
 1004 01e4 7220     		movs	r0, #114
 1005 01e6 5854     		strb	r0, [r3, r1]
 289:mp3.c         **** 	    a = a + 4;
 1006              		.loc 1 289 17 view .LVU362
 1007 01e8 6321     		movs	r1, #99
 285:mp3.c         **** 	    lrc[a] = '.';
 1008              		.loc 1 285 19 view .LVU363
 1009 01ea 4FF03308 		mov	r8, #51
 289:mp3.c         **** 	    a = a + 4;
 1010              		.loc 1 289 17 view .LVU364
 1011 01ee 9954     		strb	r1, [r3, r2]
 291:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 1012              		.loc 1 291 32 view .LVU365
 1013 01f0 0021     		movs	r1, #0
 285:mp3.c         **** 	    lrc[a] = '.';
 1014              		.loc 1 285 19 view .LVU366
 1015 01f2 0DF1780E 		add	lr, sp, #120
 1016 01f6 9644     		add	lr, lr, r2
 290:mp3.c         **** 	    while (a < 55) temp1[a++] = 0;
 1017              		.loc 1 290 8 view .LVU367
 1018 01f8 2B1D     		adds	r3, r5, #4
 285:mp3.c         **** 	    lrc[a] = '.';
 1019              		.loc 1 285 19 view .LVU368
 1020 01fa 0EF8448C 		strb	r8, [lr, #-68]
 286:mp3.c         **** 	    lrc[a + 1] = 'l';
 1021              		.loc 1 286 6 is_stmt 1 view .LVU369
 287:mp3.c         **** 	    lrc[a + 2] = 'r';
 1022              		.loc 1 287 6 view .LVU370
 288:mp3.c         **** 	    lrc[a + 3] = 'c';
 1023              		.loc 1 288 6 view .LVU371
 289:mp3.c         **** 	    a = a + 4;
 1024              		.loc 1 289 6 view .LVU372
 290:mp3.c         **** 	    while (a < 55) temp1[a++] = 0;
 1025              		.loc 1 290 6 view .LVU373
 1026              	.LVL99:
 291:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 1027              		.loc 1 291 6 view .LVU374
 1028 01fe DBB2     		uxtb	r3, r3
 1029              	.LVL100:
 1030              	.L43:
 291:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 1031              		.loc 1 291 12 discriminator 1 view .LVU375
 1032 0200 DAB2     		uxtb	r2, r3
 1033 0202 362A     		cmp	r2, #54
 1034 0204 06D9     		bls	.L44
 292:mp3.c         **** 	    strcpy((char *)name,(char *)record);
 1035              		.loc 1 292 33 is_stmt 0 view .LVU376
 1036 0206 0022     		movs	r2, #0
 1037 0208 631E     		subs	r3, r4, #1
 1038              	.LVL101:
 1039              	.L45:
 292:mp3.c         **** 	    strcpy((char *)name,(char *)record);
 1040              		.loc 1 292 25 is_stmt 1 discriminator 3 view .LVU377
 292:mp3.c         **** 	    strcpy((char *)name,(char *)record);
 1041              		.loc 1 292 33 is_stmt 0 discriminator 3 view .LVU378
 1042 020a 03F8012F 		strb	r2, [r3, #1]!
 292:mp3.c         **** 	    strcpy((char *)name,(char *)record);
 1043              		.loc 1 292 20 is_stmt 1 discriminator 3 view .LVU379
 292:mp3.c         **** 	    strcpy((char *)name,(char *)record);
 1044              		.loc 1 292 15 discriminator 3 view .LVU380
 292:mp3.c         **** 	    strcpy((char *)name,(char *)record);
 1045              		.loc 1 292 6 is_stmt 0 discriminator 3 view .LVU381
 1046 020e BB42     		cmp	r3, r7
 1047 0210 FBD1     		bne	.L45
 1048 0212 8AE7     		b	.L46
 1049              	.LVL102:
 1050              	.L44:
 291:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 1051              		.loc 1 291 21 is_stmt 1 discriminator 2 view .LVU382
 291:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 1052              		.loc 1 291 32 is_stmt 0 discriminator 2 view .LVU383
 1053 0214 0DAA     		add	r2, sp, #52
 1054 0216 D154     		strb	r1, [r2, r3]
 1055 0218 0133     		adds	r3, r3, #1
 1056              	.LVL103:
 291:mp3.c         **** 	    for (a=0;a<65;a++) name[a] = 0;
 1057              		.loc 1 291 32 discriminator 2 view .LVU384
 1058 021a F1E7     		b	.L43
 1059              	.LVL104:
 1060              	.L35:
 298:mp3.c         **** 	 a = strlen((char *)temp1);
 1061              		.loc 1 298 3 is_stmt 1 view .LVU385
 1062 021c 211D     		adds	r1, r4, #4
 1063              	.LVL105:
 298:mp3.c         **** 	 a = strlen((char *)temp1);
 1064              		.loc 1 298 3 is_stmt 0 view .LVU386
 1065 021e 0DA8     		add	r0, sp, #52
 1066 0220 FFF7FEFF 		bl	strcpy
 1067              	.LVL106:
 299:mp3.c         ****          strcpy((char *)lrc,(char *)temp1);
 1068              		.loc 1 299 3 is_stmt 1 view .LVU387
 299:mp3.c         ****          strcpy((char *)lrc,(char *)temp1);
 1069              		.loc 1 299 7 is_stmt 0 view .LVU388
 1070 0224 0DA8     		add	r0, sp, #52
 1071 0226 FFF7FEFF 		bl	strlen
 1072              	.LVL107:
 300:mp3.c         **** 	 temp1[a] = '.';
 1073              		.loc 1 300 10 view .LVU389
 1074 022a 204B     		ldr	r3, .L58+8
 299:mp3.c         ****          strcpy((char *)lrc,(char *)temp1);
 1075              		.loc 1 299 7 view .LVU390
 1076 022c 0646     		mov	r6, r0
 299:mp3.c         ****          strcpy((char *)lrc,(char *)temp1);
 1077              		.loc 1 299 5 view .LVU391
 1078 022e C5B2     		uxtb	r5, r0
 1079              	.LVL108:
 300:mp3.c         **** 	 temp1[a] = '.';
 1080              		.loc 1 300 10 is_stmt 1 view .LVU392
 1081 0230 0DA9     		add	r1, sp, #52
 1082 0232 1846     		mov	r0, r3
 1083 0234 FFF7FEFF 		bl	strcpy
 1084              	.LVL109:
 301:mp3.c         **** 	 temp1[a + 1] = 'm';
 1085              		.loc 1 301 12 is_stmt 0 view .LVU393
 1086 0238 2E27     		movs	r7, #46
 302:mp3.c         **** 	 temp1[a + 2] = 'p';
 1087              		.loc 1 302 16 view .LVU394
 1088 023a 6D21     		movs	r1, #109
 300:mp3.c         **** 	 temp1[a] = '.';
 1089              		.loc 1 300 10 view .LVU395
 1090 023c 0346     		mov	r3, r0
 301:mp3.c         **** 	 temp1[a + 1] = 'm';
 1091              		.loc 1 301 3 is_stmt 1 view .LVU396
 303:mp3.c         **** 	 temp1[a + 3] = '3';
 1092              		.loc 1 303 16 is_stmt 0 view .LVU397
 1093 023e 4FF0700C 		mov	ip, #112
 301:mp3.c         **** 	 temp1[a + 1] = 'm';
 1094              		.loc 1 301 12 view .LVU398
 1095 0242 1EAA     		add	r2, sp, #120
 1096 0244 3244     		add	r2, r2, r6
 1097 0246 02F8447C 		strb	r7, [r2, #-68]
 302:mp3.c         **** 	 temp1[a + 2] = 'p';
 1098              		.loc 1 302 3 is_stmt 1 view .LVU399
 302:mp3.c         **** 	 temp1[a + 2] = 'p';
 1099              		.loc 1 302 11 is_stmt 0 view .LVU400
 1100 024a 701C     		adds	r0, r6, #1
 302:mp3.c         **** 	 temp1[a + 2] = 'p';
 1101              		.loc 1 302 16 view .LVU401
 1102 024c 1EAA     		add	r2, sp, #120
 1103 024e 0244     		add	r2, r2, r0
 1104 0250 02F8441C 		strb	r1, [r2, #-68]
 303:mp3.c         **** 	 temp1[a + 3] = '3';
 1105              		.loc 1 303 3 is_stmt 1 view .LVU402
 303:mp3.c         **** 	 temp1[a + 3] = '3';
 1106              		.loc 1 303 11 is_stmt 0 view .LVU403
 1107 0254 B11C     		adds	r1, r6, #2
 303:mp3.c         **** 	 temp1[a + 3] = '3';
 1108              		.loc 1 303 16 view .LVU404
 1109 0256 1EAA     		add	r2, sp, #120
 1110 0258 0A44     		add	r2, r2, r1
 305:mp3.c         **** 	 lrc[a + 1] = 'l';
 1111              		.loc 1 305 10 view .LVU405
 1112 025a 9F55     		strb	r7, [r3, r6]
 303:mp3.c         **** 	 temp1[a + 3] = '3';
 1113              		.loc 1 303 16 view .LVU406
 1114 025c 02F844CC 		strb	ip, [r2, #-68]
 304:mp3.c         **** 	 lrc[a] = '.';
 1115              		.loc 1 304 3 is_stmt 1 view .LVU407
 304:mp3.c         **** 	 lrc[a] = '.';
 1116              		.loc 1 304 11 is_stmt 0 view .LVU408
 1117 0260 F21C     		adds	r2, r6, #3
 306:mp3.c         **** 	 lrc[a + 2] = 'r';
 1118              		.loc 1 306 14 view .LVU409
 1119 0262 6C26     		movs	r6, #108
 1120 0264 1E54     		strb	r6, [r3, r0]
 307:mp3.c         **** 	 lrc[a + 3] = 'c';
 1121              		.loc 1 307 14 view .LVU410
 1122 0266 7220     		movs	r0, #114
 1123 0268 5854     		strb	r0, [r3, r1]
 308:mp3.c         **** 	 a = a + 4;
 1124              		.loc 1 308 14 view .LVU411
 1125 026a 6321     		movs	r1, #99
 304:mp3.c         **** 	 lrc[a] = '.';
 1126              		.loc 1 304 16 view .LVU412
 1127 026c 4FF0330E 		mov	lr, #51
 308:mp3.c         **** 	 a = a + 4;
 1128              		.loc 1 308 14 view .LVU413
 1129 0270 9954     		strb	r1, [r3, r2]
 310:mp3.c         **** 	 for (a=0;a<65;a++) name[a] = 0;
 1130              		.loc 1 310 36 view .LVU414
 1131 0272 0021     		movs	r1, #0
 304:mp3.c         **** 	 lrc[a] = '.';
 1132              		.loc 1 304 16 view .LVU415
 1133 0274 0DF1780C 		add	ip, sp, #120
 1134 0278 9444     		add	ip, ip, r2
 309:mp3.c         ****          while (a < 55) temp1[a++] = 0;
 1135              		.loc 1 309 5 view .LVU416
 1136 027a 2B1D     		adds	r3, r5, #4
 304:mp3.c         **** 	 lrc[a] = '.';
 1137              		.loc 1 304 16 view .LVU417
 1138 027c 0CF844EC 		strb	lr, [ip, #-68]
 305:mp3.c         **** 	 lrc[a + 1] = 'l';
 1139              		.loc 1 305 3 is_stmt 1 view .LVU418
 306:mp3.c         **** 	 lrc[a + 2] = 'r';
 1140              		.loc 1 306 3 view .LVU419
 307:mp3.c         **** 	 lrc[a + 3] = 'c';
 1141              		.loc 1 307 3 view .LVU420
 308:mp3.c         **** 	 a = a + 4;
 1142              		.loc 1 308 3 view .LVU421
 309:mp3.c         ****          while (a < 55) temp1[a++] = 0;
 1143              		.loc 1 309 3 view .LVU422
 1144              	.LVL110:
 310:mp3.c         **** 	 for (a=0;a<65;a++) name[a] = 0;
 1145              		.loc 1 310 10 view .LVU423
 1146 0280 DBB2     		uxtb	r3, r3
 1147              	.LVL111:
 1148              	.L47:
 310:mp3.c         **** 	 for (a=0;a<65;a++) name[a] = 0;
 1149              		.loc 1 310 16 discriminator 1 view .LVU424
 1150 0282 DAB2     		uxtb	r2, r3
 1151 0284 362A     		cmp	r2, #54
 1152 0286 08D9     		bls	.L48
 311:mp3.c         **** 	 strcpy((char *)name,(char *)record);
 1153              		.loc 1 311 30 is_stmt 0 view .LVU425
 1154 0288 0021     		movs	r1, #0
 1155 028a 631E     		subs	r3, r4, #1
 1156              	.LVL112:
 311:mp3.c         **** 	 strcpy((char *)name,(char *)record);
 1157              		.loc 1 311 30 view .LVU426
 1158 028c 04F14002 		add	r2, r4, #64
 1159              	.LVL113:
 1160              	.L49:
 311:mp3.c         **** 	 strcpy((char *)name,(char *)record);
 1161              		.loc 1 311 22 is_stmt 1 discriminator 3 view .LVU427
 311:mp3.c         **** 	 strcpy((char *)name,(char *)record);
 1162              		.loc 1 311 30 is_stmt 0 discriminator 3 view .LVU428
 1163 0290 03F8011F 		strb	r1, [r3, #1]!
 311:mp3.c         **** 	 strcpy((char *)name,(char *)record);
 1164              		.loc 1 311 17 is_stmt 1 discriminator 3 view .LVU429
 311:mp3.c         **** 	 strcpy((char *)name,(char *)record);
 1165              		.loc 1 311 12 discriminator 3 view .LVU430
 311:mp3.c         **** 	 strcpy((char *)name,(char *)record);
 1166              		.loc 1 311 3 is_stmt 0 discriminator 3 view .LVU431
 1167 0294 9342     		cmp	r3, r2
 1168 0296 FBD1     		bne	.L49
 1169 0298 47E7     		b	.L46
 1170              	.LVL114:
 1171              	.L48:
 310:mp3.c         **** 	 for (a=0;a<65;a++) name[a] = 0;
 1172              		.loc 1 310 25 is_stmt 1 discriminator 2 view .LVU432
 310:mp3.c         **** 	 for (a=0;a<65;a++) name[a] = 0;
 1173              		.loc 1 310 36 is_stmt 0 discriminator 2 view .LVU433
 1174 029a 0DAA     		add	r2, sp, #52
 1175 029c D154     		strb	r1, [r2, r3]
 1176 029e 0133     		adds	r3, r3, #1
 1177              	.LVL115:
 310:mp3.c         **** 	 for (a=0;a<65;a++) name[a] = 0;
 1178              		.loc 1 310 36 discriminator 2 view .LVU434
 1179 02a0 EFE7     		b	.L47
 1180              	.L59:
 1181 02a2 00BF     		.align	2
 1182              	.L58:
 1183 02a4 00000000 		.word	.LC0
 1184 02a8 00000000 		.word	mp3
 1185 02ac 00000000 		.word	lrc
 1186 02b0 04000000 		.word	mp3+4
 1187              		.cfi_endproc
 1188              	.LFE36:
 1190              		.section	.rodata.find_music.str1.1,"aMS",%progbits,1
 1191              	.LC1:
 1192 0000 303A2F4D 		.ascii	"0:/Music\000"
 1192      75736963 
 1192      00
 1193              		.section	.text.find_music,"ax",%progbits
 1194              		.align	1
 1195              		.global	find_music
 1196              		.syntax unified
 1197              		.thumb
 1198              		.thumb_func
 1199              		.fpu softvfp
 1201              	find_music:
 1202              	.LFB37:
 322:mp3.c         **** 
 323:mp3.c         **** 
 324:mp3.c         **** unsigned char find_music (void)
 325:mp3.c         **** {
 1203              		.loc 1 325 1 is_stmt 1 view -0
 1204              		.cfi_startproc
 1205              		@ args = 0, pretend = 0, frame = 0
 1206              		@ frame_needed = 0, uses_anonymous_args = 0
 326:mp3.c         ****       dlink before = 0;
 1207              		.loc 1 326 7 view .LVU436
 1208              	.LVL116:
 327:mp3.c         ****       dlink new_node;
 1209              		.loc 1 327 7 view .LVU437
 328:mp3.c         ****       unsigned char file = 0, i;
 1210              		.loc 1 328 7 view .LVU438
 329:mp3.c         ****       char *fn;
 1211              		.loc 1 329 7 view .LVU439
 330:mp3.c         **** #if _USE_LFN
 331:mp3.c         ****       static char lfn[_MAX_LFN * (_DF1S ? 2 : 1) + 1];
 332:mp3.c         ****       fno.lfname = lfn;
 333:mp3.c         ****       fno.lfsize = sizeof(lfn);
 334:mp3.c         **** #endif
 335:mp3.c         ****       res = f_opendir(&dirs, "0:/Music");
 1212              		.loc 1 335 7 view .LVU440
 325:mp3.c         ****       dlink before = 0;
 1213              		.loc 1 325 1 is_stmt 0 view .LVU441
 1214 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1215              		.cfi_def_cfa_offset 32
 1216              		.cfi_offset 4, -32
 1217              		.cfi_offset 5, -28
 1218              		.cfi_offset 6, -24
 1219              		.cfi_offset 7, -20
 1220              		.cfi_offset 8, -16
 1221              		.cfi_offset 9, -12
 1222              		.cfi_offset 10, -8
 1223              		.cfi_offset 14, -4
 1224              		.loc 1 335 13 view .LVU442
 1225 0004 3049     		ldr	r1, .L84
 1226 0006 3148     		ldr	r0, .L84+4
 1227 0008 FFF7FEFF 		bl	f_opendir
 1228              	.LVL117:
 1229              		.loc 1 335 11 view .LVU443
 1230 000c 304B     		ldr	r3, .L84+8
 1231              		.loc 1 335 13 view .LVU444
 1232 000e 0446     		mov	r4, r0
 1233              		.loc 1 335 11 view .LVU445
 1234 0010 1870     		strb	r0, [r3]
 336:mp3.c         ****       if (res == FR_OK) {
 1235              		.loc 1 336 7 is_stmt 1 view .LVU446
 1236              		.loc 1 336 10 is_stmt 0 view .LVU447
 1237 0012 0028     		cmp	r0, #0
 1238 0014 4FD0     		beq	.L68
 1239              	.L66:
 337:mp3.c         ****          while ((f_readdir(&dirs, &fno) == FR_OK) && fno.fname[0]) {
 338:mp3.c         **** #if _USE_LFN
 339:mp3.c         ****                fn = *fno.lfname ? fno.lfname : fno.fname;
 340:mp3.c         **** #else
 341:mp3.c         ****                fn = fno.fname;
 342:mp3.c         **** #endif
 343:mp3.c         **** 	       i = strlen(fn);
 344:mp3.c         **** 	       if (strcasecmp(&fn[i-3],music_extend[0]) == 0 || strcasecmp(&fn[i-3],music_extend[1]) == 0 
 345:mp3.c         **** 	          file++;
 346:mp3.c         **** 	          if (file == 1) {
 347:mp3.c         **** 		     head = (dlink)malloc(sizeof(dnode));
 348:mp3.c         **** 		     if (!head) return 0;
 349:mp3.c         **** 		     strcpy(head->filename,fn);
 350:mp3.c         **** 		     head->next = NULL;
 351:mp3.c         **** 		     head->back = NULL;
 352:mp3.c         **** 		     before = head;
 353:mp3.c         ****                   } else {
 354:mp3.c         **** 		     new_node = (dlink)malloc(sizeof(dnode));
 355:mp3.c         **** 		     if (!new_node) return 0;
 356:mp3.c         ****                      strcpy(new_node->filename,fn);
 357:mp3.c         ****                      new_node->next = NULL;
 358:mp3.c         **** 		     new_node->back = before;
 359:mp3.c         **** 		     before->next = new_node;
 360:mp3.c         **** 		     before = new_node;
 361:mp3.c         **** 	          }
 362:mp3.c         **** 	       }
 363:mp3.c         **** 	       //lcd_printf(2,3+file," %s ",fn);
 364:mp3.c         ****          }
 365:mp3.c         **** 	 return file;
 366:mp3.c         ****       }
 367:mp3.c         ****       return 0;
 1240              		.loc 1 367 14 view .LVU448
 1241 0016 0024     		movs	r4, #0
 1242              	.L62:
 368:mp3.c         **** }
 1243              		.loc 1 368 1 view .LVU449
 1244 0018 2046     		mov	r0, r4
 1245 001a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1246              	.LVL118:
 1247              	.L67:
 1248              	.LBB111:
 1249              	.LBB112:
 341:mp3.c         **** #endif
 1250              		.loc 1 341 16 is_stmt 1 view .LVU450
 343:mp3.c         **** 	       if (strcasecmp(&fn[i-3],music_extend[0]) == 0 || strcasecmp(&fn[i-3],music_extend[1]) == 0 
 1251              		.loc 1 343 9 view .LVU451
 343:mp3.c         **** 	       if (strcasecmp(&fn[i-3],music_extend[0]) == 0 || strcasecmp(&fn[i-3],music_extend[1]) == 0 
 1252              		.loc 1 343 13 is_stmt 0 view .LVU452
 1253 001e 2D48     		ldr	r0, .L84+12
 1254              	.LVL119:
 343:mp3.c         **** 	       if (strcasecmp(&fn[i-3],music_extend[0]) == 0 || strcasecmp(&fn[i-3],music_extend[1]) == 0 
 1255              		.loc 1 343 13 view .LVU453
 1256 0020 FFF7FEFF 		bl	strlen
 1257              	.LVL120:
 344:mp3.c         **** 	          file++;
 1258              		.loc 1 344 9 is_stmt 1 view .LVU454
 344:mp3.c         **** 	          file++;
 1259              		.loc 1 344 13 is_stmt 0 view .LVU455
 1260 0024 DFF8B8A0 		ldr	r10, .L84+24
 344:mp3.c         **** 	          file++;
 1261              		.loc 1 344 27 view .LVU456
 1262 0028 C61E     		subs	r6, r0, #3
 344:mp3.c         **** 	          file++;
 1263              		.loc 1 344 24 view .LVU457
 1264 002a 3E44     		add	r6, r6, r7
 344:mp3.c         **** 	          file++;
 1265              		.loc 1 344 13 view .LVU458
 1266 002c 3046     		mov	r0, r6
 1267              	.LVL121:
 344:mp3.c         **** 	          file++;
 1268              		.loc 1 344 13 view .LVU459
 1269 002e DAF80010 		ldr	r1, [r10]
 1270 0032 FFF7FEFF 		bl	strcasecmp
 1271              	.LVL122:
 344:mp3.c         **** 	          file++;
 1272              		.loc 1 344 12 view .LVU460
 1273 0036 88B1     		cbz	r0, .L63
 344:mp3.c         **** 	          file++;
 1274              		.loc 1 344 58 view .LVU461
 1275 0038 3046     		mov	r0, r6
 1276 003a DAF80410 		ldr	r1, [r10, #4]
 1277 003e FFF7FEFF 		bl	strcasecmp
 1278              	.LVL123:
 344:mp3.c         **** 	          file++;
 1279              		.loc 1 344 55 view .LVU462
 1280 0042 58B1     		cbz	r0, .L63
 344:mp3.c         **** 	          file++;
 1281              		.loc 1 344 103 view .LVU463
 1282 0044 3046     		mov	r0, r6
 1283 0046 DAF80810 		ldr	r1, [r10, #8]
 1284 004a FFF7FEFF 		bl	strcasecmp
 1285              	.LVL124:
 344:mp3.c         **** 	          file++;
 1286              		.loc 1 344 100 view .LVU464
 1287 004e 28B1     		cbz	r0, .L63
 344:mp3.c         **** 	          file++;
 1288              		.loc 1 344 148 view .LVU465
 1289 0050 3046     		mov	r0, r6
 1290 0052 DAF80C10 		ldr	r1, [r10, #12]
 1291 0056 FFF7FEFF 		bl	strcasecmp
 1292              	.LVL125:
 344:mp3.c         **** 	          file++;
 1293              		.loc 1 344 145 view .LVU466
 1294 005a 90B9     		cbnz	r0, .L61
 1295              	.L63:
 345:mp3.c         **** 	          if (file == 1) {
 1296              		.loc 1 345 12 is_stmt 1 view .LVU467
 345:mp3.c         **** 	          if (file == 1) {
 1297              		.loc 1 345 16 is_stmt 0 view .LVU468
 1298 005c 0134     		adds	r4, r4, #1
 1299              	.LVL126:
 345:mp3.c         **** 	          if (file == 1) {
 1300              		.loc 1 345 16 view .LVU469
 1301 005e E4B2     		uxtb	r4, r4
 1302              	.LVL127:
 346:mp3.c         **** 		     head = (dlink)malloc(sizeof(dnode));
 1303              		.loc 1 346 12 is_stmt 1 view .LVU470
 346:mp3.c         **** 		     head = (dlink)malloc(sizeof(dnode));
 1304              		.loc 1 346 15 is_stmt 0 view .LVU471
 1305 0060 012C     		cmp	r4, #1
 347:mp3.c         **** 		     if (!head) return 0;
 1306              		.loc 1 347 22 view .LVU472
 1307 0062 4FF0A000 		mov	r0, #160
 346:mp3.c         **** 		     head = (dlink)malloc(sizeof(dnode));
 1308              		.loc 1 346 15 view .LVU473
 1309 0066 17D1     		bne	.L65
 347:mp3.c         **** 		     if (!head) return 0;
 1310              		.loc 1 347 8 is_stmt 1 view .LVU474
 347:mp3.c         **** 		     if (!head) return 0;
 1311              		.loc 1 347 22 is_stmt 0 view .LVU475
 1312 0068 FFF7FEFF 		bl	malloc
 1313              	.LVL128:
 347:mp3.c         **** 		     if (!head) return 0;
 1314              		.loc 1 347 13 view .LVU476
 1315 006c 1A4B     		ldr	r3, .L84+16
 347:mp3.c         **** 		     if (!head) return 0;
 1316              		.loc 1 347 22 view .LVU477
 1317 006e 0546     		mov	r5, r0
 1318              	.LVL129:
 347:mp3.c         **** 		     if (!head) return 0;
 1319              		.loc 1 347 13 view .LVU478
 1320 0070 1860     		str	r0, [r3]
 348:mp3.c         **** 		     strcpy(head->filename,fn);
 1321              		.loc 1 348 8 is_stmt 1 view .LVU479
 348:mp3.c         **** 		     strcpy(head->filename,fn);
 1322              		.loc 1 348 11 is_stmt 0 view .LVU480
 1323 0072 0028     		cmp	r0, #0
 1324 0074 CFD0     		beq	.L66
 349:mp3.c         **** 		     head->next = NULL;
 1325              		.loc 1 349 8 is_stmt 1 view .LVU481
 1326 0076 3946     		mov	r1, r7
 1327 0078 FFF7FEFF 		bl	strcpy
 1328              	.LVL130:
 350:mp3.c         **** 		     head->back = NULL;
 1329              		.loc 1 350 8 view .LVU482
 350:mp3.c         **** 		     head->back = NULL;
 1330              		.loc 1 350 19 is_stmt 0 view .LVU483
 1331 007c 0023     		movs	r3, #0
 351:mp3.c         **** 		     before = head;
 1332              		.loc 1 351 19 view .LVU484
 1333 007e C5E92633 		strd	r3, r3, [r5, #152]
 352:mp3.c         ****                   } else {
 1334              		.loc 1 352 8 is_stmt 1 view .LVU485
 1335              	.LVL131:
 1336              	.L61:
 337:mp3.c         **** #if _USE_LFN
 1337              		.loc 1 337 16 view .LVU486
 337:mp3.c         **** #if _USE_LFN
 1338              		.loc 1 337 18 is_stmt 0 view .LVU487
 1339 0082 4846     		mov	r0, r9
 1340 0084 1549     		ldr	r1, .L84+20
 1341 0086 FFF7FEFF 		bl	f_readdir
 1342              	.LVL132:
 337:mp3.c         **** #if _USE_LFN
 1343              		.loc 1 337 16 view .LVU488
 1344 008a 0028     		cmp	r0, #0
 1345 008c C4D1     		bne	.L62
 337:mp3.c         **** #if _USE_LFN
 1346              		.loc 1 337 51 view .LVU489
 1347 008e 98F80930 		ldrb	r3, [r8, #9]	@ zero_extendqisi2
 1348 0092 002B     		cmp	r3, #0
 1349 0094 C3D1     		bne	.L67
 1350 0096 BFE7     		b	.L62
 1351              	.LVL133:
 1352              	.L65:
 354:mp3.c         **** 		     if (!new_node) return 0;
 1353              		.loc 1 354 8 is_stmt 1 view .LVU490
 354:mp3.c         **** 		     if (!new_node) return 0;
 1354              		.loc 1 354 26 is_stmt 0 view .LVU491
 1355 0098 FFF7FEFF 		bl	malloc
 1356              	.LVL134:
 355:mp3.c         ****                      strcpy(new_node->filename,fn);
 1357              		.loc 1 355 8 is_stmt 1 view .LVU492
 355:mp3.c         ****                      strcpy(new_node->filename,fn);
 1358              		.loc 1 355 11 is_stmt 0 view .LVU493
 1359 009c 0646     		mov	r6, r0
 1360 009e 0028     		cmp	r0, #0
 1361 00a0 B9D0     		beq	.L66
 356:mp3.c         ****                      new_node->next = NULL;
 1362              		.loc 1 356 22 is_stmt 1 view .LVU494
 1363 00a2 3946     		mov	r1, r7
 1364 00a4 FFF7FEFF 		bl	strcpy
 1365              	.LVL135:
 357:mp3.c         **** 		     new_node->back = before;
 1366              		.loc 1 357 22 view .LVU495
 357:mp3.c         **** 		     new_node->back = before;
 1367              		.loc 1 357 37 is_stmt 0 view .LVU496
 1368 00a8 0023     		movs	r3, #0
 358:mp3.c         **** 		     before->next = new_node;
 1369              		.loc 1 358 23 view .LVU497
 1370 00aa C6E92635 		strd	r3, r5, [r6, #152]
 359:mp3.c         **** 		     before = new_node;
 1371              		.loc 1 359 8 is_stmt 1 view .LVU498
 359:mp3.c         **** 		     before = new_node;
 1372              		.loc 1 359 21 is_stmt 0 view .LVU499
 1373 00ae C5F89860 		str	r6, [r5, #152]
 360:mp3.c         **** 	          }
 1374              		.loc 1 360 8 is_stmt 1 view .LVU500
 1375              	.LVL136:
 359:mp3.c         **** 		     before = new_node;
 1376              		.loc 1 359 21 is_stmt 0 view .LVU501
 1377 00b2 3546     		mov	r5, r6
 1378 00b4 E5E7     		b	.L61
 1379              	.LVL137:
 1380              	.L68:
 337:mp3.c         **** #if _USE_LFN
 1381              		.loc 1 337 18 view .LVU502
 1382 00b6 DFF82480 		ldr	r8, .L84+20
 326:mp3.c         ****       dlink new_node;
 1383              		.loc 1 326 13 view .LVU503
 1384 00ba 0546     		mov	r5, r0
 337:mp3.c         **** #if _USE_LFN
 1385              		.loc 1 337 18 view .LVU504
 1386 00bc DFF80C90 		ldr	r9, .L84+4
 343:mp3.c         **** 	       if (strcasecmp(&fn[i-3],music_extend[0]) == 0 || strcasecmp(&fn[i-3],music_extend[1]) == 0 
 1387              		.loc 1 343 13 view .LVU505
 1388 00c0 08F10907 		add	r7, r8, #9
 1389 00c4 DDE7     		b	.L61
 1390              	.L85:
 1391 00c6 00BF     		.align	2
 1392              	.L84:
 1393 00c8 00000000 		.word	.LC1
 1394 00cc 00000000 		.word	dirs
 1395 00d0 00000000 		.word	res
 1396 00d4 09000000 		.word	fno+9
 1397 00d8 00000000 		.word	head
 1398 00dc 00000000 		.word	fno
 1399 00e0 00000000 		.word	.LANCHOR3
 1400              	.LBE112:
 1401              	.LBE111:
 1402              		.cfi_endproc
 1403              	.LFE37:
 1405              		.section	.text.filtrate_music,"ax",%progbits
 1406              		.align	1
 1407              		.global	filtrate_music
 1408              		.syntax unified
 1409              		.thumb
 1410              		.thumb_func
 1411              		.fpu softvfp
 1413              	filtrate_music:
 1414              	.LFB35:
 156:mp3.c         ****       BOOL flag;
 1415              		.loc 1 156 1 is_stmt 1 view -0
 1416              		.cfi_startproc
 1417              		@ args = 0, pretend = 0, frame = 112
 1418              		@ frame_needed = 0, uses_anonymous_args = 0
 157:mp3.c         ****       unsigned char temp[69];
 1419              		.loc 1 157 7 view .LVU507
 158:mp3.c         ****       unsigned char temp1[35],a;
 1420              		.loc 1 158 7 view .LVU508
 159:mp3.c         ****       unsigned short i,j,k,l;
 1421              		.loc 1 159 7 view .LVU509
 160:mp3.c         ****       unsigned short m;
 1422              		.loc 1 160 7 view .LVU510
 161:mp3.c         ****       music_number = find_music();
 1423              		.loc 1 161 7 view .LVU511
 162:mp3.c         ****       for (i=1;i<=music_number;i++) {
 1424              		.loc 1 162 7 view .LVU512
 156:mp3.c         ****       BOOL flag;
 1425              		.loc 1 156 1 is_stmt 0 view .LVU513
 1426 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1427              		.cfi_def_cfa_offset 32
 1428              		.cfi_offset 4, -32
 1429              		.cfi_offset 5, -28
 1430              		.cfi_offset 6, -24
 1431              		.cfi_offset 7, -20
 1432              		.cfi_offset 8, -16
 1433              		.cfi_offset 9, -12
 1434              		.cfi_offset 10, -8
 1435              		.cfi_offset 14, -4
 1436 0004 9CB0     		sub	sp, sp, #112
 1437              		.cfi_def_cfa_offset 144
 162:mp3.c         ****       for (i=1;i<=music_number;i++) {
 1438              		.loc 1 162 22 view .LVU514
 1439 0006 FFF7FEFF 		bl	find_music
 1440              	.LVL138:
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1441              		.loc 1 163 13 view .LVU515
 1442 000a 0124     		movs	r4, #1
 162:mp3.c         ****       for (i=1;i<=music_number;i++) {
 1443              		.loc 1 162 20 view .LVU516
 1444 000c 654D     		ldr	r5, .L145
 181:mp3.c         ****   	  strcpy((char *)head->filename,(char *)temp);
 1445              		.loc 1 181 40 view .LVU517
 1446 000e 664F     		ldr	r7, .L145+4
 162:mp3.c         ****       for (i=1;i<=music_number;i++) {
 1447              		.loc 1 162 22 view .LVU518
 1448 0010 2880     		strh	r0, [r5]	@ movhi
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1449              		.loc 1 163 7 is_stmt 1 view .LVU519
 1450              	.LVL139:
 1451              	.L87:
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1452              		.loc 1 163 16 discriminator 1 view .LVU520
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1453              		.loc 1 163 17 is_stmt 0 discriminator 1 view .LVU521
 1454 0012 2E88     		ldrh	r6, [r5]
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1455              		.loc 1 163 7 discriminator 1 view .LVU522
 1456 0014 A642     		cmp	r6, r4
 1457 0016 1AD2     		bcs	.L94
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1458              		.loc 1 163 17 view .LVU523
 1459 0018 3346     		mov	r3, r6
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1460              		.loc 1 163 7 view .LVU524
 1461 001a 0021     		movs	r1, #0
 1462 001c 624D     		ldr	r5, .L145+4
 1463 001e 2A68     		ldr	r2, [r5]
 1464              	.LVL140:
 1465              	.L98:
 188:mp3.c         ****       i = music_number;
 1466              		.loc 1 188 13 is_stmt 1 discriminator 1 view .LVU525
 188:mp3.c         ****       i = music_number;
 1467              		.loc 1 188 13 is_stmt 0 discriminator 1 view .LVU526
 1468 0020 002B     		cmp	r3, #0
 1469 0022 65D1     		bne	.L95
 1470              	.LVL141:
 1471              	.L141:
 188:mp3.c         ****       i = music_number;
 1472              		.loc 1 188 13 discriminator 1 view .LVU527
 1473 0024 01B1     		cbz	r1, .L96
 1474 0026 2A60     		str	r2, [r5]
 1475              	.L96:
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1476              		.loc 1 163 17 view .LVU528
 1477 0028 3746     		mov	r7, r6
 190:mp3.c         **** 	    m = strlen(head->filename);
 1478              		.loc 1 190 13 view .LVU529
 1479 002a 4FF6FF79 		movw	r9, #65535
 217:mp3.c         **** 	    	     head->filename[25] = 0x2e;
 1480              		.loc 1 217 31 view .LVU530
 1481 002e DFF87C81 		ldr	r8, .L145+8
 1482              	.L97:
 1483              	.LVL142:
 190:mp3.c         **** 	    m = strlen(head->filename);
 1484              		.loc 1 190 13 is_stmt 1 view .LVU531
 190:mp3.c         **** 	    m = strlen(head->filename);
 1485              		.loc 1 190 15 is_stmt 0 view .LVU532
 1486 0032 013F     		subs	r7, r7, #1
 1487              	.LVL143:
 190:mp3.c         **** 	    m = strlen(head->filename);
 1488              		.loc 1 190 15 view .LVU533
 1489 0034 BFB2     		uxth	r7, r7
 1490              	.LVL144:
 190:mp3.c         **** 	    m = strlen(head->filename);
 1491              		.loc 1 190 13 view .LVU534
 1492 0036 4F45     		cmp	r7, r9
 1493 0038 2C68     		ldr	r4, [r5]
 1494 003a 62D1     		bne	.L107
 1495 003c 0023     		movs	r3, #0
 1496              	.LVL145:
 1497              	.L110:
 237:mp3.c         **** }
 1498              		.loc 1 237 13 is_stmt 1 discriminator 1 view .LVU535
 237:mp3.c         **** }
 1499              		.loc 1 237 13 is_stmt 0 discriminator 1 view .LVU536
 1500 003e 002E     		cmp	r6, #0
 1501 0040 40F0A680 		bne	.L108
 1502              	.LVL146:
 1503              	.L144:
 237:mp3.c         **** }
 1504              		.loc 1 237 13 discriminator 1 view .LVU537
 1505 0044 03B1     		cbz	r3, .L86
 1506 0046 2C60     		str	r4, [r5]
 1507              	.L86:
 238:mp3.c         **** 
 1508              		.loc 1 238 1 view .LVU538
 1509 0048 1CB0     		add	sp, sp, #112
 1510              		.cfi_remember_state
 1511              		.cfi_def_cfa_offset 32
 1512              		@ sp needed
 1513 004a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1514              	.LVL147:
 1515              	.L94:
 1516              		.cfi_restore_state
 238:mp3.c         **** 
 1517              		.loc 1 238 1 view .LVU539
 1518 004e 0AAA     		add	r2, sp, #40
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1519              		.loc 1 163 7 view .LVU540
 1520 0050 4523     		movs	r3, #69
 1521 0052 1646     		mov	r6, r2
 164:mp3.c         ****           if (i < 10) {
 1522              		.loc 1 164 38 view .LVU541
 1523 0054 0021     		movs	r1, #0
 1524              	.L88:
 1525              	.LVL148:
 164:mp3.c         ****           if (i < 10) {
 1526              		.loc 1 164 30 is_stmt 1 discriminator 3 view .LVU542
 1527 0056 013B     		subs	r3, r3, #1
 1528 0058 9BB2     		uxth	r3, r3
 164:mp3.c         ****           if (i < 10) {
 1529              		.loc 1 164 38 is_stmt 0 discriminator 3 view .LVU543
 1530 005a 02F8011B 		strb	r1, [r2], #1
 1531              	.LVL149:
 164:mp3.c         ****           if (i < 10) {
 1532              		.loc 1 164 25 is_stmt 1 discriminator 3 view .LVU544
 164:mp3.c         ****           if (i < 10) {
 1533              		.loc 1 164 20 discriminator 3 view .LVU545
 164:mp3.c         ****           if (i < 10) {
 1534              		.loc 1 164 11 is_stmt 0 discriminator 3 view .LVU546
 1535 005e 002B     		cmp	r3, #0
 1536 0060 F9D1     		bne	.L88
 165:mp3.c         ****              temp[0] = 0x30;
 1537              		.loc 1 165 11 is_stmt 1 view .LVU547
 165:mp3.c         ****              temp[0] = 0x30;
 1538              		.loc 1 165 14 is_stmt 0 view .LVU548
 1539 0062 092C     		cmp	r4, #9
 1540 0064 2CD8     		bhi	.L89
 166:mp3.c         ****              temp[1] = 0x30;
 1541              		.loc 1 166 14 is_stmt 1 view .LVU549
 167:mp3.c         ****              temp[2] = 0x30 + i;
 1542              		.loc 1 167 14 view .LVU550
 166:mp3.c         ****              temp[1] = 0x30;
 1543              		.loc 1 166 22 is_stmt 0 view .LVU551
 1544 0066 43F23003 		movw	r3, #12336
 1545 006a ADF82830 		strh	r3, [sp, #40]	@ movhi
 168:mp3.c         ****              temp[3] = 0x2e;
 1546              		.loc 1 168 14 is_stmt 1 view .LVU552
 168:mp3.c         ****              temp[3] = 0x2e;
 1547              		.loc 1 168 29 is_stmt 0 view .LVU553
 1548 006e 04F13003 		add	r3, r4, #48
 1549              	.LVL150:
 1550              	.L138:
 178:mp3.c         ****              temp[3] = 0x2e;
 1551              		.loc 1 178 14 is_stmt 1 view .LVU554
 178:mp3.c         ****              temp[3] = 0x2e;
 1552              		.loc 1 178 22 is_stmt 0 view .LVU555
 1553 0072 8DF82A30 		strb	r3, [sp, #42]
 179:mp3.c         ****           }
 1554              		.loc 1 179 14 is_stmt 1 view .LVU556
 179:mp3.c         ****           }
 1555              		.loc 1 179 22 is_stmt 0 view .LVU557
 1556 0076 2E23     		movs	r3, #46
 181:mp3.c         ****   	  strcpy((char *)head->filename,(char *)temp);
 1557              		.loc 1 181 36 view .LVU558
 1558 0078 D7F80080 		ldr	r8, [r7]
 181:mp3.c         ****   	  strcpy((char *)head->filename,(char *)temp);
 1559              		.loc 1 181 4 view .LVU559
 1560 007c 0BA8     		add	r0, sp, #44
 1561 007e 4146     		mov	r1, r8
 179:mp3.c         ****           }
 1562              		.loc 1 179 22 view .LVU560
 1563 0080 8DF82B30 		strb	r3, [sp, #43]
 181:mp3.c         ****   	  strcpy((char *)head->filename,(char *)temp);
 1564              		.loc 1 181 4 is_stmt 1 view .LVU561
 1565 0084 FFF7FEFF 		bl	strcpy
 1566              	.LVL151:
 182:mp3.c         **** 	  l = strlen(head->filename);
 1567              		.loc 1 182 6 view .LVU562
 1568 0088 3146     		mov	r1, r6
 1569 008a 4046     		mov	r0, r8
 1570 008c FFF7FEFF 		bl	strcpy
 1571              	.LVL152:
 183:mp3.c         **** 	  for (k=0;k<4;k++) head->filename[l - 4 + k] = 0;
 1572              		.loc 1 183 4 view .LVU563
 183:mp3.c         **** 	  for (k=0;k<4;k++) head->filename[l - 4 + k] = 0;
 1573              		.loc 1 183 19 is_stmt 0 view .LVU564
 1574 0090 3E68     		ldr	r6, [r7]
 183:mp3.c         **** 	  for (k=0;k<4;k++) head->filename[l - 4 + k] = 0;
 1575              		.loc 1 183 8 view .LVU565
 1576 0092 3046     		mov	r0, r6
 1577 0094 FFF7FEFF 		bl	strlen
 1578              	.LVL153:
 184:mp3.c         **** 	  if (i != music_number) head = head->next;
 1579              		.loc 1 184 4 is_stmt 1 view .LVU566
 184:mp3.c         **** 	  if (i != music_number) head = head->next;
 1580              		.loc 1 184 13 view .LVU567
 184:mp3.c         **** 	  if (i != music_number) head = head->next;
 1581              		.loc 1 184 48 is_stmt 0 view .LVU568
 1582 0098 0022     		movs	r2, #0
 1583 009a 80B2     		uxth	r0, r0
 1584              	.LVL154:
 184:mp3.c         **** 	  if (i != music_number) head = head->next;
 1585              		.loc 1 184 48 view .LVU569
 1586 009c 031F     		subs	r3, r0, #4
 1587 009e 3344     		add	r3, r3, r6
 1588 00a0 3044     		add	r0, r0, r6
 1589              	.LVL155:
 1590              	.L92:
 184:mp3.c         **** 	  if (i != music_number) head = head->next;
 1591              		.loc 1 184 22 is_stmt 1 discriminator 3 view .LVU570
 184:mp3.c         **** 	  if (i != music_number) head = head->next;
 1592              		.loc 1 184 48 is_stmt 0 discriminator 3 view .LVU571
 1593 00a2 03F8012B 		strb	r2, [r3], #1
 184:mp3.c         **** 	  if (i != music_number) head = head->next;
 1594              		.loc 1 184 17 is_stmt 1 discriminator 3 view .LVU572
 184:mp3.c         **** 	  if (i != music_number) head = head->next;
 1595              		.loc 1 184 13 discriminator 3 view .LVU573
 184:mp3.c         **** 	  if (i != music_number) head = head->next;
 1596              		.loc 1 184 4 is_stmt 0 discriminator 3 view .LVU574
 1597 00a6 9842     		cmp	r0, r3
 1598 00a8 FBD1     		bne	.L92
 185:mp3.c         ****       }
 1599              		.loc 1 185 4 is_stmt 1 view .LVU575
 185:mp3.c         ****       }
 1600              		.loc 1 185 7 is_stmt 0 view .LVU576
 1601 00aa 2B88     		ldrh	r3, [r5]
 1602 00ac A342     		cmp	r3, r4
 185:mp3.c         ****       }
 1603              		.loc 1 185 27 is_stmt 1 view .LVU577
 185:mp3.c         ****       }
 1604              		.loc 1 185 32 is_stmt 0 view .LVU578
 1605 00ae 18BF     		it	ne
 1606 00b0 D6F89830 		ldrne	r3, [r6, #152]
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1607              		.loc 1 163 33 view .LVU579
 1608 00b4 04F10104 		add	r4, r4, #1
 1609              	.LVL156:
 185:mp3.c         ****       }
 1610              		.loc 1 185 32 view .LVU580
 1611 00b8 18BF     		it	ne
 1612 00ba 3B60     		strne	r3, [r7]
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1613              		.loc 1 163 32 is_stmt 1 view .LVU581
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1614              		.loc 1 163 33 is_stmt 0 view .LVU582
 1615 00bc A4B2     		uxth	r4, r4
 1616              	.LVL157:
 163:mp3.c         ****           for (j=0;j<69;j++) temp[j] = 0;
 1617              		.loc 1 163 33 view .LVU583
 1618 00be A8E7     		b	.L87
 1619              	.LVL158:
 1620              	.L89:
 170:mp3.c         ****              temp[0] = 0x30;
 1621              		.loc 1 170 18 is_stmt 1 view .LVU584
 1622 00c0 0A22     		movs	r2, #10
 1623              	.LVL159:
 170:mp3.c         ****              temp[0] = 0x30;
 1624              		.loc 1 170 18 is_stmt 0 view .LVU585
 1625 00c2 B4FBF2F3 		udiv	r3, r4, r2
 170:mp3.c         ****              temp[0] = 0x30;
 1626              		.loc 1 170 21 view .LVU586
 1627 00c6 632C     		cmp	r4, #99
 171:mp3.c         ****              temp[1] = 0x30 + i / 10;
 1628              		.loc 1 171 14 is_stmt 1 view .LVU587
 1629 00c8 03F13001 		add	r1, r3, #48
 1630 00cc 02FB1343 		mls	r3, r2, r3, r4
 176:mp3.c         ****              temp[1] = 0x30 + i / 10;
 1631              		.loc 1 176 29 is_stmt 0 view .LVU588
 1632 00d0 86BF     		itte	hi
 1633 00d2 6422     		movhi	r2, #100
 1634 00d4 B4FBF2F2 		udivhi	r2, r4, r2
 171:mp3.c         ****              temp[1] = 0x30 + i / 10;
 1635              		.loc 1 171 22 view .LVU589
 1636 00d8 3022     		movls	r2, #48
 176:mp3.c         ****              temp[1] = 0x30 + i / 10;
 1637              		.loc 1 176 14 is_stmt 1 view .LVU590
 1638 00da C9B2     		uxtb	r1, r1
 1639 00dc 03F13003 		add	r3, r3, #48
 176:mp3.c         ****              temp[1] = 0x30 + i / 10;
 1640              		.loc 1 176 29 is_stmt 0 view .LVU591
 1641 00e0 88BF     		it	hi
 1642 00e2 3032     		addhi	r2, r2, #48
 1643 00e4 DBB2     		uxtb	r3, r3
 176:mp3.c         ****              temp[1] = 0x30 + i / 10;
 1644              		.loc 1 176 22 view .LVU592
 1645 00e6 8DF82820 		strb	r2, [sp, #40]
 177:mp3.c         ****              temp[2] = 0x30 + i % 10;
 1646              		.loc 1 177 14 is_stmt 1 view .LVU593
 177:mp3.c         ****              temp[2] = 0x30 + i % 10;
 1647              		.loc 1 177 22 is_stmt 0 view .LVU594
 1648 00ea 8DF82910 		strb	r1, [sp, #41]
 1649 00ee C0E7     		b	.L138
 1650              	.LVL160:
 1651              	.L95:
 188:mp3.c         ****       i = music_number;
 1652              		.loc 1 188 28 discriminator 2 view .LVU595
 1653 00f0 D2F89C00 		ldr	r0, [r2, #156]
 1654 00f4 013B     		subs	r3, r3, #1
 1655              	.LVL161:
 188:mp3.c         ****       i = music_number;
 1656              		.loc 1 188 28 discriminator 2 view .LVU596
 1657 00f6 9BB2     		uxth	r3, r3
 188:mp3.c         ****       i = music_number;
 1658              		.loc 1 188 20 discriminator 2 view .LVU597
 1659 00f8 0028     		cmp	r0, #0
 1660 00fa 93D0     		beq	.L141
 1661 00fc 0121     		movs	r1, #1
 1662 00fe 0246     		mov	r2, r0
 1663 0100 8EE7     		b	.L98
 1664              	.LVL162:
 1665              	.L107:
 191:mp3.c         **** 	    for (k=0;k<35;k++) temp1[k] = 0;
 1666              		.loc 1 191 6 is_stmt 1 view .LVU598
 191:mp3.c         **** 	    for (k=0;k<35;k++) temp1[k] = 0;
 1667              		.loc 1 191 10 is_stmt 0 view .LVU599
 1668 0102 2046     		mov	r0, r4
 1669 0104 FFF7FEFF 		bl	strlen
 1670              	.LVL163:
 1671 0108 01A9     		add	r1, sp, #4
 191:mp3.c         **** 	    for (k=0;k<35;k++) temp1[k] = 0;
 1672              		.loc 1 191 8 view .LVU600
 1673 010a 2323     		movs	r3, #35
 1674 010c 0A46     		mov	r2, r1
 192:mp3.c         **** 	    if (m > 23) {
 1675              		.loc 1 192 34 view .LVU601
 1676 010e 4FF0000C 		mov	ip, #0
 191:mp3.c         **** 	    for (k=0;k<35;k++) temp1[k] = 0;
 1677              		.loc 1 191 8 view .LVU602
 1678 0112 80B2     		uxth	r0, r0
 1679              	.LVL164:
 192:mp3.c         **** 	    if (m > 23) {
 1680              		.loc 1 192 6 is_stmt 1 view .LVU603
 192:mp3.c         **** 	    if (m > 23) {
 1681              		.loc 1 192 15 view .LVU604
 1682              	.L99:
 192:mp3.c         **** 	    if (m > 23) {
 1683              		.loc 1 192 25 discriminator 3 view .LVU605
 1684 0114 013B     		subs	r3, r3, #1
 1685 0116 9BB2     		uxth	r3, r3
 192:mp3.c         **** 	    if (m > 23) {
 1686              		.loc 1 192 34 is_stmt 0 discriminator 3 view .LVU606
 1687 0118 01F801CB 		strb	ip, [r1], #1
 1688              	.LVL165:
 192:mp3.c         **** 	    if (m > 23) {
 1689              		.loc 1 192 20 is_stmt 1 discriminator 3 view .LVU607
 192:mp3.c         **** 	    if (m > 23) {
 1690              		.loc 1 192 15 discriminator 3 view .LVU608
 192:mp3.c         **** 	    if (m > 23) {
 1691              		.loc 1 192 6 is_stmt 0 discriminator 3 view .LVU609
 1692 011c 002B     		cmp	r3, #0
 1693 011e F9D1     		bne	.L99
 193:mp3.c         **** 	       if (head->filename[22] < 0x80) {
 1694              		.loc 1 193 6 is_stmt 1 view .LVU610
 193:mp3.c         **** 	       if (head->filename[22] < 0x80) {
 1695              		.loc 1 193 9 is_stmt 0 view .LVU611
 1696 0120 1728     		cmp	r0, #23
 1697 0122 13D9     		bls	.L100
 194:mp3.c         **** 	          strcpy((char *)temp1,(char *)&head->filename[23]);
 1698              		.loc 1 194 9 is_stmt 1 view .LVU612
 194:mp3.c         **** 	          strcpy((char *)temp1,(char *)&head->filename[23]);
 1699              		.loc 1 194 12 is_stmt 0 view .LVU613
 1700 0124 94F91610 		ldrsb	r1, [r4, #22]
 1701              	.LVL166:
 194:mp3.c         **** 	          strcpy((char *)temp1,(char *)&head->filename[23]);
 1702              		.loc 1 194 12 view .LVU614
 1703 0128 04F11C0A 		add	r10, r4, #28
 1704 012c 0029     		cmp	r1, #0
 1705 012e 14DB     		blt	.L101
 1706              	.L103:
 1707              	.LVL167:
 214:mp3.c         **** 	    	     strcpy((char *)temp1,(char *)&head->filename[23]);
 1708              		.loc 1 214 12 is_stmt 1 view .LVU615
 215:mp3.c         **** 	    	     head->filename[23] = 0x2e;
 1709              		.loc 1 215 12 view .LVU616
 1710 0130 1046     		mov	r0, r2
 1711              	.LVL168:
 215:mp3.c         **** 	    	     head->filename[23] = 0x2e;
 1712              		.loc 1 215 12 is_stmt 0 view .LVU617
 1713 0132 04F11701 		add	r1, r4, #23
 1714 0136 FFF7FEFF 		bl	strcpy
 1715              	.LVL169:
 216:mp3.c         **** 	    	     head->filename[24] = 0x2e;
 1716              		.loc 1 216 31 view .LVU618
 1717 013a 2E23     		movs	r3, #46
 215:mp3.c         **** 	    	     head->filename[23] = 0x2e;
 1718              		.loc 1 215 12 view .LVU619
 1719 013c 0246     		mov	r2, r0
 216:mp3.c         **** 	    	     head->filename[24] = 0x2e;
 1720              		.loc 1 216 12 is_stmt 1 view .LVU620
 217:mp3.c         **** 	    	     head->filename[25] = 0x2e;
 1721              		.loc 1 217 12 view .LVU621
 218:mp3.c         **** 	    	     head->filename[26] = 0;
 1722              		.loc 1 218 12 view .LVU622
 219:mp3.c         **** 	    	     head->filename[27] = 1;
 1723              		.loc 1 219 12 view .LVU623
 220:mp3.c         **** 	    	     strcpy((char *)&head->filename[28],(char *)temp1);
 1724              		.loc 1 220 12 view .LVU624
 216:mp3.c         **** 	    	     head->filename[24] = 0x2e;
 1725              		.loc 1 216 31 is_stmt 0 view .LVU625
 1726 013e E375     		strb	r3, [r4, #23]
 217:mp3.c         **** 	    	     head->filename[25] = 0x2e;
 1727              		.loc 1 217 31 view .LVU626
 1728 0140 C4F81880 		str	r8, [r4, #24]
 221:mp3.c         **** 	          } else {
 1729              		.loc 1 221 12 is_stmt 1 view .LVU627
 1730              	.LVL170:
 1731              	.L142:
 230:mp3.c         **** 	          }
 1732              		.loc 1 230 12 view .LVU628
 1733 0144 1146     		mov	r1, r2
 1734 0146 5046     		mov	r0, r10
 1735 0148 FFF7FEFF 		bl	strcpy
 1736              	.LVL171:
 1737              	.L100:
 234:mp3.c         ****       }
 1738              		.loc 1 234 6 view .LVU629
 234:mp3.c         ****       }
 1739              		.loc 1 234 9 is_stmt 0 view .LVU630
 1740 014c 002F     		cmp	r7, #0
 1741 014e 3FF470AF 		beq	.L97
 234:mp3.c         ****       }
 1742              		.loc 1 234 18 is_stmt 1 discriminator 1 view .LVU631
 234:mp3.c         ****       }
 1743              		.loc 1 234 23 is_stmt 0 discriminator 1 view .LVU632
 1744 0152 D4F89830 		ldr	r3, [r4, #152]
 1745 0156 2B60     		str	r3, [r5]
 1746 0158 6BE7     		b	.L97
 1747              	.LVL172:
 1748              	.L101:
 204:mp3.c         ****                         if (head->filename[a] < 0x80) a++;else a += 2;
 1749              		.loc 1 204 12 is_stmt 1 view .LVU633
 205:mp3.c         **** 	    	        if (a == 23) {
 1750              		.loc 1 205 25 view .LVU634
 205:mp3.c         **** 	    	        if (a == 23) {
 1751              		.loc 1 205 28 is_stmt 0 view .LVU635
 1752 015a E156     		ldrsb	r1, [r4, r3]
 1753 015c 0029     		cmp	r1, #0
 1754 015e 04DB     		blt	.L102
 205:mp3.c         **** 	    	        if (a == 23) {
 1755              		.loc 1 205 55 is_stmt 1 discriminator 1 view .LVU636
 205:mp3.c         **** 	    	        if (a == 23) {
 1756              		.loc 1 205 56 is_stmt 0 discriminator 1 view .LVU637
 1757 0160 0133     		adds	r3, r3, #1
 1758              	.LVL173:
 205:mp3.c         **** 	    	        if (a == 23) {
 1759              		.loc 1 205 56 discriminator 1 view .LVU638
 1760 0162 DBB2     		uxtb	r3, r3
 1761              	.LVL174:
 206:mp3.c         **** 	    	           flag = 1;
 1762              		.loc 1 206 15 is_stmt 1 discriminator 1 view .LVU639
 206:mp3.c         **** 	    	           flag = 1;
 1763              		.loc 1 206 18 is_stmt 0 discriminator 1 view .LVU640
 1764 0164 172B     		cmp	r3, #23
 1765 0166 F8D1     		bne	.L101
 1766 0168 E2E7     		b	.L103
 1767              	.L102:
 205:mp3.c         **** 	    	        if (a == 23) {
 1768              		.loc 1 205 64 is_stmt 1 discriminator 2 view .LVU641
 205:mp3.c         **** 	    	        if (a == 23) {
 1769              		.loc 1 205 66 is_stmt 0 discriminator 2 view .LVU642
 1770 016a 0233     		adds	r3, r3, #2
 1771              	.LVL175:
 205:mp3.c         **** 	    	        if (a == 23) {
 1772              		.loc 1 205 66 discriminator 2 view .LVU643
 1773 016c DBB2     		uxtb	r3, r3
 1774              	.LVL176:
 206:mp3.c         **** 	    	           flag = 1;
 1775              		.loc 1 206 15 is_stmt 1 discriminator 2 view .LVU644
 206:mp3.c         **** 	    	           flag = 1;
 1776              		.loc 1 206 18 is_stmt 0 discriminator 2 view .LVU645
 1777 016e 172B     		cmp	r3, #23
 1778 0170 DED0     		beq	.L103
 209:mp3.c         **** 	    	           flag = 0;
 1779              		.loc 1 209 22 is_stmt 1 view .LVU646
 209:mp3.c         **** 	    	           flag = 0;
 1780              		.loc 1 209 25 is_stmt 0 view .LVU647
 1781 0172 182B     		cmp	r3, #24
 1782 0174 F1D1     		bne	.L101
 1783              	.LVL177:
 214:mp3.c         **** 	    	     strcpy((char *)temp1,(char *)&head->filename[23]);
 1784              		.loc 1 214 12 is_stmt 1 view .LVU648
 223:mp3.c         **** 	    	     head->filename[22] = 0x20;
 1785              		.loc 1 223 12 view .LVU649
 1786 0176 1046     		mov	r0, r2
 1787              	.LVL178:
 223:mp3.c         **** 	    	     head->filename[22] = 0x20;
 1788              		.loc 1 223 12 is_stmt 0 view .LVU650
 1789 0178 04F11601 		add	r1, r4, #22
 1790 017c FFF7FEFF 		bl	strcpy
 1791              	.LVL179:
 224:mp3.c         **** 	    	     head->filename[23] = 0x2e;
 1792              		.loc 1 224 31 view .LVU651
 1793 0180 42F62063 		movw	r3, #11808
 1794 0184 E382     		strh	r3, [r4, #22]	@ movhi
 226:mp3.c         **** 	    	     head->filename[25] = 0x2e;
 1795              		.loc 1 226 31 view .LVU652
 1796 0186 42F62E63 		movw	r3, #11822
 223:mp3.c         **** 	    	     head->filename[22] = 0x20;
 1797              		.loc 1 223 12 view .LVU653
 1798 018a 0246     		mov	r2, r0
 224:mp3.c         **** 	    	     head->filename[23] = 0x2e;
 1799              		.loc 1 224 12 is_stmt 1 view .LVU654
 225:mp3.c         **** 	    	     head->filename[24] = 0x2e;
 1800              		.loc 1 225 12 view .LVU655
 226:mp3.c         **** 	    	     head->filename[25] = 0x2e;
 1801              		.loc 1 226 12 view .LVU656
 227:mp3.c         **** 	    	     head->filename[26] = 0;
 1802              		.loc 1 227 12 view .LVU657
 228:mp3.c         **** 	    	     head->filename[27] = 0;
 1803              		.loc 1 228 12 view .LVU658
 229:mp3.c         **** 	    	     strcpy((char *)&head->filename[28],(char *)temp1);
 1804              		.loc 1 229 12 view .LVU659
 226:mp3.c         **** 	    	     head->filename[25] = 0x2e;
 1805              		.loc 1 226 31 is_stmt 0 view .LVU660
 1806 018c A361     		str	r3, [r4, #24]
 1807 018e D9E7     		b	.L142
 1808              	.LVL180:
 1809              	.L108:
 237:mp3.c         **** }
 1810              		.loc 1 237 28 discriminator 2 view .LVU661
 1811 0190 D4F89C20 		ldr	r2, [r4, #156]
 1812 0194 013E     		subs	r6, r6, #1
 1813              	.LVL181:
 237:mp3.c         **** }
 1814              		.loc 1 237 28 discriminator 2 view .LVU662
 1815 0196 B6B2     		uxth	r6, r6
 237:mp3.c         **** }
 1816              		.loc 1 237 20 discriminator 2 view .LVU663
 1817 0198 002A     		cmp	r2, #0
 1818 019a 3FF453AF 		beq	.L144
 1819 019e 0123     		movs	r3, #1
 1820 01a0 1446     		mov	r4, r2
 1821 01a2 4CE7     		b	.L110
 1822              	.L146:
 1823              		.align	2
 1824              	.L145:
 1825 01a4 00000000 		.word	music_number
 1826 01a8 00000000 		.word	head
 1827 01ac 2E2E0001 		.word	16789038
 1828              		.cfi_endproc
 1829              	.LFE35:
 1831              		.section	.rodata.mp3_name.str1.1,"aMS",%progbits,1
 1832              	.LC2:
 1833 0000 20257320 		.ascii	" %s \000"
 1833      00
 1834              		.section	.text.mp3_name,"ax",%progbits
 1835              		.align	1
 1836              		.global	mp3_name
 1837              		.syntax unified
 1838              		.thumb
 1839              		.thumb_func
 1840              		.fpu softvfp
 1842              	mp3_name:
 1843              	.LFB38:
 369:mp3.c         **** 
 370:mp3.c         **** 
 371:mp3.c         **** void mp3_name (void)
 372:mp3.c         **** {
 1844              		.loc 1 372 1 is_stmt 1 view -0
 1845              		.cfi_startproc
 1846              		@ args = 0, pretend = 0, frame = 48
 1847              		@ frame_needed = 0, uses_anonymous_args = 0
 373:mp3.c         ****       static unsigned char flag = 0,j = 0,count = 0;
 1848              		.loc 1 373 7 view .LVU665
 374:mp3.c         ****       unsigned char i,dig0,dig1,dig2;
 1849              		.loc 1 374 7 view .LVU666
 375:mp3.c         ****       unsigned char temp[48] = {0};
 1850              		.loc 1 375 7 view .LVU667
 372:mp3.c         ****       static unsigned char flag = 0,j = 0,count = 0;
 1851              		.loc 1 372 1 is_stmt 0 view .LVU668
 1852 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1853              		.cfi_def_cfa_offset 24
 1854              		.cfi_offset 4, -24
 1855              		.cfi_offset 5, -20
 1856              		.cfi_offset 6, -16
 1857              		.cfi_offset 7, -12
 1858              		.cfi_offset 8, -8
 1859              		.cfi_offset 14, -4
 1860              		.loc 1 375 21 view .LVU669
 1861 0004 0024     		movs	r4, #0
 372:mp3.c         ****       static unsigned char flag = 0,j = 0,count = 0;
 1862              		.loc 1 372 1 view .LVU670
 1863 0006 8CB0     		sub	sp, sp, #48
 1864              		.cfi_def_cfa_offset 72
 376:mp3.c         ****       if (flag == 0) {
 1865              		.loc 1 376 16 view .LVU671
 1866 0008 5E4D     		ldr	r5, .L174
 375:mp3.c         ****       unsigned char temp[48] = {0};
 1867              		.loc 1 375 21 view .LVU672
 1868 000a 2C22     		movs	r2, #44
 1869 000c 2146     		mov	r1, r4
 1870 000e 01A8     		add	r0, sp, #4
 1871 0010 0094     		str	r4, [sp]
 1872 0012 FFF7FEFF 		bl	memset
 1873              	.LVL182:
 1874              		.loc 1 376 7 is_stmt 1 view .LVU673
 1875              		.loc 1 376 16 is_stmt 0 view .LVU674
 1876 0016 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1877 0018 2F46     		mov	r7, r5
 1878              		.loc 1 376 10 view .LVU675
 1879 001a 002B     		cmp	r3, #0
 1880 001c 7FD1     		bne	.L148
 377:mp3.c         ****          if (count == 0) {
 1881              		.loc 1 377 10 is_stmt 1 view .LVU676
 1882              		.loc 1 377 20 is_stmt 0 view .LVU677
 1883 001e DFF88481 		ldr	r8, .L174+32
 1884 0022 98F80040 		ldrb	r4, [r8]	@ zero_extendqisi2
 1885 0026 4646     		mov	r6, r8
 1886              		.loc 1 377 13 view .LVU678
 1887 0028 002C     		cmp	r4, #0
 1888 002a 47D1     		bne	.L149
 378:mp3.c         ****             i = strlen((char *)mp3.mp3name);
 1889              		.loc 1 378 13 is_stmt 1 view .LVU679
 1890              		.loc 1 378 17 is_stmt 0 view .LVU680
 1891 002c 5648     		ldr	r0, .L174+4
 1892 002e FFF7FEFF 		bl	strlen
 1893              	.LVL183:
 379:mp3.c         ****             if (i > 18) {
 1894              		.loc 1 379 13 is_stmt 1 view .LVU681
 1895              		.loc 1 379 16 is_stmt 0 view .LVU682
 1896 0032 1228     		cmp	r0, #18
 1897 0034 544B     		ldr	r3, .L174+4
 1898 0036 37D9     		bls	.L171
 1899              	.LVL184:
 1900              	.L150:
 380:mp3.c         ****                i = 0;
 381:mp3.c         ****                while (1) {
 1901              		.loc 1 381 16 is_stmt 1 view .LVU683
 382:mp3.c         ****                      if (mp3.mp3name[i] < 0x80) i++;else i += 2;
 1902              		.loc 1 382 22 view .LVU684
 1903              		.loc 1 382 25 is_stmt 0 view .LVU685
 1904 0038 1A57     		ldrsb	r2, [r3, r4]
 1905 003a 002A     		cmp	r2, #0
 1906 003c 1EDB     		blt	.L152
 1907              		.loc 1 382 49 is_stmt 1 discriminator 1 view .LVU686
 1908              		.loc 1 382 50 is_stmt 0 discriminator 1 view .LVU687
 1909 003e 0134     		adds	r4, r4, #1
 1910              	.LVL185:
 1911              		.loc 1 382 50 discriminator 1 view .LVU688
 1912 0040 E4B2     		uxtb	r4, r4
 1913              	.LVL186:
 383:mp3.c         ****                      if (i == 18) {
 1914              		.loc 1 383 22 is_stmt 1 discriminator 1 view .LVU689
 1915              		.loc 1 383 25 is_stmt 0 discriminator 1 view .LVU690
 1916 0042 122C     		cmp	r4, #18
 1917 0044 F8D1     		bne	.L150
 1918              	.L153:
 384:mp3.c         ****                      	j = 1;
 1919              		.loc 1 384 23 is_stmt 1 view .LVU691
 1920              		.loc 1 384 25 is_stmt 0 view .LVU692
 1921 0046 0122     		movs	r2, #1
 1922 0048 504B     		ldr	r3, .L174+8
 1923 004a 1224     		movs	r4, #18
 1924              	.LVL187:
 1925              		.loc 1 384 25 view .LVU693
 1926 004c 1A70     		strb	r2, [r3]
 385:mp3.c         ****                      	break;
 1927              		.loc 1 385 23 is_stmt 1 view .LVU694
 386:mp3.c         ****                      } else if (i == 19) {
 387:mp3.c         ****                      	j = 0;
 388:mp3.c         ****                      	break;
 389:mp3.c         ****                      }
 390:mp3.c         ****                }
 391:mp3.c         ****                if (j == 1) {
 1928              		.loc 1 391 16 view .LVU695
 1929 004e 6A46     		mov	r2, sp
 1930 0050 1346     		mov	r3, r2
 1931 0052 4D49     		ldr	r1, .L174+4
 1932              	.L156:
 1933              	.LVL188:
 392:mp3.c         ****                   for (i=0;i<18;i++) temp[i] = mp3.mp3name[i];
 1934              		.loc 1 392 38 discriminator 3 view .LVU696
 1935              		.loc 1 392 59 is_stmt 0 discriminator 3 view .LVU697
 1936 0054 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 1937              	.LVL189:
 1938              		.loc 1 392 59 discriminator 3 view .LVU698
 1939 0058 013C     		subs	r4, r4, #1
 1940              		.loc 1 392 19 discriminator 3 view .LVU699
 1941 005a 14F0FF04 		ands	r4, r4, #255
 1942              		.loc 1 392 46 discriminator 3 view .LVU700
 1943 005e 02F8010B 		strb	r0, [r2], #1
 1944              		.loc 1 392 33 is_stmt 1 discriminator 3 view .LVU701
 1945              	.LVL190:
 1946              		.loc 1 392 28 discriminator 3 view .LVU702
 1947              		.loc 1 392 19 is_stmt 0 discriminator 3 view .LVU703
 1948 0062 F7D1     		bne	.L156
 1949              	.LVL191:
 1950              	.L172:
 393:mp3.c         ****                   lcd_printf(2,7," %s ",temp);
 394:mp3.c         ****                   flag = 0;
 395:mp3.c         ****                   count++;
 396:mp3.c         ****                } else {
 397:mp3.c         ****                   for (i=0;i<17;i++) temp[i] = mp3.mp3name[i];
 398:mp3.c         ****                   lcd_printf(2,7," %s ",temp);
 1951              		.loc 1 398 19 is_stmt 1 view .LVU704
 1952 0064 0721     		movs	r1, #7
 1953 0066 0220     		movs	r0, #2
 1954 0068 494A     		ldr	r2, .L174+12
 1955 006a FFF7FEFF 		bl	lcd_printf
 1956              	.LVL192:
 399:mp3.c         ****                   flag = 0;
 1957              		.loc 1 399 19 view .LVU705
 400:mp3.c         ****                   count++;
 1958              		.loc 1 400 24 is_stmt 0 view .LVU706
 1959 006e 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 399:mp3.c         ****                   flag = 0;
 1960              		.loc 1 399 24 view .LVU707
 1961 0070 3C70     		strb	r4, [r7]
 1962              		.loc 1 400 19 is_stmt 1 view .LVU708
 1963              		.loc 1 400 24 is_stmt 0 view .LVU709
 1964 0072 0133     		adds	r3, r3, #1
 1965 0074 3370     		strb	r3, [r6]
 1966              	.L147:
 401:mp3.c         ****                }
 402:mp3.c         ****             } else {
 403:mp3.c         ****                lcd_printf(2,7," %s ",mp3.mp3name);
 404:mp3.c         ****                flag = 1;
 405:mp3.c         ****                count = 0;
 406:mp3.c         ****             }
 407:mp3.c         ****          } else if (count == 1) {
 408:mp3.c         ****             if (j == 1) {
 409:mp3.c         ****                for (i=18;i<36;i++) temp[i-18] = mp3.mp3name[i];
 410:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 411:mp3.c         ****                flag = 1;
 412:mp3.c         ****                count = 0;
 413:mp3.c         ****                j = 0;
 414:mp3.c         ****             } else {
 415:mp3.c         ****                for (i=17;i<35;i++) temp[i-17] = mp3.mp3name[i];
 416:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 417:mp3.c         ****                flag = 1;
 418:mp3.c         ****                count = 0;
 419:mp3.c         ****             }
 420:mp3.c         ****          }
 421:mp3.c         ****       } else if (flag == 1) {
 422:mp3.c         ****       	 dig2 = (f_kbps / 100);
 423:mp3.c         ****       	 dig1 = ((f_kbps % 100) / 10);
 424:mp3.c         ****       	 dig0 = (f_kbps % 10);
 425:mp3.c         ****          mp3.mp3format[10] = dec2hex(dig2);
 426:mp3.c         ****          mp3.mp3format[11] = dec2hex(dig1);
 427:mp3.c         ****          mp3.mp3format[12] = dec2hex(dig0);
 428:mp3.c         ****          lcd_printf(2,8," %s ",mp3.mp3format);
 429:mp3.c         ****          flag++;
 430:mp3.c         ****       } else {
 431:mp3.c         ****          lcd_printf(2,9," %s ",mp3.mp3time);
 432:mp3.c         ****          flag = 0;
 433:mp3.c         ****       }
 434:mp3.c         **** }
 1967              		.loc 1 434 1 view .LVU710
 1968 0076 0CB0     		add	sp, sp, #48
 1969              		.cfi_remember_state
 1970              		.cfi_def_cfa_offset 24
 1971              		@ sp needed
 1972 0078 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1973              	.LVL193:
 1974              	.L152:
 1975              		.cfi_restore_state
 382:mp3.c         ****                      if (i == 18) {
 1976              		.loc 1 382 58 is_stmt 1 discriminator 2 view .LVU711
 382:mp3.c         ****                      if (i == 18) {
 1977              		.loc 1 382 60 is_stmt 0 discriminator 2 view .LVU712
 1978 007c 0234     		adds	r4, r4, #2
 1979              	.LVL194:
 382:mp3.c         ****                      if (i == 18) {
 1980              		.loc 1 382 60 discriminator 2 view .LVU713
 1981 007e E4B2     		uxtb	r4, r4
 1982              	.LVL195:
 383:mp3.c         ****                      	j = 1;
 1983              		.loc 1 383 22 is_stmt 1 discriminator 2 view .LVU714
 383:mp3.c         ****                      	j = 1;
 1984              		.loc 1 383 25 is_stmt 0 discriminator 2 view .LVU715
 1985 0080 122C     		cmp	r4, #18
 1986 0082 E0D0     		beq	.L153
 386:mp3.c         ****                      	j = 0;
 1987              		.loc 1 386 29 is_stmt 1 view .LVU716
 386:mp3.c         ****                      	j = 0;
 1988              		.loc 1 386 32 is_stmt 0 view .LVU717
 1989 0084 132C     		cmp	r4, #19
 1990 0086 D7D1     		bne	.L150
 387:mp3.c         ****                      	break;
 1991              		.loc 1 387 23 is_stmt 1 view .LVU718
 387:mp3.c         ****                      	break;
 1992              		.loc 1 387 25 is_stmt 0 view .LVU719
 1993 0088 0022     		movs	r2, #0
 1994 008a 404B     		ldr	r3, .L174+8
 1995 008c 1124     		movs	r4, #17
 1996              	.LVL196:
 387:mp3.c         ****                      	break;
 1997              		.loc 1 387 25 view .LVU720
 1998 008e 1A70     		strb	r2, [r3]
 388:mp3.c         ****                      }
 1999              		.loc 1 388 23 is_stmt 1 view .LVU721
 391:mp3.c         ****                   for (i=0;i<18;i++) temp[i] = mp3.mp3name[i];
 2000              		.loc 1 391 16 view .LVU722
 2001 0090 6A46     		mov	r2, sp
 2002 0092 1346     		mov	r3, r2
 2003 0094 3C49     		ldr	r1, .L174+4
 2004              	.L157:
 2005              	.LVL197:
 397:mp3.c         ****                   lcd_printf(2,7," %s ",temp);
 2006              		.loc 1 397 38 discriminator 3 view .LVU723
 397:mp3.c         ****                   lcd_printf(2,7," %s ",temp);
 2007              		.loc 1 397 59 is_stmt 0 discriminator 3 view .LVU724
 2008 0096 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 2009              	.LVL198:
 397:mp3.c         ****                   lcd_printf(2,7," %s ",temp);
 2010              		.loc 1 397 59 discriminator 3 view .LVU725
 2011 009a 013C     		subs	r4, r4, #1
 397:mp3.c         ****                   lcd_printf(2,7," %s ",temp);
 2012              		.loc 1 397 19 discriminator 3 view .LVU726
 2013 009c 14F0FF04 		ands	r4, r4, #255
 397:mp3.c         ****                   lcd_printf(2,7," %s ",temp);
 2014              		.loc 1 397 46 discriminator 3 view .LVU727
 2015 00a0 02F8010B 		strb	r0, [r2], #1
 397:mp3.c         ****                   lcd_printf(2,7," %s ",temp);
 2016              		.loc 1 397 33 is_stmt 1 discriminator 3 view .LVU728
 2017              	.LVL199:
 397:mp3.c         ****                   lcd_printf(2,7," %s ",temp);
 2018              		.loc 1 397 28 discriminator 3 view .LVU729
 397:mp3.c         ****                   lcd_printf(2,7," %s ",temp);
 2019              		.loc 1 397 19 is_stmt 0 discriminator 3 view .LVU730
 2020 00a4 F7D1     		bne	.L157
 2021 00a6 DDE7     		b	.L172
 2022              	.LVL200:
 2023              	.L171:
 403:mp3.c         ****                flag = 1;
 2024              		.loc 1 403 16 is_stmt 1 view .LVU731
 2025 00a8 0721     		movs	r1, #7
 2026 00aa 0220     		movs	r0, #2
 2027              	.LVL201:
 403:mp3.c         ****                flag = 1;
 2028              		.loc 1 403 16 is_stmt 0 view .LVU732
 2029 00ac 384A     		ldr	r2, .L174+12
 2030 00ae FFF7FEFF 		bl	lcd_printf
 2031              	.LVL202:
 404:mp3.c         ****                count = 0;
 2032              		.loc 1 404 16 is_stmt 1 view .LVU733
 404:mp3.c         ****                count = 0;
 2033              		.loc 1 404 21 is_stmt 0 view .LVU734
 2034 00b2 0123     		movs	r3, #1
 405:mp3.c         ****             }
 2035              		.loc 1 405 22 view .LVU735
 2036 00b4 88F80040 		strb	r4, [r8]
 404:mp3.c         ****                count = 0;
 2037              		.loc 1 404 21 view .LVU736
 2038 00b8 2B70     		strb	r3, [r5]
 405:mp3.c         ****             }
 2039              		.loc 1 405 16 is_stmt 1 view .LVU737
 2040 00ba DCE7     		b	.L147
 2041              	.L149:
 407:mp3.c         ****             if (j == 1) {
 2042              		.loc 1 407 17 view .LVU738
 407:mp3.c         ****             if (j == 1) {
 2043              		.loc 1 407 20 is_stmt 0 view .LVU739
 2044 00bc 012C     		cmp	r4, #1
 2045 00be DAD1     		bne	.L147
 408:mp3.c         ****                for (i=18;i<36;i++) temp[i-18] = mp3.mp3name[i];
 2046              		.loc 1 408 13 is_stmt 1 view .LVU740
 408:mp3.c         ****                for (i=18;i<36;i++) temp[i-18] = mp3.mp3name[i];
 2047              		.loc 1 408 19 is_stmt 0 view .LVU741
 2048 00c0 324D     		ldr	r5, .L174+8
 408:mp3.c         ****                for (i=18;i<36;i++) temp[i-18] = mp3.mp3name[i];
 2049              		.loc 1 408 16 view .LVU742
 2050 00c2 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 2051 00c4 012A     		cmp	r2, #1
 2052 00c6 15D1     		bne	.L159
 2053 00c8 6B46     		mov	r3, sp
 2054 00ca 1224     		movs	r4, #18
 2055 00cc 314A     		ldr	r2, .L174+16
 2056              	.L160:
 2057              	.LVL203:
 409:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2058              		.loc 1 409 36 is_stmt 1 discriminator 3 view .LVU743
 409:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2059              		.loc 1 409 60 is_stmt 0 discriminator 3 view .LVU744
 2060 00ce 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 2061              	.LVL204:
 409:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2062              		.loc 1 409 60 discriminator 3 view .LVU745
 2063 00d2 013C     		subs	r4, r4, #1
 409:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2064              		.loc 1 409 16 discriminator 3 view .LVU746
 2065 00d4 14F0FF04 		ands	r4, r4, #255
 409:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2066              		.loc 1 409 47 discriminator 3 view .LVU747
 2067 00d8 03F8011B 		strb	r1, [r3], #1
 409:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2068              		.loc 1 409 31 is_stmt 1 discriminator 3 view .LVU748
 2069              	.LVL205:
 409:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2070              		.loc 1 409 26 discriminator 3 view .LVU749
 409:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2071              		.loc 1 409 16 is_stmt 0 discriminator 3 view .LVU750
 2072 00dc F7D1     		bne	.L160
 410:mp3.c         ****                flag = 1;
 2073              		.loc 1 410 16 is_stmt 1 view .LVU751
 2074 00de 6B46     		mov	r3, sp
 2075 00e0 0721     		movs	r1, #7
 2076 00e2 0220     		movs	r0, #2
 2077 00e4 2A4A     		ldr	r2, .L174+12
 2078              	.LVL206:
 410:mp3.c         ****                flag = 1;
 2079              		.loc 1 410 16 is_stmt 0 view .LVU752
 2080 00e6 FFF7FEFF 		bl	lcd_printf
 2081              	.LVL207:
 411:mp3.c         ****                count = 0;
 2082              		.loc 1 411 16 is_stmt 1 view .LVU753
 411:mp3.c         ****                count = 0;
 2083              		.loc 1 411 21 is_stmt 0 view .LVU754
 2084 00ea 0123     		movs	r3, #1
 412:mp3.c         ****                j = 0;
 2085              		.loc 1 412 22 view .LVU755
 2086 00ec 3470     		strb	r4, [r6]
 411:mp3.c         ****                count = 0;
 2087              		.loc 1 411 21 view .LVU756
 2088 00ee 3B70     		strb	r3, [r7]
 412:mp3.c         ****                j = 0;
 2089              		.loc 1 412 16 is_stmt 1 view .LVU757
 413:mp3.c         ****             } else {
 2090              		.loc 1 413 16 view .LVU758
 2091              	.L173:
 432:mp3.c         ****       }
 2092              		.loc 1 432 10 view .LVU759
 432:mp3.c         ****       }
 2093              		.loc 1 432 15 is_stmt 0 view .LVU760
 2094 00f0 2C70     		strb	r4, [r5]
 2095              		.loc 1 434 1 view .LVU761
 2096 00f2 C0E7     		b	.L147
 2097              	.L159:
 2098 00f4 6B46     		mov	r3, sp
 408:mp3.c         ****                for (i=18;i<36;i++) temp[i-18] = mp3.mp3name[i];
 2099              		.loc 1 408 16 view .LVU762
 2100 00f6 1224     		movs	r4, #18
 2101 00f8 274A     		ldr	r2, .L174+20
 2102              	.L161:
 2103              	.LVL208:
 415:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2104              		.loc 1 415 36 is_stmt 1 discriminator 3 view .LVU763
 415:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2105              		.loc 1 415 60 is_stmt 0 discriminator 3 view .LVU764
 2106 00fa 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 2107              	.LVL209:
 415:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2108              		.loc 1 415 60 discriminator 3 view .LVU765
 2109 00fe 013C     		subs	r4, r4, #1
 415:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2110              		.loc 1 415 16 discriminator 3 view .LVU766
 2111 0100 14F0FF04 		ands	r4, r4, #255
 415:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2112              		.loc 1 415 47 discriminator 3 view .LVU767
 2113 0104 03F8011B 		strb	r1, [r3], #1
 415:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2114              		.loc 1 415 31 is_stmt 1 discriminator 3 view .LVU768
 2115              	.LVL210:
 415:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2116              		.loc 1 415 26 discriminator 3 view .LVU769
 415:mp3.c         ****                lcd_printf(2,7," %s ",temp);
 2117              		.loc 1 415 16 is_stmt 0 discriminator 3 view .LVU770
 2118 0108 F7D1     		bne	.L161
 416:mp3.c         ****                flag = 1;
 2119              		.loc 1 416 16 is_stmt 1 view .LVU771
 2120 010a 6B46     		mov	r3, sp
 2121 010c 0721     		movs	r1, #7
 2122 010e 0220     		movs	r0, #2
 2123 0110 1F4A     		ldr	r2, .L174+12
 2124              	.LVL211:
 416:mp3.c         ****                flag = 1;
 2125              		.loc 1 416 16 is_stmt 0 view .LVU772
 2126 0112 FFF7FEFF 		bl	lcd_printf
 2127              	.LVL212:
 417:mp3.c         ****                count = 0;
 2128              		.loc 1 417 16 is_stmt 1 view .LVU773
 417:mp3.c         ****                count = 0;
 2129              		.loc 1 417 21 is_stmt 0 view .LVU774
 2130 0116 0123     		movs	r3, #1
 418:mp3.c         ****             }
 2131              		.loc 1 418 22 view .LVU775
 2132 0118 3470     		strb	r4, [r6]
 417:mp3.c         ****                count = 0;
 2133              		.loc 1 417 21 view .LVU776
 2134 011a 3B70     		strb	r3, [r7]
 418:mp3.c         ****             }
 2135              		.loc 1 418 16 is_stmt 1 view .LVU777
 2136 011c ABE7     		b	.L147
 2137              	.L148:
 421:mp3.c         ****       	 dig2 = (f_kbps / 100);
 2138              		.loc 1 421 14 view .LVU778
 421:mp3.c         ****       	 dig2 = (f_kbps / 100);
 2139              		.loc 1 421 17 is_stmt 0 view .LVU779
 2140 011e 012B     		cmp	r3, #1
 2141 0120 29D1     		bne	.L162
 422:mp3.c         ****       	 dig1 = ((f_kbps % 100) / 10);
 2142              		.loc 1 422 9 is_stmt 1 view .LVU780
 422:mp3.c         ****       	 dig1 = ((f_kbps % 100) / 10);
 2143              		.loc 1 422 14 is_stmt 0 view .LVU781
 2144 0122 6426     		movs	r6, #100
 2145 0124 1D4B     		ldr	r3, .L174+24
 2146 0126 1C88     		ldrh	r4, [r3]
 2147              	.LVL213:
 423:mp3.c         ****       	 dig0 = (f_kbps % 10);
 2148              		.loc 1 423 9 is_stmt 1 view .LVU782
 424:mp3.c         ****          mp3.mp3format[10] = dec2hex(dig2);
 2149              		.loc 1 424 9 view .LVU783
 425:mp3.c         ****          mp3.mp3format[11] = dec2hex(dig1);
 2150              		.loc 1 425 10 view .LVU784
 422:mp3.c         ****       	 dig1 = ((f_kbps % 100) / 10);
 2151              		.loc 1 422 14 is_stmt 0 view .LVU785
 2152 0128 B4FBF6F2 		udiv	r2, r4, r6
 425:mp3.c         ****          mp3.mp3format[11] = dec2hex(dig1);
 2153              		.loc 1 425 30 view .LVU786
 2154 012c D0B2     		uxtb	r0, r2
 2155 012e FFF7FEFF 		bl	dec2hex
 2156              	.LVL214:
 425:mp3.c         ****          mp3.mp3format[11] = dec2hex(dig1);
 2157              		.loc 1 425 28 view .LVU787
 2158 0132 1549     		ldr	r1, .L174+4
 2159 0134 81F85F00 		strb	r0, [r1, #95]
 426:mp3.c         ****          mp3.mp3format[12] = dec2hex(dig0);
 2160              		.loc 1 426 10 is_stmt 1 view .LVU788
 423:mp3.c         ****       	 dig0 = (f_kbps % 10);
 2161              		.loc 1 423 14 is_stmt 0 view .LVU789
 2162 0138 06FB1240 		mls	r0, r6, r2, r4
 2163 013c 0A22     		movs	r2, #10
 2164 013e 80B2     		uxth	r0, r0
 2165 0140 B0FBF2F0 		udiv	r0, r0, r2
 426:mp3.c         ****          mp3.mp3format[12] = dec2hex(dig0);
 2166              		.loc 1 426 30 view .LVU790
 2167 0144 C0B2     		uxtb	r0, r0
 2168 0146 FFF7FEFF 		bl	dec2hex
 2169              	.LVL215:
 426:mp3.c         ****          mp3.mp3format[12] = dec2hex(dig0);
 2170              		.loc 1 426 28 view .LVU791
 2171 014a 81F86000 		strb	r0, [r1, #96]
 427:mp3.c         ****          lcd_printf(2,8," %s ",mp3.mp3format);
 2172              		.loc 1 427 10 is_stmt 1 view .LVU792
 424:mp3.c         ****          mp3.mp3format[10] = dec2hex(dig2);
 2173              		.loc 1 424 14 is_stmt 0 view .LVU793
 2174 014e B4FBF2F0 		udiv	r0, r4, r2
 2175 0152 02FB1040 		mls	r0, r2, r0, r4
 427:mp3.c         ****          lcd_printf(2,8," %s ",mp3.mp3format);
 2176              		.loc 1 427 30 view .LVU794
 2177 0156 C0B2     		uxtb	r0, r0
 2178 0158 FFF7FEFF 		bl	dec2hex
 2179              	.LVL216:
 428:mp3.c         ****          flag++;
 2180              		.loc 1 428 10 view .LVU795
 2181 015c 0C4A     		ldr	r2, .L174+12
 427:mp3.c         ****          lcd_printf(2,8," %s ",mp3.mp3format);
 2182              		.loc 1 427 28 view .LVU796
 2183 015e 81F86100 		strb	r0, [r1, #97]
 428:mp3.c         ****          flag++;
 2184              		.loc 1 428 10 is_stmt 1 view .LVU797
 2185 0162 01F15503 		add	r3, r1, #85
 2186 0166 0220     		movs	r0, #2
 2187 0168 0821     		movs	r1, #8
 2188 016a FFF7FEFF 		bl	lcd_printf
 2189              	.LVL217:
 429:mp3.c         ****       } else {
 2190              		.loc 1 429 10 view .LVU798
 429:mp3.c         ****       } else {
 2191              		.loc 1 429 14 is_stmt 0 view .LVU799
 2192 016e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 2193 0170 0133     		adds	r3, r3, #1
 2194 0172 2B70     		strb	r3, [r5]
 2195 0174 7FE7     		b	.L147
 2196              	.LVL218:
 2197              	.L162:
 431:mp3.c         ****          flag = 0;
 2198              		.loc 1 431 10 is_stmt 1 view .LVU800
 2199 0176 0921     		movs	r1, #9
 2200 0178 0220     		movs	r0, #2
 2201 017a 094B     		ldr	r3, .L174+28
 2202 017c 044A     		ldr	r2, .L174+12
 2203 017e FFF7FEFF 		bl	lcd_printf
 2204              	.LVL219:
 2205 0182 B5E7     		b	.L173
 2206              	.L175:
 2207              		.align	2
 2208              	.L174:
 2209 0184 00000000 		.word	.LANCHOR4
 2210 0188 00000000 		.word	mp3
 2211 018c 00000000 		.word	.LANCHOR6
 2212 0190 00000000 		.word	.LC2
 2213 0194 12000000 		.word	mp3+18
 2214 0198 11000000 		.word	mp3+17
 2215 019c 00000000 		.word	.LANCHOR0
 2216 01a0 41000000 		.word	mp3+65
 2217 01a4 00000000 		.word	.LANCHOR5
 2218              		.cfi_endproc
 2219              	.LFE38:
 2221              		.section	.text.read_byte_lrcbuf,"ax",%progbits
 2222              		.align	1
 2223              		.global	read_byte_lrcbuf
 2224              		.syntax unified
 2225              		.thumb
 2226              		.thumb_func
 2227              		.fpu softvfp
 2229              	read_byte_lrcbuf:
 2230              	.LVL220:
 2231              	.LFB40:
 435:mp3.c         **** 
 436:mp3.c         **** 
 437:mp3.c         **** unsigned char find_lrc (unsigned char *name)
 438:mp3.c         **** {
 439:mp3.c         ****       unsigned char i = 0;
 440:mp3.c         ****       unsigned short j;
 441:mp3.c         ****       unsigned char record[] = {"0:/lrc/"};
 442:mp3.c         ****       char *fn;
 443:mp3.c         **** #if _USE_LFN
 444:mp3.c         ****       static char lfn[_MAX_LFN * (_DF1S ? 2 : 1) + 1];
 445:mp3.c         ****       fno.lfname = lfn;
 446:mp3.c         ****       fno.lfsize = sizeof(lfn);
 447:mp3.c         **** #endif
 448:mp3.c         ****       lrc_read_init();
 449:mp3.c         ****       for (j=0;j<7000;j++) lrc_buffer[j] = 0;
 450:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 451:mp3.c         ****       for (j=0;j<512;j++) lrc_data[j] = 0;
 452:mp3.c         ****       res = f_opendir(&dirs,"0:/lrc");
 453:mp3.c         ****       while ((f_readdir(&dirs, &fno) == FR_OK) && fno.fname[0]) {
 454:mp3.c         **** #if _USE_LFN
 455:mp3.c         ****             fn = *fno.lfname ? fno.lfname : fno.fname;
 456:mp3.c         **** #else
 457:mp3.c         ****             fn = fno.fname;
 458:mp3.c         **** #endif
 459:mp3.c         ****             if (strcasecmp((char *)fn,(char *)name) == 0) {
 460:mp3.c         ****                strcpy((char *)fn,(char *)record);
 461:mp3.c         ****                strcpy((char *)&fn[7],(char *)name);
 462:mp3.c         ****                bw = f_open(&fap,fn,FA_OPEN_EXISTING | FA_READ);
 463:mp3.c         ****                if (bw) break;
 464:mp3.c         ****                get_tag();
 465:mp3.c         ****                if (i == 0) break;
 466:mp3.c         ****                init_tag();
 467:mp3.c         ****                copy_lrc_to_ram();
 468:mp3.c         ****                return 1;
 469:mp3.c         ****             }
 470:mp3.c         ****       }
 471:mp3.c         ****       return 0;
 472:mp3.c         **** }
 473:mp3.c         **** 
 474:mp3.c         **** 
 475:mp3.c         **** unsigned char read_byte_lrcbuf (unsigned short addr)
 476:mp3.c         **** {
 2232              		.loc 1 476 1 view -0
 2233              		.cfi_startproc
 2234              		@ args = 0, pretend = 0, frame = 0
 2235              		@ frame_needed = 0, uses_anonymous_args = 0
 2236              		@ link register save eliminated.
 477:mp3.c         ****       if (addr < 7000) return lrc_buffer[addr];else return 0xff;
 2237              		.loc 1 477 7 view .LVU802
 2238              		.loc 1 477 10 is_stmt 0 view .LVU803
 2239 0000 41F65733 		movw	r3, #6999
 2240 0004 9842     		cmp	r0, r3
 2241              		.loc 1 477 24 is_stmt 1 view .LVU804
 2242              		.loc 1 477 41 is_stmt 0 view .LVU805
 2243 0006 9ABF     		itte	ls
 2244 0008 014B     		ldrls	r3, .L179
 2245 000a 185C     		ldrbls	r0, [r3, r0]	@ zero_extendqisi2
 2246              	.LVL221:
 2247              		.loc 1 477 60 view .LVU806
 2248 000c FF20     		movhi	r0, #255
 478:mp3.c         **** }
 2249              		.loc 1 478 1 view .LVU807
 2250 000e 7047     		bx	lr
 2251              	.L180:
 2252              		.align	2
 2253              	.L179:
 2254 0010 00000000 		.word	lrc_buffer
 2255              		.cfi_endproc
 2256              	.LFE40:
 2258              		.section	.text.write_byte_lrcbuf,"ax",%progbits
 2259              		.align	1
 2260              		.global	write_byte_lrcbuf
 2261              		.syntax unified
 2262              		.thumb
 2263              		.thumb_func
 2264              		.fpu softvfp
 2266              	write_byte_lrcbuf:
 2267              	.LVL222:
 2268              	.LFB41:
 479:mp3.c         **** 
 480:mp3.c         **** 
 481:mp3.c         **** unsigned char write_byte_lrcbuf (unsigned short addr,unsigned char data)
 482:mp3.c         **** {
 2269              		.loc 1 482 1 is_stmt 1 view -0
 2270              		.cfi_startproc
 2271              		@ args = 0, pretend = 0, frame = 0
 2272              		@ frame_needed = 0, uses_anonymous_args = 0
 2273              		@ link register save eliminated.
 483:mp3.c         ****       if (addr < 7000) lrc_buffer[addr] = data;else return 0xff;
 2274              		.loc 1 483 7 view .LVU809
 2275              		.loc 1 483 10 is_stmt 0 view .LVU810
 2276 0000 41F65733 		movw	r3, #6999
 2277 0004 9842     		cmp	r0, r3
 2278              		.loc 1 483 24 is_stmt 1 view .LVU811
 2279              		.loc 1 483 41 is_stmt 0 view .LVU812
 2280 0006 9DBF     		ittte	ls
 2281 0008 024B     		ldrls	r3, .L184
 2282 000a 1954     		strbls	r1, [r3, r0]
 484:mp3.c         ****       return 1;
 2283              		.loc 1 484 7 is_stmt 1 view .LVU813
 2284              		.loc 1 484 14 is_stmt 0 view .LVU814
 2285 000c 0120     		movls	r0, #1
 2286              	.LVL223:
 483:mp3.c         ****       if (addr < 7000) lrc_buffer[addr] = data;else return 0xff;
 2287              		.loc 1 483 60 view .LVU815
 2288 000e FF20     		movhi	r0, #255
 485:mp3.c         **** }
 2289              		.loc 1 485 1 view .LVU816
 2290 0010 7047     		bx	lr
 2291              	.L185:
 2292 0012 00BF     		.align	2
 2293              	.L184:
 2294 0014 00000000 		.word	lrc_buffer
 2295              		.cfi_endproc
 2296              	.LFE41:
 2298              		.section	.text.lrc_read_init,"ax",%progbits
 2299              		.align	1
 2300              		.global	lrc_read_init
 2301              		.syntax unified
 2302              		.thumb
 2303              		.thumb_func
 2304              		.fpu softvfp
 2306              	lrc_read_init:
 2307              	.LFB43:
 486:mp3.c         **** 
 487:mp3.c         **** 
 488:mp3.c         **** void lyric_display_ctrl (void)
 489:mp3.c         **** {
 490:mp3.c         ****       static unsigned int time = 0;
 491:mp3.c         ****       static unsigned char ms = 0;
 492:mp3.c         ****       unsigned int t1;
 493:mp3.c         ****       if (!bt30ms) return;
 494:mp3.c         ****       ms += 3;
 495:mp3.c         ****       bt30ms = 0;
 496:mp3.c         ****       t1 = (((float)fsrc.fsize / f_kbps) / 125) * (propos);
 497:mp3.c         ****       if (t1 != time) {
 498:mp3.c         **** 	 time = t1;
 499:mp3.c         **** 	 ms = 0;
 500:mp3.c         **** 	 return;
 501:mp3.c         ****       }
 502:mp3.c         ****       if (((t1 == lyric.t_sec) && (ms >= lyric.t_ms)) || (t1 > lyric.t_sec)) {
 503:mp3.c         **** 	 read_lrc_file_data();
 504:mp3.c         ****       }
 505:mp3.c         **** }
 506:mp3.c         **** 
 507:mp3.c         **** 
 508:mp3.c         **** void lrc_read_init (void)
 509:mp3.c         **** {
 2308              		.loc 1 509 1 is_stmt 1 view -0
 2309              		.cfi_startproc
 2310              		@ args = 0, pretend = 0, frame = 0
 2311              		@ frame_needed = 0, uses_anonymous_args = 0
 2312              		@ link register save eliminated.
 510:mp3.c         ****       lyric.t_sec = 0;
 2313              		.loc 1 510 7 view .LVU818
 2314              		.loc 1 510 19 is_stmt 0 view .LVU819
 2315 0000 0022     		movs	r2, #0
 2316 0002 044B     		ldr	r3, .L187
 2317 0004 5A80     		strh	r2, [r3, #2]	@ movhi
 511:mp3.c         ****       lyric.t_ms = 0;
 2318              		.loc 1 511 7 is_stmt 1 view .LVU820
 2319              		.loc 1 511 18 is_stmt 0 view .LVU821
 2320 0006 1A71     		strb	r2, [r3, #4]
 512:mp3.c         ****       lyric.tagcnt = 0;
 2321              		.loc 1 512 7 is_stmt 1 view .LVU822
 2322              		.loc 1 512 20 is_stmt 0 view .LVU823
 2323 0008 1A72     		strb	r2, [r3, #8]
 513:mp3.c         ****       lyric.lrcoff = 0;
 2324              		.loc 1 513 7 is_stmt 1 view .LVU824
 2325              		.loc 1 513 20 is_stmt 0 view .LVU825
 2326 000a DA80     		strh	r2, [r3, #6]	@ movhi
 514:mp3.c         ****       lyric.first = 1;
 2327              		.loc 1 514 7 is_stmt 1 view .LVU826
 2328              		.loc 1 514 19 is_stmt 0 view .LVU827
 2329 000c 0122     		movs	r2, #1
 2330 000e 1A70     		strb	r2, [r3]
 515:mp3.c         **** }
 2331              		.loc 1 515 1 view .LVU828
 2332 0010 7047     		bx	lr
 2333              	.L188:
 2334 0012 00BF     		.align	2
 2335              	.L187:
 2336 0014 00000000 		.word	lyric
 2337              		.cfi_endproc
 2338              	.LFE43:
 2340              		.section	.text.read_lrc_file_data,"ax",%progbits
 2341              		.align	1
 2342              		.global	read_lrc_file_data
 2343              		.syntax unified
 2344              		.thumb
 2345              		.thumb_func
 2346              		.fpu softvfp
 2348              	read_lrc_file_data:
 2349              	.LFB44:
 516:mp3.c         **** 
 517:mp3.c         **** 
 518:mp3.c         **** void read_lrc_file_data (void)
 519:mp3.c         **** {
 2350              		.loc 1 519 1 is_stmt 1 view -0
 2351              		.cfi_startproc
 2352              		@ args = 0, pretend = 0, frame = 0
 2353              		@ frame_needed = 0, uses_anonymous_args = 0
 520:mp3.c         ****       unsigned char *lbuf = (unsigned char *)tag_table;
 2354              		.loc 1 520 7 view .LVU830
 2355              	.LVL224:
 521:mp3.c         ****       unsigned char c;
 2356              		.loc 1 521 7 view .LVU831
 522:mp3.c         ****       unsigned char cc;
 2357              		.loc 1 522 7 view .LVU832
 523:mp3.c         ****       unsigned short t;
 2358              		.loc 1 523 7 view .LVU833
 524:mp3.c         ****       if (lyric.tagcnt >= lrc_tag_cnt) return;
 2359              		.loc 1 524 7 view .LVU834
 519:mp3.c         ****       unsigned char *lbuf = (unsigned char *)tag_table;
 2360              		.loc 1 519 1 is_stmt 0 view .LVU835
 2361 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2362              		.cfi_def_cfa_offset 32
 2363              		.cfi_offset 3, -32
 2364              		.cfi_offset 4, -28
 2365              		.cfi_offset 5, -24
 2366              		.cfi_offset 6, -20
 2367              		.cfi_offset 7, -16
 2368              		.cfi_offset 8, -12
 2369              		.cfi_offset 9, -8
 2370              		.cfi_offset 14, -4
 2371              		.loc 1 524 16 view .LVU836
 2372 0004 554C     		ldr	r4, .L229
 2373              		.loc 1 524 10 view .LVU837
 2374 0006 564B     		ldr	r3, .L229+4
 2375 0008 227A     		ldrb	r2, [r4, #8]	@ zero_extendqisi2
 2376 000a 1B88     		ldrh	r3, [r3]
 2377 000c 9A42     		cmp	r2, r3
 2378 000e 80F08F80 		bcs	.L189
 2379              	.LBB129:
 2380              	.LBI129:
 518:mp3.c         **** {
 2381              		.loc 1 518 6 is_stmt 1 view .LVU838
 2382              	.LBB130:
 525:mp3.c         ****       lyric.t_sec = 0xffff;
 2383              		.loc 1 525 7 view .LVU839
 2384              		.loc 1 525 19 is_stmt 0 view .LVU840
 2385 0012 4FF6FF73 		movw	r3, #65535
 2386 0016 6380     		strh	r3, [r4, #2]	@ movhi
 526:mp3.c         ****       lyric.t_ms = 0;
 2387              		.loc 1 526 7 is_stmt 1 view .LVU841
 2388              		.loc 1 526 18 is_stmt 0 view .LVU842
 2389 0018 0023     		movs	r3, #0
 2390 001a 2371     		strb	r3, [r4, #4]
 527:mp3.c         ****       t = 0;
 2391              		.loc 1 527 7 is_stmt 1 view .LVU843
 2392              	.LVL225:
 528:mp3.c         ****       if (!lyric.first) {
 2393              		.loc 1 528 7 view .LVU844
 2394              		.loc 1 528 10 is_stmt 0 view .LVU845
 2395 001c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2396 001e 23BB     		cbnz	r3, .L194
 2397 0020 E688     		ldrh	r6, [r4, #6]
 2398              	.LBB131:
 2399              	.LBB132:
 477:mp3.c         **** }
 2400              		.loc 1 477 10 view .LVU846
 2401 0022 41F6573C 		movw	ip, #6999
 2402              	.LBE132:
 2403              	.LBE131:
 2404              		.loc 1 528 10 view .LVU847
 2405 0026 3246     		mov	r2, r6
 529:mp3.c         **** 	 while (1) {
 530:mp3.c         **** 	       c = read_byte_lrcbuf(lyric.lrcoff++);
 531:mp3.c         **** 	       if (c == '[') {
 532:mp3.c         **** 		  cc = read_byte_lrcbuf(lyric.lrcoff);
 533:mp3.c         **** 		  if (cc <= 9) {
 534:mp3.c         **** 		     lyric.lrcoff--;
 535:mp3.c         **** 		     break;
 536:mp3.c         **** 		  }
 537:mp3.c         **** 	       }
 538:mp3.c         **** 	       if (c == 0x0d || c == 0x0a || c== '\0') break;
 2406              		.loc 1 538 36 view .LVU848
 2407 0028 42F2014E 		movw	lr, #9217
 2408              	.LBB137:
 2409              	.LBB138:
 477:mp3.c         **** }
 2410              		.loc 1 477 10 view .LVU849
 2411 002c 41F65838 		movw	r8, #7000
 2412 0030 4C4D     		ldr	r5, .L229+8
 2413              	.LBE138:
 2414              	.LBE137:
 2415              	.LBB140:
 2416              	.LBB133:
 477:mp3.c         **** }
 2417              		.loc 1 477 41 view .LVU850
 2418 0032 4D4F     		ldr	r7, .L229+12
 2419              	.LVL226:
 2420              	.L193:
 477:mp3.c         **** }
 2421              		.loc 1 477 41 view .LVU851
 2422 0034 911B     		subs	r1, r2, r6
 2423              	.LBE133:
 2424              	.LBE140:
 530:mp3.c         **** 	       if (c == '[') {
 2425              		.loc 1 530 13 view .LVU852
 2426 0036 531C     		adds	r3, r2, #1
 2427              	.LBB141:
 2428              	.LBB134:
 477:mp3.c         **** }
 2429              		.loc 1 477 10 view .LVU853
 2430 0038 6245     		cmp	r2, ip
 2431 003a 89B2     		uxth	r1, r1
 2432              	.LVL227:
 477:mp3.c         **** }
 2433              		.loc 1 477 10 view .LVU854
 2434              	.LBE134:
 2435              	.LBE141:
 529:mp3.c         **** 	 while (1) {
 2436              		.loc 1 529 3 is_stmt 1 view .LVU855
 530:mp3.c         **** 	       if (c == '[') {
 2437              		.loc 1 530 9 view .LVU856
 530:mp3.c         **** 	       if (c == '[') {
 2438              		.loc 1 530 13 is_stmt 0 view .LVU857
 2439 003c 9BB2     		uxth	r3, r3
 2440              	.LVL228:
 2441              	.LBB142:
 2442              	.LBI131:
 475:mp3.c         **** {
 2443              		.loc 1 475 15 is_stmt 1 view .LVU858
 2444              	.LBB135:
 477:mp3.c         **** }
 2445              		.loc 1 477 7 view .LVU859
 477:mp3.c         **** }
 2446              		.loc 1 477 10 is_stmt 0 view .LVU860
 2447 003e 34D8     		bhi	.L209
 477:mp3.c         **** }
 2448              		.loc 1 477 24 is_stmt 1 view .LVU861
 477:mp3.c         **** }
 2449              		.loc 1 477 41 is_stmt 0 view .LVU862
 2450 0040 B85C     		ldrb	r0, [r7, r2]	@ zero_extendqisi2
 2451              	.LVL229:
 477:mp3.c         **** }
 2452              		.loc 1 477 41 view .LVU863
 2453              	.LBE135:
 2454              	.LBE142:
 531:mp3.c         **** 		  cc = read_byte_lrcbuf(lyric.lrcoff);
 2455              		.loc 1 531 9 is_stmt 1 view .LVU864
 531:mp3.c         **** 		  cc = read_byte_lrcbuf(lyric.lrcoff);
 2456              		.loc 1 531 12 is_stmt 0 view .LVU865
 2457 0042 5B28     		cmp	r0, #91
 2458 0044 29D1     		bne	.L196
 532:mp3.c         **** 		  if (cc <= 9) {
 2459              		.loc 1 532 5 is_stmt 1 view .LVU866
 2460              	.LVL230:
 2461              	.LBB143:
 2462              	.LBI137:
 475:mp3.c         **** {
 2463              		.loc 1 475 15 view .LVU867
 2464              	.LBB139:
 477:mp3.c         **** }
 2465              		.loc 1 477 7 view .LVU868
 477:mp3.c         **** }
 2466              		.loc 1 477 10 is_stmt 0 view .LVU869
 2467 0046 4345     		cmp	r3, r8
 2468 0048 30D0     		beq	.L195
 477:mp3.c         **** }
 2469              		.loc 1 477 24 is_stmt 1 view .LVU870
 2470              	.LVL231:
 477:mp3.c         **** }
 2471              		.loc 1 477 24 is_stmt 0 view .LVU871
 2472              	.LBE139:
 2473              	.LBE143:
 533:mp3.c         **** 		     lyric.lrcoff--;
 2474              		.loc 1 533 5 is_stmt 1 view .LVU872
 533:mp3.c         **** 		     lyric.lrcoff--;
 2475              		.loc 1 533 8 is_stmt 0 view .LVU873
 2476 004a 17F80390 		ldrb	r9, [r7, r3]	@ zero_extendqisi2
 2477 004e B9F1090F 		cmp	r9, #9
 2478 0052 2BD8     		bhi	.L195
 534:mp3.c         **** 		     break;
 2479              		.loc 1 534 8 is_stmt 1 view .LVU874
 534:mp3.c         **** 		     break;
 2480              		.loc 1 534 20 is_stmt 0 view .LVU875
 2481 0054 E280     		strh	r2, [r4, #6]	@ movhi
 535:mp3.c         **** 		  }
 2482              		.loc 1 535 8 is_stmt 1 view .LVU876
 2483              	.LVL232:
 2484              	.L197:
 539:mp3.c         **** 	       lbuf[t] = c;
 540:mp3.c         **** 	       t++;
 541:mp3.c         **** 	 }
 542:mp3.c         **** 	 lbuf[t] = '\0';
 2485              		.loc 1 542 3 view .LVU877
 2486              		.loc 1 542 11 is_stmt 0 view .LVU878
 2487 0056 0023     		movs	r3, #0
 543:mp3.c         ****          if (t > 2) lcd_printf(9,10," %s ",lbuf);
 2488              		.loc 1 543 13 view .LVU879
 2489 0058 0229     		cmp	r1, #2
 542:mp3.c         ****          if (t > 2) lcd_printf(9,10," %s ",lbuf);
 2490              		.loc 1 542 11 view .LVU880
 2491 005a 6B54     		strb	r3, [r5, r1]
 2492              		.loc 1 543 10 is_stmt 1 view .LVU881
 2493              		.loc 1 543 13 is_stmt 0 view .LVU882
 2494 005c 05D9     		bls	.L194
 2495              		.loc 1 543 21 is_stmt 1 view .LVU883
 2496 005e 0A21     		movs	r1, #10
 2497              	.LVL233:
 2498              		.loc 1 543 21 is_stmt 0 view .LVU884
 2499 0060 0920     		movs	r0, #9
 2500 0062 404B     		ldr	r3, .L229+8
 2501 0064 414A     		ldr	r2, .L229+16
 2502 0066 FFF7FEFF 		bl	lcd_printf
 2503              	.LVL234:
 2504              	.L194:
 544:mp3.c         ****       }
 545:mp3.c         ****       lyric.first = 0;
 2505              		.loc 1 545 7 is_stmt 1 view .LVU885
 2506              		.loc 1 545 19 is_stmt 0 view .LVU886
 2507 006a 0021     		movs	r1, #0
 546:mp3.c         ****       while (1) {
 547:mp3.c         **** 	    if (lyric.lrcoff > 7000) return;
 2508              		.loc 1 547 9 view .LVU887
 2509 006c 41F65837 		movw	r7, #7000
 545:mp3.c         ****       while (1) {
 2510              		.loc 1 545 19 view .LVU888
 2511 0070 8E46     		mov	lr, r1
 2512              	.LBB144:
 2513              	.LBB145:
 477:mp3.c         **** }
 2514              		.loc 1 477 10 view .LVU889
 2515 0072 41F65736 		movw	r6, #6999
 2516 0076 207A     		ldrb	r0, [r4, #8]	@ zero_extendqisi2
 2517 0078 6388     		ldrh	r3, [r4, #2]
 2518 007a E288     		ldrh	r2, [r4, #6]
 2519 007c 94F804C0 		ldrb	ip, [r4, #4]	@ zero_extendqisi2
 2520              	.LBE145:
 2521              	.LBE144:
 2522              	.LBB149:
 2523              	.LBB150:
 477:mp3.c         **** }
 2524              		.loc 1 477 41 view .LVU890
 2525 0080 394D     		ldr	r5, .L229+12
 2526              	.LBE150:
 2527              	.LBE149:
 545:mp3.c         ****       while (1) {
 2528              		.loc 1 545 19 view .LVU891
 2529 0082 2170     		strb	r1, [r4]
 2530              	.L199:
 546:mp3.c         ****       while (1) {
 2531              		.loc 1 546 7 is_stmt 1 view .LVU892
 2532              		.loc 1 547 6 view .LVU893
 2533              		.loc 1 547 9 is_stmt 0 view .LVU894
 2534 0084 BA42     		cmp	r2, r7
 2535 0086 1AD9     		bls	.L200
 2536 0088 BEF1000F 		cmp	lr, #0
 2537 008c 00D0     		beq	.L227
 2538 008e E280     		strh	r2, [r4, #6]	@ movhi
 2539              	.L227:
 2540 0090 0029     		cmp	r1, #0
 2541 0092 4DD0     		beq	.L189
 2542 0094 2072     		strb	r0, [r4, #8]
 2543 0096 6380     		strh	r3, [r4, #2]	@ movhi
 2544 0098 48E0     		b	.L228
 2545              	.LVL235:
 2546              	.L196:
 538:mp3.c         **** 	       lbuf[t] = c;
 2547              		.loc 1 538 9 is_stmt 1 view .LVU895
 538:mp3.c         **** 	       lbuf[t] = c;
 2548              		.loc 1 538 36 is_stmt 0 view .LVU896
 2549 009a 0D28     		cmp	r0, #13
 2550 009c 06D8     		bhi	.L195
 2551 009e 2EFA00F2 		lsr	r2, lr, r0
 2552 00a2 D207     		lsls	r2, r2, #31
 2553 00a4 02D5     		bpl	.L195
 2554 00a6 E380     		strh	r3, [r4, #6]	@ movhi
 2555 00a8 D5E7     		b	.L197
 2556              	.LVL236:
 2557              	.L209:
 2558              	.LBB153:
 2559              	.LBB136:
 477:mp3.c         **** }
 2560              		.loc 1 477 60 view .LVU897
 2561 00aa FF20     		movs	r0, #255
 2562              	.LVL237:
 2563              	.L195:
 477:mp3.c         **** }
 2564              		.loc 1 477 60 view .LVU898
 2565              	.LBE136:
 2566              	.LBE153:
 539:mp3.c         **** 	       t++;
 2567              		.loc 1 539 9 is_stmt 1 view .LVU899
 530:mp3.c         **** 	       if (c == '[') {
 2568              		.loc 1 530 13 is_stmt 0 view .LVU900
 2569 00ac 1A46     		mov	r2, r3
 539:mp3.c         **** 	       t++;
 2570              		.loc 1 539 17 view .LVU901
 2571 00ae 6854     		strb	r0, [r5, r1]
 540:mp3.c         **** 	 }
 2572              		.loc 1 540 9 is_stmt 1 view .LVU902
 2573              	.LVL238:
 529:mp3.c         **** 	       c = read_byte_lrcbuf(lyric.lrcoff++);
 2574              		.loc 1 529 9 view .LVU903
 530:mp3.c         **** 	       if (c == '[') {
 2575              		.loc 1 530 11 is_stmt 0 view .LVU904
 2576 00b0 C0E7     		b	.L193
 2577              	.LVL239:
 2578              	.L210:
 2579              	.LBB154:
 2580              	.LBB151:
 530:mp3.c         **** 	       if (c == '[') {
 2581              		.loc 1 530 11 view .LVU905
 2582 00b2 41F6593E 		movw	lr, #7001
 2583              	.LVL240:
 2584              	.L203:
 530:mp3.c         **** 	       if (c == '[') {
 2585              		.loc 1 530 11 view .LVU906
 2586              	.LBE151:
 2587              	.LBE154:
 2588 00b6 7246     		mov	r2, lr
 2589 00b8 4FF0010E 		mov	lr, #1
 2590 00bc E2E7     		b	.L199
 2591              	.L200:
 548:mp3.c         **** 	    c = read_byte_lrcbuf(lyric.lrcoff++);
 2592              		.loc 1 548 6 is_stmt 1 view .LVU907
 2593              		.loc 1 548 10 is_stmt 0 view .LVU908
 2594 00be 02F1010E 		add	lr, r2, #1
 2595 00c2 1FFA8EFE 		uxth	lr, lr
 2596              	.LVL241:
 2597              	.LBB155:
 2598              	.LBI149:
 475:mp3.c         **** {
 2599              		.loc 1 475 15 is_stmt 1 view .LVU909
 2600              	.LBB152:
 477:mp3.c         **** }
 2601              		.loc 1 477 7 view .LVU910
 477:mp3.c         **** }
 2602              		.loc 1 477 10 is_stmt 0 view .LVU911
 2603 00c6 F4D0     		beq	.L210
 477:mp3.c         **** }
 2604              		.loc 1 477 24 is_stmt 1 view .LVU912
 477:mp3.c         **** }
 2605              		.loc 1 477 41 is_stmt 0 view .LVU913
 2606 00c8 15F80280 		ldrb	r8, [r5, r2]	@ zero_extendqisi2
 2607              	.LVL242:
 477:mp3.c         **** }
 2608              		.loc 1 477 41 view .LVU914
 2609              	.LBE152:
 2610              	.LBE155:
 549:mp3.c         **** 	    if (c == '[') {
 2611              		.loc 1 549 6 is_stmt 1 view .LVU915
 2612              		.loc 1 549 9 is_stmt 0 view .LVU916
 2613 00cc B8F15B0F 		cmp	r8, #91
 2614 00d0 3ED1     		bne	.L204
 550:mp3.c         **** 	       lyric.tagcnt++;
 2615              		.loc 1 550 9 is_stmt 1 view .LVU917
 2616              	.LBB156:
 2617              	.LBB157:
 477:mp3.c         **** }
 2618              		.loc 1 477 10 is_stmt 0 view .LVU918
 2619 00d2 BE45     		cmp	lr, r7
 477:mp3.c         **** }
 2620              		.loc 1 477 60 view .LVU919
 2621 00d4 08BF     		it	eq
 2622 00d6 FF23     		moveq	r3, #255
 2623              	.LBE157:
 2624              	.LBE156:
 551:mp3.c         **** 	       lyric.t_sec = read_byte_lrcbuf(lyric.lrcoff++);
 552:mp3.c         **** 	       lyric.t_sec *= 60;
 553:mp3.c         **** 	       lyric.lrcoff++;
 2625              		.loc 1 553 21 view .LVU920
 2626 00d8 02F10308 		add	r8, r2, #3
 2627              	.LVL243:
 2628              		.loc 1 553 21 view .LVU921
 2629 00dc 1FFA88F8 		uxth	r8, r8
 2630              	.LBB160:
 2631              	.LBB158:
 477:mp3.c         **** }
 2632              		.loc 1 477 41 view .LVU922
 2633 00e0 18BF     		it	ne
 2634 00e2 15F80E30 		ldrbne	r3, [r5, lr]	@ zero_extendqisi2
 2635              	.LBE158:
 2636              	.LBE160:
 2637              	.LBB161:
 2638              	.LBB146:
 477:mp3.c         **** }
 2639              		.loc 1 477 10 view .LVU923
 2640 00e6 B045     		cmp	r8, r6
 477:mp3.c         **** }
 2641              		.loc 1 477 60 view .LVU924
 2642 00e8 88BF     		it	hi
 2643 00ea 4FF0FF08 		movhi	r8, #255
 2644              	.LBE146:
 2645              	.LBE161:
 552:mp3.c         **** 	       lyric.lrcoff++;
 2646              		.loc 1 552 21 view .LVU925
 2647 00ee C3EB0313 		rsb	r3, r3, r3, lsl #4
 2648              	.LBB162:
 2649              	.LBB147:
 477:mp3.c         **** }
 2650              		.loc 1 477 41 view .LVU926
 2651 00f2 98BF     		it	ls
 2652 00f4 15F80880 		ldrbls	r8, [r5, r8]	@ zero_extendqisi2
 2653              	.LBE147:
 2654              	.LBE162:
 552:mp3.c         **** 	       lyric.lrcoff++;
 2655              		.loc 1 552 21 view .LVU927
 2656 00f8 9B00     		lsls	r3, r3, #2
 554:mp3.c         **** 	       lyric.t_sec += read_byte_lrcbuf(lyric.lrcoff++);
 2657              		.loc 1 554 24 view .LVU928
 2658 00fa 02F1040E 		add	lr, r2, #4
 552:mp3.c         **** 	       lyric.lrcoff++;
 2659              		.loc 1 552 21 view .LVU929
 2660 00fe 9BB2     		uxth	r3, r3
 2661              		.loc 1 554 24 view .LVU930
 2662 0100 1FFA8EFE 		uxth	lr, lr
 2663              		.loc 1 554 21 view .LVU931
 2664 0104 4344     		add	r3, r3, r8
 550:mp3.c         **** 	       lyric.t_sec = read_byte_lrcbuf(lyric.lrcoff++);
 2665              		.loc 1 550 21 view .LVU932
 2666 0106 0130     		adds	r0, r0, #1
 555:mp3.c         **** 	       c = read_byte_lrcbuf(lyric.lrcoff++);
 2667              		.loc 1 555 13 view .LVU933
 2668 0108 02F10508 		add	r8, r2, #5
 2669              	.LBB163:
 2670              	.LBB164:
 477:mp3.c         **** }
 2671              		.loc 1 477 10 view .LVU934
 2672 010c B645     		cmp	lr, r6
 2673              	.LBE164:
 2674              	.LBE163:
 550:mp3.c         **** 	       lyric.t_sec = read_byte_lrcbuf(lyric.lrcoff++);
 2675              		.loc 1 550 21 view .LVU935
 2676 010e C0B2     		uxtb	r0, r0
 551:mp3.c         **** 	       lyric.t_sec *= 60;
 2677              		.loc 1 551 9 is_stmt 1 view .LVU936
 2678              	.LBB166:
 2679              	.LBI156:
 475:mp3.c         **** {
 2680              		.loc 1 475 15 view .LVU937
 2681              	.LBB159:
 477:mp3.c         **** }
 2682              		.loc 1 477 7 view .LVU938
 477:mp3.c         **** }
 2683              		.loc 1 477 24 view .LVU939
 2684              	.LBE159:
 2685              	.LBE166:
 552:mp3.c         **** 	       lyric.lrcoff++;
 2686              		.loc 1 552 9 view .LVU940
 553:mp3.c         **** 	       lyric.t_sec += read_byte_lrcbuf(lyric.lrcoff++);
 2687              		.loc 1 553 9 view .LVU941
 554:mp3.c         **** 	       c = read_byte_lrcbuf(lyric.lrcoff++);
 2688              		.loc 1 554 9 view .LVU942
 2689              	.LBB167:
 2690              	.LBI144:
 475:mp3.c         **** {
 2691              		.loc 1 475 15 view .LVU943
 2692              	.LBB148:
 477:mp3.c         **** }
 2693              		.loc 1 477 7 view .LVU944
 477:mp3.c         **** }
 2694              		.loc 1 477 24 view .LVU945
 2695              	.LBE148:
 2696              	.LBE167:
 554:mp3.c         **** 	       c = read_byte_lrcbuf(lyric.lrcoff++);
 2697              		.loc 1 554 21 is_stmt 0 view .LVU946
 2698 0110 9BB2     		uxth	r3, r3
 2699              		.loc 1 555 9 is_stmt 1 view .LVU947
 2700              		.loc 1 555 13 is_stmt 0 view .LVU948
 2701 0112 1FFA88F8 		uxth	r8, r8
 2702              	.LVL244:
 2703              	.LBB168:
 2704              	.LBI163:
 475:mp3.c         **** {
 2705              		.loc 1 475 15 is_stmt 1 view .LVU949
 2706              	.LBB165:
 477:mp3.c         **** }
 2707              		.loc 1 477 7 view .LVU950
 477:mp3.c         **** }
 2708              		.loc 1 477 10 is_stmt 0 view .LVU951
 2709 0116 0DD8     		bhi	.L207
 477:mp3.c         **** }
 2710              		.loc 1 477 24 is_stmt 1 view .LVU952
 2711              	.LVL245:
 477:mp3.c         **** }
 2712              		.loc 1 477 24 is_stmt 0 view .LVU953
 2713              	.LBE165:
 2714              	.LBE168:
 556:mp3.c         **** 	       if (c == ']') break;
 2715              		.loc 1 556 9 is_stmt 1 view .LVU954
 2716              		.loc 1 556 12 is_stmt 0 view .LVU955
 2717 0118 15F80EE0 		ldrb	lr, [r5, lr]	@ zero_extendqisi2
 2718              	.LVL246:
 2719              		.loc 1 556 12 view .LVU956
 2720 011c BEF15D0F 		cmp	lr, #93
 2721 0120 08D1     		bne	.L207
 2722 0122 A4F80680 		strh	r8, [r4, #6]	@ movhi
 2723 0126 2072     		strb	r0, [r4, #8]
 2724 0128 6380     		strh	r3, [r4, #2]	@ movhi
 2725 012a 09B1     		cbz	r1, .L189
 2726              	.LVL247:
 2727              	.L228:
 2728              		.loc 1 556 12 view .LVU957
 2729 012c 84F804C0 		strb	ip, [r4, #4]
 2730              	.L189:
 2731              	.LBE130:
 2732              	.LBE129:
 557:mp3.c         **** 	       lyric.t_ms = read_byte_lrcbuf(lyric.lrcoff++);
 558:mp3.c         **** 	    } else if (c == ']') break;
 559:mp3.c         ****       }
 560:mp3.c         **** }
 2733              		.loc 1 560 1 view .LVU958
 2734 0130 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2735              	.L207:
 2736              	.LBB178:
 2737              	.LBB177:
 557:mp3.c         **** 	       lyric.t_ms = read_byte_lrcbuf(lyric.lrcoff++);
 2738              		.loc 1 557 9 is_stmt 1 view .LVU959
 2739              	.LBB169:
 2740              	.LBB170:
 477:mp3.c         **** }
 2741              		.loc 1 477 10 is_stmt 0 view .LVU960
 2742 0134 B045     		cmp	r8, r6
 2743              	.LBE170:
 2744              	.LBE169:
 557:mp3.c         **** 	       lyric.t_ms = read_byte_lrcbuf(lyric.lrcoff++);
 2745              		.loc 1 557 22 view .LVU961
 2746 0136 02F10602 		add	r2, r2, #6
 2747              	.LBB174:
 2748              	.LBB171:
 477:mp3.c         **** }
 2749              		.loc 1 477 60 view .LVU962
 2750 013a 88BF     		it	hi
 2751 013c 4FF0FF0C 		movhi	ip, #255
 2752              	.LBE171:
 2753              	.LBE174:
 2754 0140 4FF00101 		mov	r1, #1
 2755              	.LBB175:
 2756              	.LBB172:
 477:mp3.c         **** }
 2757              		.loc 1 477 41 view .LVU963
 2758 0144 98BF     		it	ls
 2759 0146 15F808C0 		ldrbls	ip, [r5, r8]	@ zero_extendqisi2
 2760              	.LBE172:
 2761              	.LBE175:
 557:mp3.c         **** 	       lyric.t_ms = read_byte_lrcbuf(lyric.lrcoff++);
 2762              		.loc 1 557 22 view .LVU964
 2763 014a 1FFA82FE 		uxth	lr, r2
 2764              	.LVL248:
 2765              	.LBB176:
 2766              	.LBI169:
 475:mp3.c         **** {
 2767              		.loc 1 475 15 is_stmt 1 view .LVU965
 2768              	.LBB173:
 477:mp3.c         **** }
 2769              		.loc 1 477 7 view .LVU966
 477:mp3.c         **** }
 2770              		.loc 1 477 24 view .LVU967
 477:mp3.c         **** }
 2771              		.loc 1 477 24 is_stmt 0 view .LVU968
 2772              	.LBE173:
 2773              	.LBE176:
 2774 014e B2E7     		b	.L203
 2775              	.LVL249:
 2776              	.L204:
 558:mp3.c         ****       }
 2777              		.loc 1 558 13 is_stmt 1 view .LVU969
 558:mp3.c         ****       }
 2778              		.loc 1 558 16 is_stmt 0 view .LVU970
 2779 0150 B8F15D0F 		cmp	r8, #93
 2780 0154 AFD1     		bne	.L203
 2781 0156 A4F806E0 		strh	lr, [r4, #6]	@ movhi
 2782 015a 99E7     		b	.L227
 2783              	.L230:
 2784              		.align	2
 2785              	.L229:
 2786 015c 00000000 		.word	lyric
 2787 0160 00000000 		.word	.LANCHOR7
 2788 0164 00000000 		.word	tag_table
 2789 0168 00000000 		.word	lrc_buffer
 2790 016c 00000000 		.word	.LC2
 2791              	.LBE177:
 2792              	.LBE178:
 2793              		.cfi_endproc
 2794              	.LFE44:
 2796              		.section	.text.lyric_display_ctrl,"ax",%progbits
 2797              		.align	1
 2798              		.global	lyric_display_ctrl
 2799              		.syntax unified
 2800              		.thumb
 2801              		.thumb_func
 2802              		.fpu softvfp
 2804              	lyric_display_ctrl:
 2805              	.LFB42:
 489:mp3.c         ****       static unsigned int time = 0;
 2806              		.loc 1 489 1 is_stmt 1 view -0
 2807              		.cfi_startproc
 2808              		@ args = 0, pretend = 0, frame = 0
 2809              		@ frame_needed = 0, uses_anonymous_args = 0
 490:mp3.c         ****       static unsigned char ms = 0;
 2810              		.loc 1 490 7 view .LVU972
 491:mp3.c         ****       unsigned int t1;
 2811              		.loc 1 491 7 view .LVU973
 492:mp3.c         ****       if (!bt30ms) return;
 2812              		.loc 1 492 7 view .LVU974
 493:mp3.c         ****       ms += 3;
 2813              		.loc 1 493 7 view .LVU975
 489:mp3.c         ****       static unsigned int time = 0;
 2814              		.loc 1 489 1 is_stmt 0 view .LVU976
 2815 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2816              		.cfi_def_cfa_offset 24
 2817              		.cfi_offset 3, -24
 2818              		.cfi_offset 4, -20
 2819              		.cfi_offset 5, -16
 2820              		.cfi_offset 6, -12
 2821              		.cfi_offset 7, -8
 2822              		.cfi_offset 14, -4
 493:mp3.c         ****       ms += 3;
 2823              		.loc 1 493 11 view .LVU977
 2824 0002 1A4B     		ldr	r3, .L238
 493:mp3.c         ****       ms += 3;
 2825              		.loc 1 493 10 view .LVU978
 2826 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2827 0006 12B3     		cbz	r2, .L231
 494:mp3.c         ****       bt30ms = 0;
 2828              		.loc 1 494 7 is_stmt 1 view .LVU979
 495:mp3.c         ****       t1 = (((float)fsrc.fsize / f_kbps) / 125) * (propos);
 2829              		.loc 1 495 14 is_stmt 0 view .LVU980
 2830 0008 0027     		movs	r7, #0
 494:mp3.c         ****       bt30ms = 0;
 2831              		.loc 1 494 10 view .LVU981
 2832 000a 194E     		ldr	r6, .L238+4
 495:mp3.c         ****       t1 = (((float)fsrc.fsize / f_kbps) / 125) * (propos);
 2833              		.loc 1 495 14 view .LVU982
 2834 000c 1F70     		strb	r7, [r3]
 494:mp3.c         ****       bt30ms = 0;
 2835              		.loc 1 494 10 view .LVU983
 2836 000e 3478     		ldrb	r4, [r6]	@ zero_extendqisi2
 496:mp3.c         ****       if (t1 != time) {
 2837              		.loc 1 496 25 view .LVU984
 2838 0010 184B     		ldr	r3, .L238+8
 494:mp3.c         ****       bt30ms = 0;
 2839              		.loc 1 494 10 view .LVU985
 2840 0012 0334     		adds	r4, r4, #3
 2841 0014 E4B2     		uxtb	r4, r4
 496:mp3.c         ****       if (t1 != time) {
 2842              		.loc 1 496 14 view .LVU986
 2843 0016 D868     		ldr	r0, [r3, #12]
 494:mp3.c         ****       bt30ms = 0;
 2844              		.loc 1 494 10 view .LVU987
 2845 0018 3470     		strb	r4, [r6]
 495:mp3.c         ****       t1 = (((float)fsrc.fsize / f_kbps) / 125) * (propos);
 2846              		.loc 1 495 7 is_stmt 1 view .LVU988
 496:mp3.c         ****       if (t1 != time) {
 2847              		.loc 1 496 7 view .LVU989
 496:mp3.c         ****       if (t1 != time) {
 2848              		.loc 1 496 14 is_stmt 0 view .LVU990
 2849 001a FFF7FEFF 		bl	__aeabi_ui2f
 2850              	.LVL250:
 496:mp3.c         ****       if (t1 != time) {
 2851              		.loc 1 496 32 view .LVU991
 2852 001e 164B     		ldr	r3, .L238+12
 496:mp3.c         ****       if (t1 != time) {
 2853              		.loc 1 496 14 view .LVU992
 2854 0020 0546     		mov	r5, r0
 496:mp3.c         ****       if (t1 != time) {
 2855              		.loc 1 496 32 view .LVU993
 2856 0022 1888     		ldrh	r0, [r3]
 2857 0024 FFF7FEFF 		bl	__aeabi_i2f
 2858              	.LVL251:
 2859 0028 0146     		mov	r1, r0
 2860 002a 2846     		mov	r0, r5
 2861 002c FFF7FEFF 		bl	__aeabi_fdiv
 2862              	.LVL252:
 496:mp3.c         ****       if (t1 != time) {
 2863              		.loc 1 496 42 view .LVU994
 2864 0030 1249     		ldr	r1, .L238+16
 2865 0032 FFF7FEFF 		bl	__aeabi_fdiv
 2866              	.LVL253:
 496:mp3.c         ****       if (t1 != time) {
 2867              		.loc 1 496 49 view .LVU995
 2868 0036 124B     		ldr	r3, .L238+20
 2869 0038 1968     		ldr	r1, [r3]	@ float
 2870 003a FFF7FEFF 		bl	__aeabi_fmul
 2871              	.LVL254:
 496:mp3.c         ****       if (t1 != time) {
 2872              		.loc 1 496 10 view .LVU996
 2873 003e FFF7FEFF 		bl	__aeabi_f2uiz
 2874              	.LVL255:
 497:mp3.c         **** 	 time = t1;
 2875              		.loc 1 497 7 is_stmt 1 view .LVU997
 497:mp3.c         **** 	 time = t1;
 2876              		.loc 1 497 14 is_stmt 0 view .LVU998
 2877 0042 104B     		ldr	r3, .L238+24
 497:mp3.c         **** 	 time = t1;
 2878              		.loc 1 497 10 view .LVU999
 2879 0044 1A68     		ldr	r2, [r3]
 2880 0046 8242     		cmp	r2, r0
 2881 0048 02D0     		beq	.L234
 498:mp3.c         **** 	 ms = 0;
 2882              		.loc 1 498 3 is_stmt 1 view .LVU1000
 498:mp3.c         **** 	 ms = 0;
 2883              		.loc 1 498 8 is_stmt 0 view .LVU1001
 2884 004a 1860     		str	r0, [r3]
 499:mp3.c         **** 	 return;
 2885              		.loc 1 499 3 is_stmt 1 view .LVU1002
 499:mp3.c         **** 	 return;
 2886              		.loc 1 499 6 is_stmt 0 view .LVU1003
 2887 004c 3770     		strb	r7, [r6]
 500:mp3.c         ****       }
 2888              		.loc 1 500 3 is_stmt 1 view .LVU1004
 2889              	.LVL256:
 2890              	.L231:
 505:mp3.c         **** 
 2891              		.loc 1 505 1 is_stmt 0 view .LVU1005
 2892 004e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2893              	.LVL257:
 2894              	.L234:
 502:mp3.c         **** 	 read_lrc_file_data();
 2895              		.loc 1 502 7 is_stmt 1 view .LVU1006
 502:mp3.c         **** 	 read_lrc_file_data();
 2896              		.loc 1 502 24 is_stmt 0 view .LVU1007
 2897 0050 0D4B     		ldr	r3, .L238+28
 2898 0052 5988     		ldrh	r1, [r3, #2]
 502:mp3.c         **** 	 read_lrc_file_data();
 2899              		.loc 1 502 10 view .LVU1008
 2900 0054 9142     		cmp	r1, r2
 2901 0056 06D1     		bne	.L235
 502:mp3.c         **** 	 read_lrc_file_data();
 2902              		.loc 1 502 32 discriminator 1 view .LVU1009
 2903 0058 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2904 005a A342     		cmp	r3, r4
 2905 005c F7D8     		bhi	.L231
 2906              	.L236:
 503:mp3.c         ****       }
 2907              		.loc 1 503 3 is_stmt 1 view .LVU1010
 505:mp3.c         **** 
 2908              		.loc 1 505 1 is_stmt 0 view .LVU1011
 2909 005e BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 2910              		.cfi_remember_state
 2911              		.cfi_restore 14
 2912              		.cfi_restore 7
 2913              		.cfi_restore 6
 2914              		.cfi_restore 5
 2915              		.cfi_restore 4
 2916              		.cfi_restore 3
 2917              		.cfi_def_cfa_offset 0
 503:mp3.c         ****       }
 2918              		.loc 1 503 3 view .LVU1012
 2919 0062 FFF7FEBF 		b	read_lrc_file_data
 2920              	.LVL258:
 2921              	.L235:
 2922              		.cfi_restore_state
 502:mp3.c         **** 	 read_lrc_file_data();
 2923              		.loc 1 502 55 discriminator 3 view .LVU1013
 2924 0066 FAD3     		bcc	.L236
 2925 0068 F1E7     		b	.L231
 2926              	.L239:
 2927 006a 00BF     		.align	2
 2928              	.L238:
 2929 006c 00000000 		.word	.LANCHOR8
 2930 0070 00000000 		.word	.LANCHOR9
 2931 0074 00000000 		.word	fsrc
 2932 0078 00000000 		.word	.LANCHOR0
 2933 007c 0000FA42 		.word	1123680256
 2934 0080 00000000 		.word	.LANCHOR2
 2935 0084 00000000 		.word	.LANCHOR10
 2936 0088 00000000 		.word	lyric
 2937              		.cfi_endproc
 2938              	.LFE42:
 2940              		.section	.text.lrc_synchron,"ax",%progbits
 2941              		.align	1
 2942              		.global	lrc_synchron
 2943              		.syntax unified
 2944              		.thumb
 2945              		.thumb_func
 2946              		.fpu softvfp
 2948              	lrc_synchron:
 2949              	.LFB45:
 561:mp3.c         **** 
 562:mp3.c         **** 
 563:mp3.c         **** void  lrc_synchron (void)
 564:mp3.c         **** {
 2950              		.loc 1 564 1 is_stmt 1 view -0
 2951              		.cfi_startproc
 2952              		@ args = 0, pretend = 0, frame = 0
 2953              		@ frame_needed = 0, uses_anonymous_args = 0
 565:mp3.c         ****       unsigned char c;
 2954              		.loc 1 565 7 view .LVU1015
 566:mp3.c         ****       lrc_read_init();
 2955              		.loc 1 566 7 view .LVU1016
 564:mp3.c         ****       unsigned char c;
 2956              		.loc 1 564 1 is_stmt 0 view .LVU1017
 2957 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2958              		.cfi_def_cfa_offset 24
 2959              		.cfi_offset 4, -24
 2960              		.cfi_offset 5, -20
 2961              		.cfi_offset 6, -16
 2962              		.cfi_offset 7, -12
 2963              		.cfi_offset 8, -8
 2964              		.cfi_offset 14, -4
 2965              		.loc 1 566 7 view .LVU1018
 2966 0004 FFF7FEFF 		bl	lrc_read_init
 2967              	.LVL259:
 2968              	.LBB179:
 2969              	.LBB180:
 477:mp3.c         **** }
 2970              		.loc 1 477 10 view .LVU1019
 2971 0008 41F65735 		movw	r5, #6999
 2972              	.LBE180:
 2973              	.LBE179:
 567:mp3.c         ****       do {
 568:mp3.c         ****       	  c = read_byte_lrcbuf(lyric.lrcoff++);
 569:mp3.c         ****       	  if (c == '[') {
 570:mp3.c         ****       	     lyric.tagcnt++;
 571:mp3.c         ****       	     lyric.t_sec = read_byte_lrcbuf(lyric.lrcoff++);
 572:mp3.c         ****       	     lyric.t_sec *= 60;
 573:mp3.c         ****       	     lyric.lrcoff++;
 574:mp3.c         ****       	     lyric.t_sec += read_byte_lrcbuf(lyric.lrcoff++);
 575:mp3.c         **** 	  }
 576:mp3.c         **** 	  if (lyric.lrcoff > 7000) return;
 577:mp3.c         ****       } while (lyric.t_sec < timetemp);
 2974              		.loc 1 577 28 view .LVU1020
 2975 000c 4FF0000E 		mov	lr, #0
 576:mp3.c         ****       } while (lyric.t_sec < timetemp);
 2976              		.loc 1 576 7 view .LVU1021
 2977 0010 41F6583C 		movw	ip, #7000
 2978 0014 3A49     		ldr	r1, .L265
 2979              		.loc 1 577 28 view .LVU1022
 2980 0016 3B4B     		ldr	r3, .L265+4
 2981 0018 C888     		ldrh	r0, [r1, #6]
 2982 001a 0C7A     		ldrb	r4, [r1, #8]	@ zero_extendqisi2
 2983 001c 4A88     		ldrh	r2, [r1, #2]
 2984 001e 1F88     		ldrh	r7, [r3]
 2985              	.LBB184:
 2986              	.LBB181:
 477:mp3.c         **** }
 2987              		.loc 1 477 41 view .LVU1023
 2988 0020 394E     		ldr	r6, .L265+8
 2989              	.L246:
 2990              	.LBE181:
 2991              	.LBE184:
 567:mp3.c         ****       do {
 2992              		.loc 1 567 7 is_stmt 1 view .LVU1024
 568:mp3.c         ****       	  if (c == '[') {
 2993              		.loc 1 568 10 view .LVU1025
 568:mp3.c         ****       	  if (c == '[') {
 2994              		.loc 1 568 14 is_stmt 0 view .LVU1026
 2995 0022 431C     		adds	r3, r0, #1
 2996              	.LBB185:
 2997              	.LBB182:
 477:mp3.c         **** }
 2998              		.loc 1 477 10 view .LVU1027
 2999 0024 A842     		cmp	r0, r5
 3000              	.LBE182:
 3001              	.LBE185:
 568:mp3.c         ****       	  if (c == '[') {
 3002              		.loc 1 568 14 view .LVU1028
 3003 0026 9BB2     		uxth	r3, r3
 3004              	.LVL260:
 3005              	.LBB186:
 3006              	.LBI179:
 475:mp3.c         **** {
 3007              		.loc 1 475 15 is_stmt 1 view .LVU1029
 3008              	.LBB183:
 477:mp3.c         **** }
 3009              		.loc 1 477 7 view .LVU1030
 477:mp3.c         **** }
 3010              		.loc 1 477 10 is_stmt 0 view .LVU1031
 3011 0028 1FD8     		bhi	.L241
 477:mp3.c         **** }
 3012              		.loc 1 477 24 is_stmt 1 view .LVU1032
 3013              	.LVL261:
 477:mp3.c         **** }
 3014              		.loc 1 477 24 is_stmt 0 view .LVU1033
 3015              	.LBE183:
 3016              	.LBE186:
 569:mp3.c         ****       	     lyric.tagcnt++;
 3017              		.loc 1 569 10 is_stmt 1 view .LVU1034
 569:mp3.c         ****       	     lyric.tagcnt++;
 3018              		.loc 1 569 13 is_stmt 0 view .LVU1035
 3019 002a 16F80080 		ldrb	r8, [r6, r0]	@ zero_extendqisi2
 3020 002e B8F15B0F 		cmp	r8, #91
 3021 0032 1AD1     		bne	.L241
 570:mp3.c         ****       	     lyric.t_sec = read_byte_lrcbuf(lyric.lrcoff++);
 3022              		.loc 1 570 13 is_stmt 1 view .LVU1036
 3023              	.LBB187:
 3024              	.LBB188:
 477:mp3.c         **** }
 3025              		.loc 1 477 10 is_stmt 0 view .LVU1037
 3026 0034 AB42     		cmp	r3, r5
 3027              	.LBE188:
 3028              	.LBE187:
 573:mp3.c         ****       	     lyric.t_sec += read_byte_lrcbuf(lyric.lrcoff++);
 3029              		.loc 1 573 25 view .LVU1038
 3030 0036 00F1030E 		add	lr, r0, #3
 3031              	.LBB192:
 3032              	.LBB189:
 477:mp3.c         **** }
 3033              		.loc 1 477 60 view .LVU1039
 3034 003a 88BF     		it	hi
 3035 003c FF22     		movhi	r2, #255
 3036              	.LBE189:
 3037              	.LBE192:
 573:mp3.c         ****       	     lyric.t_sec += read_byte_lrcbuf(lyric.lrcoff++);
 3038              		.loc 1 573 25 view .LVU1040
 3039 003e 1FFA8EFE 		uxth	lr, lr
 3040              	.LBB193:
 3041              	.LBB190:
 477:mp3.c         **** }
 3042              		.loc 1 477 41 view .LVU1041
 3043 0042 98BF     		it	ls
 3044 0044 F25C     		ldrbls	r2, [r6, r3]	@ zero_extendqisi2
 3045              	.LBE190:
 3046              	.LBE193:
 3047              	.LBB194:
 3048              	.LBB195:
 477:mp3.c         **** }
 3049              		.loc 1 477 10 view .LVU1042
 3050 0046 AE45     		cmp	lr, r5
 3051              	.LBE195:
 3052              	.LBE194:
 574:mp3.c         **** 	  }
 3053              		.loc 1 574 28 view .LVU1043
 3054 0048 00F10403 		add	r3, r0, #4
 3055              	.LBB198:
 3056              	.LBB196:
 477:mp3.c         **** }
 3057              		.loc 1 477 60 view .LVU1044
 3058 004c 8CBF     		ite	hi
 3059 004e FF20     		movhi	r0, #255
 3060              	.LVL262:
 477:mp3.c         **** }
 3061              		.loc 1 477 41 view .LVU1045
 3062 0050 16F80E00 		ldrbls	r0, [r6, lr]	@ zero_extendqisi2
 3063              	.LBE196:
 3064              	.LBE198:
 574:mp3.c         **** 	  }
 3065              		.loc 1 574 25 view .LVU1046
 3066 0054 4FF0010E 		mov	lr, #1
 572:mp3.c         ****       	     lyric.lrcoff++;
 3067              		.loc 1 572 25 view .LVU1047
 3068 0058 C2EB0212 		rsb	r2, r2, r2, lsl #4
 3069 005c 9200     		lsls	r2, r2, #2
 3070 005e 92B2     		uxth	r2, r2
 570:mp3.c         ****       	     lyric.t_sec = read_byte_lrcbuf(lyric.lrcoff++);
 3071              		.loc 1 570 25 view .LVU1048
 3072 0060 0134     		adds	r4, r4, #1
 574:mp3.c         **** 	  }
 3073              		.loc 1 574 25 view .LVU1049
 3074 0062 0244     		add	r2, r2, r0
 570:mp3.c         ****       	     lyric.t_sec = read_byte_lrcbuf(lyric.lrcoff++);
 3075              		.loc 1 570 25 view .LVU1050
 3076 0064 E4B2     		uxtb	r4, r4
 571:mp3.c         ****       	     lyric.t_sec *= 60;
 3077              		.loc 1 571 13 is_stmt 1 view .LVU1051
 3078              	.LBB199:
 3079              	.LBI187:
 475:mp3.c         **** {
 3080              		.loc 1 475 15 view .LVU1052
 3081              	.LBB191:
 477:mp3.c         **** }
 3082              		.loc 1 477 7 view .LVU1053
 477:mp3.c         **** }
 3083              		.loc 1 477 24 view .LVU1054
 3084              	.LBE191:
 3085              	.LBE199:
 572:mp3.c         ****       	     lyric.lrcoff++;
 3086              		.loc 1 572 13 view .LVU1055
 573:mp3.c         ****       	     lyric.t_sec += read_byte_lrcbuf(lyric.lrcoff++);
 3087              		.loc 1 573 13 view .LVU1056
 574:mp3.c         **** 	  }
 3088              		.loc 1 574 13 view .LVU1057
 574:mp3.c         **** 	  }
 3089              		.loc 1 574 28 is_stmt 0 view .LVU1058
 3090 0066 9BB2     		uxth	r3, r3
 3091              	.LVL263:
 3092              	.LBB200:
 3093              	.LBI194:
 475:mp3.c         **** {
 3094              		.loc 1 475 15 is_stmt 1 view .LVU1059
 3095              	.LBB197:
 477:mp3.c         **** }
 3096              		.loc 1 477 7 view .LVU1060
 477:mp3.c         **** }
 3097              		.loc 1 477 24 view .LVU1061
 3098              	.LBE197:
 3099              	.LBE200:
 574:mp3.c         **** 	  }
 3100              		.loc 1 574 25 is_stmt 0 view .LVU1062
 3101 0068 92B2     		uxth	r2, r2
 3102              	.L241:
 576:mp3.c         ****       } while (lyric.t_sec < timetemp);
 3103              		.loc 1 576 4 is_stmt 1 view .LVU1063
 576:mp3.c         ****       } while (lyric.t_sec < timetemp);
 3104              		.loc 1 576 7 is_stmt 0 view .LVU1064
 3105 006a 6345     		cmp	r3, ip
 3106 006c 09D9     		bls	.L244
 3107 006e CB80     		strh	r3, [r1, #6]	@ movhi
 3108 0070 BEF1000F 		cmp	lr, #0
 3109 0074 01D0     		beq	.L240
 3110 0076 0C72     		strb	r4, [r1, #8]
 3111 0078 4A80     		strh	r2, [r1, #2]	@ movhi
 3112              	.L240:
 578:mp3.c         ****       lyric.lrcoff -= 5;
 579:mp3.c         ****       lyric.tagcnt--;
 580:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 581:mp3.c         ****       lyric.lrcoff++;
 582:mp3.c         ****       lyric.lrcoff++;
 583:mp3.c         ****       lyric.t_sec = read_byte_lrcbuf(lyric.lrcoff++);
 584:mp3.c         ****       lyric.t_sec *= 60;
 585:mp3.c         ****       lyric.lrcoff++;
 586:mp3.c         ****       lyric.t_sec += read_byte_lrcbuf(lyric.lrcoff++);
 587:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 588:mp3.c         ****       lyric.lrcoff++;
 589:mp3.c         **** }
 3113              		.loc 1 589 1 view .LVU1065
 3114 007a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3115              	.L256:
 3116 007e 1846     		mov	r0, r3
 3117 0080 CFE7     		b	.L246
 3118              	.L244:
 577:mp3.c         ****       lyric.lrcoff -= 5;
 3119              		.loc 1 577 15 is_stmt 1 view .LVU1066
 577:mp3.c         ****       lyric.lrcoff -= 5;
 3120              		.loc 1 577 7 is_stmt 0 view .LVU1067
 3121 0082 9742     		cmp	r7, r2
 3122 0084 FBD8     		bhi	.L256
 3123 0086 BEF1000F 		cmp	lr, #0
 3124 008a 00D0     		beq	.L247
 3125 008c 0C72     		strb	r4, [r1, #8]
 3126              	.L247:
 578:mp3.c         ****       lyric.lrcoff -= 5;
 3127              		.loc 1 578 7 is_stmt 1 view .LVU1068
 3128              	.LBB201:
 3129              	.LBB202:
 477:mp3.c         **** }
 3130              		.loc 1 477 10 is_stmt 0 view .LVU1069
 3131 008e 41F65735 		movw	r5, #6999
 3132              	.LBE202:
 3133              	.LBE201:
 579:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 3134              		.loc 1 579 19 view .LVU1070
 3135 0092 0A7A     		ldrb	r2, [r1, #8]	@ zero_extendqisi2
 578:mp3.c         ****       lyric.tagcnt--;
 3136              		.loc 1 578 20 view .LVU1071
 3137 0094 053B     		subs	r3, r3, #5
 579:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 3138              		.loc 1 579 19 view .LVU1072
 3139 0096 013A     		subs	r2, r2, #1
 3140              	.LBB206:
 3141              	.LBB203:
 477:mp3.c         **** }
 3142              		.loc 1 477 41 view .LVU1073
 3143 0098 1B48     		ldr	r0, .L265+8
 3144              	.LBE203:
 3145              	.LBE206:
 578:mp3.c         ****       lyric.tagcnt--;
 3146              		.loc 1 578 20 view .LVU1074
 3147 009a 9BB2     		uxth	r3, r3
 579:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 3148              		.loc 1 579 7 is_stmt 1 view .LVU1075
 579:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 3149              		.loc 1 579 19 is_stmt 0 view .LVU1076
 3150 009c 0A72     		strb	r2, [r1, #8]
 580:mp3.c         ****       lyric.lrcoff++;
 3151              		.loc 1 580 7 is_stmt 1 view .LVU1077
 3152              	.L248:
 580:mp3.c         ****       lyric.lrcoff++;
 3153              		.loc 1 580 54 discriminator 1 view .LVU1078
 580:mp3.c         ****       lyric.lrcoff++;
 3154              		.loc 1 580 13 discriminator 1 view .LVU1079
 580:mp3.c         ****       lyric.lrcoff++;
 3155              		.loc 1 580 14 is_stmt 0 discriminator 1 view .LVU1080
 3156 009e 5A1E     		subs	r2, r3, #1
 3157              	.LBB207:
 3158              	.LBB204:
 477:mp3.c         **** }
 3159              		.loc 1 477 10 discriminator 1 view .LVU1081
 3160 00a0 AB42     		cmp	r3, r5
 3161              	.LBE204:
 3162              	.LBE207:
 580:mp3.c         ****       lyric.lrcoff++;
 3163              		.loc 1 580 14 discriminator 1 view .LVU1082
 3164 00a2 92B2     		uxth	r2, r2
 3165              	.LVL264:
 3166              	.LBB208:
 3167              	.LBI201:
 475:mp3.c         **** {
 3168              		.loc 1 475 15 is_stmt 1 discriminator 1 view .LVU1083
 3169              	.LBB205:
 477:mp3.c         **** }
 3170              		.loc 1 477 7 discriminator 1 view .LVU1084
 477:mp3.c         **** }
 3171              		.loc 1 477 10 is_stmt 0 discriminator 1 view .LVU1085
 3172 00a4 28D8     		bhi	.L249
 477:mp3.c         **** }
 3173              		.loc 1 477 24 is_stmt 1 view .LVU1086
 3174              	.LVL265:
 477:mp3.c         **** }
 3175              		.loc 1 477 24 is_stmt 0 view .LVU1087
 3176              	.LBE205:
 3177              	.LBE208:
 580:mp3.c         ****       lyric.lrcoff++;
 3178              		.loc 1 580 13 view .LVU1088
 3179 00a6 C45C     		ldrb	r4, [r0, r3]	@ zero_extendqisi2
 3180 00a8 5B2C     		cmp	r4, #91
 3181 00aa 25D1     		bne	.L249
 581:mp3.c         ****       lyric.lrcoff++;
 3182              		.loc 1 581 7 is_stmt 1 view .LVU1089
 582:mp3.c         ****       lyric.t_sec = read_byte_lrcbuf(lyric.lrcoff++);
 3183              		.loc 1 582 7 view .LVU1090
 3184              	.LBB209:
 3185              	.LBB210:
 477:mp3.c         **** }
 3186              		.loc 1 477 10 is_stmt 0 view .LVU1091
 3187 00ac 41F65834 		movw	r4, #7000
 3188              	.LBE210:
 3189              	.LBE209:
 3190              	.LBB213:
 3191              	.LBB214:
 3192 00b0 41F65735 		movw	r5, #6999
 3193              	.LBE214:
 3194              	.LBE213:
 582:mp3.c         ****       lyric.t_sec = read_byte_lrcbuf(lyric.lrcoff++);
 3195              		.loc 1 582 19 view .LVU1092
 3196 00b4 5A1C     		adds	r2, r3, #1
 3197 00b6 92B2     		uxth	r2, r2
 583:mp3.c         ****       lyric.t_sec *= 60;
 3198              		.loc 1 583 7 is_stmt 1 view .LVU1093
 3199              	.LVL266:
 3200              	.LBB219:
 3201              	.LBI209:
 475:mp3.c         **** {
 3202              		.loc 1 475 15 view .LVU1094
 3203              	.LBB211:
 477:mp3.c         **** }
 3204              		.loc 1 477 7 view .LVU1095
 477:mp3.c         **** }
 3205              		.loc 1 477 10 is_stmt 0 view .LVU1096
 3206 00b8 A242     		cmp	r2, r4
 477:mp3.c         **** }
 3207              		.loc 1 477 24 is_stmt 1 view .LVU1097
 477:mp3.c         **** }
 3208              		.loc 1 477 60 is_stmt 0 view .LVU1098
 3209 00ba 08BF     		it	eq
 3210 00bc FF22     		moveq	r2, #255
 3211              	.LVL267:
 477:mp3.c         **** }
 3212              		.loc 1 477 60 view .LVU1099
 3213              	.LBE211:
 3214              	.LBE219:
 584:mp3.c         ****       lyric.lrcoff++;
 3215              		.loc 1 584 7 is_stmt 1 view .LVU1100
 585:mp3.c         ****       lyric.t_sec += read_byte_lrcbuf(lyric.lrcoff++);
 3216              		.loc 1 585 19 is_stmt 0 view .LVU1101
 3217 00be 03F10304 		add	r4, r3, #3
 3218 00c2 A4B2     		uxth	r4, r4
 3219              	.LBB220:
 3220              	.LBB212:
 477:mp3.c         **** }
 3221              		.loc 1 477 41 view .LVU1102
 3222 00c4 18BF     		it	ne
 3223 00c6 825C     		ldrbne	r2, [r0, r2]	@ zero_extendqisi2
 3224              	.LBE212:
 3225              	.LBE220:
 3226              	.LBB221:
 3227              	.LBB215:
 477:mp3.c         **** }
 3228              		.loc 1 477 10 view .LVU1103
 3229 00c8 AC42     		cmp	r4, r5
 477:mp3.c         **** }
 3230              		.loc 1 477 60 view .LVU1104
 3231 00ca 88BF     		it	hi
 3232 00cc FF24     		movhi	r4, #255
 3233              	.LBE215:
 3234              	.LBE221:
 3235              	.LBB222:
 3236              	.LBB223:
 477:mp3.c         **** }
 3237              		.loc 1 477 10 view .LVU1105
 3238 00ce 41F65735 		movw	r5, #6999
 3239              	.LBE223:
 3240              	.LBE222:
 584:mp3.c         ****       lyric.lrcoff++;
 3241              		.loc 1 584 19 view .LVU1106
 3242 00d2 C2EB0212 		rsb	r2, r2, r2, lsl #4
 3243              	.LBB226:
 3244              	.LBB216:
 477:mp3.c         **** }
 3245              		.loc 1 477 41 view .LVU1107
 3246 00d6 98BF     		it	ls
 3247 00d8 045D     		ldrbls	r4, [r0, r4]	@ zero_extendqisi2
 3248              	.LBE216:
 3249              	.LBE226:
 584:mp3.c         ****       lyric.lrcoff++;
 3250              		.loc 1 584 19 view .LVU1108
 3251 00da 9200     		lsls	r2, r2, #2
 3252 00dc 92B2     		uxth	r2, r2
 585:mp3.c         ****       lyric.t_sec += read_byte_lrcbuf(lyric.lrcoff++);
 3253              		.loc 1 585 7 is_stmt 1 view .LVU1109
 586:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 3254              		.loc 1 586 7 view .LVU1110
 586:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 3255              		.loc 1 586 22 is_stmt 0 view .LVU1111
 3256 00de 0433     		adds	r3, r3, #4
 586:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 3257              		.loc 1 586 19 view .LVU1112
 3258 00e0 2244     		add	r2, r2, r4
 586:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 3259              		.loc 1 586 22 view .LVU1113
 3260 00e2 9BB2     		uxth	r3, r3
 3261              	.LBB227:
 3262              	.LBI213:
 475:mp3.c         **** {
 3263              		.loc 1 475 15 is_stmt 1 view .LVU1114
 3264              	.LBB217:
 477:mp3.c         **** }
 3265              		.loc 1 477 7 view .LVU1115
 477:mp3.c         **** }
 3266              		.loc 1 477 24 view .LVU1116
 3267              	.LBE217:
 3268              	.LBE227:
 586:mp3.c         ****       while (read_byte_lrcbuf(lyric.lrcoff--) != '[');
 3269              		.loc 1 586 19 is_stmt 0 view .LVU1117
 3270 00e4 4A80     		strh	r2, [r1, #2]	@ movhi
 587:mp3.c         ****       lyric.lrcoff++;
 3271              		.loc 1 587 7 is_stmt 1 view .LVU1118
 3272              	.L252:
 587:mp3.c         ****       lyric.lrcoff++;
 3273              		.loc 1 587 54 discriminator 1 view .LVU1119
 587:mp3.c         ****       lyric.lrcoff++;
 3274              		.loc 1 587 13 discriminator 1 view .LVU1120
 587:mp3.c         ****       lyric.lrcoff++;
 3275              		.loc 1 587 14 is_stmt 0 discriminator 1 view .LVU1121
 3276 00e6 5A1E     		subs	r2, r3, #1
 3277              	.LBB228:
 3278              	.LBB224:
 477:mp3.c         **** }
 3279              		.loc 1 477 10 discriminator 1 view .LVU1122
 3280 00e8 AB42     		cmp	r3, r5
 3281              	.LBE224:
 3282              	.LBE228:
 587:mp3.c         ****       lyric.lrcoff++;
 3283              		.loc 1 587 14 discriminator 1 view .LVU1123
 3284 00ea 92B2     		uxth	r2, r2
 3285              	.LVL268:
 3286              	.LBB229:
 3287              	.LBI222:
 475:mp3.c         **** {
 3288              		.loc 1 475 15 is_stmt 1 discriminator 1 view .LVU1124
 3289              	.LBB225:
 477:mp3.c         **** }
 3290              		.loc 1 477 7 discriminator 1 view .LVU1125
 477:mp3.c         **** }
 3291              		.loc 1 477 10 is_stmt 0 discriminator 1 view .LVU1126
 3292 00ec 06D8     		bhi	.L253
 477:mp3.c         **** }
 3293              		.loc 1 477 24 is_stmt 1 view .LVU1127
 3294              	.LVL269:
 477:mp3.c         **** }
 3295              		.loc 1 477 24 is_stmt 0 view .LVU1128
 3296              	.LBE225:
 3297              	.LBE229:
 587:mp3.c         ****       lyric.lrcoff++;
 3298              		.loc 1 587 13 view .LVU1129
 3299 00ee C45C     		ldrb	r4, [r0, r3]	@ zero_extendqisi2
 3300 00f0 5B2C     		cmp	r4, #91
 3301 00f2 03D1     		bne	.L253
 588:mp3.c         **** }
 3302              		.loc 1 588 7 is_stmt 1 view .LVU1130
 588:mp3.c         **** }
 3303              		.loc 1 588 19 is_stmt 0 view .LVU1131
 3304 00f4 CB80     		strh	r3, [r1, #6]	@ movhi
 3305 00f6 C0E7     		b	.L240
 3306              	.L249:
 574:mp3.c         **** 	  }
 3307              		.loc 1 574 25 discriminator 1 view .LVU1132
 3308 00f8 1346     		mov	r3, r2
 3309 00fa D0E7     		b	.L248
 3310              	.L253:
 3311              	.LBB230:
 3312              	.LBB218:
 477:mp3.c         **** }
 3313              		.loc 1 477 60 discriminator 1 view .LVU1133
 3314 00fc 1346     		mov	r3, r2
 3315 00fe F2E7     		b	.L252
 3316              	.L266:
 3317              		.align	2
 3318              	.L265:
 3319 0100 00000000 		.word	lyric
 3320 0104 00000000 		.word	.LANCHOR11
 3321 0108 00000000 		.word	lrc_buffer
 3322              	.LBE218:
 3323              	.LBE230:
 3324              		.cfi_endproc
 3325              	.LFE45:
 3327              		.section	.text.get_byte,"ax",%progbits
 3328              		.align	1
 3329              		.global	get_byte
 3330              		.syntax unified
 3331              		.thumb
 3332              		.thumb_func
 3333              		.fpu softvfp
 3335              	get_byte:
 3336              	.LVL270:
 3337              	.LFB46:
 590:mp3.c         **** 
 591:mp3.c         **** 
 592:mp3.c         **** unsigned char get_byte (unsigned char rst)
 593:mp3.c         **** {
 3338              		.loc 1 593 1 is_stmt 1 view -0
 3339              		.cfi_startproc
 3340              		@ args = 0, pretend = 0, frame = 0
 3341              		@ frame_needed = 0, uses_anonymous_args = 0
 594:mp3.c         ****       static unsigned short bytepos;
 3342              		.loc 1 594 7 view .LVU1135
 595:mp3.c         ****       unsigned short temp;
 3343              		.loc 1 595 7 view .LVU1136
 596:mp3.c         ****       if (rst) {
 3344              		.loc 1 596 7 view .LVU1137
 593:mp3.c         ****       static unsigned short bytepos;
 3345              		.loc 1 593 1 is_stmt 0 view .LVU1138
 3346 0000 70B5     		push	{r4, r5, r6, lr}
 3347              		.cfi_def_cfa_offset 16
 3348              		.cfi_offset 4, -16
 3349              		.cfi_offset 5, -12
 3350              		.cfi_offset 6, -8
 3351              		.cfi_offset 14, -4
 3352 0002 194C     		ldr	r4, .L275
 3353              		.loc 1 596 10 view .LVU1139
 3354 0004 98B1     		cbz	r0, .L268
 3355              	.LVL271:
 3356              	.LBB233:
 3357              	.LBI233:
 592:mp3.c         **** {
 3358              		.loc 1 592 15 is_stmt 1 view .LVU1140
 3359              	.LBB234:
 597:mp3.c         ****       	 if (rst == 1) {
 3360              		.loc 1 597 9 view .LVU1141
 3361              		.loc 1 597 12 is_stmt 0 view .LVU1142
 3362 0006 0128     		cmp	r0, #1
 3363 0008 0ED1     		bne	.L269
 598:mp3.c         ****             f_lseek(&fap,0);
 3364              		.loc 1 598 13 is_stmt 1 view .LVU1143
 3365 000a 0021     		movs	r1, #0
 3366 000c 1748     		ldr	r0, .L275+4
 3367              	.LVL272:
 3368              		.loc 1 598 13 is_stmt 0 view .LVU1144
 3369 000e FFF7FEFF 		bl	f_lseek
 3370              	.LVL273:
 599:mp3.c         ****             f_read(&fap, lrc_data, 512, &br);
 3371              		.loc 1 599 13 is_stmt 1 view .LVU1145
 3372 0012 174B     		ldr	r3, .L275+8
 3373 0014 4FF40072 		mov	r2, #512
 3374 0018 1649     		ldr	r1, .L275+12
 3375 001a 1448     		ldr	r0, .L275+4
 3376 001c FFF7FEFF 		bl	f_read
 3377              	.LVL274:
 600:mp3.c         **** 	    bytepos = 0;
 3378              		.loc 1 600 6 view .LVU1146
 3379              		.loc 1 600 14 is_stmt 0 view .LVU1147
 3380 0020 0023     		movs	r3, #0
 3381              	.L274:
 601:mp3.c         **** 	 } else {
 602:mp3.c         **** 	    bytepos--;
 3382              		.loc 1 602 13 view .LVU1148
 3383 0022 FF20     		movs	r0, #255
 3384 0024 2380     		strh	r3, [r4]	@ movhi
 3385              	.LVL275:
 3386              	.L270:
 3387              		.loc 1 602 13 view .LVU1149
 3388              	.LBE234:
 3389              	.LBE233:
 603:mp3.c         **** 	 }
 604:mp3.c         **** 	 return 0xff;
 605:mp3.c         ****       }
 606:mp3.c         ****       if (bytepos > 511) {
 607:mp3.c         **** 	 for (temp=0;temp<512;temp++) lrc_data[temp] = 0xff;
 608:mp3.c         ****          f_read(&fap, lrc_data, 512, &br);
 609:mp3.c         **** 	 bytepos=0;
 610:mp3.c         ****       }
 611:mp3.c         ****       return lrc_data[bytepos++];
 612:mp3.c         **** }
 3390              		.loc 1 612 1 view .LVU1150
 3391 0026 70BD     		pop	{r4, r5, r6, pc}
 3392              	.LVL276:
 3393              	.L269:
 3394              	.LBB236:
 3395              	.LBB235:
 602:mp3.c         **** 	 }
 3396              		.loc 1 602 6 is_stmt 1 view .LVU1151
 602:mp3.c         **** 	 }
 3397              		.loc 1 602 13 is_stmt 0 view .LVU1152
 3398 0028 2388     		ldrh	r3, [r4]
 3399 002a 013B     		subs	r3, r3, #1
 3400 002c F9E7     		b	.L274
 3401              	.LVL277:
 3402              	.L268:
 602:mp3.c         **** 	 }
 3403              		.loc 1 602 13 view .LVU1153
 3404              	.LBE235:
 3405              	.LBE236:
 606:mp3.c         **** 	 for (temp=0;temp<512;temp++) lrc_data[temp] = 0xff;
 3406              		.loc 1 606 7 is_stmt 1 view .LVU1154
 606:mp3.c         **** 	 for (temp=0;temp<512;temp++) lrc_data[temp] = 0xff;
 3407              		.loc 1 606 10 is_stmt 0 view .LVU1155
 3408 002e 2388     		ldrh	r3, [r4]
 3409 0030 104E     		ldr	r6, .L275+12
 3410 0032 B3F5007F 		cmp	r3, #512
 3411 0036 11D3     		bcc	.L271
 3412 0038 3346     		mov	r3, r6
 3413 003a 4FF40075 		mov	r5, #512
 607:mp3.c         ****          f_read(&fap, lrc_data, 512, &br);
 3414              		.loc 1 607 47 view .LVU1156
 3415 003e FF22     		movs	r2, #255
 3416              	.L272:
 3417              	.LVL278:
 607:mp3.c         ****          f_read(&fap, lrc_data, 512, &br);
 3418              		.loc 1 607 32 is_stmt 1 discriminator 3 view .LVU1157
 3419 0040 013D     		subs	r5, r5, #1
 3420 0042 ADB2     		uxth	r5, r5
 607:mp3.c         ****          f_read(&fap, lrc_data, 512, &br);
 3421              		.loc 1 607 47 is_stmt 0 discriminator 3 view .LVU1158
 3422 0044 03F8012B 		strb	r2, [r3], #1
 3423              	.LVL279:
 607:mp3.c         ****          f_read(&fap, lrc_data, 512, &br);
 3424              		.loc 1 607 24 is_stmt 1 discriminator 3 view .LVU1159
 607:mp3.c         ****          f_read(&fap, lrc_data, 512, &br);
 3425              		.loc 1 607 15 discriminator 3 view .LVU1160
 607:mp3.c         ****          f_read(&fap, lrc_data, 512, &br);
 3426              		.loc 1 607 3 is_stmt 0 discriminator 3 view .LVU1161
 3427 0048 002D     		cmp	r5, #0
 3428 004a F9D1     		bne	.L272
 608:mp3.c         **** 	 bytepos=0;
 3429              		.loc 1 608 10 is_stmt 1 view .LVU1162
 3430 004c 4FF40072 		mov	r2, #512
 3431 0050 074B     		ldr	r3, .L275+8
 3432              	.LVL280:
 608:mp3.c         **** 	 bytepos=0;
 3433              		.loc 1 608 10 is_stmt 0 view .LVU1163
 3434 0052 0849     		ldr	r1, .L275+12
 3435 0054 0548     		ldr	r0, .L275+4
 3436              	.LVL281:
 608:mp3.c         **** 	 bytepos=0;
 3437              		.loc 1 608 10 view .LVU1164
 3438 0056 FFF7FEFF 		bl	f_read
 3439              	.LVL282:
 609:mp3.c         ****       }
 3440              		.loc 1 609 3 is_stmt 1 view .LVU1165
 609:mp3.c         ****       }
 3441              		.loc 1 609 10 is_stmt 0 view .LVU1166
 3442 005a 2580     		strh	r5, [r4]	@ movhi
 3443              	.L271:
 611:mp3.c         **** }
 3444              		.loc 1 611 7 is_stmt 1 view .LVU1167
 611:mp3.c         **** }
 3445              		.loc 1 611 30 is_stmt 0 view .LVU1168
 3446 005c 2388     		ldrh	r3, [r4]
 3447 005e 5A1C     		adds	r2, r3, #1
 611:mp3.c         **** }
 3448              		.loc 1 611 22 view .LVU1169
 3449 0060 F05C     		ldrb	r0, [r6, r3]	@ zero_extendqisi2
 611:mp3.c         **** }
 3450              		.loc 1 611 30 view .LVU1170
 3451 0062 2280     		strh	r2, [r4]	@ movhi
 611:mp3.c         **** }
 3452              		.loc 1 611 22 view .LVU1171
 3453 0064 DFE7     		b	.L270
 3454              	.L276:
 3455 0066 00BF     		.align	2
 3456              	.L275:
 3457 0068 00000000 		.word	.LANCHOR12
 3458 006c 00000000 		.word	fap
 3459 0070 00000000 		.word	br
 3460 0074 00000000 		.word	lrc_data
 3461              		.cfi_endproc
 3462              	.LFE46:
 3464              		.section	.text.get_num,"ax",%progbits
 3465              		.align	1
 3466              		.global	get_num
 3467              		.syntax unified
 3468              		.thumb
 3469              		.thumb_func
 3470              		.fpu softvfp
 3472              	get_num:
 3473              	.LFB47:
 613:mp3.c         **** 
 614:mp3.c         **** 
 615:mp3.c         **** unsigned char get_num (void)
 616:mp3.c         **** {
 3474              		.loc 1 616 1 is_stmt 1 view -0
 3475              		.cfi_startproc
 3476              		@ args = 0, pretend = 0, frame = 0
 3477              		@ frame_needed = 0, uses_anonymous_args = 0
 617:mp3.c         ****       unsigned char t1 = 0;
 3478              		.loc 1 617 7 view .LVU1173
 3479              	.LVL283:
 618:mp3.c         ****       unsigned char t2 = 0;
 3480              		.loc 1 618 7 view .LVU1174
 619:mp3.c         ****       t1 = get_byte(0);
 3481              		.loc 1 619 7 view .LVU1175
 616:mp3.c         ****       unsigned char t1 = 0;
 3482              		.loc 1 616 1 is_stmt 0 view .LVU1176
 3483 0000 10B5     		push	{r4, lr}
 3484              		.cfi_def_cfa_offset 8
 3485              		.cfi_offset 4, -8
 3486              		.cfi_offset 14, -4
 3487              		.loc 1 619 12 view .LVU1177
 3488 0002 0020     		movs	r0, #0
 3489 0004 FFF7FEFF 		bl	get_byte
 3490              	.LVL284:
 3491 0008 0446     		mov	r4, r0
 3492              	.LVL285:
 620:mp3.c         ****       t2 = get_byte(0);
 3493              		.loc 1 620 7 is_stmt 1 view .LVU1178
 3494              		.loc 1 620 12 is_stmt 0 view .LVU1179
 3495 000a 0020     		movs	r0, #0
 3496 000c FFF7FEFF 		bl	get_byte
 3497              	.LVL286:
 621:mp3.c         ****       if (t1 < '9' && t1 > '0' && t2 == ']') {
 3498              		.loc 1 621 7 is_stmt 1 view .LVU1180
 3499              		.loc 1 621 20 is_stmt 0 view .LVU1181
 3500 0010 A4F13103 		sub	r3, r4, #49
 3501              		.loc 1 621 10 view .LVU1182
 3502 0014 DBB2     		uxtb	r3, r3
 3503 0016 072B     		cmp	r3, #7
 3504 0018 0AD8     		bhi	.L278
 3505              		.loc 1 621 32 discriminator 1 view .LVU1183
 3506 001a 5D28     		cmp	r0, #93
 3507 001c 08D1     		bne	.L278
 622:mp3.c         **** 	 get_byte(2);
 3508              		.loc 1 622 3 is_stmt 1 view .LVU1184
 3509 001e 0220     		movs	r0, #2
 3510              	.LVL287:
 3511              		.loc 1 622 3 is_stmt 0 view .LVU1185
 3512 0020 FFF7FEFF 		bl	get_byte
 3513              	.LVL288:
 623:mp3.c         **** 	 return (t1 - '0') * 10;
 3514              		.loc 1 623 3 is_stmt 1 view .LVU1186
 3515              		.loc 1 623 21 is_stmt 0 view .LVU1187
 3516 0024 04EB8400 		add	r0, r4, r4, lsl #2
 3517 0028 4000     		lsls	r0, r0, #1
 3518 002a 2030     		adds	r0, r0, #32
 3519              	.LVL289:
 3520              	.L282:
 624:mp3.c         ****       }
 625:mp3.c         ****       t1 -= '0';
 626:mp3.c         ****       t2 -= '0';
 627:mp3.c         ****       if (t1 < 10 && t2 < 10) {
 628:mp3.c         **** 	 return t1 * 10 + t2;
 3521              		.loc 1 628 18 view .LVU1188
 3522 002c C0B2     		uxtb	r0, r0
 3523              	.L279:
 629:mp3.c         ****       }
 630:mp3.c         ****       return 0xFF;
 631:mp3.c         **** }
 3524              		.loc 1 631 1 view .LVU1189
 3525 002e 10BD     		pop	{r4, pc}
 3526              	.LVL290:
 3527              	.L278:
 625:mp3.c         ****       t2 -= '0';
 3528              		.loc 1 625 7 is_stmt 1 view .LVU1190
 625:mp3.c         ****       t2 -= '0';
 3529              		.loc 1 625 10 is_stmt 0 view .LVU1191
 3530 0030 303C     		subs	r4, r4, #48
 3531              	.LVL291:
 625:mp3.c         ****       t2 -= '0';
 3532              		.loc 1 625 10 view .LVU1192
 3533 0032 E4B2     		uxtb	r4, r4
 3534              	.LVL292:
 626:mp3.c         ****       if (t1 < 10 && t2 < 10) {
 3535              		.loc 1 626 7 is_stmt 1 view .LVU1193
 627:mp3.c         **** 	 return t1 * 10 + t2;
 3536              		.loc 1 627 7 view .LVU1194
 627:mp3.c         **** 	 return t1 * 10 + t2;
 3537              		.loc 1 627 10 is_stmt 0 view .LVU1195
 3538 0034 092C     		cmp	r4, #9
 3539 0036 08D8     		bhi	.L281
 626:mp3.c         ****       if (t1 < 10 && t2 < 10) {
 3540              		.loc 1 626 10 discriminator 1 view .LVU1196
 3541 0038 3038     		subs	r0, r0, #48
 3542              	.LVL293:
 626:mp3.c         ****       if (t1 < 10 && t2 < 10) {
 3543              		.loc 1 626 10 discriminator 1 view .LVU1197
 3544 003a C0B2     		uxtb	r0, r0
 627:mp3.c         **** 	 return t1 * 10 + t2;
 3545              		.loc 1 627 19 discriminator 1 view .LVU1198
 3546 003c 0928     		cmp	r0, #9
 3547 003e 04D8     		bhi	.L281
 628:mp3.c         ****       }
 3548              		.loc 1 628 3 is_stmt 1 view .LVU1199
 628:mp3.c         ****       }
 3549              		.loc 1 628 18 is_stmt 0 view .LVU1200
 3550 0040 04EB8404 		add	r4, r4, r4, lsl #2
 3551              	.LVL294:
 628:mp3.c         ****       }
 3552              		.loc 1 628 18 view .LVU1201
 3553 0044 00EB4400 		add	r0, r0, r4, lsl #1
 3554 0048 F0E7     		b	.L282
 3555              	.LVL295:
 3556              	.L281:
 630:mp3.c         **** }
 3557              		.loc 1 630 14 view .LVU1202
 3558 004a FF20     		movs	r0, #255
 3559 004c EFE7     		b	.L279
 3560              		.cfi_endproc
 3561              	.LFE47:
 3563              		.section	.text.get_tag,"ax",%progbits
 3564              		.align	1
 3565              		.global	get_tag
 3566              		.syntax unified
 3567              		.thumb
 3568              		.thumb_func
 3569              		.fpu softvfp
 3571              	get_tag:
 3572              	.LFB48:
 632:mp3.c         **** 
 633:mp3.c         **** 
 634:mp3.c         **** unsigned char get_tag (void)
 635:mp3.c         **** {
 3573              		.loc 1 635 1 is_stmt 1 view -0
 3574              		.cfi_startproc
 3575              		@ args = 0, pretend = 0, frame = 8
 3576              		@ frame_needed = 0, uses_anonymous_args = 0
 636:mp3.c         ****       unsigned short i = 0;
 3577              		.loc 1 636 7 view .LVU1204
 3578              	.LVL296:
 637:mp3.c         ****       unsigned char numx;
 3579              		.loc 1 637 7 view .LVU1205
 638:mp3.c         ****       unsigned char temp;
 3580              		.loc 1 638 7 view .LVU1206
 639:mp3.c         ****       unsigned char min;
 3581              		.loc 1 639 7 view .LVU1207
 640:mp3.c         ****       unsigned char sec;
 3582              		.loc 1 640 7 view .LVU1208
 641:mp3.c         ****       unsigned char mms;
 3583              		.loc 1 641 7 view .LVU1209
 642:mp3.c         ****       lrc_tag_cnt = 0;
 3584              		.loc 1 642 7 view .LVU1210
 635:mp3.c         ****       unsigned short i = 0;
 3585              		.loc 1 635 1 is_stmt 0 view .LVU1211
 3586 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3587              		.cfi_def_cfa_offset 48
 3588              		.cfi_offset 4, -36
 3589              		.cfi_offset 5, -32
 3590              		.cfi_offset 6, -28
 3591              		.cfi_offset 7, -24
 3592              		.cfi_offset 8, -20
 3593              		.cfi_offset 9, -16
 3594              		.cfi_offset 10, -12
 3595              		.cfi_offset 11, -8
 3596              		.cfi_offset 14, -4
 3597              		.loc 1 642 19 view .LVU1212
 3598 0004 0024     		movs	r4, #0
 3599 0006 2F4D     		ldr	r5, .L311
 643:mp3.c         ****       lrc_tag_type = 0;
 3600              		.loc 1 643 20 view .LVU1213
 3601 0008 2F4F     		ldr	r7, .L311+4
 644:mp3.c         ****       get_byte(1);
 3602              		.loc 1 644 7 view .LVU1214
 3603 000a 0120     		movs	r0, #1
 642:mp3.c         ****       lrc_tag_type = 0;
 3604              		.loc 1 642 19 view .LVU1215
 3605 000c 2C80     		strh	r4, [r5]	@ movhi
 643:mp3.c         ****       lrc_tag_type = 0;
 3606              		.loc 1 643 7 is_stmt 1 view .LVU1216
 643:mp3.c         ****       lrc_tag_type = 0;
 3607              		.loc 1 643 20 is_stmt 0 view .LVU1217
 3608 000e 3C70     		strb	r4, [r7]
 3609              		.loc 1 644 7 is_stmt 1 view .LVU1218
 645:mp3.c         ****       while (1) {
 646:mp3.c         **** 	    if (lrc_tag_cnt > 426) break;
 647:mp3.c         **** 	    while (1) {
 648:mp3.c         **** 		  temp = get_byte(0);
 3610              		.loc 1 648 12 is_stmt 0 view .LVU1219
 3611 0010 A246     		mov	r10, r4
 644:mp3.c         ****       while (1) {
 3612              		.loc 1 644 7 view .LVU1220
 3613 0012 FFF7FEFF 		bl	get_byte
 3614              	.LVL297:
 649:mp3.c         **** 		  if (temp == '[') {
 650:mp3.c         **** 		     break;
 651:mp3.c         **** 		  } else if (temp == 0xff) {
 652:mp3.c         **** 		     if (lrc_tag_cnt) return 1;else return 0;
 653:mp3.c         **** 		  }
 654:mp3.c         **** 	    }
 655:mp3.c         **** 	    numx = get_num();
 656:mp3.c         **** 	    if (get_byte(0) != ':' || numx == 0xff) continue;
 657:mp3.c         **** 	    min = numx;
 658:mp3.c         **** 	    numx = get_num();
 659:mp3.c         **** 	    temp = get_byte(0);
 660:mp3.c         **** 	    if ((temp != '.' && temp != ']') || numx == 0xff) continue;
 661:mp3.c         **** 	    sec = numx;
 662:mp3.c         **** 	    if (temp != '.') {
 663:mp3.c         **** 	       tag_table[i] = min;
 664:mp3.c         **** 	       tag_table[i + 1] = sec;
 665:mp3.c         **** 	       i += 2;
 666:mp3.c         **** 	       lrc_tag_type = 0;
 667:mp3.c         **** 	       lrc_tag_cnt++;
 668:mp3.c         **** 	       continue;
 669:mp3.c         **** 	    }
 670:mp3.c         **** 	    numx = get_num();
 671:mp3.c         **** 	    temp = get_byte(0);
 672:mp3.c         **** 	    if (temp != ']' || numx == 0xff) continue;
 673:mp3.c         **** 	    mms = numx;
 674:mp3.c         **** 	    lrc_tag_type = 1;
 3615              		.loc 1 674 19 view .LVU1221
 3616 0016 4FF0010B 		mov	fp, #1
 675:mp3.c         **** 	    lrc_tag_cnt++;
 676:mp3.c         **** 	    tag_table[i] = min;
 3617              		.loc 1 676 19 view .LVU1222
 3618 001a DFF8B090 		ldr	r9, .L311+8
 3619              	.LVL298:
 3620              	.L284:
 645:mp3.c         **** 	    if (lrc_tag_cnt > 426) break;
 3621              		.loc 1 645 7 is_stmt 1 view .LVU1223
 646:mp3.c         **** 	    while (1) {
 3622              		.loc 1 646 6 view .LVU1224
 646:mp3.c         **** 	    while (1) {
 3623              		.loc 1 646 9 is_stmt 0 view .LVU1225
 3624 001e 2B88     		ldrh	r3, [r5]
 3625 0020 B3F5D57F 		cmp	r3, #426
 3626 0024 31D8     		bhi	.L293
 3627              	.L287:
 647:mp3.c         **** 		  temp = get_byte(0);
 3628              		.loc 1 647 6 is_stmt 1 view .LVU1226
 648:mp3.c         **** 		  if (temp == '[') {
 3629              		.loc 1 648 5 view .LVU1227
 648:mp3.c         **** 		  if (temp == '[') {
 3630              		.loc 1 648 12 is_stmt 0 view .LVU1228
 3631 0026 0020     		movs	r0, #0
 3632 0028 FFF7FEFF 		bl	get_byte
 3633              	.LVL299:
 649:mp3.c         **** 		     break;
 3634              		.loc 1 649 5 is_stmt 1 view .LVU1229
 649:mp3.c         **** 		     break;
 3635              		.loc 1 649 8 is_stmt 0 view .LVU1230
 3636 002c 5B28     		cmp	r0, #91
 3637 002e 08D0     		beq	.L286
 651:mp3.c         **** 		     if (lrc_tag_cnt) return 1;else return 0;
 3638              		.loc 1 651 12 is_stmt 1 view .LVU1231
 651:mp3.c         **** 		     if (lrc_tag_cnt) return 1;else return 0;
 3639              		.loc 1 651 15 is_stmt 0 view .LVU1232
 3640 0030 FF28     		cmp	r0, #255
 3641 0032 F8D1     		bne	.L287
 652:mp3.c         **** 		  }
 3642              		.loc 1 652 8 is_stmt 1 view .LVU1233
 652:mp3.c         **** 		  }
 3643              		.loc 1 652 11 is_stmt 0 view .LVU1234
 3644 0034 2888     		ldrh	r0, [r5]
 3645              	.LVL300:
 652:mp3.c         **** 		  }
 3646              		.loc 1 652 32 view .LVU1235
 3647 0036 0038     		subs	r0, r0, #0
 3648 0038 18BF     		it	ne
 3649 003a 0120     		movne	r0, #1
 3650              	.L307:
 677:mp3.c         **** 	    tag_table[i + 1] = sec;
 678:mp3.c         **** 	    tag_table[i + 2] = mms;
 679:mp3.c         **** 	    i += 3;
 680:mp3.c         ****       }
 681:mp3.c         ****       return 1;
 682:mp3.c         **** }
 3651              		.loc 1 682 1 view .LVU1236
 3652 003c 03B0     		add	sp, sp, #12
 3653              		.cfi_remember_state
 3654              		.cfi_def_cfa_offset 36
 3655              		@ sp needed
 3656 003e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3657              	.LVL301:
 3658              	.L286:
 3659              		.cfi_restore_state
 655:mp3.c         **** 	    if (get_byte(0) != ':' || numx == 0xff) continue;
 3660              		.loc 1 655 6 is_stmt 1 view .LVU1237
 655:mp3.c         **** 	    if (get_byte(0) != ':' || numx == 0xff) continue;
 3661              		.loc 1 655 13 is_stmt 0 view .LVU1238
 3662 0042 FFF7FEFF 		bl	get_num
 3663              	.LVL302:
 655:mp3.c         **** 	    if (get_byte(0) != ':' || numx == 0xff) continue;
 3664              		.loc 1 655 13 view .LVU1239
 3665 0046 8046     		mov	r8, r0
 3666              	.LVL303:
 656:mp3.c         **** 	    min = numx;
 3667              		.loc 1 656 6 is_stmt 1 view .LVU1240
 656:mp3.c         **** 	    min = numx;
 3668              		.loc 1 656 10 is_stmt 0 view .LVU1241
 3669 0048 0020     		movs	r0, #0
 3670 004a FFF7FEFF 		bl	get_byte
 3671              	.LVL304:
 656:mp3.c         **** 	    min = numx;
 3672              		.loc 1 656 9 view .LVU1242
 3673 004e 3A28     		cmp	r0, #58
 3674 0050 E5D1     		bne	.L284
 656:mp3.c         **** 	    min = numx;
 3675              		.loc 1 656 29 discriminator 2 view .LVU1243
 3676 0052 B8F1FF0F 		cmp	r8, #255
 3677 0056 E2D0     		beq	.L284
 657:mp3.c         **** 	    numx = get_num();
 3678              		.loc 1 657 6 is_stmt 1 view .LVU1244
 3679              	.LVL305:
 658:mp3.c         **** 	    temp = get_byte(0);
 3680              		.loc 1 658 6 view .LVU1245
 658:mp3.c         **** 	    temp = get_byte(0);
 3681              		.loc 1 658 13 is_stmt 0 view .LVU1246
 3682 0058 FFF7FEFF 		bl	get_num
 3683              	.LVL306:
 3684 005c 0646     		mov	r6, r0
 3685              	.LVL307:
 659:mp3.c         **** 	    if ((temp != '.' && temp != ']') || numx == 0xff) continue;
 3686              		.loc 1 659 6 is_stmt 1 view .LVU1247
 659:mp3.c         **** 	    if ((temp != '.' && temp != ']') || numx == 0xff) continue;
 3687              		.loc 1 659 13 is_stmt 0 view .LVU1248
 3688 005e 0020     		movs	r0, #0
 3689 0060 FFF7FEFF 		bl	get_byte
 3690              	.LVL308:
 660:mp3.c         **** 	    sec = numx;
 3691              		.loc 1 660 6 is_stmt 1 view .LVU1249
 660:mp3.c         **** 	    sec = numx;
 3692              		.loc 1 660 9 is_stmt 0 view .LVU1250
 3693 0064 2E28     		cmp	r0, #46
 3694 0066 12D0     		beq	.L289
 660:mp3.c         **** 	    sec = numx;
 3695              		.loc 1 660 23 discriminator 1 view .LVU1251
 3696 0068 5D28     		cmp	r0, #93
 3697 006a D8D1     		bne	.L284
 660:mp3.c         **** 	    sec = numx;
 3698              		.loc 1 660 39 view .LVU1252
 3699 006c FF2E     		cmp	r6, #255
 3700 006e D6D0     		beq	.L284
 3701 0070 2B88     		ldrh	r3, [r5]
 661:mp3.c         **** 	    if (temp != '.') {
 3702              		.loc 1 661 6 is_stmt 1 view .LVU1253
 3703              	.LVL309:
 662:mp3.c         **** 	       tag_table[i] = min;
 3704              		.loc 1 662 6 view .LVU1254
 663:mp3.c         **** 	       tag_table[i + 1] = sec;
 3705              		.loc 1 663 9 view .LVU1255
 663:mp3.c         **** 	       tag_table[i + 1] = sec;
 3706              		.loc 1 663 22 is_stmt 0 view .LVU1256
 3707 0072 09F80480 		strb	r8, [r9, r4]
 664:mp3.c         **** 	       i += 2;
 3708              		.loc 1 664 9 is_stmt 1 view .LVU1257
 664:mp3.c         **** 	       i += 2;
 3709              		.loc 1 664 26 is_stmt 0 view .LVU1258
 3710 0076 09EB0402 		add	r2, r9, r4
 667:mp3.c         **** 	       continue;
 3711              		.loc 1 667 20 view .LVU1259
 3712 007a 0133     		adds	r3, r3, #1
 665:mp3.c         **** 	       lrc_tag_type = 0;
 3713              		.loc 1 665 11 view .LVU1260
 3714 007c 0234     		adds	r4, r4, #2
 3715              	.LVL310:
 664:mp3.c         **** 	       i += 2;
 3716              		.loc 1 664 26 view .LVU1261
 3717 007e 5670     		strb	r6, [r2, #1]
 665:mp3.c         **** 	       lrc_tag_type = 0;
 3718              		.loc 1 665 9 is_stmt 1 view .LVU1262
 665:mp3.c         **** 	       lrc_tag_type = 0;
 3719              		.loc 1 665 11 is_stmt 0 view .LVU1263
 3720 0080 A4B2     		uxth	r4, r4
 3721              	.LVL311:
 666:mp3.c         **** 	       lrc_tag_cnt++;
 3722              		.loc 1 666 9 is_stmt 1 view .LVU1264
 666:mp3.c         **** 	       lrc_tag_cnt++;
 3723              		.loc 1 666 22 is_stmt 0 view .LVU1265
 3724 0082 87F800A0 		strb	r10, [r7]
 667:mp3.c         **** 	       continue;
 3725              		.loc 1 667 9 is_stmt 1 view .LVU1266
 667:mp3.c         **** 	       continue;
 3726              		.loc 1 667 20 is_stmt 0 view .LVU1267
 3727 0086 2B80     		strh	r3, [r5]	@ movhi
 668:mp3.c         **** 	    }
 3728              		.loc 1 668 9 is_stmt 1 view .LVU1268
 3729 0088 C9E7     		b	.L284
 3730              	.LVL312:
 3731              	.L293:
 681:mp3.c         **** }
 3732              		.loc 1 681 14 is_stmt 0 view .LVU1269
 3733 008a 0120     		movs	r0, #1
 3734 008c D6E7     		b	.L307
 3735              	.LVL313:
 3736              	.L289:
 660:mp3.c         **** 	    sec = numx;
 3737              		.loc 1 660 39 view .LVU1270
 3738 008e FF2E     		cmp	r6, #255
 3739 0090 C5D0     		beq	.L284
 661:mp3.c         **** 	    if (temp != '.') {
 3740              		.loc 1 661 6 is_stmt 1 view .LVU1271
 3741              	.LVL314:
 662:mp3.c         **** 	       tag_table[i] = min;
 3742              		.loc 1 662 6 view .LVU1272
 670:mp3.c         **** 	    temp = get_byte(0);
 3743              		.loc 1 670 6 view .LVU1273
 670:mp3.c         **** 	    temp = get_byte(0);
 3744              		.loc 1 670 13 is_stmt 0 view .LVU1274
 3745 0092 FFF7FEFF 		bl	get_num
 3746              	.LVL315:
 670:mp3.c         **** 	    temp = get_byte(0);
 3747              		.loc 1 670 13 view .LVU1275
 3748 0096 0190     		str	r0, [sp, #4]
 3749              	.LVL316:
 671:mp3.c         **** 	    if (temp != ']' || numx == 0xff) continue;
 3750              		.loc 1 671 6 is_stmt 1 view .LVU1276
 671:mp3.c         **** 	    if (temp != ']' || numx == 0xff) continue;
 3751              		.loc 1 671 13 is_stmt 0 view .LVU1277
 3752 0098 0020     		movs	r0, #0
 3753 009a FFF7FEFF 		bl	get_byte
 3754              	.LVL317:
 672:mp3.c         **** 	    mms = numx;
 3755              		.loc 1 672 6 is_stmt 1 view .LVU1278
 672:mp3.c         **** 	    mms = numx;
 3756              		.loc 1 672 9 is_stmt 0 view .LVU1279
 3757 009e 5D28     		cmp	r0, #93
 3758 00a0 BDD1     		bne	.L284
 672:mp3.c         **** 	    mms = numx;
 3759              		.loc 1 672 22 discriminator 2 view .LVU1280
 3760 00a2 019B     		ldr	r3, [sp, #4]
 3761 00a4 FF2B     		cmp	r3, #255
 3762 00a6 BAD0     		beq	.L284
 3763 00a8 2A88     		ldrh	r2, [r5]
 673:mp3.c         **** 	    lrc_tag_type = 1;
 3764              		.loc 1 673 6 is_stmt 1 view .LVU1281
 3765              	.LVL318:
 674:mp3.c         **** 	    lrc_tag_cnt++;
 3766              		.loc 1 674 6 view .LVU1282
 676:mp3.c         **** 	    tag_table[i + 1] = sec;
 3767              		.loc 1 676 19 is_stmt 0 view .LVU1283
 3768 00aa 09F80480 		strb	r8, [r9, r4]
 675:mp3.c         **** 	    tag_table[i] = min;
 3769              		.loc 1 675 17 view .LVU1284
 3770 00ae 0132     		adds	r2, r2, #1
 3771 00b0 2A80     		strh	r2, [r5]	@ movhi
 677:mp3.c         **** 	    tag_table[i + 2] = mms;
 3772              		.loc 1 677 23 view .LVU1285
 3773 00b2 09EB0402 		add	r2, r9, r4
 679:mp3.c         ****       }
 3774              		.loc 1 679 8 view .LVU1286
 3775 00b6 0334     		adds	r4, r4, #3
 3776              	.LVL319:
 674:mp3.c         **** 	    lrc_tag_cnt++;
 3777              		.loc 1 674 19 view .LVU1287
 3778 00b8 87F800B0 		strb	fp, [r7]
 675:mp3.c         **** 	    tag_table[i] = min;
 3779              		.loc 1 675 6 is_stmt 1 view .LVU1288
 676:mp3.c         **** 	    tag_table[i + 1] = sec;
 3780              		.loc 1 676 6 view .LVU1289
 677:mp3.c         **** 	    tag_table[i + 2] = mms;
 3781              		.loc 1 677 6 view .LVU1290
 677:mp3.c         **** 	    tag_table[i + 2] = mms;
 3782              		.loc 1 677 23 is_stmt 0 view .LVU1291
 3783 00bc 5670     		strb	r6, [r2, #1]
 678:mp3.c         **** 	    i += 3;
 3784              		.loc 1 678 6 is_stmt 1 view .LVU1292
 678:mp3.c         **** 	    i += 3;
 3785              		.loc 1 678 23 is_stmt 0 view .LVU1293
 3786 00be 9370     		strb	r3, [r2, #2]
 679:mp3.c         ****       }
 3787              		.loc 1 679 6 is_stmt 1 view .LVU1294
 679:mp3.c         ****       }
 3788              		.loc 1 679 8 is_stmt 0 view .LVU1295
 3789 00c0 A4B2     		uxth	r4, r4
 3790              	.LVL320:
 679:mp3.c         ****       }
 3791              		.loc 1 679 8 view .LVU1296
 3792 00c2 ACE7     		b	.L284
 3793              	.L312:
 3794              		.align	2
 3795              	.L311:
 3796 00c4 00000000 		.word	.LANCHOR7
 3797 00c8 00000000 		.word	.LANCHOR13
 3798 00cc 00000000 		.word	tag_table
 3799              		.cfi_endproc
 3800              	.LFE48:
 3802              		.section	.rodata.find_lrc.str1.1,"aMS",%progbits,1
 3803              	.LC4:
 3804 0000 303A2F6C 		.ascii	"0:/lrc\000"
 3804      726300
 3805              	.LC3:
 3806 0007 303A2F6C 		.ascii	"0:/lrc/\000"
 3806      72632F00 
 3807              		.section	.text.find_lrc,"ax",%progbits
 3808              		.align	1
 3809              		.global	find_lrc
 3810              		.syntax unified
 3811              		.thumb
 3812              		.thumb_func
 3813              		.fpu softvfp
 3815              	find_lrc:
 3816              	.LVL321:
 3817              	.LFB39:
 438:mp3.c         ****       unsigned char i = 0;
 3818              		.loc 1 438 1 is_stmt 1 view -0
 3819              		.cfi_startproc
 3820              		@ args = 0, pretend = 0, frame = 8
 3821              		@ frame_needed = 0, uses_anonymous_args = 0
 439:mp3.c         ****       unsigned short j;
 3822              		.loc 1 439 7 view .LVU1298
 440:mp3.c         ****       unsigned char record[] = {"0:/lrc/"};
 3823              		.loc 1 440 7 view .LVU1299
 441:mp3.c         ****       char *fn;
 3824              		.loc 1 441 7 view .LVU1300
 438:mp3.c         ****       unsigned char i = 0;
 3825              		.loc 1 438 1 is_stmt 0 view .LVU1301
 3826 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 3827              		.cfi_def_cfa_offset 32
 3828              		.cfi_offset 4, -20
 3829              		.cfi_offset 5, -16
 3830              		.cfi_offset 6, -12
 3831              		.cfi_offset 7, -8
 3832              		.cfi_offset 14, -4
 441:mp3.c         ****       char *fn;
 3833              		.loc 1 441 21 view .LVU1302
 3834 0002 6B46     		mov	r3, sp
 3835 0004 274A     		ldr	r2, .L326
 438:mp3.c         ****       unsigned char i = 0;
 3836              		.loc 1 438 1 view .LVU1303
 3837 0006 0446     		mov	r4, r0
 441:mp3.c         ****       char *fn;
 3838              		.loc 1 441 21 view .LVU1304
 3839 0008 5168     		ldr	r1, [r2, #4]	@ unaligned
 3840 000a 1068     		ldr	r0, [r2]	@ unaligned
 3841              	.LVL322:
 441:mp3.c         ****       char *fn;
 3842              		.loc 1 441 21 view .LVU1305
 3843 000c 03C3     		stmia	r3!, {r0, r1}
 442:mp3.c         **** #if _USE_LFN
 3844              		.loc 1 442 7 is_stmt 1 view .LVU1306
 448:mp3.c         ****       for (j=0;j<7000;j++) lrc_buffer[j] = 0;
 3845              		.loc 1 448 7 view .LVU1307
 3846 000e FFF7FEFF 		bl	lrc_read_init
 3847              	.LVL323:
 449:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 3848              		.loc 1 449 7 view .LVU1308
 449:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 3849              		.loc 1 449 16 view .LVU1309
 448:mp3.c         ****       for (j=0;j<7000;j++) lrc_buffer[j] = 0;
 3850              		.loc 1 448 7 is_stmt 0 view .LVU1310
 3851 0012 41F65832 		movw	r2, #7000
 449:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 3852              		.loc 1 449 42 view .LVU1311
 3853 0016 0021     		movs	r1, #0
 3854 0018 234B     		ldr	r3, .L326+4
 3855              	.LVL324:
 3856              	.L314:
 449:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 3857              		.loc 1 449 28 is_stmt 1 discriminator 3 view .LVU1312
 3858 001a 013A     		subs	r2, r2, #1
 3859 001c 92B2     		uxth	r2, r2
 449:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 3860              		.loc 1 449 42 is_stmt 0 discriminator 3 view .LVU1313
 3861 001e 03F8011B 		strb	r1, [r3], #1
 3862              	.LVL325:
 449:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 3863              		.loc 1 449 23 is_stmt 1 discriminator 3 view .LVU1314
 449:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 3864              		.loc 1 449 16 discriminator 3 view .LVU1315
 449:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 3865              		.loc 1 449 7 is_stmt 0 discriminator 3 view .LVU1316
 3866 0022 002A     		cmp	r2, #0
 3867 0024 F9D1     		bne	.L314
 449:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 3868              		.loc 1 449 7 view .LVU1317
 3869 0026 4FF40073 		mov	r3, #512
 3870              	.LVL326:
 449:mp3.c         ****       for (j=0;j<512;j++) tag_table[j] = 0;
 3871              		.loc 1 449 7 view .LVU1318
 3872 002a 2049     		ldr	r1, .L326+8
 3873              	.L315:
 3874              	.LVL327:
 450:mp3.c         ****       for (j=0;j<512;j++) lrc_data[j] = 0;
 3875              		.loc 1 450 27 is_stmt 1 discriminator 3 view .LVU1319
 3876 002c 013B     		subs	r3, r3, #1
 3877 002e 9BB2     		uxth	r3, r3
 450:mp3.c         ****       for (j=0;j<512;j++) lrc_data[j] = 0;
 3878              		.loc 1 450 40 is_stmt 0 discriminator 3 view .LVU1320
 3879 0030 01F8012B 		strb	r2, [r1], #1
 3880              	.LVL328:
 450:mp3.c         ****       for (j=0;j<512;j++) lrc_data[j] = 0;
 3881              		.loc 1 450 22 is_stmt 1 discriminator 3 view .LVU1321
 450:mp3.c         ****       for (j=0;j<512;j++) lrc_data[j] = 0;
 3882              		.loc 1 450 16 discriminator 3 view .LVU1322
 450:mp3.c         ****       for (j=0;j<512;j++) lrc_data[j] = 0;
 3883              		.loc 1 450 7 is_stmt 0 discriminator 3 view .LVU1323
 3884 0034 002B     		cmp	r3, #0
 3885 0036 F9D1     		bne	.L315
 450:mp3.c         ****       for (j=0;j<512;j++) lrc_data[j] = 0;
 3886              		.loc 1 450 7 view .LVU1324
 3887 0038 4FF40072 		mov	r2, #512
 3888 003c 1C49     		ldr	r1, .L326+12
 3889              	.LVL329:
 3890              	.L316:
 451:mp3.c         ****       res = f_opendir(&dirs,"0:/lrc");
 3891              		.loc 1 451 27 is_stmt 1 discriminator 3 view .LVU1325
 3892 003e 013A     		subs	r2, r2, #1
 3893 0040 92B2     		uxth	r2, r2
 451:mp3.c         ****       res = f_opendir(&dirs,"0:/lrc");
 3894              		.loc 1 451 39 is_stmt 0 discriminator 3 view .LVU1326
 3895 0042 01F8013B 		strb	r3, [r1], #1
 3896              	.LVL330:
 451:mp3.c         ****       res = f_opendir(&dirs,"0:/lrc");
 3897              		.loc 1 451 22 is_stmt 1 discriminator 3 view .LVU1327
 451:mp3.c         ****       res = f_opendir(&dirs,"0:/lrc");
 3898              		.loc 1 451 16 discriminator 3 view .LVU1328
 451:mp3.c         ****       res = f_opendir(&dirs,"0:/lrc");
 3899              		.loc 1 451 7 is_stmt 0 discriminator 3 view .LVU1329
 3900 0046 002A     		cmp	r2, #0
 3901 0048 F9D1     		bne	.L316
 452:mp3.c         ****       while ((f_readdir(&dirs, &fno) == FR_OK) && fno.fname[0]) {
 3902              		.loc 1 452 7 is_stmt 1 view .LVU1330
 452:mp3.c         ****       while ((f_readdir(&dirs, &fno) == FR_OK) && fno.fname[0]) {
 3903              		.loc 1 452 13 is_stmt 0 view .LVU1331
 3904 004a 1A49     		ldr	r1, .L326+16
 3905              	.LVL331:
 452:mp3.c         ****       while ((f_readdir(&dirs, &fno) == FR_OK) && fno.fname[0]) {
 3906              		.loc 1 452 13 view .LVU1332
 3907 004c 1A48     		ldr	r0, .L326+20
 3908 004e FFF7FEFF 		bl	f_opendir
 3909              	.LVL332:
 453:mp3.c         **** #if _USE_LFN
 3910              		.loc 1 453 15 view .LVU1333
 3911 0052 1A4D     		ldr	r5, .L326+24
 452:mp3.c         ****       while ((f_readdir(&dirs, &fno) == FR_OK) && fno.fname[0]) {
 3912              		.loc 1 452 11 view .LVU1334
 3913 0054 1A4B     		ldr	r3, .L326+28
 453:mp3.c         **** #if _USE_LFN
 3914              		.loc 1 453 15 view .LVU1335
 3915 0056 184E     		ldr	r6, .L326+20
 452:mp3.c         ****       while ((f_readdir(&dirs, &fno) == FR_OK) && fno.fname[0]) {
 3916              		.loc 1 452 11 view .LVU1336
 3917 0058 1870     		strb	r0, [r3]
 453:mp3.c         **** #if _USE_LFN
 3918              		.loc 1 453 7 is_stmt 1 view .LVU1337
 459:mp3.c         ****                strcpy((char *)fn,(char *)record);
 3919              		.loc 1 459 17 is_stmt 0 view .LVU1338
 3920 005a 05F10907 		add	r7, r5, #9
 3921              	.L317:
 453:mp3.c         **** #if _USE_LFN
 3922              		.loc 1 453 13 is_stmt 1 view .LVU1339
 453:mp3.c         **** #if _USE_LFN
 3923              		.loc 1 453 15 is_stmt 0 view .LVU1340
 3924 005e 3046     		mov	r0, r6
 3925 0060 1649     		ldr	r1, .L326+24
 3926 0062 FFF7FEFF 		bl	f_readdir
 3927              	.LVL333:
 453:mp3.c         **** #if _USE_LFN
 3928              		.loc 1 453 13 view .LVU1341
 3929 0066 C8B9     		cbnz	r0, .L319
 453:mp3.c         **** #if _USE_LFN
 3930              		.loc 1 453 48 discriminator 1 view .LVU1342
 3931 0068 6B7A     		ldrb	r3, [r5, #9]	@ zero_extendqisi2
 3932 006a BBB1     		cbz	r3, .L319
 457:mp3.c         **** #endif
 3933              		.loc 1 457 13 is_stmt 1 view .LVU1343
 3934              	.LVL334:
 459:mp3.c         ****                strcpy((char *)fn,(char *)record);
 3935              		.loc 1 459 13 view .LVU1344
 459:mp3.c         ****                strcpy((char *)fn,(char *)record);
 3936              		.loc 1 459 17 is_stmt 0 view .LVU1345
 3937 006c 2146     		mov	r1, r4
 3938 006e 3846     		mov	r0, r7
 3939 0070 FFF7FEFF 		bl	strcasecmp
 3940              	.LVL335:
 459:mp3.c         ****                strcpy((char *)fn,(char *)record);
 3941              		.loc 1 459 16 view .LVU1346
 3942 0074 0028     		cmp	r0, #0
 3943 0076 F2D1     		bne	.L317
 460:mp3.c         ****                strcpy((char *)&fn[7],(char *)name);
 3944              		.loc 1 460 16 is_stmt 1 view .LVU1347
 3945 0078 6946     		mov	r1, sp
 3946 007a 1248     		ldr	r0, .L326+32
 3947              	.LVL336:
 460:mp3.c         ****                strcpy((char *)&fn[7],(char *)name);
 3948              		.loc 1 460 16 is_stmt 0 view .LVU1348
 3949 007c FFF7FEFF 		bl	strcpy
 3950              	.LVL337:
 461:mp3.c         ****                bw = f_open(&fap,fn,FA_OPEN_EXISTING | FA_READ);
 3951              		.loc 1 461 16 is_stmt 1 view .LVU1349
 3952 0080 2146     		mov	r1, r4
 3953 0082 1148     		ldr	r0, .L326+36
 3954 0084 FFF7FEFF 		bl	strcpy
 3955              	.LVL338:
 462:mp3.c         ****                if (bw) break;
 3956              		.loc 1 462 16 view .LVU1350
 462:mp3.c         ****                if (bw) break;
 3957              		.loc 1 462 21 is_stmt 0 view .LVU1351
 3958 0088 0122     		movs	r2, #1
 3959 008a 0E49     		ldr	r1, .L326+32
 3960              	.LVL339:
 462:mp3.c         ****                if (bw) break;
 3961              		.loc 1 462 21 view .LVU1352
 3962 008c 0F48     		ldr	r0, .L326+40
 3963 008e FFF7FEFF 		bl	f_open
 3964              	.LVL340:
 462:mp3.c         ****                if (bw) break;
 3965              		.loc 1 462 19 view .LVU1353
 3966 0092 0F4B     		ldr	r3, .L326+44
 3967 0094 1860     		str	r0, [r3]
 463:mp3.c         ****                get_tag();
 3968              		.loc 1 463 16 is_stmt 1 view .LVU1354
 463:mp3.c         ****                get_tag();
 3969              		.loc 1 463 19 is_stmt 0 view .LVU1355
 3970 0096 08B9     		cbnz	r0, .L319
 464:mp3.c         ****                if (i == 0) break;
 3971              		.loc 1 464 16 is_stmt 1 view .LVU1356
 3972 0098 FFF7FEFF 		bl	get_tag
 3973              	.LVL341:
 465:mp3.c         ****                init_tag();
 3974              		.loc 1 465 16 view .LVU1357
 3975              	.L319:
 471:mp3.c         **** }
 3976              		.loc 1 471 7 view .LVU1358
 472:mp3.c         **** 
 3977              		.loc 1 472 1 is_stmt 0 view .LVU1359
 3978 009c 0020     		movs	r0, #0
 3979 009e 03B0     		add	sp, sp, #12
 3980              		.cfi_def_cfa_offset 20
 3981              		@ sp needed
 3982 00a0 F0BD     		pop	{r4, r5, r6, r7, pc}
 3983              	.LVL342:
 3984              	.L327:
 472:mp3.c         **** 
 3985              		.loc 1 472 1 view .LVU1360
 3986 00a2 00BF     		.align	2
 3987              	.L326:
 3988 00a4 07000000 		.word	.LC3
 3989 00a8 00000000 		.word	lrc_buffer
 3990 00ac 00000000 		.word	tag_table
 3991 00b0 00000000 		.word	lrc_data
 3992 00b4 00000000 		.word	.LC4
 3993 00b8 00000000 		.word	dirs
 3994 00bc 00000000 		.word	fno
 3995 00c0 00000000 		.word	res
 3996 00c4 09000000 		.word	fno+9
 3997 00c8 10000000 		.word	fno+16
 3998 00cc 00000000 		.word	fap
 3999 00d0 00000000 		.word	bw
 4000              		.cfi_endproc
 4001              	.LFE39:
 4003              		.section	.text.init_tag,"ax",%progbits
 4004              		.align	1
 4005              		.global	init_tag
 4006              		.syntax unified
 4007              		.thumb
 4008              		.thumb_func
 4009              		.fpu softvfp
 4011              	init_tag:
 4012              	.LFB49:
 683:mp3.c         **** 
 684:mp3.c         **** 
 685:mp3.c         **** void init_tag (void)
 686:mp3.c         **** {
 4013              		.loc 1 686 1 is_stmt 1 view -0
 4014              		.cfi_startproc
 4015              		@ args = 0, pretend = 0, frame = 0
 4016              		@ frame_needed = 0, uses_anonymous_args = 0
 687:mp3.c         ****       unsigned short t = 0;
 4017              		.loc 1 687 7 view .LVU1362
 4018              	.LVL343:
 688:mp3.c         ****       unsigned char t1;
 4019              		.loc 1 688 7 view .LVU1363
 689:mp3.c         ****       unsigned char temp;
 4020              		.loc 1 689 7 view .LVU1364
 690:mp3.c         ****       unsigned short tagcnt = 0;
 4021              		.loc 1 690 7 view .LVU1365
 691:mp3.c         ****       unsigned char offset;
 4022              		.loc 1 691 7 view .LVU1366
 692:mp3.c         ****       if (lrc_tag_type) {
 4023              		.loc 1 692 7 view .LVU1367
 686:mp3.c         ****       unsigned short t = 0;
 4024              		.loc 1 686 1 is_stmt 0 view .LVU1368
 4025 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4026              		.cfi_def_cfa_offset 32
 4027              		.cfi_offset 4, -32
 4028              		.cfi_offset 5, -28
 4029              		.cfi_offset 6, -24
 4030              		.cfi_offset 7, -20
 4031              		.cfi_offset 8, -16
 4032              		.cfi_offset 9, -12
 4033              		.cfi_offset 10, -8
 4034              		.cfi_offset 14, -4
 4035              		.loc 1 692 11 view .LVU1369
 4036 0004 2C4A     		ldr	r2, .L343
 4037 0006 2D4B     		ldr	r3, .L343+4
 4038              		.loc 1 692 10 view .LVU1370
 4039 0008 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4040 000a 1B88     		ldrh	r3, [r3]
 4041 000c 6AB1     		cbz	r2, .L329
 693:mp3.c         **** 	 tagcnt = (lrc_tag_cnt - 1) * 3;
 4042              		.loc 1 693 3 is_stmt 1 view .LVU1371
 694:mp3.c         **** 	 offset = 3;
 4043              		.loc 1 694 10 is_stmt 0 view .LVU1372
 4044 000e 0324     		movs	r4, #3
 693:mp3.c         **** 	 tagcnt = (lrc_tag_cnt - 1) * 3;
 4045              		.loc 1 693 10 view .LVU1373
 4046 0010 03EB4303 		add	r3, r3, r3, lsl #1
 4047 0014 D91E     		subs	r1, r3, #3
 4048 0016 89B2     		uxth	r1, r1
 4049              	.LVL344:
 4050              		.loc 1 694 3 is_stmt 1 view .LVU1374
 4051              	.L330:
 695:mp3.c         ****       } else {
 696:mp3.c         **** 	 tagcnt = (lrc_tag_cnt - 1) * 2;
 697:mp3.c         **** 	 offset = 2;
 698:mp3.c         ****       }
 699:mp3.c         ****       do {
 700:mp3.c         **** 	  t1 = 0;
 701:mp3.c         **** 	  for (t=0;t<tagcnt;t+=offset) {
 702:mp3.c         **** 	      if (tag_table[t] > tag_table[t + offset]) {
 4052              		.loc 1 702 21 is_stmt 0 view .LVU1375
 4053 0018 294B     		ldr	r3, .L343+8
 4054              	.LVL345:
 4055              	.L338:
 699:mp3.c         **** 	  t1 = 0;
 4056              		.loc 1 699 7 is_stmt 1 view .LVU1376
 700:mp3.c         **** 	  for (t=0;t<tagcnt;t+=offset) {
 4057              		.loc 1 700 4 view .LVU1377
 701:mp3.c         **** 	      if (tag_table[t] > tag_table[t + offset]) {
 4058              		.loc 1 701 4 view .LVU1378
 700:mp3.c         **** 	  for (t=0;t<tagcnt;t+=offset) {
 4059              		.loc 1 700 7 is_stmt 0 view .LVU1379
 4060 001a 0020     		movs	r0, #0
 701:mp3.c         **** 	      if (tag_table[t] > tag_table[t + offset]) {
 4061              		.loc 1 701 10 view .LVU1380
 4062 001c 0246     		mov	r2, r0
 4063              	.LVL346:
 4064              	.L331:
 701:mp3.c         **** 	      if (tag_table[t] > tag_table[t + offset]) {
 4065              		.loc 1 701 13 is_stmt 1 discriminator 1 view .LVU1381
 701:mp3.c         **** 	      if (tag_table[t] > tag_table[t + offset]) {
 4066              		.loc 1 701 4 is_stmt 0 discriminator 1 view .LVU1382
 4067 001e 8A42     		cmp	r2, r1
 4068 0020 08D3     		bcc	.L337
 703:mp3.c         **** 		 temp = tag_table[t + offset];
 704:mp3.c         **** 		 tag_table[t + offset] = tag_table[t];
 705:mp3.c         **** 		 tag_table[t] = temp;
 706:mp3.c         **** 		 temp = tag_table[t + offset + 1];
 707:mp3.c         **** 		 tag_table[t + offset + 1] = tag_table[t + 1];
 708:mp3.c         **** 		 tag_table[t + 1] = temp;
 709:mp3.c         **** 		 if (offset == 3) {
 710:mp3.c         **** 		    temp = tag_table[t + 5];
 711:mp3.c         **** 		    tag_table[t + 5] = tag_table[t + 2];
 712:mp3.c         **** 		    tag_table[t + 2] = temp;
 713:mp3.c         **** 		 }
 714:mp3.c         **** 		 t1 = 1;
 715:mp3.c         **** 	      } else if (tag_table[t + 1] > tag_table[t + offset + 1] && tag_table[t] == tag_table[t + off
 716:mp3.c         **** 		 temp = tag_table[t + offset + 1];
 717:mp3.c         **** 		 tag_table[t + offset + 1] = tag_table[t + 1];
 718:mp3.c         **** 		 tag_table[t + 1] = temp;
 719:mp3.c         **** 		 if (offset == 3) {
 720:mp3.c         **** 		    temp = tag_table[t + 5];
 721:mp3.c         **** 		    tag_table[t + 5] = tag_table[t + 2];
 722:mp3.c         **** 		    tag_table[t + 2] = temp;
 723:mp3.c         **** 		 }
 724:mp3.c         **** 		 t1 = 1;
 725:mp3.c         **** 	      } else if (offset == 3) {
 726:mp3.c         **** 		 if (tag_table[t + 2] > tag_table[t + 5] && tag_table[t] == tag_table[t + 3] && tag_table[t + 1] 
 727:mp3.c         **** 		    temp = tag_table[t + 5];
 728:mp3.c         **** 		    tag_table[t + 5] = tag_table[t + 2];
 729:mp3.c         **** 		    tag_table[t + 2] = temp;
 730:mp3.c         **** 		    t1 = 1;
 731:mp3.c         **** 		 }
 732:mp3.c         **** 	      }
 733:mp3.c         **** 	  }
 734:mp3.c         ****       } while (t1);
 4069              		.loc 1 734 15 is_stmt 1 view .LVU1383
 4070              		.loc 1 734 7 is_stmt 0 view .LVU1384
 4071 0022 0028     		cmp	r0, #0
 4072 0024 F9D1     		bne	.L338
 735:mp3.c         **** }
 4073              		.loc 1 735 1 view .LVU1385
 4074 0026 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4075              	.LVL347:
 4076              	.L329:
 696:mp3.c         **** 	 offset = 2;
 4077              		.loc 1 696 3 is_stmt 1 view .LVU1386
 696:mp3.c         **** 	 offset = 2;
 4078              		.loc 1 696 10 is_stmt 0 view .LVU1387
 4079 002a 591E     		subs	r1, r3, #1
 4080 002c 4900     		lsls	r1, r1, #1
 697:mp3.c         ****       }
 4081              		.loc 1 697 10 view .LVU1388
 4082 002e 0224     		movs	r4, #2
 696:mp3.c         **** 	 offset = 2;
 4083              		.loc 1 696 10 view .LVU1389
 4084 0030 89B2     		uxth	r1, r1
 4085              	.LVL348:
 697:mp3.c         ****       }
 4086              		.loc 1 697 3 is_stmt 1 view .LVU1390
 697:mp3.c         ****       }
 4087              		.loc 1 697 3 is_stmt 0 view .LVU1391
 4088 0032 F1E7     		b	.L330
 4089              	.LVL349:
 4090              	.L337:
 702:mp3.c         **** 		 temp = tag_table[t + offset];
 4091              		.loc 1 702 8 is_stmt 1 view .LVU1392
 702:mp3.c         **** 		 temp = tag_table[t + offset];
 4092              		.loc 1 702 39 is_stmt 0 view .LVU1393
 4093 0034 A518     		adds	r5, r4, r2
 702:mp3.c         **** 		 temp = tag_table[t + offset];
 4094              		.loc 1 702 21 view .LVU1394
 4095 0036 9E5C     		ldrb	r6, [r3, r2]	@ zero_extendqisi2
 702:mp3.c         **** 		 temp = tag_table[t + offset];
 4096              		.loc 1 702 36 view .LVU1395
 4097 0038 13F80580 		ldrb	r8, [r3, r5]	@ zero_extendqisi2
 4098 003c 571C     		adds	r7, r2, #1
 702:mp3.c         **** 		 temp = tag_table[t + offset];
 4099              		.loc 1 702 11 view .LVU1396
 4100 003e 4645     		cmp	r6, r8
 4101 0040 05F1010C 		add	ip, r5, #1
 4102 0044 13D9     		bls	.L332
 703:mp3.c         **** 		 tag_table[t + offset] = tag_table[t];
 4103              		.loc 1 703 4 is_stmt 1 view .LVU1397
 4104              	.LVL350:
 704:mp3.c         **** 		 tag_table[t] = temp;
 4105              		.loc 1 704 4 view .LVU1398
 704:mp3.c         **** 		 tag_table[t] = temp;
 4106              		.loc 1 704 26 is_stmt 0 view .LVU1399
 4107 0046 5E55     		strb	r6, [r3, r5]
 705:mp3.c         **** 		 temp = tag_table[t + offset + 1];
 4108              		.loc 1 705 4 is_stmt 1 view .LVU1400
 705:mp3.c         **** 		 temp = tag_table[t + offset + 1];
 4109              		.loc 1 705 17 is_stmt 0 view .LVU1401
 4110 0048 03F80280 		strb	r8, [r3, r2]
 706:mp3.c         **** 		 tag_table[t + offset + 1] = tag_table[t + 1];
 4111              		.loc 1 706 4 is_stmt 1 view .LVU1402
 706:mp3.c         **** 		 tag_table[t + offset + 1] = tag_table[t + 1];
 4112              		.loc 1 706 9 is_stmt 0 view .LVU1403
 4113 004c 13F80C00 		ldrb	r0, [r3, ip]	@ zero_extendqisi2
 4114              	.LVL351:
 707:mp3.c         **** 		 tag_table[t + 1] = temp;
 4115              		.loc 1 707 4 is_stmt 1 view .LVU1404
 707:mp3.c         **** 		 tag_table[t + 1] = temp;
 4116              		.loc 1 707 41 is_stmt 0 view .LVU1405
 4117 0050 DE5D     		ldrb	r6, [r3, r7]	@ zero_extendqisi2
 707:mp3.c         **** 		 tag_table[t + 1] = temp;
 4118              		.loc 1 707 30 view .LVU1406
 4119 0052 03F80C60 		strb	r6, [r3, ip]
 708:mp3.c         **** 		 if (offset == 3) {
 4120              		.loc 1 708 4 is_stmt 1 view .LVU1407
 708:mp3.c         **** 		 if (offset == 3) {
 4121              		.loc 1 708 21 is_stmt 0 view .LVU1408
 4122 0056 D855     		strb	r0, [r3, r7]
 709:mp3.c         **** 		    temp = tag_table[t + 5];
 4123              		.loc 1 709 4 is_stmt 1 view .LVU1409
 4124              	.LVL352:
 4125              	.L342:
 719:mp3.c         **** 		    temp = tag_table[t + 5];
 4126              		.loc 1 719 4 view .LVU1410
 719:mp3.c         **** 		    temp = tag_table[t + 5];
 4127              		.loc 1 719 7 is_stmt 0 view .LVU1411
 4128 0058 032C     		cmp	r4, #3
 4129 005a 05D1     		bne	.L340
 720:mp3.c         **** 		    tag_table[t + 5] = tag_table[t + 2];
 4130              		.loc 1 720 7 is_stmt 1 view .LVU1412
 720:mp3.c         **** 		    tag_table[t + 5] = tag_table[t + 2];
 4131              		.loc 1 720 26 is_stmt 0 view .LVU1413
 4132 005c 501D     		adds	r0, r2, #5
 721:mp3.c         **** 		    tag_table[t + 2] = temp;
 4133              		.loc 1 721 38 view .LVU1414
 4134 005e 0232     		adds	r2, r2, #2
 4135              	.LVL353:
 720:mp3.c         **** 		    tag_table[t + 5] = tag_table[t + 2];
 4136              		.loc 1 720 12 view .LVU1415
 4137 0060 1E5C     		ldrb	r6, [r3, r0]	@ zero_extendqisi2
 4138              	.LVL354:
 721:mp3.c         **** 		    tag_table[t + 2] = temp;
 4139              		.loc 1 721 7 is_stmt 1 view .LVU1416
 721:mp3.c         **** 		    tag_table[t + 2] = temp;
 4140              		.loc 1 721 35 is_stmt 0 view .LVU1417
 4141 0062 9F5C     		ldrb	r7, [r3, r2]	@ zero_extendqisi2
 721:mp3.c         **** 		    tag_table[t + 2] = temp;
 4142              		.loc 1 721 24 view .LVU1418
 4143 0064 1F54     		strb	r7, [r3, r0]
 722:mp3.c         **** 		 }
 4144              		.loc 1 722 7 is_stmt 1 view .LVU1419
 722:mp3.c         **** 		 }
 4145              		.loc 1 722 24 is_stmt 0 view .LVU1420
 4146 0066 9E54     		strb	r6, [r3, r2]
 4147              	.LVL355:
 4148              	.L340:
 730:mp3.c         **** 		 }
 4149              		.loc 1 730 7 is_stmt 1 view .LVU1421
 730:mp3.c         **** 		 }
 4150              		.loc 1 730 10 is_stmt 0 view .LVU1422
 4151 0068 0120     		movs	r0, #1
 4152              	.LVL356:
 4153              	.L334:
 701:mp3.c         **** 	      if (tag_table[t] > tag_table[t + offset]) {
 4154              		.loc 1 701 22 is_stmt 1 discriminator 2 view .LVU1423
 701:mp3.c         **** 	      if (tag_table[t] > tag_table[t + offset]) {
 4155              		.loc 1 701 23 is_stmt 0 discriminator 2 view .LVU1424
 4156 006a AAB2     		uxth	r2, r5
 4157              	.LVL357:
 701:mp3.c         **** 	      if (tag_table[t] > tag_table[t + offset]) {
 4158              		.loc 1 701 23 discriminator 2 view .LVU1425
 4159 006c D7E7     		b	.L331
 4160              	.L332:
 715:mp3.c         **** 		 temp = tag_table[t + offset + 1];
 4161              		.loc 1 715 15 is_stmt 1 view .LVU1426
 715:mp3.c         **** 		 temp = tag_table[t + offset + 1];
 4162              		.loc 1 715 28 is_stmt 0 view .LVU1427
 4163 006e 13F807E0 		ldrb	lr, [r3, r7]	@ zero_extendqisi2
 715:mp3.c         **** 		 temp = tag_table[t + offset + 1];
 4164              		.loc 1 715 47 view .LVU1428
 4165 0072 13F80C90 		ldrb	r9, [r3, ip]	@ zero_extendqisi2
 715:mp3.c         **** 		 temp = tag_table[t + offset + 1];
 4166              		.loc 1 715 18 view .LVU1429
 4167 0076 CE45     		cmp	lr, r9
 4168 0078 06D9     		bls	.L335
 715:mp3.c         **** 		 temp = tag_table[t + offset + 1];
 4169              		.loc 1 715 64 discriminator 1 view .LVU1430
 4170 007a 4645     		cmp	r6, r8
 4171 007c 04D1     		bne	.L335
 716:mp3.c         **** 		 tag_table[t + offset + 1] = tag_table[t + 1];
 4172              		.loc 1 716 4 is_stmt 1 view .LVU1431
 4173              	.LVL358:
 717:mp3.c         **** 		 tag_table[t + 1] = temp;
 4174              		.loc 1 717 4 view .LVU1432
 717:mp3.c         **** 		 tag_table[t + 1] = temp;
 4175              		.loc 1 717 30 is_stmt 0 view .LVU1433
 4176 007e 03F80CE0 		strb	lr, [r3, ip]
 718:mp3.c         **** 		 if (offset == 3) {
 4177              		.loc 1 718 4 is_stmt 1 view .LVU1434
 718:mp3.c         **** 		 if (offset == 3) {
 4178              		.loc 1 718 21 is_stmt 0 view .LVU1435
 4179 0082 03F80790 		strb	r9, [r3, r7]
 4180 0086 E7E7     		b	.L342
 4181              	.LVL359:
 4182              	.L335:
 725:mp3.c         **** 		 if (tag_table[t + 2] > tag_table[t + 5] && tag_table[t] == tag_table[t + 3] && tag_table[t + 1] 
 4183              		.loc 1 725 15 is_stmt 1 view .LVU1436
 725:mp3.c         **** 		 if (tag_table[t + 2] > tag_table[t + 5] && tag_table[t] == tag_table[t + 3] && tag_table[t + 1] 
 4184              		.loc 1 725 18 is_stmt 0 view .LVU1437
 4185 0088 032C     		cmp	r4, #3
 4186 008a EED1     		bne	.L334
 726:mp3.c         **** 		    temp = tag_table[t + 5];
 4187              		.loc 1 726 4 is_stmt 1 view .LVU1438
 726:mp3.c         **** 		    temp = tag_table[t + 5];
 4188              		.loc 1 726 20 is_stmt 0 view .LVU1439
 4189 008c 971C     		adds	r7, r2, #2
 726:mp3.c         **** 		    temp = tag_table[t + 5];
 4190              		.loc 1 726 39 view .LVU1440
 4191 008e 02F10508 		add	r8, r2, #5
 726:mp3.c         **** 		    temp = tag_table[t + 5];
 4192              		.loc 1 726 17 view .LVU1441
 4193 0092 13F80790 		ldrb	r9, [r3, r7]	@ zero_extendqisi2
 726:mp3.c         **** 		    temp = tag_table[t + 5];
 4194              		.loc 1 726 36 view .LVU1442
 4195 0096 13F808C0 		ldrb	ip, [r3, r8]	@ zero_extendqisi2
 726:mp3.c         **** 		    temp = tag_table[t + 5];
 4196              		.loc 1 726 7 view .LVU1443
 4197 009a E145     		cmp	r9, ip
 4198 009c E5D9     		bls	.L334
 726:mp3.c         **** 		    temp = tag_table[t + 5];
 4199              		.loc 1 726 72 discriminator 1 view .LVU1444
 4200 009e 1A44     		add	r2, r2, r3
 4201              	.LVL360:
 726:mp3.c         **** 		    temp = tag_table[t + 5];
 4202              		.loc 1 726 44 discriminator 1 view .LVU1445
 4203 00a0 92F803A0 		ldrb	r10, [r2, #3]	@ zero_extendqisi2
 4204 00a4 B245     		cmp	r10, r6
 4205 00a6 E0D1     		bne	.L334
 726:mp3.c         **** 		    temp = tag_table[t + 5];
 4206              		.loc 1 726 80 discriminator 2 view .LVU1446
 4207 00a8 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 4208 00aa 7245     		cmp	r2, lr
 4209 00ac DDD1     		bne	.L334
 727:mp3.c         **** 		    tag_table[t + 5] = tag_table[t + 2];
 4210              		.loc 1 727 7 is_stmt 1 view .LVU1447
 4211              	.LVL361:
 728:mp3.c         **** 		    tag_table[t + 2] = temp;
 4212              		.loc 1 728 7 view .LVU1448
 728:mp3.c         **** 		    tag_table[t + 2] = temp;
 4213              		.loc 1 728 24 is_stmt 0 view .LVU1449
 4214 00ae 03F80890 		strb	r9, [r3, r8]
 729:mp3.c         **** 		    t1 = 1;
 4215              		.loc 1 729 7 is_stmt 1 view .LVU1450
 729:mp3.c         **** 		    t1 = 1;
 4216              		.loc 1 729 24 is_stmt 0 view .LVU1451
 4217 00b2 03F807C0 		strb	ip, [r3, r7]
 4218 00b6 D7E7     		b	.L340
 4219              	.L344:
 4220              		.align	2
 4221              	.L343:
 4222 00b8 00000000 		.word	.LANCHOR13
 4223 00bc 00000000 		.word	.LANCHOR7
 4224 00c0 00000000 		.word	tag_table
 4225              		.cfi_endproc
 4226              	.LFE49:
 4228              		.section	.text.copy_lyric,"ax",%progbits
 4229              		.align	1
 4230              		.global	copy_lyric
 4231              		.syntax unified
 4232              		.thumb
 4233              		.thumb_func
 4234              		.fpu softvfp
 4236              	copy_lyric:
 4237              	.LVL362:
 4238              	.LFB50:
 736:mp3.c         **** 
 737:mp3.c         **** 
 738:mp3.c         **** unsigned char copy_lyric (unsigned char tmin,unsigned char tsec,unsigned char tmms)
 739:mp3.c         **** {
 4239              		.loc 1 739 1 is_stmt 1 view -0
 4240              		.cfi_startproc
 4241              		@ args = 0, pretend = 0, frame = 0
 4242              		@ frame_needed = 0, uses_anonymous_args = 0
 740:mp3.c         ****       static unsigned short tagpos = 0;
 4243              		.loc 1 740 7 view .LVU1453
 741:mp3.c         ****       static unsigned short lrcbufpos = 0;
 4244              		.loc 1 741 7 view .LVU1454
 742:mp3.c         ****       unsigned char temp;
 4245              		.loc 1 742 7 view .LVU1455
 743:mp3.c         ****       unsigned char temp1;
 4246              		.loc 1 743 7 view .LVU1456
 744:mp3.c         ****       unsigned short tagcnt = 0;
 4247              		.loc 1 744 7 view .LVU1457
 745:mp3.c         ****       if (tmin == 0xff) {
 4248              		.loc 1 745 7 view .LVU1458
 4249              		.loc 1 745 10 is_stmt 0 view .LVU1459
 4250 0000 FF28     		cmp	r0, #255
 739:mp3.c         ****       static unsigned short tagpos = 0;
 4251              		.loc 1 739 1 view .LVU1460
 4252 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4253              		.cfi_def_cfa_offset 24
 4254              		.cfi_offset 3, -24
 4255              		.cfi_offset 4, -20
 4256              		.cfi_offset 5, -16
 4257              		.cfi_offset 6, -12
 4258              		.cfi_offset 7, -8
 4259              		.cfi_offset 14, -4
 4260 0004 6D4E     		ldr	r6, .L396
 4261              		.loc 1 745 10 view .LVU1461
 4262 0006 05D1     		bne	.L346
 746:mp3.c         ****       	 tagpos = 0;
 4263              		.loc 1 746 9 is_stmt 1 view .LVU1462
 4264              		.loc 1 746 16 is_stmt 0 view .LVU1463
 4265 0008 0023     		movs	r3, #0
 747:mp3.c         ****       	 lrcbufpos = 0;
 4266              		.loc 1 747 19 view .LVU1464
 4267 000a 6D4A     		ldr	r2, .L396+4
 4268              	.LVL363:
 746:mp3.c         ****       	 tagpos = 0;
 4269              		.loc 1 746 16 view .LVU1465
 4270 000c 3380     		strh	r3, [r6]	@ movhi
 4271              		.loc 1 747 9 is_stmt 1 view .LVU1466
 4272              		.loc 1 747 19 is_stmt 0 view .LVU1467
 4273 000e 1380     		strh	r3, [r2]	@ movhi
 748:mp3.c         ****       	 return 1;
 4274              		.loc 1 748 9 is_stmt 1 view .LVU1468
 4275              	.LVL364:
 4276              	.L393:
 4277              	.LBB237:
 4278              	.LBB238:
 484:mp3.c         **** }
 4279              		.loc 1 484 7 view .LVU1469
 4280              	.LBE238:
 4281              	.LBE237:
 749:mp3.c         ****       }
 750:mp3.c         ****       if (lrc_tag_type) tagcnt = (lrc_tag_cnt - 1) * 3;else tagcnt = (lrc_tag_cnt - 1) * 2;
 751:mp3.c         ****       if (tagpos > tagcnt) {
 752:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos,'\0');
 753:mp3.c         **** 	 return 0xff;
 754:mp3.c         ****       }
 755:mp3.c         ****       if (tmin == tag_table[tagpos] && tsec == tag_table[tagpos + 1] && lrc_tag_type == 0) {
 756:mp3.c         **** 	 tagpos += 2;
 757:mp3.c         ****       } else if (tmin == tag_table[tagpos] && tsec == tag_table[tagpos + 1] && tmms == tag_table[ta
 758:mp3.c         **** 	 tagpos+=3;
 759:mp3.c         ****       } else return 1;
 760:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,'[');
 761:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,tmin);
 762:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,':');
 763:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,tsec);
 764:mp3.c         ****       if (lrc_tag_type) {
 765:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos++,'.');
 766:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos++,tmms);
 767:mp3.c         ****       }
 768:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,']');
 769:mp3.c         ****       while (1) {
 770:mp3.c         **** 	    temp = get_byte(0);
 771:mp3.c         **** 	    if (temp == '[') {
 772:mp3.c         **** 	       write_byte_lrcbuf(lrcbufpos,temp);
 773:mp3.c         **** 	       temp1 = get_byte(0);
 774:mp3.c         **** 	       temp = temp1;
 775:mp3.c         **** 	       temp1 -= '0';
 776:mp3.c         **** 	       if (temp1 < 10) {
 777:mp3.c         **** 		  while (1) {
 778:mp3.c         **** 			temp1 = get_byte(0);
 779:mp3.c         **** 			if (temp1 == ']' || temp1 == 0xff) break;
 780:mp3.c         **** 		  }
 781:mp3.c         **** 	       } else {
 782:mp3.c         **** 		  lrcbufpos++;
 783:mp3.c         **** 	          write_byte_lrcbuf(lrcbufpos++,temp);
 784:mp3.c         **** 		  break;
 785:mp3.c         **** 	       }
 786:mp3.c         **** 	    } else if (temp != ' ') {
 787:mp3.c         **** 	       if (temp != 0xFF && temp != 0x00) write_byte_lrcbuf(lrcbufpos++,temp);
 788:mp3.c         **** 	       break;
 789:mp3.c         **** 	    }
 790:mp3.c         ****       }
 791:mp3.c         ****       while (1) {
 792:mp3.c         **** 	    temp = get_byte(0);
 793:mp3.c         **** 	    if (temp != 0xFF && temp != 0x00) write_byte_lrcbuf(lrcbufpos++,temp);
 794:mp3.c         **** 	    if (temp == 0x0A || temp == 0xFF || temp == 0x00) {
 795:mp3.c         **** 	       write_byte_lrcbuf(lrcbufpos++,temp);
 796:mp3.c         **** 	       break;
 797:mp3.c         **** 	    }
 798:mp3.c         ****       }
 799:mp3.c         ****       return 1;
 4282              		.loc 1 799 14 is_stmt 0 view .LVU1470
 4283 0010 0120     		movs	r0, #1
 4284              	.L347:
 800:mp3.c         **** }
 4285              		.loc 1 800 1 view .LVU1471
 4286 0012 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4287              	.LVL365:
 4288              	.L346:
 750:mp3.c         ****       if (tagpos > tagcnt) {
 4289              		.loc 1 750 7 is_stmt 1 view .LVU1472
 750:mp3.c         ****       if (tagpos > tagcnt) {
 4290              		.loc 1 750 11 is_stmt 0 view .LVU1473
 4291 0014 6B4B     		ldr	r3, .L396+8
 4292 0016 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 4293 0018 6B4B     		ldr	r3, .L396+12
 4294 001a 1B88     		ldrh	r3, [r3]
 750:mp3.c         ****       if (tagpos > tagcnt) {
 4295              		.loc 1 750 10 view .LVU1474
 4296 001c 8DB1     		cbz	r5, .L348
 750:mp3.c         ****       if (tagpos > tagcnt) {
 4297              		.loc 1 750 25 is_stmt 1 discriminator 1 view .LVU1475
 750:mp3.c         ****       if (tagpos > tagcnt) {
 4298              		.loc 1 750 32 is_stmt 0 discriminator 1 view .LVU1476
 4299 001e 03EB4303 		add	r3, r3, r3, lsl #1
 4300 0022 033B     		subs	r3, r3, #3
 4301              	.L390:
 751:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos,'\0');
 4302              		.loc 1 751 18 discriminator 2 view .LVU1477
 4303 0024 3488     		ldrh	r4, [r6]
 750:mp3.c         ****       if (tagpos > tagcnt) {
 4304              		.loc 1 750 68 discriminator 2 view .LVU1478
 4305 0026 9BB2     		uxth	r3, r3
 4306              	.LVL366:
 751:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos,'\0');
 4307              		.loc 1 751 7 is_stmt 1 discriminator 2 view .LVU1479
 751:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos,'\0');
 4308              		.loc 1 751 10 is_stmt 0 discriminator 2 view .LVU1480
 4309 0028 9C42     		cmp	r4, r3
 4310 002a 0DD9     		bls	.L350
 752:mp3.c         **** 	 return 0xff;
 4311              		.loc 1 752 3 is_stmt 1 view .LVU1481
 4312              	.LBB240:
 4313              	.LBB241:
 483:mp3.c         ****       return 1;
 4314              		.loc 1 483 10 is_stmt 0 view .LVU1482
 4315 002c 41F65732 		movw	r2, #6999
 4316              	.LVL367:
 483:mp3.c         ****       return 1;
 4317              		.loc 1 483 10 view .LVU1483
 4318              	.LBE241:
 4319              	.LBE240:
 752:mp3.c         **** 	 return 0xff;
 4320              		.loc 1 752 3 view .LVU1484
 4321 0030 634B     		ldr	r3, .L396+4
 4322              	.LVL368:
 752:mp3.c         **** 	 return 0xff;
 4323              		.loc 1 752 3 view .LVU1485
 4324 0032 1B88     		ldrh	r3, [r3]
 4325              	.LVL369:
 4326              	.LBB243:
 4327              	.LBI240:
 481:mp3.c         **** {
 4328              		.loc 1 481 15 is_stmt 1 view .LVU1486
 4329              	.LBB242:
 483:mp3.c         ****       return 1;
 4330              		.loc 1 483 7 view .LVU1487
 483:mp3.c         ****       return 1;
 4331              		.loc 1 483 10 is_stmt 0 view .LVU1488
 4332 0034 9342     		cmp	r3, r2
 4333 0036 02D8     		bhi	.L377
 483:mp3.c         ****       return 1;
 4334              		.loc 1 483 24 is_stmt 1 view .LVU1489
 483:mp3.c         ****       return 1;
 4335              		.loc 1 483 41 is_stmt 0 view .LVU1490
 4336 0038 0021     		movs	r1, #0
 4337              	.LVL370:
 483:mp3.c         ****       return 1;
 4338              		.loc 1 483 41 view .LVU1491
 4339 003a 644A     		ldr	r2, .L396+16
 4340 003c D154     		strb	r1, [r2, r3]
 484:mp3.c         **** }
 4341              		.loc 1 484 7 is_stmt 1 view .LVU1492
 4342              	.L377:
 4343              	.LBE242:
 4344              	.LBE243:
 753:mp3.c         ****       }
 4345              		.loc 1 753 10 is_stmt 0 view .LVU1493
 4346 003e FF20     		movs	r0, #255
 4347              	.LVL371:
 753:mp3.c         ****       }
 4348              		.loc 1 753 10 view .LVU1494
 4349 0040 E7E7     		b	.L347
 4350              	.LVL372:
 4351              	.L348:
 750:mp3.c         ****       if (tagpos > tagcnt) {
 4352              		.loc 1 750 61 is_stmt 1 discriminator 2 view .LVU1495
 750:mp3.c         ****       if (tagpos > tagcnt) {
 4353              		.loc 1 750 68 is_stmt 0 discriminator 2 view .LVU1496
 4354 0042 013B     		subs	r3, r3, #1
 4355 0044 5B00     		lsls	r3, r3, #1
 4356 0046 EDE7     		b	.L390
 4357              	.LVL373:
 4358              	.L350:
 755:mp3.c         **** 	 tagpos += 2;
 4359              		.loc 1 755 7 is_stmt 1 view .LVU1497
 755:mp3.c         **** 	 tagpos += 2;
 4360              		.loc 1 755 28 is_stmt 0 view .LVU1498
 4361 0048 614B     		ldr	r3, .L396+20
 4362              	.LVL374:
 755:mp3.c         **** 	 tagpos += 2;
 4363              		.loc 1 755 10 view .LVU1499
 4364 004a 1F5D     		ldrb	r7, [r3, r4]	@ zero_extendqisi2
 4365 004c 8742     		cmp	r7, r0
 4366 004e DFD1     		bne	.L393
 755:mp3.c         **** 	 tagpos += 2;
 4367              		.loc 1 755 57 discriminator 1 view .LVU1500
 4368 0050 2344     		add	r3, r3, r4
 755:mp3.c         **** 	 tagpos += 2;
 4369              		.loc 1 755 37 discriminator 1 view .LVU1501
 4370 0052 5F78     		ldrb	r7, [r3, #1]	@ zero_extendqisi2
 4371 0054 8F42     		cmp	r7, r1
 4372 0056 DBD1     		bne	.L393
 755:mp3.c         **** 	 tagpos += 2;
 4373              		.loc 1 755 70 discriminator 2 view .LVU1502
 4374 0058 002D     		cmp	r5, #0
 4375 005a 70D1     		bne	.L353
 756:mp3.c         ****       } else if (tmin == tag_table[tagpos] && tsec == tag_table[tagpos + 1] && tmms == tag_table[ta
 4376              		.loc 1 756 3 is_stmt 1 view .LVU1503
 756:mp3.c         ****       } else if (tmin == tag_table[tagpos] && tsec == tag_table[tagpos + 1] && tmms == tag_table[ta
 4377              		.loc 1 756 10 is_stmt 0 view .LVU1504
 4378 005c 0234     		adds	r4, r4, #2
 4379              	.L391:
 4380              	.LBB244:
 4381              	.LBB245:
 483:mp3.c         ****       return 1;
 4382              		.loc 1 483 10 view .LVU1505
 4383 005e 41F65737 		movw	r7, #6999
 4384              	.LBE245:
 4385              	.LBE244:
 758:mp3.c         ****       } else return 1;
 4386              		.loc 1 758 9 view .LVU1506
 4387 0062 3480     		strh	r4, [r6]	@ movhi
 760:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,tmin);
 4388              		.loc 1 760 7 is_stmt 1 view .LVU1507
 4389 0064 564C     		ldr	r4, .L396+4
 4390 0066 2388     		ldrh	r3, [r4]
 4391              	.LBB249:
 4392              	.LBB246:
 483:mp3.c         ****       return 1;
 4393              		.loc 1 483 10 is_stmt 0 view .LVU1508
 4394 0068 BB42     		cmp	r3, r7
 483:mp3.c         ****       return 1;
 4395              		.loc 1 483 41 view .LVU1509
 4396 006a 9CBF     		itt	ls
 4397 006c 4FF05B0C 		movls	ip, #91
 4398 0070 564F     		ldrls	r7, .L396+16
 4399              	.LBE246:
 4400              	.LBE249:
 760:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,tmin);
 4401              		.loc 1 760 7 view .LVU1510
 4402 0072 03F10106 		add	r6, r3, #1
 4403              	.LBB250:
 4404              	.LBB247:
 483:mp3.c         ****       return 1;
 4405              		.loc 1 483 41 view .LVU1511
 4406 0076 98BF     		it	ls
 4407 0078 07F803C0 		strbls	ip, [r7, r3]
 4408              	.LBE247:
 4409              	.LBE250:
 4410              	.LBB251:
 4411              	.LBB252:
 483:mp3.c         ****       return 1;
 4412              		.loc 1 483 10 view .LVU1512
 4413 007c 41F6573C 		movw	ip, #6999
 4414              	.LBE252:
 4415              	.LBE251:
 760:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,tmin);
 4416              		.loc 1 760 7 view .LVU1513
 4417 0080 B6B2     		uxth	r6, r6
 4418              	.LVL375:
 4419              	.LBB256:
 4420              	.LBI244:
 481:mp3.c         **** {
 4421              		.loc 1 481 15 is_stmt 1 view .LVU1514
 4422              	.LBB248:
 483:mp3.c         ****       return 1;
 4423              		.loc 1 483 7 view .LVU1515
 483:mp3.c         ****       return 1;
 4424              		.loc 1 483 24 view .LVU1516
 484:mp3.c         **** }
 4425              		.loc 1 484 7 view .LVU1517
 484:mp3.c         **** }
 4426              		.loc 1 484 7 is_stmt 0 view .LVU1518
 4427              	.LBE248:
 4428              	.LBE256:
 761:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,':');
 4429              		.loc 1 761 7 is_stmt 1 view .LVU1519
 4430              	.LBB257:
 4431              	.LBB253:
 483:mp3.c         ****       return 1;
 4432              		.loc 1 483 10 is_stmt 0 view .LVU1520
 4433 0082 6645     		cmp	r6, ip
 483:mp3.c         ****       return 1;
 4434              		.loc 1 483 41 view .LVU1521
 4435 0084 98BF     		it	ls
 4436 0086 DFF844C1 		ldrls	ip, .L396+16
 4437              	.LBE253:
 4438              	.LBE257:
 761:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,':');
 4439              		.loc 1 761 7 view .LVU1522
 4440 008a 03F10207 		add	r7, r3, #2
 4441              	.LBB258:
 4442              	.LBB254:
 483:mp3.c         ****       return 1;
 4443              		.loc 1 483 41 view .LVU1523
 4444 008e 98BF     		it	ls
 4445 0090 0CF80600 		strbls	r0, [ip, r6]
 4446              	.LBE254:
 4447              	.LBE258:
 4448              	.LBB259:
 4449              	.LBB260:
 483:mp3.c         ****       return 1;
 4450              		.loc 1 483 10 view .LVU1524
 4451 0094 41F65730 		movw	r0, #6999
 4452              	.LVL376:
 483:mp3.c         ****       return 1;
 4453              		.loc 1 483 10 view .LVU1525
 4454              	.LBE260:
 4455              	.LBE259:
 761:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,':');
 4456              		.loc 1 761 7 view .LVU1526
 4457 0098 BFB2     		uxth	r7, r7
 4458              	.LVL377:
 4459              	.LBB264:
 4460              	.LBI251:
 481:mp3.c         **** {
 4461              		.loc 1 481 15 is_stmt 1 view .LVU1527
 4462              	.LBB255:
 483:mp3.c         ****       return 1;
 4463              		.loc 1 483 7 view .LVU1528
 483:mp3.c         ****       return 1;
 4464              		.loc 1 483 24 view .LVU1529
 484:mp3.c         **** }
 4465              		.loc 1 484 7 view .LVU1530
 484:mp3.c         **** }
 4466              		.loc 1 484 7 is_stmt 0 view .LVU1531
 4467              	.LBE255:
 4468              	.LBE264:
 762:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,tsec);
 4469              		.loc 1 762 7 is_stmt 1 view .LVU1532
 4470              	.LBB265:
 4471              	.LBB261:
 483:mp3.c         ****       return 1;
 4472              		.loc 1 483 10 is_stmt 0 view .LVU1533
 4473 009a 8742     		cmp	r7, r0
 483:mp3.c         ****       return 1;
 4474              		.loc 1 483 41 view .LVU1534
 4475 009c 9CBF     		itt	ls
 4476 009e 4FF03A0C 		movls	ip, #58
 4477 00a2 4A48     		ldrls	r0, .L396+16
 4478              	.LBE261:
 4479              	.LBE265:
 762:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,tsec);
 4480              		.loc 1 762 7 view .LVU1535
 4481 00a4 03F10306 		add	r6, r3, #3
 4482              	.LBB266:
 4483              	.LBB262:
 483:mp3.c         ****       return 1;
 4484              		.loc 1 483 41 view .LVU1536
 4485 00a8 98BF     		it	ls
 4486 00aa 00F807C0 		strbls	ip, [r0, r7]
 4487              	.LBE262:
 4488              	.LBE266:
 4489              	.LBB267:
 4490              	.LBB268:
 483:mp3.c         ****       return 1;
 4491              		.loc 1 483 10 view .LVU1537
 4492 00ae 41F65737 		movw	r7, #6999
 4493              	.LBE268:
 4494              	.LBE267:
 762:mp3.c         ****       write_byte_lrcbuf(lrcbufpos++,tsec);
 4495              		.loc 1 762 7 view .LVU1538
 4496 00b2 B6B2     		uxth	r6, r6
 4497              	.LVL378:
 4498              	.LBB271:
 4499              	.LBI259:
 481:mp3.c         **** {
 4500              		.loc 1 481 15 is_stmt 1 view .LVU1539
 4501              	.LBB263:
 483:mp3.c         ****       return 1;
 4502              		.loc 1 483 7 view .LVU1540
 483:mp3.c         ****       return 1;
 4503              		.loc 1 483 24 view .LVU1541
 484:mp3.c         **** }
 4504              		.loc 1 484 7 view .LVU1542
 484:mp3.c         **** }
 4505              		.loc 1 484 7 is_stmt 0 view .LVU1543
 4506              	.LBE263:
 4507              	.LBE271:
 763:mp3.c         ****       if (lrc_tag_type) {
 4508              		.loc 1 763 7 is_stmt 1 view .LVU1544
 4509              	.LBB272:
 4510              	.LBB269:
 483:mp3.c         ****       return 1;
 4511              		.loc 1 483 10 is_stmt 0 view .LVU1545
 4512 00b4 BE42     		cmp	r6, r7
 483:mp3.c         ****       return 1;
 4513              		.loc 1 483 41 view .LVU1546
 4514 00b6 98BF     		it	ls
 4515 00b8 444F     		ldrls	r7, .L396+16
 4516              	.LBE269:
 4517              	.LBE272:
 763:mp3.c         ****       if (lrc_tag_type) {
 4518              		.loc 1 763 7 view .LVU1547
 4519 00ba 03F10400 		add	r0, r3, #4
 4520 00be 80B2     		uxth	r0, r0
 4521 00c0 2080     		strh	r0, [r4]	@ movhi
 4522              	.LVL379:
 4523              	.LBB273:
 4524              	.LBI267:
 481:mp3.c         **** {
 4525              		.loc 1 481 15 is_stmt 1 view .LVU1548
 4526              	.LBB270:
 483:mp3.c         ****       return 1;
 4527              		.loc 1 483 7 view .LVU1549
 483:mp3.c         ****       return 1;
 4528              		.loc 1 483 24 view .LVU1550
 483:mp3.c         ****       return 1;
 4529              		.loc 1 483 41 is_stmt 0 view .LVU1551
 4530 00c2 98BF     		it	ls
 4531 00c4 B955     		strbls	r1, [r7, r6]
 484:mp3.c         **** }
 4532              		.loc 1 484 7 is_stmt 1 view .LVU1552
 4533              	.LVL380:
 484:mp3.c         **** }
 4534              		.loc 1 484 7 is_stmt 0 view .LVU1553
 4535              	.LBE270:
 4536              	.LBE273:
 764:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos++,'.');
 4537              		.loc 1 764 7 is_stmt 1 view .LVU1554
 764:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos++,'.');
 4538              		.loc 1 764 10 is_stmt 0 view .LVU1555
 4539 00c6 9DB1     		cbz	r5, .L360
 765:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos++,tmms);
 4540              		.loc 1 765 3 is_stmt 1 view .LVU1556
 4541              	.LBB274:
 4542              	.LBB275:
 483:mp3.c         ****       return 1;
 4543              		.loc 1 483 10 is_stmt 0 view .LVU1557
 4544 00c8 41F65735 		movw	r5, #6999
 4545              	.LBE275:
 4546              	.LBE274:
 765:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos++,tmms);
 4547              		.loc 1 765 3 view .LVU1558
 4548 00cc 591D     		adds	r1, r3, #5
 4549              	.LVL381:
 4550              	.LBB280:
 4551              	.LBB276:
 483:mp3.c         ****       return 1;
 4552              		.loc 1 483 10 view .LVU1559
 4553 00ce A842     		cmp	r0, r5
 4554              	.LBE276:
 4555              	.LBE280:
 766:mp3.c         ****       }
 4556              		.loc 1 766 3 view .LVU1560
 4557 00d0 03F10603 		add	r3, r3, #6
 4558              	.LBB281:
 4559              	.LBB277:
 483:mp3.c         ****       return 1;
 4560              		.loc 1 483 41 view .LVU1561
 4561 00d4 98BF     		it	ls
 4562 00d6 2E26     		movls	r6, #46
 4563              	.LBE277:
 4564              	.LBE281:
 766:mp3.c         ****       }
 4565              		.loc 1 766 3 view .LVU1562
 4566 00d8 2380     		strh	r3, [r4]	@ movhi
 4567              	.LBB282:
 4568              	.LBB283:
 483:mp3.c         ****       return 1;
 4569              		.loc 1 483 10 view .LVU1563
 4570 00da 41F65733 		movw	r3, #6999
 4571              	.LBE283:
 4572              	.LBE282:
 4573              	.LBB285:
 4574              	.LBB278:
 483:mp3.c         ****       return 1;
 4575              		.loc 1 483 41 view .LVU1564
 4576 00de 98BF     		it	ls
 4577 00e0 3A4D     		ldrls	r5, .L396+16
 4578              	.LBE278:
 4579              	.LBE285:
 765:mp3.c         **** 	 write_byte_lrcbuf(lrcbufpos++,tmms);
 4580              		.loc 1 765 3 view .LVU1565
 4581 00e2 89B2     		uxth	r1, r1
 4582              	.LVL382:
 4583              	.LBB286:
 4584              	.LBI274:
 481:mp3.c         **** {
 4585              		.loc 1 481 15 is_stmt 1 view .LVU1566
 4586              	.LBB279:
 483:mp3.c         ****       return 1;
 4587              		.loc 1 483 7 view .LVU1567
 483:mp3.c         ****       return 1;
 4588              		.loc 1 483 24 view .LVU1568
 483:mp3.c         ****       return 1;
 4589              		.loc 1 483 41 is_stmt 0 view .LVU1569
 4590 00e4 98BF     		it	ls
 4591 00e6 2E54     		strbls	r6, [r5, r0]
 484:mp3.c         **** }
 4592              		.loc 1 484 7 is_stmt 1 view .LVU1570
 4593              	.LVL383:
 484:mp3.c         **** }
 4594              		.loc 1 484 7 is_stmt 0 view .LVU1571
 4595              	.LBE279:
 4596              	.LBE286:
 766:mp3.c         ****       }
 4597              		.loc 1 766 3 is_stmt 1 view .LVU1572
 4598              	.LBB287:
 4599              	.LBI282:
 481:mp3.c         **** {
 4600              		.loc 1 481 15 view .LVU1573
 4601              	.LBB284:
 483:mp3.c         ****       return 1;
 4602              		.loc 1 483 7 view .LVU1574
 483:mp3.c         ****       return 1;
 4603              		.loc 1 483 10 is_stmt 0 view .LVU1575
 4604 00e8 9942     		cmp	r1, r3
 483:mp3.c         ****       return 1;
 4605              		.loc 1 483 24 is_stmt 1 view .LVU1576
 483:mp3.c         ****       return 1;
 4606              		.loc 1 483 41 is_stmt 0 view .LVU1577
 4607 00ea 9CBF     		itt	ls
 4608 00ec 374B     		ldrls	r3, .L396+16
 4609 00ee 5A54     		strbls	r2, [r3, r1]
 484:mp3.c         **** }
 4610              		.loc 1 484 7 is_stmt 1 view .LVU1578
 4611              	.LVL384:
 4612              	.L360:
 484:mp3.c         **** }
 4613              		.loc 1 484 7 is_stmt 0 view .LVU1579
 4614              	.LBE284:
 4615              	.LBE287:
 768:mp3.c         ****       while (1) {
 4616              		.loc 1 768 7 is_stmt 1 view .LVU1580
 4617 00f0 2388     		ldrh	r3, [r4]
 4618              	.LBB288:
 4619              	.LBB289:
 483:mp3.c         ****       return 1;
 4620              		.loc 1 483 10 is_stmt 0 view .LVU1581
 4621 00f2 41F65735 		movw	r5, #6999
 4622              	.LBE289:
 4623              	.LBE288:
 768:mp3.c         ****       while (1) {
 4624              		.loc 1 768 7 view .LVU1582
 4625 00f6 5A1C     		adds	r2, r3, #1
 4626              	.LVL385:
 768:mp3.c         ****       while (1) {
 4627              		.loc 1 768 7 view .LVU1583
 4628 00f8 2280     		strh	r2, [r4]	@ movhi
 4629              	.LVL386:
 4630              	.LBB292:
 4631              	.LBI292:
 481:mp3.c         **** {
 4632              		.loc 1 481 15 is_stmt 1 view .LVU1584
 4633              	.LBB293:
 483:mp3.c         ****       return 1;
 4634              		.loc 1 483 7 view .LVU1585
 483:mp3.c         ****       return 1;
 4635              		.loc 1 483 10 is_stmt 0 view .LVU1586
 4636 00fa 41F65732 		movw	r2, #6999
 4637 00fe 9342     		cmp	r3, r2
 483:mp3.c         ****       return 1;
 4638              		.loc 1 483 24 is_stmt 1 view .LVU1587
 483:mp3.c         ****       return 1;
 4639              		.loc 1 483 41 is_stmt 0 view .LVU1588
 4640 0100 9CBF     		itt	ls
 4641 0102 5D21     		movls	r1, #93
 4642 0104 314A     		ldrls	r2, .L396+16
 4643              	.LBE293:
 4644              	.LBE292:
 4645              	.LBB295:
 4646              	.LBB290:
 4647 0106 314E     		ldr	r6, .L396+16
 4648              	.LBE290:
 4649              	.LBE295:
 4650              	.LBB296:
 4651              	.LBB294:
 4652 0108 98BF     		it	ls
 4653 010a D154     		strbls	r1, [r2, r3]
 484:mp3.c         **** }
 4654              		.loc 1 484 7 is_stmt 1 view .LVU1589
 4655              	.LVL387:
 4656              	.L364:
 484:mp3.c         **** }
 4657              		.loc 1 484 7 is_stmt 0 view .LVU1590
 4658              	.LBE294:
 4659              	.LBE296:
 769:mp3.c         **** 	    temp = get_byte(0);
 4660              		.loc 1 769 7 is_stmt 1 view .LVU1591
 770:mp3.c         **** 	    if (temp == '[') {
 4661              		.loc 1 770 6 view .LVU1592
 770:mp3.c         **** 	    if (temp == '[') {
 4662              		.loc 1 770 13 is_stmt 0 view .LVU1593
 4663 010c 0020     		movs	r0, #0
 4664 010e FFF7FEFF 		bl	get_byte
 4665              	.LVL388:
 771:mp3.c         **** 	       write_byte_lrcbuf(lrcbufpos,temp);
 4666              		.loc 1 771 6 is_stmt 1 view .LVU1594
 771:mp3.c         **** 	       write_byte_lrcbuf(lrcbufpos,temp);
 4667              		.loc 1 771 9 is_stmt 0 view .LVU1595
 4668 0112 5B28     		cmp	r0, #91
 4669 0114 44D1     		bne	.L365
 772:mp3.c         **** 	       temp1 = get_byte(0);
 4670              		.loc 1 772 9 is_stmt 1 view .LVU1596
 4671 0116 2388     		ldrh	r3, [r4]
 4672              	.LVL389:
 4673              	.LBB297:
 4674              	.LBI288:
 481:mp3.c         **** {
 4675              		.loc 1 481 15 view .LVU1597
 4676              	.LBB291:
 483:mp3.c         ****       return 1;
 4677              		.loc 1 483 7 view .LVU1598
 483:mp3.c         ****       return 1;
 4678              		.loc 1 483 10 is_stmt 0 view .LVU1599
 4679 0118 AB42     		cmp	r3, r5
 483:mp3.c         ****       return 1;
 4680              		.loc 1 483 24 is_stmt 1 view .LVU1600
 483:mp3.c         ****       return 1;
 4681              		.loc 1 483 41 is_stmt 0 view .LVU1601
 4682 011a 98BF     		it	ls
 4683 011c F054     		strbls	r0, [r6, r3]
 484:mp3.c         **** }
 4684              		.loc 1 484 7 is_stmt 1 view .LVU1602
 4685              	.LVL390:
 484:mp3.c         **** }
 4686              		.loc 1 484 7 is_stmt 0 view .LVU1603
 4687              	.LBE291:
 4688              	.LBE297:
 773:mp3.c         **** 	       temp = temp1;
 4689              		.loc 1 773 9 is_stmt 1 view .LVU1604
 773:mp3.c         **** 	       temp = temp1;
 4690              		.loc 1 773 17 is_stmt 0 view .LVU1605
 4691 011e 0020     		movs	r0, #0
 4692              	.LVL391:
 773:mp3.c         **** 	       temp = temp1;
 4693              		.loc 1 773 17 view .LVU1606
 4694 0120 FFF7FEFF 		bl	get_byte
 4695              	.LVL392:
 774:mp3.c         **** 	       temp1 -= '0';
 4696              		.loc 1 774 9 is_stmt 1 view .LVU1607
 775:mp3.c         **** 	       if (temp1 < 10) {
 4697              		.loc 1 775 9 view .LVU1608
 776:mp3.c         **** 		  while (1) {
 4698              		.loc 1 776 9 view .LVU1609
 775:mp3.c         **** 	       if (temp1 < 10) {
 4699              		.loc 1 775 15 is_stmt 0 view .LVU1610
 4700 0124 A0F13003 		sub	r3, r0, #48
 776:mp3.c         **** 		  while (1) {
 4701              		.loc 1 776 12 view .LVU1611
 4702 0128 DBB2     		uxtb	r3, r3
 4703 012a 092B     		cmp	r3, #9
 4704 012c 10D8     		bhi	.L367
 4705              	.LVL393:
 4706              	.L369:
 777:mp3.c         **** 			temp1 = get_byte(0);
 4707              		.loc 1 777 5 is_stmt 1 view .LVU1612
 778:mp3.c         **** 			if (temp1 == ']' || temp1 == 0xff) break;
 4708              		.loc 1 778 4 view .LVU1613
 778:mp3.c         **** 			if (temp1 == ']' || temp1 == 0xff) break;
 4709              		.loc 1 778 12 is_stmt 0 view .LVU1614
 4710 012e 0020     		movs	r0, #0
 4711 0130 FFF7FEFF 		bl	get_byte
 4712              	.LVL394:
 779:mp3.c         **** 		  }
 4713              		.loc 1 779 4 is_stmt 1 view .LVU1615
 779:mp3.c         **** 		  }
 4714              		.loc 1 779 7 is_stmt 0 view .LVU1616
 4715 0134 5D28     		cmp	r0, #93
 4716 0136 E9D0     		beq	.L364
 779:mp3.c         **** 		  }
 4717              		.loc 1 779 21 discriminator 1 view .LVU1617
 4718 0138 FF28     		cmp	r0, #255
 4719 013a F8D1     		bne	.L369
 4720 013c E6E7     		b	.L364
 4721              	.LVL395:
 4722              	.L353:
 757:mp3.c         **** 	 tagpos+=3;
 4723              		.loc 1 757 14 is_stmt 1 discriminator 2 view .LVU1618
 757:mp3.c         **** 	 tagpos+=3;
 4724              		.loc 1 757 77 is_stmt 0 discriminator 2 view .LVU1619
 4725 013e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 4726 0140 9342     		cmp	r3, r2
 4727 0142 7FF465AF 		bne	.L393
 757:mp3.c         **** 	 tagpos+=3;
 4728              		.loc 1 757 110 discriminator 3 view .LVU1620
 4729 0146 012D     		cmp	r5, #1
 4730 0148 7FF462AF 		bne	.L393
 758:mp3.c         ****       } else return 1;
 4731              		.loc 1 758 3 is_stmt 1 view .LVU1621
 758:mp3.c         ****       } else return 1;
 4732              		.loc 1 758 9 is_stmt 0 view .LVU1622
 4733 014c 0334     		adds	r4, r4, #3
 4734 014e 86E7     		b	.L391
 4735              	.LVL396:
 4736              	.L367:
 782:mp3.c         **** 	          write_byte_lrcbuf(lrcbufpos++,temp);
 4737              		.loc 1 782 5 is_stmt 1 view .LVU1623
 782:mp3.c         **** 	          write_byte_lrcbuf(lrcbufpos++,temp);
 4738              		.loc 1 782 14 is_stmt 0 view .LVU1624
 4739 0150 2288     		ldrh	r2, [r4]
 4740 0152 531C     		adds	r3, r2, #1
 4741 0154 9BB2     		uxth	r3, r3
 783:mp3.c         **** 		  break;
 4742              		.loc 1 783 12 is_stmt 1 view .LVU1625
 4743 0156 0232     		adds	r2, r2, #2
 4744              	.LVL397:
 4745              	.L395:
 787:mp3.c         **** 	       break;
 4746              		.loc 1 787 43 is_stmt 0 discriminator 1 view .LVU1626
 4747 0158 2280     		strh	r2, [r4]	@ movhi
 4748              	.LVL398:
 4749              	.LBB298:
 4750              	.LBI298:
 481:mp3.c         **** {
 4751              		.loc 1 481 15 is_stmt 1 discriminator 1 view .LVU1627
 4752              	.LBB299:
 483:mp3.c         ****       return 1;
 4753              		.loc 1 483 7 discriminator 1 view .LVU1628
 483:mp3.c         ****       return 1;
 4754              		.loc 1 483 10 is_stmt 0 discriminator 1 view .LVU1629
 4755 015a 41F65732 		movw	r2, #6999
 4756 015e 9342     		cmp	r3, r2
 483:mp3.c         ****       return 1;
 4757              		.loc 1 483 24 is_stmt 1 discriminator 1 view .LVU1630
 483:mp3.c         ****       return 1;
 4758              		.loc 1 483 41 is_stmt 0 discriminator 1 view .LVU1631
 4759 0160 9CBF     		itt	ls
 4760 0162 1A4A     		ldrls	r2, .L396+16
 4761 0164 D054     		strbls	r0, [r2, r3]
 484:mp3.c         **** }
 4762              		.loc 1 484 7 is_stmt 1 discriminator 1 view .LVU1632
 4763              	.LVL399:
 4764              	.L371:
 484:mp3.c         **** }
 4765              		.loc 1 484 7 is_stmt 0 discriminator 1 view .LVU1633
 4766              	.LBE299:
 4767              	.LBE298:
 4768              	.LBB300:
 4769              	.LBB301:
 483:mp3.c         ****       return 1;
 4770              		.loc 1 483 10 view .LVU1634
 4771 0166 41F65735 		movw	r5, #6999
 483:mp3.c         ****       return 1;
 4772              		.loc 1 483 41 view .LVU1635
 4773 016a 184E     		ldr	r6, .L396+16
 4774              	.L376:
 483:mp3.c         ****       return 1;
 4775              		.loc 1 483 41 view .LVU1636
 4776              	.LBE301:
 4777              	.LBE300:
 791:mp3.c         **** 	    temp = get_byte(0);
 4778              		.loc 1 791 7 is_stmt 1 view .LVU1637
 792:mp3.c         **** 	    if (temp != 0xFF && temp != 0x00) write_byte_lrcbuf(lrcbufpos++,temp);
 4779              		.loc 1 792 6 view .LVU1638
 792:mp3.c         **** 	    if (temp != 0xFF && temp != 0x00) write_byte_lrcbuf(lrcbufpos++,temp);
 4780              		.loc 1 792 13 is_stmt 0 view .LVU1639
 4781 016c 0020     		movs	r0, #0
 4782              	.LVL400:
 792:mp3.c         **** 	    if (temp != 0xFF && temp != 0x00) write_byte_lrcbuf(lrcbufpos++,temp);
 4783              		.loc 1 792 13 view .LVU1640
 4784 016e FFF7FEFF 		bl	get_byte
 4785              	.LVL401:
 793:mp3.c         **** 	    if (temp == 0x0A || temp == 0xFF || temp == 0x00) {
 4786              		.loc 1 793 6 is_stmt 1 view .LVU1641
 793:mp3.c         **** 	    if (temp == 0x0A || temp == 0xFF || temp == 0x00) {
 4787              		.loc 1 793 23 is_stmt 0 view .LVU1642
 4788 0172 431E     		subs	r3, r0, #1
 793:mp3.c         **** 	    if (temp == 0x0A || temp == 0xFF || temp == 0x00) {
 4789              		.loc 1 793 9 view .LVU1643
 4790 0174 DBB2     		uxtb	r3, r3
 4791 0176 FD2B     		cmp	r3, #253
 4792 0178 1BD8     		bhi	.L373
 793:mp3.c         **** 	    if (temp == 0x0A || temp == 0xFF || temp == 0x00) {
 4793              		.loc 1 793 40 is_stmt 1 discriminator 1 view .LVU1644
 4794 017a 2388     		ldrh	r3, [r4]
 4795              	.LBB305:
 4796              	.LBB302:
 483:mp3.c         ****       return 1;
 4797              		.loc 1 483 10 is_stmt 0 discriminator 1 view .LVU1645
 4798 017c AB42     		cmp	r3, r5
 4799              	.LBE302:
 4800              	.LBE305:
 793:mp3.c         **** 	    if (temp == 0x0A || temp == 0xFF || temp == 0x00) {
 4801              		.loc 1 793 40 discriminator 1 view .LVU1646
 4802 017e 03F10102 		add	r2, r3, #1
 4803              	.LBB306:
 4804              	.LBB303:
 483:mp3.c         ****       return 1;
 4805              		.loc 1 483 41 discriminator 1 view .LVU1647
 4806 0182 98BF     		it	ls
 4807 0184 F054     		strbls	r0, [r6, r3]
 4808              	.LBE303:
 4809              	.LBE306:
 794:mp3.c         **** 	       write_byte_lrcbuf(lrcbufpos++,temp);
 4810              		.loc 1 794 9 discriminator 1 view .LVU1648
 4811 0186 0A28     		cmp	r0, #10
 793:mp3.c         **** 	    if (temp == 0x0A || temp == 0xFF || temp == 0x00) {
 4812              		.loc 1 793 40 discriminator 1 view .LVU1649
 4813 0188 2280     		strh	r2, [r4]	@ movhi
 4814              	.LVL402:
 4815              	.LBB307:
 4816              	.LBI300:
 481:mp3.c         **** {
 4817              		.loc 1 481 15 is_stmt 1 discriminator 1 view .LVU1650
 4818              	.LBB304:
 483:mp3.c         ****       return 1;
 4819              		.loc 1 483 7 discriminator 1 view .LVU1651
 483:mp3.c         ****       return 1;
 4820              		.loc 1 483 24 discriminator 1 view .LVU1652
 484:mp3.c         **** }
 4821              		.loc 1 484 7 discriminator 1 view .LVU1653
 484:mp3.c         **** }
 4822              		.loc 1 484 7 is_stmt 0 discriminator 1 view .LVU1654
 4823              	.LBE304:
 4824              	.LBE307:
 794:mp3.c         **** 	       write_byte_lrcbuf(lrcbufpos++,temp);
 4825              		.loc 1 794 6 is_stmt 1 discriminator 1 view .LVU1655
 794:mp3.c         **** 	       write_byte_lrcbuf(lrcbufpos++,temp);
 4826              		.loc 1 794 9 is_stmt 0 discriminator 1 view .LVU1656
 4827 018a EFD1     		bne	.L376
 4828              	.LVL403:
 4829              	.L375:
 795:mp3.c         **** 	       break;
 4830              		.loc 1 795 9 is_stmt 1 view .LVU1657
 4831 018c 2388     		ldrh	r3, [r4]
 4832 018e 5A1C     		adds	r2, r3, #1
 4833 0190 2280     		strh	r2, [r4]	@ movhi
 4834              	.LVL404:
 4835              	.LBB308:
 4836              	.LBI237:
 481:mp3.c         **** {
 4837              		.loc 1 481 15 view .LVU1658
 4838              	.LBB239:
 483:mp3.c         ****       return 1;
 4839              		.loc 1 483 7 view .LVU1659
 483:mp3.c         ****       return 1;
 4840              		.loc 1 483 10 is_stmt 0 view .LVU1660
 4841 0192 41F65732 		movw	r2, #6999
 4842 0196 9342     		cmp	r3, r2
 483:mp3.c         ****       return 1;
 4843              		.loc 1 483 24 is_stmt 1 view .LVU1661
 483:mp3.c         ****       return 1;
 4844              		.loc 1 483 41 is_stmt 0 view .LVU1662
 4845 0198 9CBF     		itt	ls
 4846 019a 0C4A     		ldrls	r2, .L396+16
 4847 019c D054     		strbls	r0, [r2, r3]
 4848 019e 37E7     		b	.L393
 4849              	.LVL405:
 4850              	.L365:
 483:mp3.c         ****       return 1;
 4851              		.loc 1 483 41 view .LVU1663
 4852              	.LBE239:
 4853              	.LBE308:
 786:mp3.c         **** 	       if (temp != 0xFF && temp != 0x00) write_byte_lrcbuf(lrcbufpos++,temp);
 4854              		.loc 1 786 13 is_stmt 1 view .LVU1664
 786:mp3.c         **** 	       if (temp != 0xFF && temp != 0x00) write_byte_lrcbuf(lrcbufpos++,temp);
 4855              		.loc 1 786 16 is_stmt 0 view .LVU1665
 4856 01a0 2028     		cmp	r0, #32
 4857 01a2 B3D0     		beq	.L364
 787:mp3.c         **** 	       break;
 4858              		.loc 1 787 9 is_stmt 1 view .LVU1666
 787:mp3.c         **** 	       break;
 4859              		.loc 1 787 26 is_stmt 0 view .LVU1667
 4860 01a4 431E     		subs	r3, r0, #1
 787:mp3.c         **** 	       break;
 4861              		.loc 1 787 12 view .LVU1668
 4862 01a6 DBB2     		uxtb	r3, r3
 4863 01a8 FD2B     		cmp	r3, #253
 4864 01aa DCD8     		bhi	.L371
 787:mp3.c         **** 	       break;
 4865              		.loc 1 787 43 is_stmt 1 discriminator 1 view .LVU1669
 4866 01ac 2388     		ldrh	r3, [r4]
 4867 01ae 5A1C     		adds	r2, r3, #1
 4868 01b0 D2E7     		b	.L395
 4869              	.L373:
 794:mp3.c         **** 	       write_byte_lrcbuf(lrcbufpos++,temp);
 4870              		.loc 1 794 23 is_stmt 0 discriminator 1 view .LVU1670
 4871 01b2 FF28     		cmp	r0, #255
 4872 01b4 0CBF     		ite	eq
 4873 01b6 FF20     		moveq	r0, #255
 4874 01b8 0020     		movne	r0, #0
 4875              	.LVL406:
 794:mp3.c         **** 	       write_byte_lrcbuf(lrcbufpos++,temp);
 4876              		.loc 1 794 23 discriminator 1 view .LVU1671
 4877 01ba E7E7     		b	.L375
 4878              	.L397:
 4879              		.align	2
 4880              	.L396:
 4881 01bc 00000000 		.word	.LANCHOR14
 4882 01c0 00000000 		.word	.LANCHOR15
 4883 01c4 00000000 		.word	.LANCHOR13
 4884 01c8 00000000 		.word	.LANCHOR7
 4885 01cc 00000000 		.word	lrc_buffer
 4886 01d0 00000000 		.word	tag_table
 4887              		.cfi_endproc
 4888              	.LFE50:
 4890              		.section	.text.copy_lrc_to_ram,"ax",%progbits
 4891              		.align	1
 4892              		.global	copy_lrc_to_ram
 4893              		.syntax unified
 4894              		.thumb
 4895              		.thumb_func
 4896              		.fpu softvfp
 4898              	copy_lrc_to_ram:
 4899              	.LFB51:
 801:mp3.c         **** 
 802:mp3.c         **** 
 803:mp3.c         **** void copy_lrc_to_ram (void)
 804:mp3.c         **** {
 4900              		.loc 1 804 1 is_stmt 1 view -0
 4901              		.cfi_startproc
 4902              		@ args = 0, pretend = 0, frame = 0
 4903              		@ frame_needed = 0, uses_anonymous_args = 0
 805:mp3.c         ****       unsigned char numx;
 4904              		.loc 1 805 7 view .LVU1673
 806:mp3.c         ****       unsigned char temp;
 4905              		.loc 1 806 7 view .LVU1674
 807:mp3.c         ****       unsigned char min;
 4906              		.loc 1 807 7 view .LVU1675
 808:mp3.c         ****       unsigned char sec;
 4907              		.loc 1 808 7 view .LVU1676
 809:mp3.c         ****       unsigned char mms;
 4908              		.loc 1 809 7 view .LVU1677
 810:mp3.c         ****       copy_lyric(0xff,0,0);
 4909              		.loc 1 810 7 view .LVU1678
 4910              	.LVL407:
 4911              	.LBB309:
 4912              	.LBI309:
 738:mp3.c         **** {
 4913              		.loc 1 738 15 view .LVU1679
 4914              	.LBB310:
 740:mp3.c         ****       static unsigned short lrcbufpos = 0;
 4915              		.loc 1 740 7 view .LVU1680
 741:mp3.c         ****       unsigned char temp;
 4916              		.loc 1 741 7 view .LVU1681
 742:mp3.c         ****       unsigned char temp1;
 4917              		.loc 1 742 7 view .LVU1682
 743:mp3.c         ****       unsigned short tagcnt = 0;
 4918              		.loc 1 743 7 view .LVU1683
 744:mp3.c         ****       if (tmin == 0xff) {
 4919              		.loc 1 744 7 view .LVU1684
 745:mp3.c         ****       	 tagpos = 0;
 4920              		.loc 1 745 7 view .LVU1685
 746:mp3.c         ****       	 lrcbufpos = 0;
 4921              		.loc 1 746 9 view .LVU1686
 746:mp3.c         ****       	 lrcbufpos = 0;
 4922              		.loc 1 746 16 is_stmt 0 view .LVU1687
 4923 0000 0023     		movs	r3, #0
 4924 0002 1E4A     		ldr	r2, .L429
 4925              	.LBE310:
 4926              	.LBE309:
 804:mp3.c         ****       unsigned char numx;
 4927              		.loc 1 804 1 view .LVU1688
 4928 0004 70B5     		push	{r4, r5, r6, lr}
 4929              		.cfi_def_cfa_offset 16
 4930              		.cfi_offset 4, -16
 4931              		.cfi_offset 5, -12
 4932              		.cfi_offset 6, -8
 4933              		.cfi_offset 14, -4
 4934              	.LBB312:
 4935              	.LBB311:
 746:mp3.c         ****       	 lrcbufpos = 0;
 4936              		.loc 1 746 16 view .LVU1689
 4937 0006 1380     		strh	r3, [r2]	@ movhi
 747:mp3.c         ****       	 return 1;
 4938              		.loc 1 747 9 is_stmt 1 view .LVU1690
 747:mp3.c         ****       	 return 1;
 4939              		.loc 1 747 19 is_stmt 0 view .LVU1691
 4940 0008 1D4A     		ldr	r2, .L429+4
 4941 000a 1380     		strh	r3, [r2]	@ movhi
 4942              	.LVL408:
 4943              	.L426:
 748:mp3.c         ****       }
 4944              		.loc 1 748 9 is_stmt 1 view .LVU1692
 4945              	.LBE311:
 4946              	.LBE312:
 811:mp3.c         ****       get_byte(1);
 4947              		.loc 1 811 7 view .LVU1693
 4948 000c 0120     		movs	r0, #1
 4949 000e FFF7FEFF 		bl	get_byte
 4950              	.LVL409:
 4951              	.L399:
 812:mp3.c         ****       while (1) {
 4952              		.loc 1 812 7 view .LVU1694
 813:mp3.c         **** 	    while (1) {
 4953              		.loc 1 813 6 view .LVU1695
 814:mp3.c         **** 		  temp = get_byte(0);
 4954              		.loc 1 814 5 view .LVU1696
 4955              		.loc 1 814 12 is_stmt 0 view .LVU1697
 4956 0012 0020     		movs	r0, #0
 4957 0014 FFF7FEFF 		bl	get_byte
 4958              	.LVL410:
 815:mp3.c         **** 		  if (temp == '[') {
 4959              		.loc 1 815 5 is_stmt 1 view .LVU1698
 4960              		.loc 1 815 8 is_stmt 0 view .LVU1699
 4961 0018 5B28     		cmp	r0, #91
 4962 001a 02D0     		beq	.L400
 816:mp3.c         **** 		     break;
 817:mp3.c         **** 		  } else if (temp == 0xff) {
 4963              		.loc 1 817 12 is_stmt 1 view .LVU1700
 4964              		.loc 1 817 15 is_stmt 0 view .LVU1701
 4965 001c FF28     		cmp	r0, #255
 4966 001e F8D1     		bne	.L399
 4967 0020 F4E7     		b	.L426
 4968              	.L400:
 818:mp3.c         **** 		     get_byte(1);
 819:mp3.c         **** 		  }
 820:mp3.c         **** 	    }
 821:mp3.c         **** 	    numx = get_num();
 4969              		.loc 1 821 6 is_stmt 1 view .LVU1702
 4970              		.loc 1 821 13 is_stmt 0 view .LVU1703
 4971 0022 FFF7FEFF 		bl	get_num
 4972              	.LVL411:
 4973              		.loc 1 821 13 view .LVU1704
 4974 0026 0546     		mov	r5, r0
 4975              	.LVL412:
 822:mp3.c         **** 	    if (get_byte(0) != ':' || numx == 0xff) continue;
 4976              		.loc 1 822 6 is_stmt 1 view .LVU1705
 4977              		.loc 1 822 10 is_stmt 0 view .LVU1706
 4978 0028 0020     		movs	r0, #0
 4979 002a FFF7FEFF 		bl	get_byte
 4980              	.LVL413:
 4981              		.loc 1 822 9 view .LVU1707
 4982 002e 3A28     		cmp	r0, #58
 4983 0030 EFD1     		bne	.L399
 4984              		.loc 1 822 29 discriminator 2 view .LVU1708
 4985 0032 FF2D     		cmp	r5, #255
 4986 0034 EDD0     		beq	.L399
 823:mp3.c         **** 	    min = numx;
 4987              		.loc 1 823 6 is_stmt 1 view .LVU1709
 4988              	.LVL414:
 824:mp3.c         **** 	    numx = get_num();
 4989              		.loc 1 824 6 view .LVU1710
 4990              		.loc 1 824 13 is_stmt 0 view .LVU1711
 4991 0036 FFF7FEFF 		bl	get_num
 4992              	.LVL415:
 4993 003a 0446     		mov	r4, r0
 4994              	.LVL416:
 825:mp3.c         **** 	    temp = get_byte(0);
 4995              		.loc 1 825 6 is_stmt 1 view .LVU1712
 4996              		.loc 1 825 13 is_stmt 0 view .LVU1713
 4997 003c 0020     		movs	r0, #0
 4998 003e FFF7FEFF 		bl	get_byte
 4999              	.LVL417:
 826:mp3.c         **** 	    if ((temp != '.' && temp != ']') || numx == 0xff) continue;
 5000              		.loc 1 826 6 is_stmt 1 view .LVU1714
 5001              		.loc 1 826 9 is_stmt 0 view .LVU1715
 5002 0042 2E28     		cmp	r0, #46
 5003 0044 0BD0     		beq	.L403
 5004              		.loc 1 826 23 discriminator 1 view .LVU1716
 5005 0046 5D28     		cmp	r0, #93
 5006 0048 E3D1     		bne	.L399
 5007              		.loc 1 826 39 view .LVU1717
 5008 004a FF2C     		cmp	r4, #255
 5009 004c E1D0     		beq	.L399
 827:mp3.c         **** 	    sec = numx;
 5010              		.loc 1 827 6 is_stmt 1 view .LVU1718
 5011              	.LVL418:
 828:mp3.c         **** 	    if (temp != '.') {
 5012              		.loc 1 828 6 view .LVU1719
 829:mp3.c         **** 	       if (copy_lyric(min,sec,0) == 0xFF) return;
 5013              		.loc 1 829 9 view .LVU1720
 5014              		.loc 1 829 13 is_stmt 0 view .LVU1721
 5015 004e 0022     		movs	r2, #0
 5016              	.LVL419:
 5017              	.L428:
 830:mp3.c         **** 	       continue;
 831:mp3.c         **** 	    }
 832:mp3.c         **** 	    numx = get_num();
 833:mp3.c         **** 	    temp = get_byte(0);
 834:mp3.c         **** 	    if (temp != ']' || numx == 0xff) continue;
 835:mp3.c         **** 	    mms = numx;
 836:mp3.c         **** 	    if (copy_lyric(min,sec,mms) == 0xFF) return;
 5018              		.loc 1 836 10 view .LVU1722
 5019 0050 2146     		mov	r1, r4
 5020 0052 2846     		mov	r0, r5
 5021              	.LVL420:
 5022              		.loc 1 836 10 view .LVU1723
 5023 0054 FFF7FEFF 		bl	copy_lyric
 5024              	.LVL421:
 5025              		.loc 1 836 9 view .LVU1724
 5026 0058 FF28     		cmp	r0, #255
 5027 005a DAD1     		bne	.L399
 837:mp3.c         ****       }
 838:mp3.c         **** }
 5028              		.loc 1 838 1 view .LVU1725
 5029 005c 70BD     		pop	{r4, r5, r6, pc}
 5030              	.LVL422:
 5031              	.L403:
 826:mp3.c         **** 	    sec = numx;
 5032              		.loc 1 826 39 view .LVU1726
 5033 005e FF2C     		cmp	r4, #255
 5034 0060 D7D0     		beq	.L399
 827:mp3.c         **** 	    if (temp != '.') {
 5035              		.loc 1 827 6 is_stmt 1 view .LVU1727
 5036              	.LVL423:
 828:mp3.c         **** 	       if (copy_lyric(min,sec,0) == 0xFF) return;
 5037              		.loc 1 828 6 view .LVU1728
 832:mp3.c         **** 	    temp = get_byte(0);
 5038              		.loc 1 832 6 view .LVU1729
 832:mp3.c         **** 	    temp = get_byte(0);
 5039              		.loc 1 832 13 is_stmt 0 view .LVU1730
 5040 0062 FFF7FEFF 		bl	get_num
 5041              	.LVL424:
 832:mp3.c         **** 	    temp = get_byte(0);
 5042              		.loc 1 832 13 view .LVU1731
 5043 0066 0646     		mov	r6, r0
 5044              	.LVL425:
 833:mp3.c         **** 	    if (temp != ']' || numx == 0xff) continue;
 5045              		.loc 1 833 6 is_stmt 1 view .LVU1732
 833:mp3.c         **** 	    if (temp != ']' || numx == 0xff) continue;
 5046              		.loc 1 833 13 is_stmt 0 view .LVU1733
 5047 0068 0020     		movs	r0, #0
 5048 006a FFF7FEFF 		bl	get_byte
 5049              	.LVL426:
 834:mp3.c         **** 	    mms = numx;
 5050              		.loc 1 834 6 is_stmt 1 view .LVU1734
 834:mp3.c         **** 	    mms = numx;
 5051              		.loc 1 834 9 is_stmt 0 view .LVU1735
 5052 006e 5D28     		cmp	r0, #93
 5053 0070 CFD1     		bne	.L399
 834:mp3.c         **** 	    mms = numx;
 5054              		.loc 1 834 22 discriminator 2 view .LVU1736
 5055 0072 FF2E     		cmp	r6, #255
 5056 0074 CDD0     		beq	.L399
 835:mp3.c         **** 	    if (copy_lyric(min,sec,mms) == 0xFF) return;
 5057              		.loc 1 835 6 is_stmt 1 view .LVU1737
 5058              	.LVL427:
 836:mp3.c         ****       }
 5059              		.loc 1 836 6 view .LVU1738
 836:mp3.c         ****       }
 5060              		.loc 1 836 10 is_stmt 0 view .LVU1739
 5061 0076 3246     		mov	r2, r6
 5062 0078 EAE7     		b	.L428
 5063              	.L430:
 5064 007a 00BF     		.align	2
 5065              	.L429:
 5066 007c 00000000 		.word	.LANCHOR14
 5067 0080 00000000 		.word	.LANCHOR15
 5068              		.cfi_endproc
 5069              	.LFE51:
 5071              		.section	.rodata.display_id3v1_tag.str1.1,"aMS",%progbits,1
 5072              	.LC5:
 5073 0000 20202020 		.ascii	"                                     \000"
 5073      20202020 
 5073      20202020 
 5073      20202020 
 5073      20202020 
 5074              	.LC6:
 5075 0026 20202020 		.ascii	"                              \000"
 5075      20202020 
 5075      20202020 
 5075      20202020 
 5075      20202020 
 5076              		.section	.text.display_id3v1_tag,"ax",%progbits
 5077              		.align	1
 5078              		.global	display_id3v1_tag
 5079              		.syntax unified
 5080              		.thumb
 5081              		.thumb_func
 5082              		.fpu softvfp
 5084              	display_id3v1_tag:
 5085              	.LFB52:
 839:mp3.c         **** 
 840:mp3.c         **** 
 841:mp3.c         **** void display_id3v1_tag (void)
 842:mp3.c         **** {
 5086              		.loc 1 842 1 is_stmt 1 view -0
 5087              		.cfi_startproc
 5088              		@ args = 0, pretend = 0, frame = 128
 5089              		@ frame_needed = 0, uses_anonymous_args = 0
 843:mp3.c         ****       unsigned char i, buff[128];
 5090              		.loc 1 843 7 view .LVU1741
 844:mp3.c         **** 	  lcd_printf(0,0,"                                     ");
 5091              		.loc 1 844 4 view .LVU1742
 5092 0000 0021     		movs	r1, #0
 842:mp3.c         ****       unsigned char i, buff[128];
 5093              		.loc 1 842 1 is_stmt 0 view .LVU1743
 5094 0002 10B5     		push	{r4, lr}
 5095              		.cfi_def_cfa_offset 8
 5096              		.cfi_offset 4, -8
 5097              		.cfi_offset 14, -4
 5098              		.loc 1 844 4 view .LVU1744
 5099 0004 0846     		mov	r0, r1
 842:mp3.c         ****       unsigned char i, buff[128];
 5100              		.loc 1 842 1 view .LVU1745
 5101 0006 A0B0     		sub	sp, sp, #128
 5102              		.cfi_def_cfa_offset 136
 5103              		.loc 1 844 4 view .LVU1746
 5104 0008 474A     		ldr	r2, .L439
 5105 000a FFF7FEFF 		bl	lcd_printf
 5106              	.LVL428:
 845:mp3.c         **** 	  lcd_printf(0,1,"                                     ");
 5107              		.loc 1 845 4 is_stmt 1 view .LVU1747
 5108 000e 0121     		movs	r1, #1
 5109 0010 0020     		movs	r0, #0
 5110 0012 454A     		ldr	r2, .L439
 5111 0014 FFF7FEFF 		bl	lcd_printf
 5112              	.LVL429:
 846:mp3.c         **** 	  lcd_printf(0,2,"                                     ");
 5113              		.loc 1 846 4 view .LVU1748
 5114 0018 0221     		movs	r1, #2
 5115 001a 0020     		movs	r0, #0
 5116 001c 424A     		ldr	r2, .L439
 5117 001e FFF7FEFF 		bl	lcd_printf
 5118              	.LVL430:
 847:mp3.c         **** 	  lcd_printf(0,3,"                              ");
 5119              		.loc 1 847 4 view .LVU1749
 5120 0022 0321     		movs	r1, #3
 5121 0024 0020     		movs	r0, #0
 5122 0026 414A     		ldr	r2, .L439+4
 5123 0028 FFF7FEFF 		bl	lcd_printf
 5124              	.LVL431:
 848:mp3.c         **** 	  lcd_printf(0,4,"                              ");
 5125              		.loc 1 848 4 view .LVU1750
 5126 002c 0421     		movs	r1, #4
 5127 002e 0020     		movs	r0, #0
 5128 0030 3E4A     		ldr	r2, .L439+4
 5129 0032 FFF7FEFF 		bl	lcd_printf
 5130              	.LVL432:
 849:mp3.c         **** 	  lcd_printf(0,5,"                              ");
 5131              		.loc 1 849 4 view .LVU1751
 5132 0036 0521     		movs	r1, #5
 5133 0038 0020     		movs	r0, #0
 5134 003a 3C4A     		ldr	r2, .L439+4
 5135 003c FFF7FEFF 		bl	lcd_printf
 5136              	.LVL433:
 850:mp3.c         **** 	  lcd_printf(0,6,"                              ");
 5137              		.loc 1 850 4 view .LVU1752
 5138 0040 0621     		movs	r1, #6
 5139 0042 0020     		movs	r0, #0
 5140 0044 394A     		ldr	r2, .L439+4
 5141 0046 FFF7FEFF 		bl	lcd_printf
 5142              	.LVL434:
 851:mp3.c         **** 	  lcd_printf(0,7,"                              ");
 5143              		.loc 1 851 4 view .LVU1753
 5144 004a 0721     		movs	r1, #7
 5145 004c 0020     		movs	r0, #0
 5146 004e 374A     		ldr	r2, .L439+4
 5147 0050 FFF7FEFF 		bl	lcd_printf
 5148              	.LVL435:
 852:mp3.c         **** 	  lcd_printf(0,8,"                              ");
 5149              		.loc 1 852 4 view .LVU1754
 5150 0054 0821     		movs	r1, #8
 5151 0056 0020     		movs	r0, #0
 5152 0058 344A     		ldr	r2, .L439+4
 5153 005a FFF7FEFF 		bl	lcd_printf
 5154              	.LVL436:
 853:mp3.c         **** 	  lcd_printf(0,9,"                              ");
 5155              		.loc 1 853 4 view .LVU1755
 5156 005e 0921     		movs	r1, #9
 5157 0060 0020     		movs	r0, #0
 5158 0062 324A     		ldr	r2, .L439+4
 5159 0064 FFF7FEFF 		bl	lcd_printf
 5160              	.LVL437:
 854:mp3.c         ****       lcd_printf(0,10,"                              ");
 5161              		.loc 1 854 7 view .LVU1756
 5162 0068 0A21     		movs	r1, #10
 5163 006a 0020     		movs	r0, #0
 5164 006c 2F4A     		ldr	r2, .L439+4
 5165 006e FFF7FEFF 		bl	lcd_printf
 5166              	.LVL438:
 855:mp3.c         ****       lcd_printf(0,11,"                              ");
 5167              		.loc 1 855 7 view .LVU1757
 5168 0072 0B21     		movs	r1, #11
 5169 0074 0020     		movs	r0, #0
 5170 0076 2D4A     		ldr	r2, .L439+4
 5171 0078 FFF7FEFF 		bl	lcd_printf
 5172              	.LVL439:
 856:mp3.c         ****       lcd_printf(0,12,"                              ");
 5173              		.loc 1 856 7 view .LVU1758
 5174 007c 0C21     		movs	r1, #12
 5175 007e 0020     		movs	r0, #0
 5176 0080 2A4A     		ldr	r2, .L439+4
 5177 0082 FFF7FEFF 		bl	lcd_printf
 5178              	.LVL440:
 857:mp3.c         ****       lcd_printf(0,13,"                              ");
 5179              		.loc 1 857 7 view .LVU1759
 5180 0086 0D21     		movs	r1, #13
 5181 0088 0020     		movs	r0, #0
 5182 008a 284A     		ldr	r2, .L439+4
 5183 008c FFF7FEFF 		bl	lcd_printf
 5184              	.LVL441:
 858:mp3.c         ****       lcd_printf(0,14,"                              ");
 5185              		.loc 1 858 7 view .LVU1760
 859:mp3.c         ****       lcd_printf(0,15,"                              ");
 860:mp3.c         ****       f_lseek(&fsrc, fsrc.fsize - 128);
 5186              		.loc 1 860 26 is_stmt 0 view .LVU1761
 5187 0090 274C     		ldr	r4, .L439+8
 858:mp3.c         ****       lcd_printf(0,14,"                              ");
 5188              		.loc 1 858 7 view .LVU1762
 5189 0092 0E21     		movs	r1, #14
 5190 0094 0020     		movs	r0, #0
 5191 0096 254A     		ldr	r2, .L439+4
 5192 0098 FFF7FEFF 		bl	lcd_printf
 5193              	.LVL442:
 859:mp3.c         ****       lcd_printf(0,15,"                              ");
 5194              		.loc 1 859 7 is_stmt 1 view .LVU1763
 5195 009c 234A     		ldr	r2, .L439+4
 5196 009e 0F21     		movs	r1, #15
 5197 00a0 0020     		movs	r0, #0
 5198 00a2 FFF7FEFF 		bl	lcd_printf
 5199              	.LVL443:
 5200              		.loc 1 860 7 view .LVU1764
 5201 00a6 E168     		ldr	r1, [r4, #12]
 5202 00a8 2046     		mov	r0, r4
 5203 00aa 8039     		subs	r1, r1, #128
 5204 00ac FFF7FEFF 		bl	f_lseek
 5205              	.LVL444:
 861:mp3.c         ****       f_read(&fsrc,buff,128,&br);
 5206              		.loc 1 861 7 view .LVU1765
 5207 00b0 204B     		ldr	r3, .L439+12
 5208 00b2 8022     		movs	r2, #128
 5209 00b4 6946     		mov	r1, sp
 5210 00b6 2046     		mov	r0, r4
 5211 00b8 FFF7FEFF 		bl	f_read
 5212              	.LVL445:
 862:mp3.c         ****       if ((buff[0] == 'T') && (buff[1] == 'A') && (buff[2] == 'G')) {
 5213              		.loc 1 862 7 view .LVU1766
 5214              		.loc 1 862 10 is_stmt 0 view .LVU1767
 5215 00bc 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 5216 00c0 542B     		cmp	r3, #84
 5217 00c2 2BD1     		bne	.L432
 5218              		.loc 1 862 28 discriminator 1 view .LVU1768
 5219 00c4 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 5220 00c8 412B     		cmp	r3, #65
 5221 00ca 27D1     		bne	.L432
 5222              		.loc 1 862 48 discriminator 2 view .LVU1769
 5223 00cc 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
 5224 00d0 472B     		cmp	r3, #71
 5225 00d2 23D1     		bne	.L432
 5226              		.loc 1 862 48 view .LVU1770
 5227 00d4 1E23     		movs	r3, #30
 5228 00d6 184A     		ldr	r2, .L439+16
 5229 00d8 0DF10301 		add	r1, sp, #3
 5230              	.L433:
 5231              	.LVL446:
 863:mp3.c         ****          for (i=0;i<30;i++) ID3V1_Buf.Title[i] = buff[3 + i];
 5232              		.loc 1 863 29 is_stmt 1 discriminator 3 view .LVU1771
 5233              		.loc 1 863 54 is_stmt 0 discriminator 3 view .LVU1772
 5234 00dc 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 5235              	.LVL447:
 5236              		.loc 1 863 54 discriminator 3 view .LVU1773
 5237 00e0 013B     		subs	r3, r3, #1
 5238              		.loc 1 863 10 discriminator 3 view .LVU1774
 5239 00e2 13F0FF03 		ands	r3, r3, #255
 5240              		.loc 1 863 48 discriminator 3 view .LVU1775
 5241 00e6 02F8010B 		strb	r0, [r2], #1
 5242              		.loc 1 863 24 is_stmt 1 discriminator 3 view .LVU1776
 5243              	.LVL448:
 5244              		.loc 1 863 19 discriminator 3 view .LVU1777
 5245              		.loc 1 863 10 is_stmt 0 discriminator 3 view .LVU1778
 5246 00ea F7D1     		bne	.L433
 5247              		.loc 1 863 10 view .LVU1779
 5248 00ec 1E23     		movs	r3, #30
 5249 00ee 134A     		ldr	r2, .L439+20
 5250 00f0 0DF12101 		add	r1, sp, #33
 5251              	.LVL449:
 5252              	.L434:
 864:mp3.c         ****          for (i=0;i<30;i++) ID3V1_Buf.Artist[i] = buff[33 + i];
 5253              		.loc 1 864 29 is_stmt 1 discriminator 3 view .LVU1780
 5254              		.loc 1 864 55 is_stmt 0 discriminator 3 view .LVU1781
 5255 00f4 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 5256              	.LVL450:
 5257              		.loc 1 864 55 discriminator 3 view .LVU1782
 5258 00f8 013B     		subs	r3, r3, #1
 5259              		.loc 1 864 10 discriminator 3 view .LVU1783
 5260 00fa 13F0FF03 		ands	r3, r3, #255
 5261              		.loc 1 864 49 discriminator 3 view .LVU1784
 5262 00fe 02F8010B 		strb	r0, [r2], #1
 5263              		.loc 1 864 24 is_stmt 1 discriminator 3 view .LVU1785
 5264              	.LVL451:
 5265              		.loc 1 864 19 discriminator 3 view .LVU1786
 5266              		.loc 1 864 10 is_stmt 0 discriminator 3 view .LVU1787
 5267 0102 F7D1     		bne	.L434
 5268              		.loc 1 864 10 view .LVU1788
 5269 0104 1E23     		movs	r3, #30
 5270 0106 0E4A     		ldr	r2, .L439+24
 5271 0108 0DF13F01 		add	r1, sp, #63
 5272              	.LVL452:
 5273              	.L435:
 865:mp3.c         ****          for (i=0;i<30;i++) ID3V1_Buf.Album[i] = buff[63 + i];
 5274              		.loc 1 865 29 is_stmt 1 discriminator 3 view .LVU1789
 5275              		.loc 1 865 54 is_stmt 0 discriminator 3 view .LVU1790
 5276 010c 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 5277              	.LVL453:
 5278              		.loc 1 865 54 discriminator 3 view .LVU1791
 5279 0110 013B     		subs	r3, r3, #1
 5280              		.loc 1 865 10 discriminator 3 view .LVU1792
 5281 0112 13F0FF03 		ands	r3, r3, #255
 5282              		.loc 1 865 48 discriminator 3 view .LVU1793
 5283 0116 02F8010B 		strb	r0, [r2], #1
 5284              		.loc 1 865 24 is_stmt 1 discriminator 3 view .LVU1794
 5285              	.LVL454:
 5286              		.loc 1 865 19 discriminator 3 view .LVU1795
 5287              		.loc 1 865 10 is_stmt 0 discriminator 3 view .LVU1796
 5288 011a F7D1     		bne	.L435
 5289              	.LVL455:
 5290              	.L432:
 866:mp3.c         ****          //lcd_printf(1,10,"Tttle: %s ",ID3V1_Buf.Title);
 867:mp3.c         ****          //lcd_printf(1,12,"Artist: %s ",ID3V1_Buf.Artist);
 868:mp3.c         ****          //lcd_printf(1,14,"Album: %s ",ID3V1_Buf.Album);
 869:mp3.c         ****       }
 870:mp3.c         ****       f_lseek(&fsrc,0);
 5291              		.loc 1 870 7 is_stmt 1 view .LVU1797
 5292 011c 0021     		movs	r1, #0
 5293 011e 0448     		ldr	r0, .L439+8
 5294 0120 FFF7FEFF 		bl	f_lseek
 5295              	.LVL456:
 871:mp3.c         **** }
 5296              		.loc 1 871 1 is_stmt 0 view .LVU1798
 5297 0124 20B0     		add	sp, sp, #128
 5298              		.cfi_def_cfa_offset 8
 5299              		@ sp needed
 5300 0126 10BD     		pop	{r4, pc}
 5301              	.L440:
 5302              		.align	2
 5303              	.L439:
 5304 0128 00000000 		.word	.LC5
 5305 012c 26000000 		.word	.LC6
 5306 0130 00000000 		.word	fsrc
 5307 0134 00000000 		.word	br
 5308 0138 03000000 		.word	ID3V1_Buf+3
 5309 013c 21000000 		.word	ID3V1_Buf+33
 5310 0140 3F000000 		.word	ID3V1_Buf+63
 5311              		.cfi_endproc
 5312              	.LFE52:
 5314              		.section	.rodata.mp3_displayinit.str1.1,"aMS",%progbits,1
 5315              	.LC7:
 5316 0000 2532643A 		.ascii	"%2d: %s    \000"
 5316      20257320 
 5316      20202000 
 5317              		.section	.text.mp3_displayinit,"ax",%progbits
 5318              		.align	1
 5319              		.global	mp3_displayinit
 5320              		.syntax unified
 5321              		.thumb
 5322              		.thumb_func
 5323              		.fpu softvfp
 5325              	mp3_displayinit:
 5326              	.LFB53:
 872:mp3.c         **** 
 873:mp3.c         **** 
 874:mp3.c         **** void mp3_displayinit (void){
 5327              		.loc 1 874 28 is_stmt 1 view -0
 5328              		.cfi_startproc
 5329              		@ args = 0, pretend = 0, frame = 0
 5330              		@ frame_needed = 0, uses_anonymous_args = 0
 875:mp3.c         **** 	lcd_printf(1,1,"                              ");
 5331              		.loc 1 875 2 view .LVU1800
 874:mp3.c         **** 	lcd_printf(1,1,"                              ");
 5332              		.loc 1 874 28 is_stmt 0 view .LVU1801
 5333 0000 07B5     		push	{r0, r1, r2, lr}
 5334              		.cfi_def_cfa_offset 16
 5335              		.cfi_offset 14, -4
 5336              		.loc 1 875 2 view .LVU1802
 5337 0002 0121     		movs	r1, #1
 5338 0004 084A     		ldr	r2, .L442
 5339 0006 0846     		mov	r0, r1
 5340 0008 FFF7FEFF 		bl	lcd_printf
 5341              	.LVL457:
 876:mp3.c         ****       //lcd_printf(2,3,"MP3 Open %d Size %d ",music_number,fsrc.fsize);
 877:mp3.c         ****       lcd_printf(7,2,"%2d: %s    ",music_number,head->filename);
 5342              		.loc 1 877 7 is_stmt 1 view .LVU1803
 5343              		.loc 1 877 53 is_stmt 0 view .LVU1804
 5344 000c 074B     		ldr	r3, .L442+4
 5345              		.loc 1 877 7 view .LVU1805
 5346 000e 0221     		movs	r1, #2
 5347 0010 1B68     		ldr	r3, [r3]
 5348 0012 0720     		movs	r0, #7
 5349 0014 0093     		str	r3, [sp]
 5350 0016 064B     		ldr	r3, .L442+8
 5351 0018 064A     		ldr	r2, .L442+12
 5352 001a 1B88     		ldrh	r3, [r3]
 5353 001c FFF7FEFF 		bl	lcd_printf
 5354              	.LVL458:
 878:mp3.c         **** 	  
 879:mp3.c         **** }
 5355              		.loc 1 879 1 view .LVU1806
 5356 0020 03B0     		add	sp, sp, #12
 5357              		.cfi_def_cfa_offset 4
 5358              		@ sp needed
 5359 0022 5DF804FB 		ldr	pc, [sp], #4
 5360              	.L443:
 5361 0026 00BF     		.align	2
 5362              	.L442:
 5363 0028 26000000 		.word	.LC6
 5364 002c 00000000 		.word	head
 5365 0030 00000000 		.word	music_number
 5366 0034 00000000 		.word	.LC7
 5367              		.cfi_endproc
 5368              	.LFE53:
 5370              		.section	.text.play_next,"ax",%progbits
 5371              		.align	1
 5372              		.global	play_next
 5373              		.syntax unified
 5374              		.thumb
 5375              		.thumb_func
 5376              		.fpu softvfp
 5378              	play_next:
 5379              	.LFB55:
 880:mp3.c         **** 
 881:mp3.c         **** void mp3_init (void)
 882:mp3.c         **** {
 883:mp3.c         ****       SPI_configuration();
 884:mp3.c         ****       SD_init();
 885:mp3.c         ****       vs1003_init();
 886:mp3.c         ****       mp3_reset();
 887:mp3.c         ****       vs1003_soft_reset();
 888:mp3.c         ****       load_patch();
 889:mp3.c         ****       f_mount(0,&fs);
 890:mp3.c         ****       ftemp = find_music();
 891:mp3.c         ****       music_number = ftemp;
 892:mp3.c         ****       f_chdir("0:/Music");
 893:mp3.c         ****       bw = f_open(&fsrc,head->filename, FA_OPEN_EXISTING | FA_READ);
 894:mp3.c         ****       set_vs1003();
 895:mp3.c         ****       vs1003_sine_test();
 896:mp3.c         ****       play_prev();
 897:mp3.c         ****       //lcd_printf(2,3,"MP3 Open %d Size %d ",music_number,fsrc.fsize);
 898:mp3.c         ****       lcd_printf(7,2,"%2d: %s    ",music_number,head->filename);
 899:mp3.c         ****       //display_id3v1_tag();
 900:mp3.c         ****       new_play = 1;
 901:mp3.c         **** 	  
 902:mp3.c         **** }
 903:mp3.c         **** 
 904:mp3.c         **** 
 905:mp3.c         **** void play_next (void)
 906:mp3.c         **** {
 5380              		.loc 1 906 1 is_stmt 1 view -0
 5381              		.cfi_startproc
 5382              		@ args = 0, pretend = 0, frame = 0
 5383              		@ frame_needed = 0, uses_anonymous_args = 0
 907:mp3.c         ****       delay_ms(1000);
 5384              		.loc 1 907 7 view .LVU1808
 906:mp3.c         ****       delay_ms(1000);
 5385              		.loc 1 906 1 is_stmt 0 view .LVU1809
 5386 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 5387              		.cfi_def_cfa_offset 24
 5388              		.cfi_offset 4, -12
 5389              		.cfi_offset 5, -8
 5390              		.cfi_offset 14, -4
 908:mp3.c         ****      if ((music_number--) && (head != NULL)) {
 5391              		.loc 1 908 23 view .LVU1810
 5392 0002 224D     		ldr	r5, .L462
 907:mp3.c         ****       delay_ms(1000);
 5393              		.loc 1 907 7 view .LVU1811
 5394 0004 4FF47A70 		mov	r0, #1000
 5395 0008 FFF7FEFF 		bl	delay_ms
 5396              	.LVL459:
 5397              		.loc 1 908 6 is_stmt 1 view .LVU1812
 5398              		.loc 1 908 23 is_stmt 0 view .LVU1813
 5399 000c 2988     		ldrh	r1, [r5]
 5400 000e 4B1E     		subs	r3, r1, #1
 5401 0010 9BB2     		uxth	r3, r3
 5402 0012 2B80     		strh	r3, [r5]	@ movhi
 5403              		.loc 1 908 9 view .LVU1814
 5404 0014 0029     		cmp	r1, #0
 5405 0016 37D0     		beq	.L444
 5406              		.loc 1 908 36 discriminator 1 view .LVU1815
 5407 0018 1D4C     		ldr	r4, .L462+4
 5408 001a 2268     		ldr	r2, [r4]
 5409              		.loc 1 908 27 discriminator 1 view .LVU1816
 5410 001c 002A     		cmp	r2, #0
 5411 001e 33D0     		beq	.L444
 909:mp3.c         **** 	 if (music_number == 0) {
 5412              		.loc 1 909 3 is_stmt 1 view .LVU1817
 5413              		.loc 1 909 6 is_stmt 0 view .LVU1818
 5414 0020 5BB9     		cbnz	r3, .L446
 5415              	.L447:
 910:mp3.c         **** 	    while (head->back != NULL) head = head->back;
 5416              		.loc 1 910 12 is_stmt 1 discriminator 1 view .LVU1819
 5417 0022 1146     		mov	r1, r2
 5418              		.loc 1 910 17 is_stmt 0 discriminator 1 view .LVU1820
 5419 0024 D2F89C20 		ldr	r2, [r2, #156]
 5420              		.loc 1 910 12 discriminator 1 view .LVU1821
 5421 0028 2AB9     		cbnz	r2, .L451
 5422 002a 03B1     		cbz	r3, .L450
 5423 002c 2160     		str	r1, [r4]
 5424              	.L450:
 911:mp3.c         **** 	 }
 912:mp3.c         **** 	 if (music_number != 0) head = head->next;else music_number = ftemp;
 5425              		.loc 1 912 3 is_stmt 1 view .LVU1822
 5426              		.loc 1 912 49 view .LVU1823
 5427              		.loc 1 912 62 is_stmt 0 view .LVU1824
 5428 002e 194B     		ldr	r3, .L462+8
 5429 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5430 0032 2B80     		strh	r3, [r5]	@ movhi
 5431 0034 04E0     		b	.L449
 5432              	.L451:
 5433 0036 0123     		movs	r3, #1
 5434 0038 F3E7     		b	.L447
 5435              	.L446:
 5436              		.loc 1 912 3 is_stmt 1 view .LVU1825
 5437              		.loc 1 912 26 view .LVU1826
 5438              		.loc 1 912 31 is_stmt 0 view .LVU1827
 5439 003a D2F89830 		ldr	r3, [r2, #152]
 5440 003e 2360     		str	r3, [r4]
 5441              	.L449:
 5442              	.LBB315:
 5443              	.LBI315:
 905:mp3.c         **** {
 5444              		.loc 1 905 6 is_stmt 1 view .LVU1828
 5445              	.LBB316:
 913:mp3.c         **** 	 bw = f_open(&fsrc,head->filename, FA_OPEN_EXISTING | FA_READ);
 5446              		.loc 1 913 3 view .LVU1829
 5447              		.loc 1 913 8 is_stmt 0 view .LVU1830
 5448 0040 0122     		movs	r2, #1
 5449 0042 2168     		ldr	r1, [r4]
 5450 0044 1448     		ldr	r0, .L462+12
 5451 0046 FFF7FEFF 		bl	f_open
 5452              	.LVL460:
 914:mp3.c         **** 	 datasize = 0;
 5453              		.loc 1 914 12 view .LVU1831
 5454 004a 0021     		movs	r1, #0
 915:mp3.c         **** 	 seek_value = 0;
 916:mp3.c         **** 	 new_play = 1;
 5455              		.loc 1 916 12 view .LVU1832
 5456 004c 0122     		movs	r2, #1
 913:mp3.c         **** 	 datasize = 0;
 5457              		.loc 1 913 6 view .LVU1833
 5458 004e 134B     		ldr	r3, .L462+16
 913:mp3.c         **** 	 datasize = 0;
 5459              		.loc 1 913 8 view .LVU1834
 5460 0050 1860     		str	r0, [r3]
 914:mp3.c         **** 	 datasize = 0;
 5461              		.loc 1 914 3 is_stmt 1 view .LVU1835
 914:mp3.c         **** 	 datasize = 0;
 5462              		.loc 1 914 12 is_stmt 0 view .LVU1836
 5463 0052 134B     		ldr	r3, .L462+20
 917:mp3.c         ****          buffer_read = 0;
 918:mp3.c         ****          fdx = 0;
 919:mp3.c         ****          f_kbps = 0xffff;
 920:mp3.c         ****          memset((char *)buffer,0,1024);
 5464              		.loc 1 920 10 view .LVU1837
 5465 0054 1348     		ldr	r0, .L462+24
 914:mp3.c         **** 	 seek_value = 0;
 5466              		.loc 1 914 12 view .LVU1838
 5467 0056 1960     		str	r1, [r3]
 915:mp3.c         **** 	 new_play = 1;
 5468              		.loc 1 915 3 is_stmt 1 view .LVU1839
 915:mp3.c         **** 	 new_play = 1;
 5469              		.loc 1 915 14 is_stmt 0 view .LVU1840
 5470 0058 134B     		ldr	r3, .L462+28
 5471 005a 1960     		str	r1, [r3]
 916:mp3.c         ****          buffer_read = 0;
 5472              		.loc 1 916 3 is_stmt 1 view .LVU1841
 916:mp3.c         ****          buffer_read = 0;
 5473              		.loc 1 916 12 is_stmt 0 view .LVU1842
 5474 005c 134B     		ldr	r3, .L462+32
 5475 005e 1A70     		strb	r2, [r3]
 917:mp3.c         ****          fdx = 0;
 5476              		.loc 1 917 10 is_stmt 1 view .LVU1843
 919:mp3.c         ****          memset((char *)buffer,0,1024);
 5477              		.loc 1 919 17 is_stmt 0 view .LVU1844
 5478 0060 4FF6FF72 		movw	r2, #65535
 917:mp3.c         ****          fdx = 0;
 5479              		.loc 1 917 22 view .LVU1845
 5480 0064 124B     		ldr	r3, .L462+36
 5481 0066 1970     		strb	r1, [r3]
 918:mp3.c         ****          f_kbps = 0xffff;
 5482              		.loc 1 918 10 is_stmt 1 view .LVU1846
 918:mp3.c         ****          f_kbps = 0xffff;
 5483              		.loc 1 918 14 is_stmt 0 view .LVU1847
 5484 0068 124B     		ldr	r3, .L462+40
 5485 006a 1970     		strb	r1, [r3]
 919:mp3.c         ****          memset((char *)buffer,0,1024);
 5486              		.loc 1 919 10 is_stmt 1 view .LVU1848
 919:mp3.c         ****          memset((char *)buffer,0,1024);
 5487              		.loc 1 919 17 is_stmt 0 view .LVU1849
 5488 006c 124B     		ldr	r3, .L462+44
 5489 006e 1A80     		strh	r2, [r3]	@ movhi
 5490              		.loc 1 920 10 is_stmt 1 view .LVU1850
 5491 0070 4FF48062 		mov	r2, #1024
 5492 0074 FFF7FEFF 		bl	memset
 5493              	.LVL461:
 921:mp3.c         **** 	 //lcd_printf(2,3,"MP3 Open %d Size %d ",music_number,fsrc.fsize);
 922:mp3.c         **** 	 lcd_printf(7,2,"%2d: %s    ",music_number,head->filename);
 5494              		.loc 1 922 3 view .LVU1851
 5495 0078 2368     		ldr	r3, [r4]
 5496 007a 0221     		movs	r1, #2
 5497 007c 0093     		str	r3, [sp]
 5498 007e 0720     		movs	r0, #7
 5499 0080 2B88     		ldrh	r3, [r5]
 5500 0082 0E4A     		ldr	r2, .L462+48
 5501 0084 FFF7FEFF 		bl	lcd_printf
 5502              	.LVL462:
 5503              	.L444:
 5504              	.LBE316:
 5505              	.LBE315:
 923:mp3.c         **** 	 //display_id3v1_tag();
 924:mp3.c         ****       }
 925:mp3.c         **** }
 5506              		.loc 1 925 1 is_stmt 0 view .LVU1852
 5507 0088 03B0     		add	sp, sp, #12
 5508              		.cfi_def_cfa_offset 12
 5509              		@ sp needed
 5510 008a 30BD     		pop	{r4, r5, pc}
 5511              	.L463:
 5512              		.align	2
 5513              	.L462:
 5514 008c 00000000 		.word	music_number
 5515 0090 00000000 		.word	head
 5516 0094 00000000 		.word	ftemp
 5517 0098 00000000 		.word	fsrc
 5518 009c 00000000 		.word	bw
 5519 00a0 00000000 		.word	.LANCHOR16
 5520 00a4 00000000 		.word	buffer
 5521 00a8 00000000 		.word	seek_value
 5522 00ac 00000000 		.word	new_play
 5523 00b0 00000000 		.word	buffer_read
 5524 00b4 00000000 		.word	fdx
 5525 00b8 00000000 		.word	.LANCHOR0
 5526 00bc 00000000 		.word	.LC7
 5527              		.cfi_endproc
 5528              	.LFE55:
 5530              		.section	.text.play_prev,"ax",%progbits
 5531              		.align	1
 5532              		.global	play_prev
 5533              		.syntax unified
 5534              		.thumb
 5535              		.thumb_func
 5536              		.fpu softvfp
 5538              	play_prev:
 5539              	.LFB56:
 926:mp3.c         **** 
 927:mp3.c         **** 
 928:mp3.c         **** void play_prev (void)
 929:mp3.c         **** {
 5540              		.loc 1 929 1 is_stmt 1 view -0
 5541              		.cfi_startproc
 5542              		@ args = 0, pretend = 0, frame = 0
 5543              		@ frame_needed = 0, uses_anonymous_args = 0
 930:mp3.c         ****       music_number++;
 5544              		.loc 1 930 7 view .LVU1854
 929:mp3.c         ****       music_number++;
 5545              		.loc 1 929 1 is_stmt 0 view .LVU1855
 5546 0000 70B5     		push	{r4, r5, r6, lr}
 5547              		.cfi_def_cfa_offset 16
 5548              		.cfi_offset 4, -16
 5549              		.cfi_offset 5, -12
 5550              		.cfi_offset 6, -8
 5551              		.cfi_offset 14, -4
 5552              		.loc 1 930 19 view .LVU1856
 5553 0002 1B4C     		ldr	r4, .L470
 931:mp3.c         ****       if (music_number == ftemp + 1) {
 5554              		.loc 1 931 33 view .LVU1857
 5555 0004 1B4E     		ldr	r6, .L470+4
 930:mp3.c         ****       music_number++;
 5556              		.loc 1 930 19 view .LVU1858
 5557 0006 2388     		ldrh	r3, [r4]
 5558              		.loc 1 931 33 view .LVU1859
 5559 0008 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 930:mp3.c         ****       music_number++;
 5560              		.loc 1 930 19 view .LVU1860
 5561 000a 0133     		adds	r3, r3, #1
 5562 000c 9BB2     		uxth	r3, r3
 5563              		.loc 1 931 33 view .LVU1861
 5564 000e 511C     		adds	r1, r2, #1
 5565              		.loc 1 931 10 view .LVU1862
 5566 0010 8B42     		cmp	r3, r1
 5567 0012 194D     		ldr	r5, .L470+8
 930:mp3.c         ****       music_number++;
 5568              		.loc 1 930 19 view .LVU1863
 5569 0014 2380     		strh	r3, [r4]	@ movhi
 5570              		.loc 1 931 7 is_stmt 1 view .LVU1864
 5571              		.loc 1 931 10 is_stmt 0 view .LVU1865
 5572 0016 11D1     		bne	.L465
 5573 0018 2B68     		ldr	r3, [r5]
 5574              	.L466:
 932:mp3.c         ****          while(head->next != NULL) head = head->next;
 5575              		.loc 1 932 15 is_stmt 1 discriminator 1 view .LVU1866
 5576 001a 1A46     		mov	r2, r3
 5577              		.loc 1 932 20 is_stmt 0 discriminator 1 view .LVU1867
 5578 001c D3F89830 		ldr	r3, [r3, #152]
 5579              		.loc 1 932 15 discriminator 1 view .LVU1868
 5580 0020 002B     		cmp	r3, #0
 5581 0022 FAD1     		bne	.L466
 933:mp3.c         ****          head = head->back;
 5582              		.loc 1 933 10 is_stmt 1 view .LVU1869
 5583              		.loc 1 933 15 is_stmt 0 view .LVU1870
 5584 0024 D2F89C30 		ldr	r3, [r2, #156]
 5585 0028 2B60     		str	r3, [r5]
 934:mp3.c         ****          music_number = 1;
 5586              		.loc 1 934 10 is_stmt 1 view .LVU1871
 5587              		.loc 1 934 23 is_stmt 0 view .LVU1872
 5588 002a 0123     		movs	r3, #1
 5589 002c 2380     		strh	r3, [r4]	@ movhi
 5590              	.L467:
 935:mp3.c         ****       } else {
 936:mp3.c         ****          if (music_number != ftemp) {
 937:mp3.c         ****             head=head->back;
 938:mp3.c         ****             head=head->back;
 939:mp3.c         ****          } else {
 940:mp3.c         ****             mp3_flag = 0;
 941:mp3.c         ****             datasize = 0;
 942:mp3.c         ****             ftemp = find_music();
 943:mp3.c         ****             music_number = ftemp;
 944:mp3.c         ****             bw = f_open(&fsrc,head->filename, FA_OPEN_EXISTING | FA_READ);
 945:mp3.c         ****          }
 946:mp3.c         ****       }
 947:mp3.c         ****       music_number++;
 5591              		.loc 1 947 7 is_stmt 1 view .LVU1873
 5592              		.loc 1 947 19 is_stmt 0 view .LVU1874
 5593 002e 2388     		ldrh	r3, [r4]
 5594 0030 0133     		adds	r3, r3, #1
 5595 0032 2380     		strh	r3, [r4]	@ movhi
 948:mp3.c         ****       play_next();
 5596              		.loc 1 948 7 is_stmt 1 view .LVU1875
 949:mp3.c         **** }
 5597              		.loc 1 949 1 is_stmt 0 view .LVU1876
 5598 0034 BDE87040 		pop	{r4, r5, r6, lr}
 5599              		.cfi_remember_state
 5600              		.cfi_restore 14
 5601              		.cfi_restore 6
 5602              		.cfi_restore 5
 5603              		.cfi_restore 4
 5604              		.cfi_def_cfa_offset 0
 948:mp3.c         ****       play_next();
 5605              		.loc 1 948 7 view .LVU1877
 5606 0038 FFF7FEBF 		b	play_next
 5607              	.LVL463:
 5608              	.L465:
 5609              		.cfi_restore_state
 936:mp3.c         ****             head=head->back;
 5610              		.loc 1 936 10 is_stmt 1 view .LVU1878
 936:mp3.c         ****             head=head->back;
 5611              		.loc 1 936 13 is_stmt 0 view .LVU1879
 5612 003c 9342     		cmp	r3, r2
 5613 003e 06D0     		beq	.L468
 937:mp3.c         ****             head=head->back;
 5614              		.loc 1 937 13 is_stmt 1 view .LVU1880
 938:mp3.c         ****          } else {
 5615              		.loc 1 938 13 view .LVU1881
 937:mp3.c         ****             head=head->back;
 5616              		.loc 1 937 22 is_stmt 0 view .LVU1882
 5617 0040 2B68     		ldr	r3, [r5]
 938:mp3.c         ****          } else {
 5618              		.loc 1 938 22 view .LVU1883
 5619 0042 D3F89C30 		ldr	r3, [r3, #156]
 938:mp3.c         ****          } else {
 5620              		.loc 1 938 17 view .LVU1884
 5621 0046 D3F89C30 		ldr	r3, [r3, #156]
 5622 004a 2B60     		str	r3, [r5]
 5623 004c EFE7     		b	.L467
 5624              	.L468:
 940:mp3.c         ****             datasize = 0;
 5625              		.loc 1 940 13 is_stmt 1 view .LVU1885
 940:mp3.c         ****             datasize = 0;
 5626              		.loc 1 940 22 is_stmt 0 view .LVU1886
 5627 004e 0023     		movs	r3, #0
 5628 0050 0A4A     		ldr	r2, .L470+12
 5629 0052 1370     		strb	r3, [r2]
 941:mp3.c         ****             ftemp = find_music();
 5630              		.loc 1 941 13 is_stmt 1 view .LVU1887
 941:mp3.c         ****             ftemp = find_music();
 5631              		.loc 1 941 22 is_stmt 0 view .LVU1888
 5632 0054 0A4A     		ldr	r2, .L470+16
 5633 0056 1360     		str	r3, [r2]
 942:mp3.c         ****             music_number = ftemp;
 5634              		.loc 1 942 13 is_stmt 1 view .LVU1889
 942:mp3.c         ****             music_number = ftemp;
 5635              		.loc 1 942 21 is_stmt 0 view .LVU1890
 5636 0058 FFF7FEFF 		bl	find_music
 5637              	.LVL464:
 944:mp3.c         ****          }
 5638              		.loc 1 944 18 view .LVU1891
 5639 005c 0122     		movs	r2, #1
 942:mp3.c         ****             music_number = ftemp;
 5640              		.loc 1 942 19 view .LVU1892
 5641 005e 3070     		strb	r0, [r6]
 943:mp3.c         ****             bw = f_open(&fsrc,head->filename, FA_OPEN_EXISTING | FA_READ);
 5642              		.loc 1 943 13 is_stmt 1 view .LVU1893
 943:mp3.c         ****             bw = f_open(&fsrc,head->filename, FA_OPEN_EXISTING | FA_READ);
 5643              		.loc 1 943 26 is_stmt 0 view .LVU1894
 5644 0060 2080     		strh	r0, [r4]	@ movhi
 944:mp3.c         ****          }
 5645              		.loc 1 944 13 is_stmt 1 view .LVU1895
 944:mp3.c         ****          }
 5646              		.loc 1 944 18 is_stmt 0 view .LVU1896
 5647 0062 2968     		ldr	r1, [r5]
 5648 0064 0748     		ldr	r0, .L470+20
 5649 0066 FFF7FEFF 		bl	f_open
 5650              	.LVL465:
 944:mp3.c         ****          }
 5651              		.loc 1 944 16 view .LVU1897
 5652 006a 074B     		ldr	r3, .L470+24
 944:mp3.c         ****          }
 5653              		.loc 1 944 18 view .LVU1898
 5654 006c 1860     		str	r0, [r3]
 5655 006e DEE7     		b	.L467
 5656              	.L471:
 5657              		.align	2
 5658              	.L470:
 5659 0070 00000000 		.word	music_number
 5660 0074 00000000 		.word	ftemp
 5661 0078 00000000 		.word	head
 5662 007c 00000000 		.word	mp3_flag
 5663 0080 00000000 		.word	.LANCHOR16
 5664 0084 00000000 		.word	fsrc
 5665 0088 00000000 		.word	bw
 5666              		.cfi_endproc
 5667              	.LFE56:
 5669              		.section	.text.mp3_init,"ax",%progbits
 5670              		.align	1
 5671              		.global	mp3_init
 5672              		.syntax unified
 5673              		.thumb
 5674              		.thumb_func
 5675              		.fpu softvfp
 5677              	mp3_init:
 5678              	.LFB54:
 882:mp3.c         ****       SPI_configuration();
 5679              		.loc 1 882 1 is_stmt 1 view -0
 5680              		.cfi_startproc
 5681              		@ args = 0, pretend = 0, frame = 0
 5682              		@ frame_needed = 0, uses_anonymous_args = 0
 883:mp3.c         ****       SD_init();
 5683              		.loc 1 883 7 view .LVU1900
 882:mp3.c         ****       SPI_configuration();
 5684              		.loc 1 882 1 is_stmt 0 view .LVU1901
 5685 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 5686              		.cfi_def_cfa_offset 24
 5687              		.cfi_offset 4, -12
 5688              		.cfi_offset 5, -8
 5689              		.cfi_offset 14, -4
 883:mp3.c         ****       SD_init();
 5690              		.loc 1 883 7 view .LVU1902
 5691 0002 FFF7FEFF 		bl	SPI_configuration
 5692              	.LVL466:
 884:mp3.c         ****       vs1003_init();
 5693              		.loc 1 884 7 is_stmt 1 view .LVU1903
 5694 0006 FFF7FEFF 		bl	SD_init
 5695              	.LVL467:
 885:mp3.c         ****       mp3_reset();
 5696              		.loc 1 885 7 view .LVU1904
 5697 000a FFF7FEFF 		bl	vs1003_init
 5698              	.LVL468:
 886:mp3.c         ****       vs1003_soft_reset();
 5699              		.loc 1 886 7 view .LVU1905
 5700 000e FFF7FEFF 		bl	mp3_reset
 5701              	.LVL469:
 887:mp3.c         ****       load_patch();
 5702              		.loc 1 887 7 view .LVU1906
 5703 0012 FFF7FEFF 		bl	vs1003_soft_reset
 5704              	.LVL470:
 888:mp3.c         ****       f_mount(0,&fs);
 5705              		.loc 1 888 7 view .LVU1907
 5706 0016 FFF7FEFF 		bl	load_patch
 5707              	.LVL471:
 889:mp3.c         ****       ftemp = find_music();
 5708              		.loc 1 889 7 view .LVU1908
 5709 001a 1449     		ldr	r1, .L473
 5710 001c 0020     		movs	r0, #0
 5711 001e FFF7FEFF 		bl	f_mount
 5712              	.LVL472:
 890:mp3.c         ****       music_number = ftemp;
 5713              		.loc 1 890 7 view .LVU1909
 890:mp3.c         ****       music_number = ftemp;
 5714              		.loc 1 890 15 is_stmt 0 view .LVU1910
 5715 0022 FFF7FEFF 		bl	find_music
 5716              	.LVL473:
 891:mp3.c         ****       f_chdir("0:/Music");
 5717              		.loc 1 891 20 view .LVU1911
 5718 0026 124C     		ldr	r4, .L473+4
 890:mp3.c         ****       music_number = ftemp;
 5719              		.loc 1 890 13 view .LVU1912
 5720 0028 124B     		ldr	r3, .L473+8
 893:mp3.c         ****       set_vs1003();
 5721              		.loc 1 893 29 view .LVU1913
 5722 002a 134D     		ldr	r5, .L473+12
 890:mp3.c         ****       music_number = ftemp;
 5723              		.loc 1 890 13 view .LVU1914
 5724 002c 1870     		strb	r0, [r3]
 891:mp3.c         ****       f_chdir("0:/Music");
 5725              		.loc 1 891 7 is_stmt 1 view .LVU1915
 891:mp3.c         ****       f_chdir("0:/Music");
 5726              		.loc 1 891 20 is_stmt 0 view .LVU1916
 5727 002e 2080     		strh	r0, [r4]	@ movhi
 892:mp3.c         ****       bw = f_open(&fsrc,head->filename, FA_OPEN_EXISTING | FA_READ);
 5728              		.loc 1 892 7 is_stmt 1 view .LVU1917
 5729 0030 1248     		ldr	r0, .L473+16
 5730 0032 FFF7FEFF 		bl	f_chdir
 5731              	.LVL474:
 893:mp3.c         ****       set_vs1003();
 5732              		.loc 1 893 7 view .LVU1918
 893:mp3.c         ****       set_vs1003();
 5733              		.loc 1 893 12 is_stmt 0 view .LVU1919
 5734 0036 2968     		ldr	r1, [r5]
 5735 0038 0122     		movs	r2, #1
 5736 003a 1148     		ldr	r0, .L473+20
 5737 003c FFF7FEFF 		bl	f_open
 5738              	.LVL475:
 893:mp3.c         ****       set_vs1003();
 5739              		.loc 1 893 10 view .LVU1920
 5740 0040 104B     		ldr	r3, .L473+24
 893:mp3.c         ****       set_vs1003();
 5741              		.loc 1 893 12 view .LVU1921
 5742 0042 1860     		str	r0, [r3]
 894:mp3.c         ****       vs1003_sine_test();
 5743              		.loc 1 894 7 is_stmt 1 view .LVU1922
 5744 0044 FFF7FEFF 		bl	set_vs1003
 5745              	.LVL476:
 895:mp3.c         ****       play_prev();
 5746              		.loc 1 895 7 view .LVU1923
 5747 0048 FFF7FEFF 		bl	vs1003_sine_test
 5748              	.LVL477:
 896:mp3.c         ****       //lcd_printf(2,3,"MP3 Open %d Size %d ",music_number,fsrc.fsize);
 5749              		.loc 1 896 7 view .LVU1924
 5750 004c FFF7FEFF 		bl	play_prev
 5751              	.LVL478:
 898:mp3.c         ****       //display_id3v1_tag();
 5752              		.loc 1 898 7 view .LVU1925
 5753 0050 2B68     		ldr	r3, [r5]
 5754 0052 0221     		movs	r1, #2
 5755 0054 0093     		str	r3, [sp]
 5756 0056 0720     		movs	r0, #7
 5757 0058 2388     		ldrh	r3, [r4]
 5758 005a 0B4A     		ldr	r2, .L473+28
 5759 005c FFF7FEFF 		bl	lcd_printf
 5760              	.LVL479:
 900:mp3.c         **** 	  
 5761              		.loc 1 900 7 view .LVU1926
 900:mp3.c         **** 	  
 5762              		.loc 1 900 16 is_stmt 0 view .LVU1927
 5763 0060 0122     		movs	r2, #1
 5764 0062 0A4B     		ldr	r3, .L473+32
 5765 0064 1A70     		strb	r2, [r3]
 902:mp3.c         **** 
 5766              		.loc 1 902 1 view .LVU1928
 5767 0066 03B0     		add	sp, sp, #12
 5768              		.cfi_def_cfa_offset 12
 5769              		@ sp needed
 5770 0068 30BD     		pop	{r4, r5, pc}
 5771              	.L474:
 5772 006a 00BF     		.align	2
 5773              	.L473:
 5774 006c 00000000 		.word	fs
 5775 0070 00000000 		.word	music_number
 5776 0074 00000000 		.word	ftemp
 5777 0078 00000000 		.word	head
 5778 007c 00000000 		.word	.LC1
 5779 0080 00000000 		.word	fsrc
 5780 0084 00000000 		.word	bw
 5781 0088 00000000 		.word	.LC7
 5782 008c 00000000 		.word	new_play
 5783              		.cfi_endproc
 5784              	.LFE54:
 5786              		.section	.rodata.show_playlist.str1.1,"aMS",%progbits,1
 5787              	.LC8:
 5788 0000 20202020 		.ascii	"                         \000"
 5788      20202020 
 5788      20202020 
 5788      20202020 
 5788      20202020 
 5789              	.LC9:
 5790 001a 4E756D62 		.ascii	"Number of Music : %d\000"
 5790      6572206F 
 5790      66204D75 
 5790      73696320 
 5790      3A202564 
 5791              	.LC10:
 5792 002f 2564203A 		.ascii	"%d : %s \000"
 5792      20257320 
 5792      00
 5793              		.section	.text.show_playlist,"ax",%progbits
 5794              		.align	1
 5795              		.global	show_playlist
 5796              		.syntax unified
 5797              		.thumb
 5798              		.thumb_func
 5799              		.fpu softvfp
 5801              	show_playlist:
 5802              	.LFB57:
 950:mp3.c         **** 
 951:mp3.c         **** void show_playlist(){
 5803              		.loc 1 951 21 is_stmt 1 view -0
 5804              		.cfi_startproc
 5805              		@ args = 0, pretend = 0, frame = 0
 5806              		@ frame_needed = 0, uses_anonymous_args = 0
 952:mp3.c         **** 	int i=2;
 5807              		.loc 1 952 2 view .LVU1930
 5808              	.LVL480:
 953:mp3.c         **** 	int nMusic=1;
 5809              		.loc 1 953 2 view .LVU1931
 954:mp3.c         **** 	
 955:mp3.c         **** 	mp3_init();
 5810              		.loc 1 955 2 view .LVU1932
 951:mp3.c         **** 	int i=2;
 5811              		.loc 1 951 21 is_stmt 0 view .LVU1933
 5812 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 5813              		.cfi_def_cfa_offset 24
 5814              		.cfi_offset 4, -16
 5815              		.cfi_offset 5, -12
 5816              		.cfi_offset 6, -8
 5817              		.cfi_offset 14, -4
 5818              		.loc 1 955 2 view .LVU1934
 5819 0002 FFF7FEFF 		bl	mp3_init
 5820              	.LVL481:
 956:mp3.c         **** 	lcd_printf(0,2,"                         ");
 5821              		.loc 1 956 2 is_stmt 1 view .LVU1935
 5822 0006 0221     		movs	r1, #2
 5823 0008 0020     		movs	r0, #0
 5824 000a 124A     		ldr	r2, .L478
 5825 000c FFF7FEFF 		bl	lcd_printf
 5826              	.LVL482:
 957:mp3.c         **** 	lcd_printf(5,0,"Number of Music : %d",ftemp);
 5827              		.loc 1 957 2 view .LVU1936
 5828 0010 114B     		ldr	r3, .L478+4
 5829 0012 0021     		movs	r1, #0
 5830 0014 0520     		movs	r0, #5
 5831 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5832 0018 104A     		ldr	r2, .L478+8
 5833 001a FFF7FEFF 		bl	lcd_printf
 5834              	.LVL483:
 958:mp3.c         **** 	
 959:mp3.c         **** 	while(head->back!=NULL){
 5835              		.loc 1 959 2 view .LVU1937
 953:mp3.c         **** 	
 5836              		.loc 1 953 6 is_stmt 0 view .LVU1938
 5837 001e 0124     		movs	r4, #1
 5838              		.loc 1 959 12 view .LVU1939
 5839 0020 0F4D     		ldr	r5, .L478+12
 960:mp3.c         **** 		lcd_printf(4,i,"%d : %s ",nMusic,head->filename);
 5840              		.loc 1 960 3 view .LVU1940
 5841 0022 104E     		ldr	r6, .L478+16
 5842              	.LVL484:
 5843              	.L476:
 959:mp3.c         **** 		lcd_printf(4,i,"%d : %s ",nMusic,head->filename);
 5844              		.loc 1 959 7 is_stmt 1 view .LVU1941
 959:mp3.c         **** 		lcd_printf(4,i,"%d : %s ",nMusic,head->filename);
 5845              		.loc 1 959 12 is_stmt 0 view .LVU1942
 5846 0024 2B68     		ldr	r3, [r5]
 5847 0026 6100     		lsls	r1, r4, #1
 5848              	.LVL485:
 959:mp3.c         **** 		lcd_printf(4,i,"%d : %s ",nMusic,head->filename);
 5849              		.loc 1 959 7 view .LVU1943
 5850 0028 D3F89C00 		ldr	r0, [r3, #156]
 5851 002c 89B2     		uxth	r1, r1
 5852              	.LVL486:
 5853              		.loc 1 960 3 view .LVU1944
 5854 002e 0093     		str	r3, [sp]
 5855 0030 2346     		mov	r3, r4
 959:mp3.c         **** 		lcd_printf(4,i,"%d : %s ",nMusic,head->filename);
 5856              		.loc 1 959 7 view .LVU1945
 5857 0032 28B9     		cbnz	r0, .L477
 961:mp3.c         **** 		head=head->back;
 962:mp3.c         **** 		i+=2;
 963:mp3.c         **** 		nMusic++;
 964:mp3.c         **** 	}
 965:mp3.c         **** 	lcd_printf(4,i,"%d : %s ",nMusic,head->filename);
 5858              		.loc 1 965 2 is_stmt 1 view .LVU1946
 5859 0034 0420     		movs	r0, #4
 5860 0036 0B4A     		ldr	r2, .L478+16
 5861 0038 FFF7FEFF 		bl	lcd_printf
 5862              	.LVL487:
 966:mp3.c         **** }
 5863              		.loc 1 966 1 is_stmt 0 view .LVU1947
 5864 003c 02B0     		add	sp, sp, #8
 5865              		.cfi_remember_state
 5866              		.cfi_def_cfa_offset 16
 5867              		@ sp needed
 5868 003e 70BD     		pop	{r4, r5, r6, pc}
 5869              	.LVL488:
 5870              	.L477:
 5871              		.cfi_restore_state
 960:mp3.c         **** 		head=head->back;
 5872              		.loc 1 960 3 is_stmt 1 view .LVU1948
 5873 0040 3246     		mov	r2, r6
 5874 0042 0420     		movs	r0, #4
 5875 0044 FFF7FEFF 		bl	lcd_printf
 5876              	.LVL489:
 961:mp3.c         **** 		head=head->back;
 5877              		.loc 1 961 3 view .LVU1949
 961:mp3.c         **** 		head=head->back;
 5878              		.loc 1 961 12 is_stmt 0 view .LVU1950
 5879 0048 2B68     		ldr	r3, [r5]
 963:mp3.c         **** 	}
 5880              		.loc 1 963 9 view .LVU1951
 5881 004a 0134     		adds	r4, r4, #1
 5882              	.LVL490:
 961:mp3.c         **** 		i+=2;
 5883              		.loc 1 961 7 view .LVU1952
 5884 004c D3F89C30 		ldr	r3, [r3, #156]
 5885 0050 2B60     		str	r3, [r5]
 962:mp3.c         **** 		nMusic++;
 5886              		.loc 1 962 3 is_stmt 1 view .LVU1953
 5887              	.LVL491:
 963:mp3.c         **** 	}
 5888              		.loc 1 963 3 view .LVU1954
 963:mp3.c         **** 	}
 5889              		.loc 1 963 3 is_stmt 0 view .LVU1955
 5890 0052 E7E7     		b	.L476
 5891              	.L479:
 5892              		.align	2
 5893              	.L478:
 5894 0054 00000000 		.word	.LC8
 5895 0058 00000000 		.word	ftemp
 5896 005c 1A000000 		.word	.LC9
 5897 0060 00000000 		.word	head
 5898 0064 2F000000 		.word	.LC10
 5899              		.cfi_endproc
 5900              	.LFE57:
 5902              		.section	.text.mp3_display,"ax",%progbits
 5903              		.align	1
 5904              		.global	mp3_display
 5905              		.syntax unified
 5906              		.thumb
 5907              		.thumb_func
 5908              		.fpu softvfp
 5910              	mp3_display:
 5911              	.LFB58:
 967:mp3.c         **** 
 968:mp3.c         **** 
 969:mp3.c         **** void mp3_display (void)
 970:mp3.c         **** {
 5912              		.loc 1 970 1 is_stmt 1 view -0
 5913              		.cfi_startproc
 5914              		@ args = 0, pretend = 0, frame = 0
 5915              		@ frame_needed = 0, uses_anonymous_args = 0
 5916              		@ link register save eliminated.
 971:mp3.c         ****       mp3_prog_bar(datasize,fsrc.fsize);
 5917              		.loc 1 971 7 view .LVU1957
 5918 0000 024B     		ldr	r3, .L481
 5919 0002 D968     		ldr	r1, [r3, #12]
 5920 0004 024B     		ldr	r3, .L481+4
 5921 0006 1868     		ldr	r0, [r3]
 5922 0008 FFF7FEBF 		b	mp3_prog_bar
 5923              	.LVL492:
 5924              	.L482:
 5925              		.align	2
 5926              	.L481:
 5927 000c 00000000 		.word	fsrc
 5928 0010 00000000 		.word	.LANCHOR16
 5929              		.cfi_endproc
 5930              	.LFE58:
 5932              		.section	.text.mp3_seek,"ax",%progbits
 5933              		.align	1
 5934              		.global	mp3_seek
 5935              		.syntax unified
 5936              		.thumb
 5937              		.thumb_func
 5938              		.fpu softvfp
 5940              	mp3_seek:
 5941              	.LVL493:
 5942              	.LFB59:
 972:mp3.c         **** }
 973:mp3.c         **** 
 974:mp3.c         **** 
 975:mp3.c         **** void mp3_seek (unsigned char sw)
 976:mp3.c         **** {
 5943              		.loc 1 976 1 view -0
 5944              		.cfi_startproc
 5945              		@ args = 0, pretend = 0, frame = 0
 5946              		@ frame_needed = 0, uses_anonymous_args = 0
 5947              		@ link register save eliminated.
 977:mp3.c         ****        if (sw) {
 5948              		.loc 1 977 8 view .LVU1959
 5949 0000 0A4A     		ldr	r2, .L489
 5950 0002 1368     		ldr	r3, [r2]
 5951              		.loc 1 977 11 is_stmt 0 view .LVU1960
 5952 0004 58B1     		cbz	r0, .L484
 978:mp3.c         ****        	  seek_value += 8192;
 5953              		.loc 1 978 11 is_stmt 1 view .LVU1961
 979:mp3.c         ****        	  if (seek_value >= (int)fsrc.fsize) seek_value = (int)fsrc.fsize;
 5954              		.loc 1 979 38 is_stmt 0 view .LVU1962
 5955 0006 0A49     		ldr	r1, .L489+4
 978:mp3.c         ****        	  seek_value += 8192;
 5956              		.loc 1 978 22 view .LVU1963
 5957 0008 03F50053 		add	r3, r3, #8192
 5958              		.loc 1 979 11 is_stmt 1 view .LVU1964
 5959              		.loc 1 979 29 is_stmt 0 view .LVU1965
 5960 000c C968     		ldr	r1, [r1, #12]
 5961              		.loc 1 979 57 view .LVU1966
 5962 000e 9942     		cmp	r1, r3
 5963 0010 D4BF     		ite	le
 5964 0012 1160     		strle	r1, [r2]
 5965 0014 1360     		strgt	r3, [r2]
 5966              	.L486:
 980:mp3.c         ****        } else {
 981:mp3.c         ****        	  seek_value -= 8192;
 982:mp3.c         ****        	  if (seek_value < 0) seek_value = 0;
 983:mp3.c         ****        }
 984:mp3.c         ****        f_lseek(&fsrc,seek_value);
 5967              		.loc 1 984 8 is_stmt 1 view .LVU1967
 5968 0016 1168     		ldr	r1, [r2]
 5969 0018 0548     		ldr	r0, .L489+4
 5970              	.LVL494:
 5971              		.loc 1 984 8 is_stmt 0 view .LVU1968
 5972 001a FFF7FEBF 		b	f_lseek
 5973              	.LVL495:
 5974              	.L484:
 981:mp3.c         ****        	  if (seek_value < 0) seek_value = 0;
 5975              		.loc 1 981 11 is_stmt 1 view .LVU1969
 982:mp3.c         ****        }
 5976              		.loc 1 982 11 view .LVU1970
 981:mp3.c         ****        	  if (seek_value < 0) seek_value = 0;
 5977              		.loc 1 981 22 is_stmt 0 view .LVU1971
 5978 001e B3F50053 		subs	r3, r3, #8192
 5979 0022 48BF     		it	mi
 5980 0024 0346     		movmi	r3, r0
 5981 0026 1360     		str	r3, [r2]
 5982 0028 F5E7     		b	.L486
 5983              	.L490:
 5984 002a 00BF     		.align	2
 5985              	.L489:
 5986 002c 00000000 		.word	seek_value
 5987 0030 00000000 		.word	fsrc
 5988              		.cfi_endproc
 5989              	.LFE59:
 5991              		.section	.text.mp3_play,"ax",%progbits
 5992              		.align	1
 5993              		.global	mp3_play
 5994              		.syntax unified
 5995              		.thumb
 5996              		.thumb_func
 5997              		.fpu softvfp
 5999              	mp3_play:
 6000              	.LFB60:
 985:mp3.c         **** }
 986:mp3.c         **** 
 987:mp3.c         **** 
 988:mp3.c         **** void mp3_play (void)
 989:mp3.c         **** {
 6001              		.loc 1 989 1 is_stmt 1 view -0
 6002              		.cfi_startproc
 6003              		@ args = 0, pretend = 0, frame = 0
 6004              		@ frame_needed = 0, uses_anonymous_args = 0
 990:mp3.c         ****       mp3_flag = 0;
 6005              		.loc 1 990 7 view .LVU1973
 6006              		.loc 1 990 16 is_stmt 0 view .LVU1974
 6007 0000 0022     		movs	r2, #0
 989:mp3.c         ****       mp3_flag = 0;
 6008              		.loc 1 989 1 view .LVU1975
 6009 0002 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 6010              		.cfi_def_cfa_offset 32
 6011              		.cfi_offset 4, -24
 6012              		.cfi_offset 5, -20
 6013              		.cfi_offset 6, -16
 6014              		.cfi_offset 7, -12
 6015              		.cfi_offset 8, -8
 6016              		.cfi_offset 14, -4
 6017              		.loc 1 990 16 view .LVU1976
 6018 0006 634B     		ldr	r3, .L544
 991:mp3.c         ****       if ((datasize >= fsrc.fsize) || (fsrc.fsize == 0)) mp3_flag = 1;
 6019              		.loc 1 991 28 view .LVU1977
 6020 0008 634E     		ldr	r6, .L544+4
 6021              		.loc 1 991 21 view .LVU1978
 6022 000a 644C     		ldr	r4, .L544+8
 990:mp3.c         ****       mp3_flag = 0;
 6023              		.loc 1 990 16 view .LVU1979
 6024 000c 1A70     		strb	r2, [r3]
 6025              		.loc 1 991 7 is_stmt 1 view .LVU1980
 6026              		.loc 1 991 10 is_stmt 0 view .LVU1981
 6027 000e 2168     		ldr	r1, [r4]
 6028              		.loc 1 991 28 view .LVU1982
 6029 0010 F268     		ldr	r2, [r6, #12]
 6030              		.loc 1 991 10 view .LVU1983
 6031 0012 8A42     		cmp	r2, r1
 6032 0014 01D9     		bls	.L492
 6033              		.loc 1 991 36 discriminator 2 view .LVU1984
 6034 0016 002A     		cmp	r2, #0
 6035 0018 3FD1     		bne	.L493
 6036              	.L492:
 6037              		.loc 1 991 58 is_stmt 1 discriminator 3 view .LVU1985
 6038              		.loc 1 991 67 is_stmt 0 discriminator 3 view .LVU1986
 6039 001a 0122     		movs	r2, #1
 6040 001c 1A70     		strb	r2, [r3]
 992:mp3.c         ****       if ((mp3_flag == 1) && (play_mp3)) {
 6041              		.loc 1 992 7 is_stmt 1 discriminator 3 view .LVU1987
 6042              		.loc 1 992 27 is_stmt 0 discriminator 3 view .LVU1988
 6043 001e 604A     		ldr	r2, .L544+12
 6044 0020 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6045 0022 002A     		cmp	r2, #0
 6046 0024 39D0     		beq	.L493
 993:mp3.c         **** 	 mp3_flag = 0;
 6047              		.loc 1 993 3 is_stmt 1 view .LVU1989
 6048              		.loc 1 993 12 is_stmt 0 view .LVU1990
 6049 0026 0022     		movs	r2, #0
 994:mp3.c         **** 	 if ((music_number--) && (head != NULL)) {
 6050              		.loc 1 994 20 view .LVU1991
 6051 0028 5E4F     		ldr	r7, .L544+16
 993:mp3.c         **** 	 mp3_flag = 0;
 6052              		.loc 1 993 12 view .LVU1992
 6053 002a 1A70     		strb	r2, [r3]
 6054              		.loc 1 994 3 is_stmt 1 view .LVU1993
 6055              		.loc 1 994 20 is_stmt 0 view .LVU1994
 6056 002c 3988     		ldrh	r1, [r7]
 6057 002e 4B1E     		subs	r3, r1, #1
 6058 0030 9BB2     		uxth	r3, r3
 6059 0032 3B80     		strh	r3, [r7]	@ movhi
 6060              		.loc 1 994 6 view .LVU1995
 6061 0034 0029     		cmp	r1, #0
 6062 0036 30D0     		beq	.L493
 6063              		.loc 1 994 33 discriminator 1 view .LVU1996
 6064 0038 5B4D     		ldr	r5, .L544+20
 6065 003a 2A68     		ldr	r2, [r5]
 6066              		.loc 1 994 24 discriminator 1 view .LVU1997
 6067 003c 002A     		cmp	r2, #0
 6068 003e 2CD0     		beq	.L493
 995:mp3.c         **** 	    if (music_number == 0) {
 6069              		.loc 1 995 6 is_stmt 1 view .LVU1998
 6070              		.loc 1 995 9 is_stmt 0 view .LVU1999
 6071 0040 002B     		cmp	r3, #0
 6072 0042 40F0A280 		bne	.L495
 6073              	.L496:
 996:mp3.c         **** 	       while (head->back != NULL) head = head->back;
 6074              		.loc 1 996 15 is_stmt 1 discriminator 1 view .LVU2000
 6075 0046 1146     		mov	r1, r2
 6076              		.loc 1 996 20 is_stmt 0 discriminator 1 view .LVU2001
 6077 0048 D2F89C20 		ldr	r2, [r2, #156]
 6078              		.loc 1 996 15 discriminator 1 view .LVU2002
 6079 004c 002A     		cmp	r2, #0
 6080 004e 40F09A80 		bne	.L509
 6081 0052 03B1     		cbz	r3, .L507
 6082 0054 2960     		str	r1, [r5]
 6083              	.L507:
 997:mp3.c         **** 	    }
 998:mp3.c         **** 	    if (music_number != 0) head = head->next;else music_number = ftemp;
 6084              		.loc 1 998 6 is_stmt 1 view .LVU2003
 6085              		.loc 1 998 52 view .LVU2004
 6086              		.loc 1 998 65 is_stmt 0 view .LVU2005
 6087 0056 554B     		ldr	r3, .L544+24
 6088 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6089 005a 3B80     		strh	r3, [r7]	@ movhi
 6090              	.L508:
 999:mp3.c         **** 	    bw = f_open(&fsrc,head->filename, FA_OPEN_EXISTING | FA_READ);
 6091              		.loc 1 999 6 is_stmt 1 view .LVU2006
 6092              		.loc 1 999 11 is_stmt 0 view .LVU2007
 6093 005c 0122     		movs	r2, #1
 6094 005e 2968     		ldr	r1, [r5]
 6095 0060 4D48     		ldr	r0, .L544+4
 6096 0062 FFF7FEFF 		bl	f_open
 6097              	.LVL496:
1000:mp3.c         **** 	    datasize = 0;
 6098              		.loc 1 1000 15 view .LVU2008
 6099 0066 0021     		movs	r1, #0
1001:mp3.c         **** 	    seek_value = 0;
1002:mp3.c         **** 	    f_kbps = 0xffff;
 6100              		.loc 1 1002 13 view .LVU2009
 6101 0068 4FF6FF72 		movw	r2, #65535
 999:mp3.c         **** 	    datasize = 0;
 6102              		.loc 1 999 9 view .LVU2010
 6103 006c 504B     		ldr	r3, .L544+28
1000:mp3.c         **** 	    datasize = 0;
 6104              		.loc 1 1000 15 view .LVU2011
 6105 006e 2160     		str	r1, [r4]
 999:mp3.c         **** 	    datasize = 0;
 6106              		.loc 1 999 11 view .LVU2012
 6107 0070 1860     		str	r0, [r3]
1000:mp3.c         **** 	    datasize = 0;
 6108              		.loc 1 1000 6 is_stmt 1 view .LVU2013
1001:mp3.c         **** 	    seek_value = 0;
 6109              		.loc 1 1001 6 view .LVU2014
1001:mp3.c         **** 	    seek_value = 0;
 6110              		.loc 1 1001 17 is_stmt 0 view .LVU2015
 6111 0072 504B     		ldr	r3, .L544+32
1003:mp3.c         **** 	    new_play = 1;
1004:mp3.c         ****             memset((char *)buffer,0,1024);
 6112              		.loc 1 1004 13 view .LVU2016
 6113 0074 5048     		ldr	r0, .L544+36
1001:mp3.c         **** 	    f_kbps = 0xffff;
 6114              		.loc 1 1001 17 view .LVU2017
 6115 0076 1960     		str	r1, [r3]
1002:mp3.c         **** 	    new_play = 1;
 6116              		.loc 1 1002 6 is_stmt 1 view .LVU2018
1002:mp3.c         **** 	    new_play = 1;
 6117              		.loc 1 1002 13 is_stmt 0 view .LVU2019
 6118 0078 504B     		ldr	r3, .L544+40
 6119 007a 1A80     		strh	r2, [r3]	@ movhi
1003:mp3.c         **** 	    new_play = 1;
 6120              		.loc 1 1003 6 is_stmt 1 view .LVU2020
1003:mp3.c         **** 	    new_play = 1;
 6121              		.loc 1 1003 15 is_stmt 0 view .LVU2021
 6122 007c 0122     		movs	r2, #1
 6123 007e 504B     		ldr	r3, .L544+44
 6124 0080 1A70     		strb	r2, [r3]
 6125              		.loc 1 1004 13 is_stmt 1 view .LVU2022
 6126 0082 4FF48062 		mov	r2, #1024
 6127 0086 FFF7FEFF 		bl	memset
 6128              	.LVL497:
1005:mp3.c         **** 	    //lcd_printf(2,3,"MP3 Open %d Size %d ",music_number,fsrc.fsize);
1006:mp3.c         **** 	    lcd_printf(7,2,"%2d: %s    ",music_number,head->filename);
 6129              		.loc 1 1006 6 view .LVU2023
 6130 008a 2B68     		ldr	r3, [r5]
 6131 008c 0221     		movs	r1, #2
 6132 008e 0093     		str	r3, [sp]
 6133 0090 0720     		movs	r0, #7
 6134 0092 3B88     		ldrh	r3, [r7]
 6135 0094 4B4A     		ldr	r2, .L544+48
 6136 0096 FFF7FEFF 		bl	lcd_printf
 6137              	.LVL498:
 6138              	.L493:
1007:mp3.c         **** 	    //display_id3v1_tag();
1008:mp3.c         **** 	 }
1009:mp3.c         ****       }
1010:mp3.c         ****       if ((datasize < fsrc.fsize) && (fsrc.fsize) && (buffer_read == 0) && (play_mp3)) {
 6139              		.loc 1 1010 7 view .LVU2024
 6140              		.loc 1 1010 27 is_stmt 0 view .LVU2025
 6141 009a F368     		ldr	r3, [r6, #12]
 6142              		.loc 1 1010 21 view .LVU2026
 6143 009c 2268     		ldr	r2, [r4]
 6144 009e 4A4D     		ldr	r5, .L544+52
 6145              		.loc 1 1010 10 view .LVU2027
 6146 00a0 9342     		cmp	r3, r2
 6147 00a2 52D9     		bls	.L498
 6148              		.loc 1 1010 35 discriminator 1 view .LVU2028
 6149 00a4 002B     		cmp	r3, #0
 6150 00a6 50D0     		beq	.L498
 6151              		.loc 1 1010 67 discriminator 2 view .LVU2029
 6152 00a8 484E     		ldr	r6, .L544+56
 6153              		.loc 1 1010 51 discriminator 2 view .LVU2030
 6154 00aa 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 6155 00ac 002B     		cmp	r3, #0
 6156 00ae 4CD1     		bne	.L498
 6157              		.loc 1 1010 73 discriminator 3 view .LVU2031
 6158 00b0 3B4B     		ldr	r3, .L544+12
 6159 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6160 00b4 002B     		cmp	r3, #0
 6161 00b6 48D0     		beq	.L498
1011:mp3.c         ****          if ((f_kbps == 0xffff) && (datasize > 1024)) {
 6162              		.loc 1 1011 10 is_stmt 1 view .LVU2032
 6163              		.loc 1 1011 13 is_stmt 0 view .LVU2033
 6164 00b8 4FF6FF71 		movw	r1, #65535
 6165              		.loc 1 1011 22 view .LVU2034
 6166 00bc 3F4F     		ldr	r7, .L544+40
 6167              		.loc 1 1011 13 view .LVU2035
 6168 00be 3888     		ldrh	r0, [r7]
 6169 00c0 8842     		cmp	r0, r1
 6170 00c2 04D1     		bne	.L499
 6171              		.loc 1 1011 33 discriminator 1 view .LVU2036
 6172 00c4 B2F5806F 		cmp	r2, #1024
 6173 00c8 01D9     		bls	.L499
1012:mp3.c         ****             vs1003_get_mp3info();
 6174              		.loc 1 1012 13 is_stmt 1 view .LVU2037
 6175 00ca FFF7FEFF 		bl	vs1003_get_mp3info
 6176              	.LVL499:
 6177              	.L499:
1013:mp3.c         ****          }
1014:mp3.c         ****          if (second >= 1) {
 6178              		.loc 1 1014 10 view .LVU2038
 6179              		.loc 1 1014 21 is_stmt 0 view .LVU2039
 6180 00ce 404A     		ldr	r2, .L544+60
 6181 00d0 1388     		ldrh	r3, [r2]
 6182 00d2 9BB2     		uxth	r3, r3
 6183              		.loc 1 1014 13 view .LVU2040
 6184 00d4 43B1     		cbz	r3, .L501
1015:mp3.c         ****       	    second = 0;
 6185              		.loc 1 1015 12 is_stmt 1 view .LVU2041
 6186              		.loc 1 1015 19 is_stmt 0 view .LVU2042
 6187 00d6 0023     		movs	r3, #0
 6188 00d8 1380     		strh	r3, [r2]	@ movhi
1016:mp3.c         ****       	    if (f_kbps != 0xffff) mp3_display();
 6189              		.loc 1 1016 12 is_stmt 1 view .LVU2043
 6190              		.loc 1 1016 15 is_stmt 0 view .LVU2044
 6191 00da 4FF6FF73 		movw	r3, #65535
 6192 00de 3A88     		ldrh	r2, [r7]
 6193 00e0 9A42     		cmp	r2, r3
 6194 00e2 01D0     		beq	.L501
 6195              		.loc 1 1016 34 is_stmt 1 discriminator 1 view .LVU2045
 6196 00e4 FFF7FEFF 		bl	mp3_display
 6197              	.LVL500:
 6198              	.L501:
1017:mp3.c         ****          }
1018:mp3.c         ****          if (volume_flag) {
 6199              		.loc 1 1018 10 view .LVU2046
 6200              		.loc 1 1018 14 is_stmt 0 view .LVU2047
 6201 00e8 3A4B     		ldr	r3, .L544+64
 6202 00ea 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6203              		.loc 1 1018 13 view .LVU2048
 6204 00ec 32B1     		cbz	r2, .L503
1019:mp3.c         ****             volume_flag = 0;
 6205              		.loc 1 1019 13 is_stmt 1 view .LVU2049
 6206              		.loc 1 1019 25 is_stmt 0 view .LVU2050
 6207 00ee 0022     		movs	r2, #0
 6208 00f0 1A70     		strb	r2, [r3]
1020:mp3.c         ****             vs1003_set_volume(volume);
 6209              		.loc 1 1020 13 is_stmt 1 view .LVU2051
 6210 00f2 394B     		ldr	r3, .L544+68
 6211 00f4 1888     		ldrh	r0, [r3]
 6212 00f6 80B2     		uxth	r0, r0
 6213 00f8 FFF7FEFF 		bl	vs1003_set_volume
 6214              	.LVL501:
 6215              	.L503:
1021:mp3.c         ****          }
1022:mp3.c         ****          datasize += 512;
 6216              		.loc 1 1022 10 view .LVU2052
1023:mp3.c         ****          seek_value += datasize;
 6217              		.loc 1 1023 21 is_stmt 0 view .LVU2053
 6218 00fc 2D4F     		ldr	r7, .L544+32
1022:mp3.c         ****          seek_value += datasize;
 6219              		.loc 1 1022 19 view .LVU2054
 6220 00fe 2368     		ldr	r3, [r4]
 6221              		.loc 1 1023 21 view .LVU2055
 6222 0100 3A68     		ldr	r2, [r7]
1022:mp3.c         ****          seek_value += datasize;
 6223              		.loc 1 1022 19 view .LVU2056
 6224 0102 03F50073 		add	r3, r3, #512
 6225 0106 2360     		str	r3, [r4]
 6226              		.loc 1 1023 10 is_stmt 1 view .LVU2057
 6227              		.loc 1 1023 21 is_stmt 0 view .LVU2058
 6228 0108 1344     		add	r3, r3, r2
1024:mp3.c         ****          bw = f_read(&fsrc,buffer,512,&br);
 6229              		.loc 1 1024 15 view .LVU2059
 6230 010a 2B49     		ldr	r1, .L544+36
 6231 010c 4FF40072 		mov	r2, #512
1023:mp3.c         ****          seek_value += datasize;
 6232              		.loc 1 1023 21 view .LVU2060
 6233 0110 3B60     		str	r3, [r7]
 6234              		.loc 1 1024 10 is_stmt 1 view .LVU2061
 6235              		.loc 1 1024 15 is_stmt 0 view .LVU2062
 6236 0112 2148     		ldr	r0, .L544+4
 6237 0114 314B     		ldr	r3, .L544+72
 6238 0116 FFF7FEFF 		bl	f_read
 6239              	.LVL502:
1025:mp3.c         ****          datasize += 512;
 6240              		.loc 1 1025 19 view .LVU2063
 6241 011a 2368     		ldr	r3, [r4]
1026:mp3.c         ****          seek_value += datasize;
 6242              		.loc 1 1026 21 view .LVU2064
 6243 011c 3A68     		ldr	r2, [r7]
1024:mp3.c         ****          bw = f_read(&fsrc,buffer,512,&br);
 6244              		.loc 1 1024 13 view .LVU2065
 6245 011e DFF89080 		ldr	r8, .L544+28
1025:mp3.c         ****          datasize += 512;
 6246              		.loc 1 1025 19 view .LVU2066
 6247 0122 03F50073 		add	r3, r3, #512
 6248 0126 2360     		str	r3, [r4]
 6249              		.loc 1 1026 21 view .LVU2067
 6250 0128 1344     		add	r3, r3, r2
1024:mp3.c         ****          bw = f_read(&fsrc,buffer,512,&br);
 6251              		.loc 1 1024 15 view .LVU2068
 6252 012a C8F80000 		str	r0, [r8]
1025:mp3.c         ****          datasize += 512;
 6253              		.loc 1 1025 10 is_stmt 1 view .LVU2069
 6254              		.loc 1 1026 10 view .LVU2070
 6255              		.loc 1 1026 21 is_stmt 0 view .LVU2071
 6256 012e 3B60     		str	r3, [r7]
1027:mp3.c         ****          bw = f_read(&fsrc,buffer+512,512,&br);
 6257              		.loc 1 1027 10 is_stmt 1 view .LVU2072
 6258              		.loc 1 1027 15 is_stmt 0 view .LVU2073
 6259 0130 4FF40072 		mov	r2, #512
 6260 0134 294B     		ldr	r3, .L544+72
 6261 0136 2A49     		ldr	r1, .L544+76
 6262 0138 1748     		ldr	r0, .L544+4
 6263 013a FFF7FEFF 		bl	f_read
 6264              	.LVL503:
1028:mp3.c         ****          buffer_read = 1;
 6265              		.loc 1 1028 22 view .LVU2074
 6266 013e 0123     		movs	r3, #1
 6267 0140 3370     		strb	r3, [r6]
1029:mp3.c         ****          fdx = 0;
 6268              		.loc 1 1029 14 view .LVU2075
 6269 0142 0023     		movs	r3, #0
1027:mp3.c         ****          bw = f_read(&fsrc,buffer+512,512,&br);
 6270              		.loc 1 1027 15 view .LVU2076
 6271 0144 C8F80000 		str	r0, [r8]
1028:mp3.c         ****          buffer_read = 1;
 6272              		.loc 1 1028 10 is_stmt 1 view .LVU2077
 6273              		.loc 1 1029 10 view .LVU2078
 6274              		.loc 1 1029 14 is_stmt 0 view .LVU2079
 6275 0148 2B70     		strb	r3, [r5]
 6276              	.L498:
1030:mp3.c         ****       }
1031:mp3.c         ****       if ((fdx < 32) && (buffer_read) && (play_mp3)) {
 6277              		.loc 1 1031 7 is_stmt 1 view .LVU2080
 6278              		.loc 1 1031 16 is_stmt 0 view .LVU2081
 6279 014a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 6280              		.loc 1 1031 10 view .LVU2082
 6281 014c 1F2B     		cmp	r3, #31
 6282 014e 17D8     		bhi	.L491
 6283              		.loc 1 1031 22 discriminator 1 view .LVU2083
 6284 0150 1E4C     		ldr	r4, .L544+56
 6285 0152 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 6286 0154 A2B1     		cbz	r2, .L491
 6287              		.loc 1 1031 39 discriminator 2 view .LVU2084
 6288 0156 124A     		ldr	r2, .L544+12
 6289 0158 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6290 015a 8AB1     		cbz	r2, .L491
1032:mp3.c         ****       	 if (GPIOC->IDR & MP3_DREQ) {
 6291              		.loc 1 1032 9 is_stmt 1 view .LVU2085
 6292              		.loc 1 1032 18 is_stmt 0 view .LVU2086
 6293 015c 214A     		ldr	r2, .L544+80
 6294 015e 9268     		ldr	r2, [r2, #8]
 6295              		.loc 1 1032 12 view .LVU2087
 6296 0160 1207     		lsls	r2, r2, #28
 6297 0162 0DD5     		bpl	.L491
1033:mp3.c         **** 	    vs1003_data_write(buffer + fdx * 32);
 6298              		.loc 1 1033 6 is_stmt 1 view .LVU2088
 6299 0164 1448     		ldr	r0, .L544+36
 6300 0166 00EB4310 		add	r0, r0, r3, lsl #5
 6301 016a FFF7FEFF 		bl	vs1003_data_write
 6302              	.LVL504:
1034:mp3.c         **** 	    fdx++;
 6303              		.loc 1 1034 6 view .LVU2089
 6304              		.loc 1 1034 9 is_stmt 0 view .LVU2090
 6305 016e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 6306 0170 0133     		adds	r3, r3, #1
 6307 0172 DBB2     		uxtb	r3, r3
1035:mp3.c         **** 	    if (fdx >= 32) {
 6308              		.loc 1 1035 9 view .LVU2091
 6309 0174 1F2B     		cmp	r3, #31
1034:mp3.c         **** 	    fdx++;
 6310              		.loc 1 1034 9 view .LVU2092
 6311 0176 2B70     		strb	r3, [r5]
 6312              		.loc 1 1035 6 is_stmt 1 view .LVU2093
 6313              		.loc 1 1035 9 is_stmt 0 view .LVU2094
 6314 0178 02D9     		bls	.L491
1036:mp3.c         **** 	       buffer_read = 0;
 6315              		.loc 1 1036 9 is_stmt 1 view .LVU2095
 6316              		.loc 1 1036 21 is_stmt 0 view .LVU2096
 6317 017a 0023     		movs	r3, #0
 6318 017c 2370     		strb	r3, [r4]
1037:mp3.c         **** 	       fdx = 0;
 6319              		.loc 1 1037 9 is_stmt 1 view .LVU2097
 6320              		.loc 1 1037 13 is_stmt 0 view .LVU2098
 6321 017e 2B70     		strb	r3, [r5]
 6322              	.L491:
1038:mp3.c         **** 	    }
1039:mp3.c         ****          }
1040:mp3.c         ****       }
1041:mp3.c         **** }...
 6323              		.loc 1 1041 1 view .LVU2099
 6324 0180 02B0     		add	sp, sp, #8
 6325              		.cfi_remember_state
 6326              		.cfi_def_cfa_offset 24
 6327              		@ sp needed
 6328 0182 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6329              	.L509:
 6330              		.cfi_restore_state
 6331 0186 0123     		movs	r3, #1
 6332 0188 5DE7     		b	.L496
 6333              	.L495:
 998:mp3.c         **** 	    if (music_number != 0) head = head->next;else music_number = ftemp;
 6334              		.loc 1 998 6 is_stmt 1 view .LVU2100
 998:mp3.c         **** 	    if (music_number != 0) head = head->next;else music_number = ftemp;
 6335              		.loc 1 998 29 view .LVU2101
 998:mp3.c         **** 	    if (music_number != 0) head = head->next;else music_number = ftemp;
 6336              		.loc 1 998 34 is_stmt 0 view .LVU2102
 6337 018a D2F89830 		ldr	r3, [r2, #152]
 6338 018e 2B60     		str	r3, [r5]
 6339 0190 64E7     		b	.L508
 6340              	.L545:
 6341 0192 00BF     		.align	2
 6342              	.L544:
 6343 0194 00000000 		.word	mp3_flag
 6344 0198 00000000 		.word	fsrc
 6345 019c 00000000 		.word	.LANCHOR16
 6346 01a0 00000000 		.word	play_mp3
 6347 01a4 00000000 		.word	music_number
 6348 01a8 00000000 		.word	head
 6349 01ac 00000000 		.word	ftemp
 6350 01b0 00000000 		.word	bw
 6351 01b4 00000000 		.word	seek_value
 6352 01b8 00000000 		.word	buffer
 6353 01bc 00000000 		.word	.LANCHOR0
 6354 01c0 00000000 		.word	new_play
 6355 01c4 00000000 		.word	.LC7
 6356 01c8 00000000 		.word	fdx
 6357 01cc 00000000 		.word	buffer_read
 6358 01d0 00000000 		.word	second
 6359 01d4 00000000 		.word	volume_flag
 6360 01d8 00000000 		.word	volume
 6361 01dc 00000000 		.word	br
 6362 01e0 00020000 		.word	buffer+512
 6363 01e4 00100140 		.word	1073811456
 6364              		.cfi_endproc
 6365              	.LFE60:
 6367              		.comm	head,4,4
 6368              		.comm	dirs,28,4
 6369              		.comm	fno,24,4
 6370              		.comm	br,4,4
 6371              		.comm	bw,4,4
 6372              		.comm	res,1,1
 6373              		.comm	fii,548,4
 6374              		.comm	fap,548,4
 6375              		.comm	fsrc,548,4
 6376              		.comm	fs,564,4
 6377              		.comm	seek_value,4,4
 6378              		.comm	new_play,1,1
 6379              		.comm	mp3_flag,1,1
 6380              		.comm	buffer_read,1,1
 6381              		.comm	fdx,1,1
 6382              		.comm	ftemp,1,1
 6383              		.global	datasize
 6384              		.comm	buffer,1024,1
 6385              		.comm	lrc,80,1
 6386              		.comm	lrc_data,512,1
 6387              		.global	spedate
 6388              		.global	bt30ms
 6389              		.comm	lyric,10,2
 6390              		.global	lrc_tag_type
 6391              		.comm	music_number,2,2
 6392              		.global	lrc_tag_cnt
 6393              		.comm	tag_table,512,1
 6394              		.comm	lrc_buffer,7000,1
 6395              		.comm	mp3,105,1
 6396              		.global	music_extend
 6397              		.section	.rodata.str1.1,"aMS",%progbits,1
 6398              	.LC11:
 6399 0000 4D503300 		.ascii	"MP3\000"
 6400              	.LC12:
 6401 0004 574D4100 		.ascii	"WMA\000"
 6402              	.LC13:
 6403 0008 57415600 		.ascii	"WAV\000"
 6404              	.LC14:
 6405 000c 4D494400 		.ascii	"MID\000"
 6406              		.global	timetemp
 6407              		.global	propos
 6408              		.global	f_kbps
 6409              		.comm	ID3V1_Buf,128,1
 6410              		.section	.bss.bt30ms,"aw",%nobits
 6411              		.set	.LANCHOR8,. + 0
 6414              	bt30ms:
 6415 0000 00       		.space	1
 6416              		.section	.bss.bytepos.8804,"aw",%nobits
 6417              		.align	1
 6418              		.set	.LANCHOR12,. + 0
 6421              	bytepos.8804:
 6422 0000 0000     		.space	2
 6423              		.section	.bss.count.8723,"aw",%nobits
 6424              		.set	.LANCHOR5,. + 0
 6427              	count.8723:
 6428 0000 00       		.space	1
 6429              		.section	.bss.datasize,"aw",%nobits
 6430              		.align	2
 6431              		.set	.LANCHOR16,. + 0
 6434              	datasize:
 6435 0000 00000000 		.space	4
 6436              		.section	.bss.flag.8721,"aw",%nobits
 6437              		.set	.LANCHOR4,. + 0
 6440              	flag.8721:
 6441 0000 00       		.space	1
 6442              		.section	.bss.j.8722,"aw",%nobits
 6443              		.set	.LANCHOR6,. + 0
 6446              	j.8722:
 6447 0000 00       		.space	1
 6448              		.section	.bss.lrc_tag_cnt,"aw",%nobits
 6449              		.align	1
 6450              		.set	.LANCHOR7,. + 0
 6453              	lrc_tag_cnt:
 6454 0000 0000     		.space	2
 6455              		.section	.bss.lrc_tag_type,"aw",%nobits
 6456              		.set	.LANCHOR13,. + 0
 6459              	lrc_tag_type:
 6460 0000 00       		.space	1
 6461              		.section	.bss.lrcbufpos.8847,"aw",%nobits
 6462              		.align	1
 6463              		.set	.LANCHOR15,. + 0
 6466              	lrcbufpos.8847:
 6467 0000 0000     		.space	2
 6468              		.section	.bss.ms.8773,"aw",%nobits
 6469              		.set	.LANCHOR9,. + 0
 6472              	ms.8773:
 6473 0000 00       		.space	1
 6474              		.section	.bss.playtime.8625,"aw",%nobits
 6475              		.align	1
 6476              		.set	.LANCHOR1,. + 0
 6479              	playtime.8625:
 6480 0000 0000     		.space	2
 6481              		.section	.bss.propos,"aw",%nobits
 6482              		.align	2
 6483              		.set	.LANCHOR2,. + 0
 6486              	propos:
 6487 0000 00000000 		.space	4
 6488              		.section	.bss.spedate,"aw",%nobits
 6491              	spedate:
 6492 0000 00000000 		.space	14
 6492      00000000 
 6492      00000000 
 6492      0000
 6493              		.section	.bss.tagpos.8846,"aw",%nobits
 6494              		.align	1
 6495              		.set	.LANCHOR14,. + 0
 6498              	tagpos.8846:
 6499 0000 0000     		.space	2
 6500              		.section	.bss.time.8772,"aw",%nobits
 6501              		.align	2
 6502              		.set	.LANCHOR10,. + 0
 6505              	time.8772:
 6506 0000 00000000 		.space	4
 6507              		.section	.bss.timetemp,"aw",%nobits
 6508              		.align	1
 6509              		.set	.LANCHOR11,. + 0
 6512              	timetemp:
 6513 0000 0000     		.space	2
 6514              		.section	.data.f_kbps,"aw"
 6515              		.align	1
 6516              		.set	.LANCHOR0,. + 0
 6519              	f_kbps:
 6520 0000 FFFF     		.short	-1
 6521              		.section	.data.music_extend,"aw"
 6522              		.align	2
 6523              		.set	.LANCHOR3,. + 0
 6526              	music_extend:
 6527 0000 00000000 		.word	.LC11
 6528 0004 04000000 		.word	.LC12
 6529 0008 08000000 		.word	.LC13
 6530 000c 0C000000 		.word	.LC14
 6531              		.text
 6532              	.Letext0:
 6533              		.file 2 "c:\\project\\stm32fx_lib\\stm32f1x_iolib\\include\\core.h"
 6534              		.file 3 "/project/stm32fx_lib/stm32f1x_iolib/include/cmsis/stm32f1xx.h"
 6535              		.file 4 "userdefs.h"
 6536              		.file 5 "mp3.h"
 6537              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 6538              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 6539              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eabi
 6540              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 6541              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 6542              		.file 11 "ff.h"
 6543              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 6544              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 6545              		.file 14 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 mp3.c
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:16     .text.hex2dec:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:24     .text.hex2dec:00000000 hex2dec
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:82     .text.dec2hex:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:89     .text.dec2hex:00000000 dec2hex
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:149    .text.mp3_prog_bar:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:156    .text.mp3_prog_bar:00000000 mp3_prog_bar
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:565    .text.mp3_prog_bar:000001e8 $d
                            *COM*:00000001 new_play
                            *COM*:00000069 mp3
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:580    .text.resume_music:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:587    .text.resume_music:00000000 resume_music
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:1183   .text.resume_music:000002a4 $d
                            *COM*:00000050 lrc
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:1194   .text.find_music:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:1201   .text.find_music:00000000 find_music
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:1393   .text.find_music:000000c8 $d
                            *COM*:0000001c dirs
                            *COM*:00000001 res
                            *COM*:00000018 fno
                            *COM*:00000004 head
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:1406   .text.filtrate_music:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:1413   .text.filtrate_music:00000000 filtrate_music
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:1825   .text.filtrate_music:000001a4 $d
                            *COM*:00000002 music_number
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:1835   .text.mp3_name:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:1842   .text.mp3_name:00000000 mp3_name
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:2209   .text.mp3_name:00000184 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:2222   .text.read_byte_lrcbuf:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:2229   .text.read_byte_lrcbuf:00000000 read_byte_lrcbuf
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:2254   .text.read_byte_lrcbuf:00000010 $d
                            *COM*:00001b58 lrc_buffer
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:2259   .text.write_byte_lrcbuf:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:2266   .text.write_byte_lrcbuf:00000000 write_byte_lrcbuf
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:2294   .text.write_byte_lrcbuf:00000014 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:2299   .text.lrc_read_init:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:2306   .text.lrc_read_init:00000000 lrc_read_init
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:2336   .text.lrc_read_init:00000014 $d
                            *COM*:0000000a lyric
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:2341   .text.read_lrc_file_data:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:2348   .text.read_lrc_file_data:00000000 read_lrc_file_data
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:2786   .text.read_lrc_file_data:0000015c $d
                            *COM*:00000200 tag_table
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:2797   .text.lyric_display_ctrl:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:2804   .text.lyric_display_ctrl:00000000 lyric_display_ctrl
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:2929   .text.lyric_display_ctrl:0000006c $d
                            *COM*:00000224 fsrc
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:2941   .text.lrc_synchron:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:2948   .text.lrc_synchron:00000000 lrc_synchron
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:3319   .text.lrc_synchron:00000100 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:3328   .text.get_byte:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:3335   .text.get_byte:00000000 get_byte
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:3457   .text.get_byte:00000068 $d
                            *COM*:00000224 fap
                            *COM*:00000004 br
                            *COM*:00000200 lrc_data
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:3465   .text.get_num:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:3472   .text.get_num:00000000 get_num
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:3564   .text.get_tag:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:3571   .text.get_tag:00000000 get_tag
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:3796   .text.get_tag:000000c4 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:3808   .text.find_lrc:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:3815   .text.find_lrc:00000000 find_lrc
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:3988   .text.find_lrc:000000a4 $d
                            *COM*:00000004 bw
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:4004   .text.init_tag:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:4011   .text.init_tag:00000000 init_tag
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:4222   .text.init_tag:000000b8 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:4229   .text.copy_lyric:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:4236   .text.copy_lyric:00000000 copy_lyric
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:4881   .text.copy_lyric:000001bc $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:4891   .text.copy_lrc_to_ram:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:4898   .text.copy_lrc_to_ram:00000000 copy_lrc_to_ram
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5066   .text.copy_lrc_to_ram:0000007c $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5077   .text.display_id3v1_tag:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5084   .text.display_id3v1_tag:00000000 display_id3v1_tag
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5304   .text.display_id3v1_tag:00000128 $d
                            *COM*:00000080 ID3V1_Buf
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5318   .text.mp3_displayinit:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5325   .text.mp3_displayinit:00000000 mp3_displayinit
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5363   .text.mp3_displayinit:00000028 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5371   .text.play_next:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5378   .text.play_next:00000000 play_next
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5514   .text.play_next:0000008c $d
                            *COM*:00000001 ftemp
                            *COM*:00000400 buffer
                            *COM*:00000004 seek_value
                            *COM*:00000001 buffer_read
                            *COM*:00000001 fdx
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5531   .text.play_prev:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5538   .text.play_prev:00000000 play_prev
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5659   .text.play_prev:00000070 $d
                            *COM*:00000001 mp3_flag
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5670   .text.mp3_init:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5677   .text.mp3_init:00000000 mp3_init
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5774   .text.mp3_init:0000006c $d
                            *COM*:00000234 fs
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5794   .text.show_playlist:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5801   .text.show_playlist:00000000 show_playlist
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5894   .text.show_playlist:00000054 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5903   .text.mp3_display:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5910   .text.mp3_display:00000000 mp3_display
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5927   .text.mp3_display:0000000c $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5933   .text.mp3_seek:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5940   .text.mp3_seek:00000000 mp3_seek
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5986   .text.mp3_seek:0000002c $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5992   .text.mp3_play:00000000 $t
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:5999   .text.mp3_play:00000000 mp3_play
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6343   .text.mp3_play:00000194 $d
                            *COM*:00000224 fii
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6434   .bss.datasize:00000000 datasize
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6491   .bss.spedate:00000000 spedate
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6414   .bss.bt30ms:00000000 bt30ms
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6459   .bss.lrc_tag_type:00000000 lrc_tag_type
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6453   .bss.lrc_tag_cnt:00000000 lrc_tag_cnt
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6526   .data.music_extend:00000000 music_extend
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6512   .bss.timetemp:00000000 timetemp
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6486   .bss.propos:00000000 propos
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6519   .data.f_kbps:00000000 f_kbps
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6415   .bss.bt30ms:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6417   .bss.bytepos.8804:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6421   .bss.bytepos.8804:00000000 bytepos.8804
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6427   .bss.count.8723:00000000 count.8723
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6428   .bss.count.8723:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6430   .bss.datasize:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6440   .bss.flag.8721:00000000 flag.8721
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6441   .bss.flag.8721:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6446   .bss.j.8722:00000000 j.8722
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6447   .bss.j.8722:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6449   .bss.lrc_tag_cnt:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6460   .bss.lrc_tag_type:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6462   .bss.lrcbufpos.8847:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6466   .bss.lrcbufpos.8847:00000000 lrcbufpos.8847
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6472   .bss.ms.8773:00000000 ms.8773
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6473   .bss.ms.8773:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6475   .bss.playtime.8625:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6479   .bss.playtime.8625:00000000 playtime.8625
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6482   .bss.propos:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6492   .bss.spedate:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6494   .bss.tagpos.8846:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6498   .bss.tagpos.8846:00000000 tagpos.8846
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6501   .bss.time.8772:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6505   .bss.time.8772:00000000 time.8772
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6508   .bss.timetemp:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6515   .data.f_kbps:00000000 $d
C:\Users\gowoo\AppData\Local\Temp\ccCIbCOF.s:6522   .data.music_extend:00000000 $d

UNDEFINED SYMBOLS
__aeabi_ui2f
__aeabi_fdiv
__aeabi_fcmpgt
__aeabi_i2f
__aeabi_fmul
__aeabi_f2uiz
get_head_info
lput_char_xy
get_decode_time
memset
strcpy
strlen
f_opendir
strcasecmp
malloc
f_readdir
lcd_printf
f_lseek
f_read
f_open
delay_ms
SPI_configuration
SD_init
vs1003_init
mp3_reset
vs1003_soft_reset
load_patch
f_mount
f_chdir
set_vs1003
vs1003_sine_test
vs1003_get_mp3info
vs1003_set_volume
vs1003_data_write
play_mp3
second
volume_flag
volume
